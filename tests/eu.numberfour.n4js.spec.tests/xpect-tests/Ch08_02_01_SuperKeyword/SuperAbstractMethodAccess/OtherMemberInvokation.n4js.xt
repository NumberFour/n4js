/* XPECT_SETUP eu.numberfour.n4js.spec.tests.N4JSSpecTest END_SETUP */

interface I {
	m0() {
		return "I.m0";
	}
	m1()
}

abstract class SuperClass implements I {
	abstract m2() : string
	m3() : string { return "SuperClass.m3" }
}

export public class OtherMemberInvokation extends SuperClass {
	otherM0() {
		// Invoke abstract consumed method in interface (2 levels) XPECT errors --> "Cannot call super method since it is abstract."
		super.m0();
	}
	@Override
	m1() {}
	otherM1() {
		// Invoke abstract consumed method in interface from other method (2 levels) XPECT errors --> "Cannot call super method since it is abstract."
		super.m1();
	}
	@Override
	m2() : string {
		// Invoke abstract super method XPECT errors --> "Cannot call super method since it is abstract."
		return super.m2();
	}
	otherM2() : string {
		// Invoke abstract super method from different method XPECT errors --> "Cannot call super method since it is abstract."
		return super.m2();
	}
	otherM3() : string {
		return super.m3();
	}
}
