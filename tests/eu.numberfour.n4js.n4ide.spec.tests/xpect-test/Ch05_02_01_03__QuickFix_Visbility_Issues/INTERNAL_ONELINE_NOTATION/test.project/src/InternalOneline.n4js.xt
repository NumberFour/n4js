/* XPECT_SETUP eu.numberfour.n4js.n4ide.spec.tests.N4JSXpectPluginUITest
   
	Workspace {
		Project "test.project" {
			File "manifest.n4mf" { from="../../test.project/manifest.n4mf" }
			Folder "src" {
				ThisFile { from="../../test.project/src/InternalOneline.n4js.xt" }
			}
		}
		Project "other.project.same.vendor" {
			File "manifest.n4mf" { from="../../other.project.same.vendor/manifest.n4mf" }
			Folder "src" {
				File "Library.n4js" { from="../../other.project.same.vendor/src/Library.n4js" }
			}
		}
	}
   
   END_SETUP
*/
/* XPECT quickFix at 'import {Private<|>Class} from "Library"' apply 'Declare type as export public, @Internal' resource='../../other.project.same.vendor/src/Library.n4js' whitespaceSensitive ---
[class PrivateClass {|@Internal export public class PrivateClass {]
 ---
 */
import {PrivateClass} from "Library"
/* XPECT quickFix at 'import {private<|>Function} from "Library"' apply 'Declare function as export public, @Internal' resource='../../other.project.same.vendor/src/Library.n4js' whitespaceSensitive ---

  class PrivateClass {
  	
  }
- function privateFunction() {
+ @Internal export public function privateFunction() {
  	
  }
  export project class ProjectClass {
(...)
 ---
 */
import {privateFunction} from "Library"
/* XPECT quickFix at 'import {Project<|>Class} from "Library"' apply 'Declare type as export public, @Internal' resource='../../other.project.same.vendor/src/Library.n4js' whitespaceSensitive ---

(...)
  function privateFunction() {
  	
  }
- export project class ProjectClass {
+ @Internal export public class ProjectClass {
  	
  }
  export project function projectFunction() {
(...)
 ---
 */
import {ProjectClass} from "Library"
/* XPECT quickFix at 'import {project<|>Function} from "Library"' apply 'Declare function as export public, @Internal' resource='../../other.project.same.vendor/src/Library.n4js' whitespaceSensitive ---

(...)
  export project class ProjectClass {
  	
  }
- export project function projectFunction() {
+ @Internal export public function projectFunction() {
  	
  }
  export public class MemberHoldingTestClass {
(...)
 ---
 */
import {projectFunction} from "Library"

import {MemberHoldingTestClass} from "Library"

var m = new MemberHoldingTestClass();

/* XPECT quickFix at 'm.private<|>Field' apply 'Declare member as public, @Internal' resource='../../other.project.same.vendor/src/Library.n4js' whitespaceSensitive ---

(...)
  }
  export public class MemberHoldingTestClass {
  	
- 	privateField : number = 2;
+ 	@Internal public privateField : number = 2;
  	
  	get privateGetter() : number {
  		return 2;
(...)
 ---
 */
m.privateField

/* XPECT quickFix at 'm.private<|>Getter' apply 'Declare member as public, @Internal' resource='../../other.project.same.vendor/src/Library.n4js' whitespaceSensitive ---

(...)
  	
  	privateField : number = 2;
  	
- 	get privateGetter() : number {
+ 	@Internal public get privateGetter() : number {
  		return 2;
  	}
  	
(...)
 ---
 */
m.privateGetter

/* XPECT quickFix at 'm.private<|>Setter' apply 'Declare member as public, @Internal' resource='../../other.project.same.vendor/src/Library.n4js' whitespaceSensitive ---

(...)
  		return 2;
  	}
  	
- 	set privateSetter(value : number) {}
+ 	@Internal public set privateSetter(value : number) {}
  	
  	privateMethod() {}
  	
(...)
 ---
 */
m.privateSetter = 2;

/* XPECT quickFix at 'm.private<|>Method' apply 'Declare member as public, @Internal' resource='../../other.project.same.vendor/src/Library.n4js' whitespaceSensitive ---

(...)
  	
  	set privateSetter(value : number) {}
  	
- 	privateMethod() {}
+ 	@Internal public privateMethod() {}
  	
  	project projectField : number = 2;
  	
(...)
 ---
 */
m.privateMethod();

/* XPECT quickFix at 'm.project<|>Field' apply 'Declare member as public, @Internal' resource='../../other.project.same.vendor/src/Library.n4js' whitespaceSensitive ---

(...)
  	
  	privateMethod() {}
  	
- 	project projectField : number = 2;
+ 	@Internal public projectField : number = 2;
  	
  	project get projectGetter() : number {
  		return 2;
(...)
 ---
 */
m.projectField;

/* XPECT quickFix at 'm.project<|>Getter' apply 'Declare member as public, @Internal' resource='../../other.project.same.vendor/src/Library.n4js' whitespaceSensitive ---
(...)
  	
  	project projectField : number = 2;
  	
- 	project get projectGetter() : number {
+ 	@Internal public get projectGetter() : number {
  		return 2;
  	}
  	
(...)
 ---
 */
m.projectGetter;

/* XPECT quickFix at 'm.project<|>Setter' apply 'Declare member as public, @Internal' resource='../../other.project.same.vendor/src/Library.n4js' whitespaceSensitive ---

(...)
  		return 2;
  	}
  	
- 	project set projectSetter(value : number) {}
+ 	@Internal public set projectSetter(value : number) {}
  	
  	project projectMethod() {}
  		
(...)
 ---
 */
m.projectSetter = 2;

/* XPECT quickFix at 'm.project<|>Method' apply 'Declare member as public, @Internal' resource='../../other.project.same.vendor/src/Library.n4js' whitespaceSensitive ---
(...)
  	
  	project set projectSetter(value : number) {}
  	
- 	project projectMethod() {}
+ 	@Internal public projectMethod() {}
  		
  }
  
  export var t = 2;
 ---
 */
m.projectMethod();


/* XPECT quickFix at 'import {<|>t}' apply 'Declare variable as export public, @Internal' resource='../../other.project.same.vendor/src/Library.n4js' whitespaceSensitive ---
(...)
  	project projectMethod() {}
  		
  }
- export var t = 2;
+ @Internal export public var t = 2;
 ---
 */
import {t} from "Library"
