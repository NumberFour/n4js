/* XPECT_SETUP eu.numberfour.n4js.spec.tests.N4JSSpecTest END_SETUP */


interface I {
	
	static f2 = 39;
	
	// XPECT errors --> "In interfaces, the this literal may not be used in static methods or field accessors and in initializers of static data fields." at "this"
	static f = 3 + this.f2;
	
	static get g() {
		// XPECT errors --> "In interfaces, the this literal may not be used in static methods or field accessors and in initializers of static data fields." at "this"
		this;
		return null;
	}
	
	static set s(value : any) {
		// XPECT errors --> "In interfaces, the this literal may not be used in static methods or field accessors and in initializers of static data fields." at "this"
		this;
	}
	
	static m() {
		// XPECT errors --> "In interfaces, the this literal may not be used in static methods or field accessors and in initializers of static data fields." at "this"
		this;
	}
	
	// in case of return type, there is already another validation in place to disallow 'this' for all static methods:
	// XPECT errors --> "The this type isn't allowed on this place. (Please refer to Spec for valid use cases.)" at "this"
	static mRet() : this {
		return null;
	}
}


//
// but all fine in a class (except for fields):
//

class C {
	
	static f2 = 39;
	
	// XPECT errors --> "The this literal may not be used in initializers of static data fields." at "this"
	static f = 3 + this.f2;
	
	static get g() {
		// XPECT noerrors -->
		this;
		return null;
	}
	
	static set s(value : any) {
		// XPECT noerrors -->
		this;
	}
	
	static m() {
		// XPECT noerrors -->
		this;
	}
}

