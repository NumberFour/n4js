/* XPECT_SETUP eu.numberfour.n4js.spec.tests.N4JSSpecTest END_SETUP */

class A {}
class B extends A {}

class X {}

interface I {
	m() : A
}

class C implements I {
	@Override
	// XPECT noerrors -->
	m() : B { return null; }
}

interface J<T extends A> {
	m() : T;
}
class D implements J<A> {
	@Override
	// XPECT noerrors -->
	m() : B { return null; }
}


class E<V extends B> implements J<B> {
	@Override
	// XPECT noerrors -->
	m() : V { return null; }
}

class F<V extends B> implements J<B> {
	@Override
	// XPECT noerrors -->
	<W extends V> m() : W { return null; }
}

class G<V extends B> implements J<B> {
	@Override
	// XPECT noerrors -->
	<W extends A> m() : W { return null; } // Method is generic substitution principle holds. Looks weird but words.
}

class H<V extends B> implements J<B> {
	@Override
	// IDE-1093 XPECT FIXME errors --> "Signature of method F.m does not conform to implemented method J.m: {function<W extends X>():W} is not a subtype of {function():B}." at "m"
	<W extends X> m() : W { return null; }
}
