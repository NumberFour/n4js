/* XPECT_SETUP eu.numberfour.n4js.n4ide.spec.tests.N4JSXpectPluginUITest  
   Workspace {
   	 Project "P1" {
   	 	Folder "src" { 	Folder "a" {
   	 		Folder "a1" { File "A.n4js" { from="../../a/a1/A.n4js" } } 
   	 		Folder "a2" { File "A.n4js" { from="../../a/a2/A.n4js" } }
			Folder "c"  { ThisFile {} }	   	 		
   	 	}}
   	 	File "manifest.n4mf" { from="manifest_p1.n4mf" }
   	 }
   }
   END_SETUP
*/
/* NOT APPLICABLE RIGHT NOW:
   As Discussed btw Mark-Oliver & Torsten, the B down there right now is resolve with 
   an error state to the same B as used by the alias. 
   To change this behaviour it would be conscice not link B at all. Then the resololution
   with organize imports comes out of the box.
*/
/* X!PECT organizeImports ---
 + import { B } from "a/a2/A"
--- */


// For the time beeing do nothing on raw-name usage in aliased imports.
/* XPECT organizeImports ---
(...)
--- */


import { B as Balias } from "a/a1/A";

function K() {
	var b1 : Balias;
}
// XPECT errors --> "B has been imported as Balias." at "B"
var b2 : B;


/* Description: 
 * - as with B imported aliased form M2 there is now only one solution left for the type B in the script.
 * - import that one
 */
