/* XPECT_SETUP eu.numberfour.n4js.spec.tests.N4JSSpecTest END_SETUP */

// This test file was modified as part of IDE-2228. Field accessor related test cases might have reduced relevance.
// As a part of this modification some tests were removed.
// See 192980b3133a5a7fce70630c70d577a8fd410002, c74c82650408278a26d1d3433b780122e7a63ce5, 9732be951c73ac638d7a12c5d6767fb5e5d4f7cd, cd24fa1498702f9a6fd731916b3caa413f0fabc6.
interface R1 {
	x : string;
}

// XPECT errors --> "Missing setter to completely override consumed field R1.x." " at "C1"
class C1 implements R1 {
	@Override get x() : string { return ""}
}

// XPECT errors --> "Missing getter to completely override consumed field R1.x." " at "C2"
class C2 implements R1 {
	@Override  set x(s : string) {}
}

// XPECT noerrors --> "pair found." at "C3"
class C3 implements R1 {
	@Override get x() : string { return ""}
	@Override  set x(s : string) {}
}

class S {
	set x(s : string) {}
}

// XPECT noerrors --> "Conflict solved, added getter to setter in S to make it compatible with field in R. Setter is just delegating." at "C4"
class C4 extends S implements R1 {
	@Override get x() : string { return ""}
	@Override set x(s : string) { super.x = s; }
}
