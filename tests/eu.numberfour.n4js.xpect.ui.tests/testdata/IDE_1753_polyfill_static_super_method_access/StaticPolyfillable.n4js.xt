/* XPECT_SETUP eu.numberfour.n4js.xpect.ui.tests.N4JSXpectPluginTest 
   
    Workspace {
   	 Project "StaticPolyfillSuperMethodAccess" {
   	 	Folder "src" {
   	 		ThisFile {  }
   	  	}
   	  	Folder "src-filler" {
   	  		File "StaticPolyfillable.n4js.xt" { from="StaticPolyfillable-Filler.n4js" }
   	  	}
   	 	File "manifest.n4mf" { from="supermethodaccess-manifest.n4mf" }
   	 }
   }
   
   END_SETUP
*/
 


@@StaticPolyfillAware

interface I {
	public consumedMethod()
}

export public abstract class StaticPolyfillClass implements I {
	public concreteMethod() { return ""; }
	@Override
	public consumedMethod() {}
}

export public abstract class Subclass extends StaticPolyfillClass {}

class A extends StaticPolyfillClass {
	@Override
	public abstractMethod() {
		// Invoke abstract super method in StaticPolyfill (1 level) XPECT errors --> "Cannot call super method since it is abstract."
		super.abstractMethod();
		
		// Invoke consumed method from interface I XPECT errors --> "Cannot call super method since it is abstract."
		super.consumedMethod();
	}	
}

class B extends Subclass {
	@Override
	public abstractMethod() {
		// Invoke abstract super method in StaticPolyfill (2 levels) XPECT errors --> "Cannot call super method since it is abstract."
		super.abstractMethod();
		
		// Invoke consumed method from interface I (3 levels) XPECT errors --> "Cannot call super method since it is abstract."
		super.consumedMethod();
	}	
}