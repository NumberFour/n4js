/* XPECT_SETUP eu.numberfour.n4js.transpiler.es5.xpect.tests.CompileAndExecuteTest END_SETUP */

/* XPECT output --- 
<==
stdout:
when needed DI data is there
{
	"bindings": [
		{
			"from": "IY",
			"to": "Y"
		}
	],
	"methodBindings": [
		{
			"to": "IX",
			"name": "m",
			"args": [
				{
					"name": "margFoo",
					"type": "Foo"
				},
				{
					"name": "margPB",
					"type": "N4Provider",
					"typeVar": {
						"type": "Bar"
					}
				},
				{
					"name": "margPPB",
					"type": "N4Provider",
					"typeVar": {
						"type": "N4Provider",
						"typeVar": {
							"type": "Baz"
						}
					}
				}
			]
		}
	],
	"fieldsInjectedTypes": []
}
stderr:
==>
--- */

class Foo{}
class Bar{}
class Baz{}

interface IY{}
class Y implements IY{}
interface IX{}
class X implements IX{}

@Binder
@Bind(IY, Y)
class B{
    @Provides
    m(margFoo : Foo, margPB : N4Provider<Bar>, margPPB : N4Provider<N4Provider<Baz>>) : IX{
        return new X();
    }
}

var tB = B as Object;//just to supress validation of index access
function replacer(key, value){
    var hasN4Type = (value as Object)['n4type'];
    if(hasN4Type){
        return (hasN4Type as Object)['name'];
    }
    return value;
}
var diData = JSON.stringify(tB['$di'], replacer, '\t')
console.log('when needed DI data is there');
console.log(diData);

