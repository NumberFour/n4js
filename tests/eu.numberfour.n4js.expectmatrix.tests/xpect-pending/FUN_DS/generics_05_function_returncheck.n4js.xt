/* XPECT_SETUP eu.numberfour.n4js.expectmatrix.tests.N4JSExpectMatrixPendingTest END_SETUP  */

function FA00()  { return null; }
function <T> FA01()  { return null; }
function <T> FA02() : T  { return null; }
function <T> FA03(p1 : T) : T  { return null; }

function <T> FA01a()  { var t : T = null; return t; }



// OK XPECT  noerrors -->
function FA16() : { function() } { return FA00; }

// returned value is not specific enough
// XPECT errors --> "{function<T>():any} is not a subtype of {function():string}." at "FA01"
function FA17() : { function() : string } { return FA01; }

// XPECT FIXME errors --> "Incorrect number of type arguments for function FA01: expected 1, got 0."
function <T> FA18() : {function <T> () } { return FA01; }

// OK XPECT FIXME noerrors -->
function <T> FA19() : {function <T> () } { return <T>FA01; }

// OK XPECT FIXME noerrors -->
function <T> FA20() : {function <T> () } { return <T>FA01a; }


// XPECT FIXME errors --> "Incorrect number of type arguments for function FA01: expected 1, got 0."
function FA21() : {function () } { return FA01; }

// wrong no. of parameters XPECT FIXME errors --> "{function  ( string ) : string } is not a subtype of { function() }" at "FA22()"
function FA22() : {function () } { return <string>FA03 }

// OK XPECT FIXME noerrors -->
function FA22a() : {function (string) : string } { return <string> FA03; }

// OK XPECT FIXME noerrors -->
function <T> FA23() : {function <T> () : T } { return <T>FA02; }

// OK XPECT FIXME noerrors -->
function <T extends {function (T)}> FA23a() : {function<T>(T):T } { return <T>FA03; }
