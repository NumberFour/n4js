/* XPECT_SETUP eu.numberfour.n4js.spec.tests.N4JSSpecTest END_SETUP  */


// here we test the special case of destructuring primitive types
// (currently, this applies only to primitive type string)


// XPECT type of 'ch0' --> string
// XPECT type of 'ch1' --> string
var [ch0,ch1] = "hello";
console.log(ch0,ch1);

// XPECT noerrors -->
([ch0,ch1] = "hello");
console.log(ch0,ch1);

console.log('#####################');

// XPECT type of 'len' --> number
var {length:len} = "hello";
console.log(len);

// XPECT noerrors -->
({length:len} = "hello");
console.log(len);

console.log('#####################');

// XPECT type of 'ivar0' --> string
for(var ivar0 of "abc") {
	console.log(ivar0);
}

console.log('#####################');

var iStrNum : Iterable2<string,number> = ["one",2];
// XPECT type of 'ivar1' --> union{string,number}
for(var ivar1 of iStrNum) {
	console.log(ivar1);
}


/* XPECT output ---
<==
stdout:
h e
h e
#####################
5
5
#####################
a
b
c
#####################
one
2
stderr:
==>
--- */

