/* XPECT_SETUP eu.numberfour.n4js.transpiler.es5.xpect.tests.CompileAndExecuteTest END_SETUP */

/* XPECT output --- 
<==
stdout:
-- A --
R0.get x
R0._x
R0.set x
R0.get x
newValue0
-- B --
R1.get x
-- C --
R2.set x: newValue1
-- D --
R1.get x
R2.set x: newValue2
R1.get x
stderr:
==>
--- */

interface R0 {
	_x = "R0._x";
	set x(x : string) { console.log("R0.set x"); this._x = x}
	get x() : string { console.log("R0.get x");  return this._x}
}

interface RBase {
	foo() {}
}

interface R1 extends RBase {
	get x() : string { return "R1.get x"}
}

interface R2 {
	set x(x : string) { console.log("R2.set x: " + x) }
}

class A implements R0 {}
class B implements R1 {}
class C implements R2 {}
class D implements R1, R2 {}

console.log("-- A --")
var a = new A();
console.log(a.x);
a.x = "newValue0";
console.log(a.x);

console.log("-- B --")
var b = new B();
console.log(b.x);

console.log("-- C --")
var c = new C();
c.x = "newValue1"

console.log("-- D --")
var d = new D();
console.log(d.x)
d.x = "newValue2"
console.log(d.x)
