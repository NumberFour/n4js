/* XPECT_SETUP eu.numberfour.n4js.spec.tests.N4JSSpecTest END_SETUP */


class A {
	public n : number;
}
class B {
	public n : number?;
}
class C {
	public n : number = 10;
}


// XPECT errors --> "~Object is not a structural subtype of ~A: missing field n." at "{}"
var a : ~A = {};
// XPECT noerrors --> ""
var b : ~B = {};
// XPECT errors --> "~Object is not a structural subtype of ~C: missing field n." at "{}"
var c : ~C = {};

// XPECT errors --> "~Object with { n: number } is not a structural subtype of ~A with { s: string }: missing structural field s." at "{ n: 42 }"
var aws1 : ~A with { s : string; } = { n: 42 };
// XPECT noerrors -->
var aws2 : ~A with { s : string?; } = { n: 42 };  // ok!




interface I {
	public n : number;
}
interface J {
	public n : number?;
}
//interface K {
//	public number n = 10;	// this case does not apply to interfaces!
//}


// XPECT errors --> "~Object is not a structural subtype of ~I: missing field n." at "{}"
var i : ~I = {};
// XPECT noerrors --> ""
var j : ~J = {};

// XPECT errors --> "~Object with { n: number } is not a structural subtype of ~I with { s: string }: missing structural field s." at "{ n: 42 }"
var iws1 : ~I with { s : string; } = { n: 42 };
// XPECT noerrors -->
var iws2 : ~I with { s : string?; } = { n: 42 };  // ok!


var ola : ~Object with { prop : string; } = { prop: "hello!" };
var olb : ~Object with { prop : string?; } = { };

// XPECT errors --> "~Object with { prop: string? } is not a structural subtype of ~Object with { prop: string }: missing prop failed: non-optional member requires a corresponding non-optional member in the structural subtype." at "olb"
ola = olb;

console.log(ola.prop); // oops!
