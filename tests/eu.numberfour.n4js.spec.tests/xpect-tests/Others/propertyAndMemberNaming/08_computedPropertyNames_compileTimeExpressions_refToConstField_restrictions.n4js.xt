/* XPECT_SETUP eu.numberfour.n4js.spec.tests.N4JSSpecTest END_SETUP */


//
// here we test the restrictions on references to const fields from within compile-time expressions
//


class Test01 {
	// XPECT noerrors -->
	[Test01.propName] = 42;
	const propName = 'testField';
}
// XPECT noerrors -->
new Test01().testField;



class Test02 extends Test02SuperClass {
	// XPECT errors --> "Not a compile-time expression: only direct access to owned fields without computed name allowed (i.e. not to inherited, consumed, or polyfilled fields)." at "propName"
	[Test02.propName] = 42;
}
class Test02SuperClass {
	const propName = 'testField';
}
// XPECT errors --> "Couldn't resolve reference to IdentifiableElement 'testField'." at "testField"
new Test02().testField;



class Test03 {
	// XPECT errors --> "Not a compile-time expression: only direct access to owned fields without computed name allowed (i.e. not to inherited, consumed, or polyfilled fields)." at "propName"
	[Test03.propName] = 42;
	const ['propName'] = 'testField';
}
// XPECT errors --> "Couldn't resolve reference to IdentifiableElement 'testField'." at "testField"
new Test03().testField;



class Test04 {
	// avoid duplicate error message in this case
	// XPECT errors --> "Couldn't resolve reference to IdentifiableElement 'propName'." at "propName"
	[Test04.propName] = 42;
}

