package eu.numberfour.n4js.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import eu.numberfour.n4js.services.N4JSGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalN4JSParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "Intersection", "Constructor", "Implements", "Instanceof", "Promisify", "Interface", "Protected", "Abstract", "Continue", "Debugger", "External", "Function", "Default", "Extends", "Finally", "Private", "Project", "Delete", "Export", "Import", "Public", "Return", "Static", "Switch", "Target", "Typeof", "Async", "Await", "Break", "Catch", "Class", "Const", "False", "Super", "Throw", "Union", "While", "Yield", "This", "Case", "Else", "Enum", "From", "Null", "This_1", "True", "Type", "Void", "With", "ExclamationMarkEqualsSignEqualsSign", "FullStopFullStopFullStop", "LessThanSignLessThanSignEqualsSign", "EqualsSignEqualsSignEqualsSign", "For", "Get", "Let", "New", "Out", "Set", "Try", "Var", "ExclamationMarkEqualsSign", "PercentSignEqualsSign", "AmpersandAmpersand", "AmpersandEqualsSign", "AsteriskEqualsSign", "PlusSignPlusSign", "PlusSignEqualsSign", "HyphenMinusHyphenMinus", "HyphenMinusEqualsSign", "SolidusEqualsSign", "LessThanSignLessThanSign", "LessThanSignEqualsSign", "EqualsSignEqualsSign", "EqualsSignGreaterThanSign", "GreaterThanSignEqualsSign", "CommercialAtCommercialAt", "CircumflexAccentEqualsSign", "As", "Do", "If", "In", "Of", "VerticalLineEqualsSign", "VerticalLineVerticalLine", "ExclamationMark", "PercentSign", "Ampersand", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "QuestionMark", "CommercialAt", "LeftSquareBracket", "RightSquareBracket", "CircumflexAccent", "LeftCurlyBracket", "VerticalLine", "RightCurlyBracket", "Tilde", "RULE_DECIMAL_DIGIT_FRAGMENT", "RULE_EXPONENT_PART", "RULE_DECIMAL_INTEGER_LITERAL_FRAGMENT", "RULE_DOUBLE", "RULE_INT_SUFFIX", "RULE_HEX_INT", "RULE_BINARY_INT", "RULE_OCTAL_INT", "RULE_LEGACY_OCTAL_INT", "RULE_IDENTIFIER_PART", "RULE_SCIENTIFIC_INT", "RULE_SIGNED_INT", "RULE_IDENTIFIER", "RULE_DOUBLE_STRING_CHAR", "RULE_SINGLE_STRING_CHAR", "RULE_STRING", "RULE_LINE_TERMINATOR_FRAGMENT", "RULE_LINE_TERMINATOR_SEQUENCE_FRAGMENT", "RULE_BACKSLASH_SEQUENCE", "RULE_REGEX_CHAR_OR_BRACKET", "RULE_REGEX_CHAR", "RULE_ACTUAL_REGEX_TAIL", "RULE_REGEX_START", "RULE_REGEX_TAIL", "RULE_TEMPLATE_LITERAL_CHAR", "RULE_TEMPLATE_HEAD", "RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL", "RULE_ACTUAL_TEMPLATE_END", "RULE_TEMPLATE_MIDDLE", "RULE_TEMPLATE_END", "RULE_TEMPLATE_CONTINUATION", "RULE_NO_LINE_TERMINATOR", "RULE_INCOMPLETE_ASYNC_ARROW", "RULE_STRUCTMODSUFFIX", "RULE_IDENTIFIER_START", "RULE_INT", "RULE_ML_COMMENT_FRAGMENT", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_EOL", "RULE_WHITESPACE_FRAGMENT", "RULE_WS", "RULE_HEX_DIGIT", "RULE_UNICODE_ESCAPE_FRAGMENT", "RULE_UNICODE_LETTER_FRAGMENT", "RULE_UNICODE_COMBINING_MARK_FRAGMENT", "RULE_UNICODE_DIGIT_FRAGMENT", "RULE_UNICODE_CONNECTOR_PUNCTUATION_FRAGMENT", "RULE_ZWNJ", "RULE_ZWJ", "RULE_DOT_DOT", "RULE_BOM", "RULE_UNICODE_SPACE_SEPARATOR_FRAGMENT", "RULE_SL_COMMENT_FRAGMENT", "RULE_ANY_OTHER"
    };
    public static final int Delete=21;
    public static final int Enum=45;
    public static final int RULE_REGEX_CHAR=134;
    public static final int Import=23;
    public static final int EqualsSignGreaterThanSign=78;
    public static final int Var=64;
    public static final int RULE_ACTUAL_TEMPLATE_END=141;
    public static final int Break=32;
    public static final int False=36;
    public static final int LessThanSign=102;
    public static final int LeftParenthesis=92;
    public static final int RULE_TEMPLATE_LITERAL_CHAR=138;
    public static final int Throw=38;
    public static final int Private=19;
    public static final int Extends=17;
    public static final int RULE_REGEX_TAIL=137;
    public static final int ExclamationMark=89;
    public static final int ExclamationMarkEqualsSignEqualsSign=53;
    public static final int GreaterThanSign=104;
    public static final int RULE_LINE_TERMINATOR_SEQUENCE_FRAGMENT=131;
    public static final int RULE_TEMPLATE_HEAD=139;
    public static final int RULE_STRUCTMODSUFFIX=147;
    public static final int RULE_EOL=153;
    public static final int RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL=140;
    public static final int Out=61;
    public static final int GreaterThanSignEqualsSign=79;
    public static final int RULE_ZWNJ=162;
    public static final int Project=20;
    public static final int EqualsSignEqualsSign=77;
    public static final int Switch=27;
    public static final int RULE_OCTAL_INT=121;
    public static final int VerticalLine=111;
    public static final int PlusSign=95;
    public static final int RULE_INT=149;
    public static final int Get=58;
    public static final int RULE_ML_COMMENT=151;
    public static final int LeftSquareBracket=107;
    public static final int LessThanSignLessThanSign=75;
    public static final int If=84;
    public static final int RULE_REGEX_START=136;
    public static final int Finally=18;
    public static final int Intersection=4;
    public static final int Set=62;
    public static final int RULE_UNICODE_ESCAPE_FRAGMENT=157;
    public static final int In=85;
    public static final int Catch=33;
    public static final int VerticalLineVerticalLine=88;
    public static final int RULE_SCIENTIFIC_INT=124;
    public static final int RULE_TEMPLATE_MIDDLE=142;
    public static final int RULE_INCOMPLETE_ASYNC_ARROW=146;
    public static final int RULE_EXPONENT_PART=115;
    public static final int Union=39;
    public static final int Case=43;
    public static final int RULE_REGEX_CHAR_OR_BRACKET=133;
    public static final int Comma=96;
    public static final int RULE_SL_COMMENT_FRAGMENT=167;
    public static final int Target=28;
    public static final int As=82;
    public static final int HyphenMinus=97;
    public static final int RULE_IDENTIFIER_PART=123;
    public static final int RULE_UNICODE_SPACE_SEPARATOR_FRAGMENT=166;
    public static final int Export=22;
    public static final int LessThanSignEqualsSign=76;
    public static final int CommercialAtCommercialAt=80;
    public static final int Solidus=99;
    public static final int RightCurlyBracket=112;
    public static final int PercentSignEqualsSign=66;
    public static final int RULE_HEX_INT=119;
    public static final int FullStop=98;
    public static final int Constructor=5;
    public static final int Abstract=11;
    public static final int Promisify=8;
    public static final int RULE_SIGNED_INT=125;
    public static final int Default=16;
    public static final int CommercialAt=106;
    public static final int Semicolon=101;
    public static final int RULE_LINE_TERMINATOR_FRAGMENT=130;
    public static final int Type=50;
    public static final int PlusSignPlusSign=70;
    public static final int QuestionMark=105;
    public static final int Else=44;
    public static final int RULE_HEX_DIGIT=156;
    public static final int RULE_UNICODE_CONNECTOR_PUNCTUATION_FRAGMENT=161;
    public static final int Yield=41;
    public static final int ExclamationMarkEqualsSign=65;
    public static final int Interface=9;
    public static final int RULE_TEMPLATE_CONTINUATION=144;
    public static final int HyphenMinusHyphenMinus=72;
    public static final int New=60;
    public static final int Null=47;
    public static final int AmpersandEqualsSign=68;
    public static final int Typeof=29;
    public static final int SolidusEqualsSign=74;
    public static final int True=49;
    public static final int FullStopFullStopFullStop=54;
    public static final int PercentSign=90;
    public static final int RULE_IDENTIFIER_START=148;
    public static final int Implements=6;
    public static final int RULE_WHITESPACE_FRAGMENT=154;
    public static final int Super=37;
    public static final int Async=30;
    public static final int This=42;
    public static final int Try=63;
    public static final int Ampersand=91;
    public static final int AsteriskEqualsSign=69;
    public static final int Void=51;
    public static final int VerticalLineEqualsSign=87;
    public static final int RightSquareBracket=108;
    public static final int RULE_BINARY_INT=120;
    public static final int Protected=10;
    public static final int Const=35;
    public static final int RULE_ACTUAL_REGEX_TAIL=135;
    public static final int For=57;
    public static final int RightParenthesis=93;
    public static final int RULE_UNICODE_COMBINING_MARK_FRAGMENT=159;
    public static final int Public=24;
    public static final int Do=83;
    public static final int RULE_LEGACY_OCTAL_INT=122;
    public static final int RULE_DOUBLE_STRING_CHAR=127;
    public static final int EqualsSignEqualsSignEqualsSign=56;
    public static final int RULE_TEMPLATE_END=143;
    public static final int This_1=48;
    public static final int RULE_NO_LINE_TERMINATOR=145;
    public static final int RULE_DOT_DOT=164;
    public static final int External=14;
    public static final int CircumflexAccentEqualsSign=81;
    public static final int Class=34;
    public static final int Static=26;
    public static final int Debugger=13;
    public static final int RULE_SINGLE_STRING_CHAR=128;
    public static final int LessThanSignLessThanSignEqualsSign=55;
    public static final int RULE_INT_SUFFIX=118;
    public static final int RULE_IDENTIFIER=126;
    public static final int RULE_ML_COMMENT_FRAGMENT=150;
    public static final int RULE_STRING=129;
    public static final int Continue=12;
    public static final int With=52;
    public static final int RULE_SL_COMMENT=152;
    public static final int Function=15;
    public static final int EqualsSign=103;
    public static final int RULE_ZWJ=163;
    public static final int RULE_UNICODE_DIGIT_FRAGMENT=160;
    public static final int AmpersandAmpersand=67;
    public static final int RULE_DOUBLE=117;
    public static final int Instanceof=7;
    public static final int HyphenMinusEqualsSign=73;
    public static final int Colon=100;
    public static final int RULE_BACKSLASH_SEQUENCE=132;
    public static final int EOF=-1;
    public static final int Asterisk=94;
    public static final int PlusSignEqualsSign=71;
    public static final int Return=25;
    public static final int RULE_WS=155;
    public static final int RULE_BOM=165;
    public static final int LeftCurlyBracket=110;
    public static final int Tilde=113;
    public static final int While=40;
    public static final int From=46;
    public static final int RULE_ANY_OTHER=168;
    public static final int CircumflexAccent=109;
    public static final int RULE_UNICODE_LETTER_FRAGMENT=158;
    public static final int RULE_DECIMAL_DIGIT_FRAGMENT=114;
    public static final int Of=86;
    public static final int RULE_DECIMAL_INTEGER_LITERAL_FRAGMENT=116;
    public static final int Let=59;
    public static final int Await=31;


        public InternalN4JSParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalN4JSParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalN4JSParser.tokenNames; }
    public String getGrammarFileName() { return "InternalN4JSParser.g"; }
    protected void setInRegularExpression() {}
    protected void setInTemplateSegment() {}
    protected boolean forcedRewind(int marker) { return true; } // overridden in subtype
    protected void promoteEOL() {} // overridden in subtype
    protected void addASIMessage() {} // overridden in subtype
    protected boolean hasDisallowedEOL() { return false; } // overridden in subtype


    	private N4JSGrammarAccess grammarAccess;
    	 	
    	public InternalN4JSParser(TokenStream input, N4JSGrammarAccess grammarAccess) {
    		this(input);
    		this.grammarAccess = grammarAccess;
    		registerRules(grammarAccess.getGrammar());
    	}
    	
    	@Override
    	protected String getFirstRuleName() {
    		return "Script";	
    	} 
    	   	   	
    	@Override
    	protected N4JSGrammarAccess getGrammarAccess() {
    		return grammarAccess;
    	}
    public final EObject entryRuleScript() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScript = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScriptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleScript=ruleScript();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScript; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleScript() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_1_0 = null;

        EObject lv_scriptElements_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getScriptAccess().getScriptAction_0(),
                          current);
                  
            }

            }
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==CommercialAtCommercialAt) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScriptAccess().getAnnotationsScriptAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_3);
            	    lv_annotations_1_0=ruleScriptAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScriptRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"eu.numberfour.n4js.N4JS.ScriptAnnotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( ((LA2_0>=Intersection && LA2_0<=Implements)||(LA2_0>=Promisify && LA2_0<=Function)||(LA2_0>=Private && LA2_0<=Break)||(LA2_0>=Class && LA2_0<=This)||(LA2_0>=Enum && LA2_0<=With)||(LA2_0>=For && LA2_0<=Var)||LA2_0==PlusSignPlusSign||LA2_0==HyphenMinusHyphenMinus||LA2_0==SolidusEqualsSign||(LA2_0>=As && LA2_0<=If)||LA2_0==Of||LA2_0==ExclamationMark||LA2_0==LeftParenthesis||(LA2_0>=Asterisk && LA2_0<=PlusSign)||LA2_0==HyphenMinus||LA2_0==Solidus||(LA2_0>=Semicolon && LA2_0<=LessThanSign)||(LA2_0>=CommercialAt && LA2_0<=LeftSquareBracket)||LA2_0==LeftCurlyBracket||LA2_0==Tilde||LA2_0==RULE_DOUBLE||(LA2_0>=RULE_HEX_INT && LA2_0<=RULE_LEGACY_OCTAL_INT)||LA2_0==RULE_SCIENTIFIC_INT||LA2_0==RULE_IDENTIFIER||LA2_0==RULE_STRING||(LA2_0>=RULE_TEMPLATE_HEAD && LA2_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA2_0==RULE_INT) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScriptAccess().getScriptElementsScriptElementParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_scriptElements_2_0=ruleScriptElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScriptRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"scriptElements",
            	              		lv_scriptElements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.ScriptElement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleScriptElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScriptElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScriptElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleScriptElement=ruleScriptElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScriptElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleScriptElement() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedScriptElement_0 = null;

        EObject this_N4ClassDeclaration_1 = null;

        EObject this_N4InterfaceDeclaration_2 = null;

        EObject this_N4EnumDeclaration_3 = null;

        EObject this_ImportDeclaration_4 = null;

        EObject this_ExportDeclaration_5 = null;

        EObject this_RootStatement_6 = null;


         enterRule(); 
            
        try {
            {
            int alt3=7;
            alt3 = dfa3.predict(input);
            switch (alt3) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getAnnotatedScriptElementParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedScriptElement_0=ruleAnnotatedScriptElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedScriptElement_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getN4ClassDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4ClassDeclaration_1=ruleN4ClassDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4ClassDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getN4InterfaceDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4InterfaceDeclaration_2=ruleN4InterfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4InterfaceDeclaration_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getN4EnumDeclarationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4EnumDeclaration_3=ruleN4EnumDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4EnumDeclaration_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getImportDeclarationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ImportDeclaration_4=ruleImportDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ImportDeclaration_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getExportDeclarationParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportDeclaration_5=ruleExportDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportDeclaration_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getRootStatementParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_RootStatement_6=ruleRootStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_RootStatement_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotatedScriptElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedScriptElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedScriptElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedScriptElement=ruleAnnotatedScriptElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedScriptElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotatedScriptElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_11=null;
        Token otherlv_18=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        EObject this_AnnotationList_0 = null;

        EObject this_ExportDeclarationImpl_2 = null;

        EObject this_ImportDeclarationImpl_4 = null;

        Enumerator lv_declaredModifiers_6_0 = null;

        EObject this_AsyncNoTrailingLineBreak_7 = null;

        EObject this_FunctionImpl_8 = null;

        Enumerator lv_declaredModifiers_10_0 = null;

        AntlrDatatypeRuleToken lv_typingStrategy_12_0 = null;

        AntlrDatatypeRuleToken lv_name_13_0 = null;

        EObject this_TypeVariables_14 = null;

        EObject this_ClassExtendsClause_15 = null;

        Enumerator lv_declaredModifiers_17_0 = null;

        AntlrDatatypeRuleToken lv_typingStrategy_19_0 = null;

        AntlrDatatypeRuleToken lv_name_20_0 = null;

        EObject this_TypeVariables_21 = null;

        EObject this_InterfaceImplementsList_22 = null;

        EObject this_Members_23 = null;

        Enumerator lv_declaredModifiers_25_0 = null;

        AntlrDatatypeRuleToken lv_name_27_0 = null;

        EObject lv_literals_29_0 = null;

        EObject lv_literals_31_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_5);
            this_AnnotationList_0=ruleAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }
            int alt16=5;
            alt16 = dfa16.predict(input);
            switch (alt16) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedScriptElementAccess().getExportDeclarationAnnotationListAction_1_0_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getExportDeclarationImplParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportDeclarationImpl_2=ruleExportDeclarationImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportDeclarationImpl_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedScriptElementAccess().getImportDeclarationAnnotationListAction_1_1_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getImportDeclarationImplParserRuleCall_1_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ImportDeclarationImpl_4=ruleImportDeclarationImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ImportDeclarationImpl_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedScriptElementAccess().getFunctionDeclarationAnnotationListAction_1_2_0(),
                                  current);
                          
                    }

                    }
                    {
                    {
                    loop4:
                    do {
                        int alt4=2;
                        int LA4_0 = input.LA(1);

                        if ( ((LA4_0>=Protected && LA4_0<=Abstract)||LA4_0==External||(LA4_0>=Private && LA4_0<=Project)||LA4_0==Public||LA4_0==Static||LA4_0==Const) ) {
                            alt4=1;
                        }


                        switch (alt4) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_2_1_0_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_6);
                    	    lv_declaredModifiers_6_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_6_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop4;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getAsyncNoTrailingLineBreakParserRuleCall_1_2_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_6);
                    this_AsyncNoTrailingLineBreak_7=ruleAsyncNoTrailingLineBreak(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncNoTrailingLineBreak_7;
                              afterParserOrEnumRuleCall();
                          
                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getFunctionImplParserRuleCall_1_2_1_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionImpl_8=ruleFunctionImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionImpl_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    int alt13=2;
                    alt13 = dfa13.predict(input);
                    switch (alt13) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAnnotatedScriptElementAccess().getN4ClassDeclarationAnnotationListAction_1_3_0_0_0(),
                                          current);
                                  
                            }

                            }
                            loop5:
                            do {
                                int alt5=2;
                                int LA5_0 = input.LA(1);

                                if ( ((LA5_0>=Protected && LA5_0<=Abstract)||LA5_0==External||(LA5_0>=Private && LA5_0<=Project)||LA5_0==Public||LA5_0==Static||LA5_0==Const) ) {
                                    alt5=1;
                                }


                                switch (alt5) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_3_0_0_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_7);
                            	    lv_declaredModifiers_10_0=ruleN4Modifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"declaredModifiers",
                            	              		lv_declaredModifiers_10_0, 
                            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop5;
                                }
                            } while (true);

                            otherlv_11=(Token)match(input,Class,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_11, grammarAccess.getAnnotatedScriptElementAccess().getClassKeyword_1_3_0_0_2());
                                  
                            }
                            int alt6=2;
                            int LA6_0 = input.LA(1);

                            if ( (LA6_0==Tilde) ) {
                                alt6=1;
                            }
                            switch (alt6) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_1_3_0_0_3_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_9);
                                    lv_typingStrategy_12_0=ruleTypingStrategyDefSiteOperator();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"typingStrategy",
                                              		lv_typingStrategy_12_0, 
                                              		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyDefSiteOperator");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getNameBindingIdentifierParserRuleCall_1_3_0_0_4_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_10);
                            lv_name_13_0=ruleBindingIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_13_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt7=2;
                            int LA7_0 = input.LA(1);

                            if ( (LA7_0==LessThanSign) ) {
                                alt7=1;
                            }
                            switch (alt7) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getTypeVariablesParserRuleCall_1_3_0_0_5()); 
                                          
                                    }
                                    pushFollow(FOLLOW_10);
                                    this_TypeVariables_14=ruleTypeVariables(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_TypeVariables_14;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }
                            int alt8=2;
                            int LA8_0 = input.LA(1);

                            if ( (LA8_0==Implements||LA8_0==Extends) ) {
                                alt8=1;
                            }
                            switch (alt8) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getClassExtendsClauseParserRuleCall_1_3_0_0_6()); 
                                          
                                    }
                                    pushFollow(FOLLOW_10);
                                    this_ClassExtendsClause_15=ruleClassExtendsClause(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_ClassExtendsClause_15;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAnnotatedScriptElementAccess().getN4InterfaceDeclarationAnnotationListAction_1_3_0_1_0(),
                                          current);
                                  
                            }

                            }
                            loop9:
                            do {
                                int alt9=2;
                                int LA9_0 = input.LA(1);

                                if ( ((LA9_0>=Protected && LA9_0<=Abstract)||LA9_0==External||(LA9_0>=Private && LA9_0<=Project)||LA9_0==Public||LA9_0==Static||LA9_0==Const) ) {
                                    alt9=1;
                                }


                                switch (alt9) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_3_0_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_11);
                            	    lv_declaredModifiers_17_0=ruleN4Modifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"declaredModifiers",
                            	              		lv_declaredModifiers_17_0, 
                            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop9;
                                }
                            } while (true);

                            otherlv_18=(Token)match(input,Interface,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_18, grammarAccess.getAnnotatedScriptElementAccess().getInterfaceKeyword_1_3_0_1_2());
                                  
                            }
                            int alt10=2;
                            int LA10_0 = input.LA(1);

                            if ( (LA10_0==Tilde) ) {
                                alt10=1;
                            }
                            switch (alt10) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_1_3_0_1_3_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_9);
                                    lv_typingStrategy_19_0=ruleTypingStrategyDefSiteOperator();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"typingStrategy",
                                              		lv_typingStrategy_19_0, 
                                              		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyDefSiteOperator");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getNameBindingIdentifierParserRuleCall_1_3_0_1_4_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_10);
                            lv_name_20_0=ruleBindingIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_20_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt11=2;
                            int LA11_0 = input.LA(1);

                            if ( (LA11_0==LessThanSign) ) {
                                alt11=1;
                            }
                            switch (alt11) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getTypeVariablesParserRuleCall_1_3_0_1_5()); 
                                          
                                    }
                                    pushFollow(FOLLOW_10);
                                    this_TypeVariables_21=ruleTypeVariables(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_TypeVariables_21;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }
                            int alt12=2;
                            int LA12_0 = input.LA(1);

                            if ( (LA12_0==Implements||LA12_0==Extends) ) {
                                alt12=1;
                            }
                            switch (alt12) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getInterfaceImplementsListParserRuleCall_1_3_0_1_6()); 
                                          
                                    }
                                    pushFollow(FOLLOW_10);
                                    this_InterfaceImplementsList_22=ruleInterfaceImplementsList(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_InterfaceImplementsList_22;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getMembersParserRuleCall_1_3_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Members_23=ruleMembers(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Members_23;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedScriptElementAccess().getN4EnumDeclarationAnnotationListAction_1_4_0(),
                                  current);
                          
                    }

                    }
                    loop14:
                    do {
                        int alt14=2;
                        int LA14_0 = input.LA(1);

                        if ( ((LA14_0>=Protected && LA14_0<=Abstract)||LA14_0==External||(LA14_0>=Private && LA14_0<=Project)||LA14_0==Public||LA14_0==Static||LA14_0==Const) ) {
                            alt14=1;
                        }


                        switch (alt14) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    lv_declaredModifiers_25_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_25_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop14;
                        }
                    } while (true);

                    otherlv_26=(Token)match(input,Enum,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_26, grammarAccess.getAnnotatedScriptElementAccess().getEnumKeyword_1_4_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getNameBindingIdentifierParserRuleCall_1_4_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_13);
                    lv_name_27_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_27_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_28=(Token)match(input,LeftCurlyBracket,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_28, grammarAccess.getAnnotatedScriptElementAccess().getLeftCurlyBracketKeyword_1_4_4());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getLiteralsN4EnumLiteralParserRuleCall_1_4_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_15);
                    lv_literals_29_0=ruleN4EnumLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                      	        }
                             		add(
                             			current, 
                             			"literals",
                              		lv_literals_29_0, 
                              		"eu.numberfour.n4js.N4JS.N4EnumLiteral");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop15:
                    do {
                        int alt15=2;
                        int LA15_0 = input.LA(1);

                        if ( (LA15_0==Comma) ) {
                            alt15=1;
                        }


                        switch (alt15) {
                    	case 1 :
                    	    {
                    	    otherlv_30=(Token)match(input,Comma,FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_30, grammarAccess.getAnnotatedScriptElementAccess().getCommaKeyword_1_4_6_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getLiteralsN4EnumLiteralParserRuleCall_1_4_6_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_literals_31_0=ruleN4EnumLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"literals",
                    	              		lv_literals_31_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4EnumLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop15;
                        }
                    } while (true);

                    otherlv_32=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_32, grammarAccess.getAnnotatedScriptElementAccess().getRightCurlyBracketKeyword_1_4_7());
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeVariables(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_typeVars_1_0 = null;

        EObject lv_typeVars_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LessThanSign,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTypeVariablesAccess().getLessThanSignKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypeVariablesAccess().getTypeVarsTypeVariableParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_17);
            lv_typeVars_1_0=ruleTypeVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeVariablesRule());
              	        }
                     		add(
                     			current, 
                     			"typeVars",
                      		lv_typeVars_1_0, 
                      		"eu.numberfour.n4js.N4JS.TypeVariable");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==Comma) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    {
            	    otherlv_2=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getTypeVariablesAccess().getCommaKeyword_2_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTypeVariablesAccess().getTypeVarsTypeVariableParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_17);
            	    lv_typeVars_3_0=ruleTypeVariable();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTypeVariablesRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"typeVars",
            	              		lv_typeVars_3_0, 
            	              		"eu.numberfour.n4js.N4JS.TypeVariable");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);

            otherlv_4=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getTypeVariablesAccess().getGreaterThanSignKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportDeclaration=ruleExportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_ExportDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExportDeclarationAccess().getExportDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getExportDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getExportDeclarationAccess().getExportDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_ExportDeclarationImpl_1=ruleExportDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ExportDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token lv_wildcardExport_1_0=null;
        Token lv_defaultExport_8_0=null;
        EObject this_ExportFromClause_2 = null;

        EObject this_ExportClause_4 = null;

        EObject this_ExportFromClause_5 = null;

        EObject lv_exportedElement_7_0 = null;

        EObject lv_exportedElement_9_0 = null;

        EObject lv_defaultExportedExpression_10_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Export,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getExportDeclarationImplAccess().getExportKeyword_0());
                  
            }
            int alt20=4;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt20=1;
                }
                break;
            case LeftCurlyBracket:
                {
                alt20=2;
                }
                break;
            case Interface:
            case Protected:
            case Abstract:
            case External:
            case Function:
            case Private:
            case Project:
            case Public:
            case Static:
            case Async:
            case Class:
            case Const:
            case Enum:
            case Let:
            case Var:
            case CommercialAt:
                {
                alt20=3;
                }
                break;
            case Default:
                {
                alt20=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_wildcardExport_1_0=(Token)match(input,Asterisk,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_wildcardExport_1_0, grammarAccess.getExportDeclarationImplAccess().getWildcardExportAsteriskKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getExportDeclarationImplRule());
                      	        }
                             		setWithLastConsumed(current, "wildcardExport", true, "*");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getExportDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getExportFromClauseParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_20);
                    this_ExportFromClause_2=ruleExportFromClause(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportFromClause_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getSemiParserRuleCall_1_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getExportDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getExportClauseParserRuleCall_1_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_21);
                    this_ExportClause_4=ruleExportClause(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportClause_4;
                              afterParserOrEnumRuleCall();
                          
                    }
                    int alt18=2;
                    int LA18_0 = input.LA(1);

                    if ( (LA18_0==From) && (synpred8_InternalN4JSParser())) {
                        alt18=1;
                    }
                    switch (alt18) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getExportDeclarationImplRule());
                              		}
                                      newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getExportFromClauseParserRuleCall_1_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_20);
                            this_ExportFromClause_5=ruleExportFromClause(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ExportFromClause_5;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getSemiParserRuleCall_1_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getExportedElementExportableElementParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_exportedElement_7_0=ruleExportableElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExportDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"exportedElement",
                              		lv_exportedElement_7_0, 
                              		"eu.numberfour.n4js.N4JS.ExportableElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    {
                    lv_defaultExport_8_0=(Token)match(input,Default,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_defaultExport_8_0, grammarAccess.getExportDeclarationImplAccess().getDefaultExportDefaultKeyword_1_3_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getExportDeclarationImplRule());
                      	        }
                             		setWithLastConsumed(current, "defaultExport", true, "default");
                      	    
                    }

                    }


                    }
                    int alt19=2;
                    alt19 = dfa19.predict(input);
                    switch (alt19) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getExportedElementExportableElementParserRuleCall_1_3_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_exportedElement_9_0=ruleExportableElement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getExportDeclarationImplRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"exportedElement",
                                      		lv_exportedElement_9_0, 
                                      		"eu.numberfour.n4js.N4JS.ExportableElement");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getDefaultExportedExpressionAssignmentExpressionParserRuleCall_1_3_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_20);
                            lv_defaultExportedExpression_10_0=norm1_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getExportDeclarationImplRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"defaultExportedExpression",
                                      		lv_defaultExportedExpression_10_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {
                               
                                      newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getSemiParserRuleCall_1_3_1_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_2);
                            ruleSemi();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportFromClause(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;

         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,From,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getExportFromClauseAccess().getFromKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getExportFromClauseRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportFromClauseAccess().getReexportedFromTModuleCrossReference_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleModuleSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportClause(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_namedExports_1_0 = null;

        EObject lv_namedExports_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftCurlyBracket,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getExportClauseAccess().getLeftCurlyBracketKeyword_0());
                  
            }
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( ((LA23_0>=Intersection && LA23_0<=Implements)||(LA23_0>=Promisify && LA23_0<=Abstract)||LA23_0==External||(LA23_0>=Private && LA23_0<=Project)||LA23_0==Public||LA23_0==Static||LA23_0==Target||(LA23_0>=Async && LA23_0<=Await)||LA23_0==Union||(LA23_0>=Yield && LA23_0<=This)||LA23_0==From||LA23_0==Type||(LA23_0>=Get && LA23_0<=Let)||(LA23_0>=Out && LA23_0<=Set)||LA23_0==As||LA23_0==Of||LA23_0==RULE_IDENTIFIER) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExportClauseAccess().getNamedExportsExportSpecifierParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_15);
                    lv_namedExports_1_0=ruleExportSpecifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExportClauseRule());
                      	        }
                             		add(
                             			current, 
                             			"namedExports",
                              		lv_namedExports_1_0, 
                              		"eu.numberfour.n4js.N4JS.ExportSpecifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop21:
                    do {
                        int alt21=2;
                        int LA21_0 = input.LA(1);

                        if ( (LA21_0==Comma) ) {
                            int LA21_1 = input.LA(2);

                            if ( ((LA21_1>=Intersection && LA21_1<=Implements)||(LA21_1>=Promisify && LA21_1<=Abstract)||LA21_1==External||(LA21_1>=Private && LA21_1<=Project)||LA21_1==Public||LA21_1==Static||LA21_1==Target||(LA21_1>=Async && LA21_1<=Await)||LA21_1==Union||(LA21_1>=Yield && LA21_1<=This)||LA21_1==From||LA21_1==Type||(LA21_1>=Get && LA21_1<=Let)||(LA21_1>=Out && LA21_1<=Set)||LA21_1==As||LA21_1==Of||LA21_1==RULE_IDENTIFIER) ) {
                                alt21=1;
                            }


                        }


                        switch (alt21) {
                    	case 1 :
                    	    {
                    	    otherlv_2=(Token)match(input,Comma,FOLLOW_9); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getExportClauseAccess().getCommaKeyword_1_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExportClauseAccess().getNamedExportsExportSpecifierParserRuleCall_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_namedExports_3_0=ruleExportSpecifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExportClauseRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"namedExports",
                    	              		lv_namedExports_3_0, 
                    	              		"eu.numberfour.n4js.N4JS.ExportSpecifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop21;
                        }
                    } while (true);
                    int alt22=2;
                    int LA22_0 = input.LA(1);

                    if ( (LA22_0==Comma) ) {
                        alt22=1;
                    }
                    switch (alt22) {
                        case 1 :
                            {
                            otherlv_4=(Token)match(input,Comma,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getExportClauseAccess().getCommaKeyword_1_2());
                                  
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getExportClauseAccess().getRightCurlyBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportSpecifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportSpecifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportSpecifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportSpecifier=ruleExportSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportSpecifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportSpecifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_element_0_0 = null;

        AntlrDatatypeRuleToken lv_alias_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportSpecifierAccess().getElementIdentifierRefParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_26);
            lv_element_0_0=ruleIdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportSpecifierRule());
              	        }
                     		set(
                     			current, 
                     			"element",
                      		lv_element_0_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==As) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,As,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getExportSpecifierAccess().getAsKeyword_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExportSpecifierAccess().getAliasIdentifierNameParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_alias_2_0=ruleIdentifierName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExportSpecifierRule());
                      	        }
                             		set(
                             			current, 
                             			"alias",
                              		lv_alias_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportableElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportableElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportableElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportableElement=ruleExportableElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportableElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportableElement() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedExportableElement_0 = null;

        EObject this_N4ClassDeclaration_1 = null;

        EObject this_N4InterfaceDeclaration_2 = null;

        EObject this_N4EnumDeclaration_3 = null;

        EObject this_ExportedFunctionDeclaration_4 = null;

        EObject this_ExportedVariableStatement_5 = null;


         enterRule(); 
            
        try {
            {
            int alt25=6;
            alt25 = dfa25.predict(input);
            switch (alt25) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportableElementAccess().getAnnotatedExportableElementParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedExportableElement_0=ruleAnnotatedExportableElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedExportableElement_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportableElementAccess().getN4ClassDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4ClassDeclaration_1=ruleN4ClassDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4ClassDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportableElementAccess().getN4InterfaceDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4InterfaceDeclaration_2=ruleN4InterfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4InterfaceDeclaration_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportableElementAccess().getN4EnumDeclarationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4EnumDeclaration_3=ruleN4EnumDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4EnumDeclaration_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportableElementAccess().getExportedFunctionDeclarationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportedFunctionDeclaration_4=ruleExportedFunctionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportedFunctionDeclaration_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportableElementAccess().getExportedVariableStatementParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportedVariableStatement_5=ruleExportedVariableStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportedVariableStatement_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotatedExportableElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedExportableElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedExportableElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedExportableElement=ruleAnnotatedExportableElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedExportableElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotatedExportableElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_9=null;
        Token otherlv_14=null;
        Token otherlv_21=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        EObject this_AnnotationList_0 = null;

        Enumerator lv_declaredModifiers_2_0 = null;

        EObject this_AsyncNoTrailingLineBreak_3 = null;

        EObject this_FunctionImpl_4 = null;

        Enumerator lv_declaredModifiers_6_0 = null;

        Enumerator lv_varStmtKeyword_7_0 = null;

        EObject lv_varDeclsOrBindings_8_0 = null;

        EObject lv_varDeclsOrBindings_10_0 = null;

        Enumerator lv_declaredModifiers_13_0 = null;

        AntlrDatatypeRuleToken lv_typingStrategy_15_0 = null;

        AntlrDatatypeRuleToken lv_name_16_0 = null;

        EObject this_TypeVariables_17 = null;

        EObject this_ClassExtendsClause_18 = null;

        Enumerator lv_declaredModifiers_20_0 = null;

        AntlrDatatypeRuleToken lv_typingStrategy_22_0 = null;

        AntlrDatatypeRuleToken lv_name_23_0 = null;

        EObject this_TypeVariables_24 = null;

        EObject this_InterfaceImplementsList_25 = null;

        EObject this_Members_26 = null;

        Enumerator lv_declaredModifiers_28_0 = null;

        AntlrDatatypeRuleToken lv_name_30_0 = null;

        EObject lv_literals_32_0 = null;

        EObject lv_literals_34_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_28);
            this_AnnotationList_0=ruleAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }
            int alt40=4;
            alt40 = dfa40.predict(input);
            switch (alt40) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExportableElementAccess().getFunctionDeclarationAnnotationListAction_1_0_0(),
                                  current);
                          
                    }

                    }
                    loop26:
                    do {
                        int alt26=2;
                        int LA26_0 = input.LA(1);

                        if ( ((LA26_0>=Protected && LA26_0<=Abstract)||LA26_0==External||(LA26_0>=Private && LA26_0<=Project)||LA26_0==Public||LA26_0==Static||LA26_0==Const) ) {
                            alt26=1;
                        }


                        switch (alt26) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_6);
                    	    lv_declaredModifiers_2_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_2_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop26;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getAsyncNoTrailingLineBreakParserRuleCall_1_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_6);
                    this_AsyncNoTrailingLineBreak_3=ruleAsyncNoTrailingLineBreak(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncNoTrailingLineBreak_3;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getFunctionImplParserRuleCall_1_0_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionImpl_4=ruleFunctionImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionImpl_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExportableElementAccess().getExportedVariableStatementAnnotationListAction_1_1_0(),
                                  current);
                          
                    }

                    }
                    loop27:
                    do {
                        int alt27=2;
                        alt27 = dfa27.predict(input);
                        switch (alt27) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_declaredModifiers_6_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_6_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop27;
                        }
                    } while (true);
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getVarStmtKeywordVariableStatementKeywordEnumRuleCall_1_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_30);
                    lv_varStmtKeyword_7_0=ruleVariableStatementKeyword();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                      	        }
                             		set(
                             			current, 
                             			"varStmtKeyword",
                              		lv_varStmtKeyword_7_0, 
                              		"eu.numberfour.n4js.N4JS.VariableStatementKeyword");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getVarDeclsOrBindingsExportedVariableDeclarationOrBindingParserRuleCall_1_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_31);
                    lv_varDeclsOrBindings_8_0=ruleExportedVariableDeclarationOrBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                      	        }
                             		add(
                             			current, 
                             			"varDeclsOrBindings",
                              		lv_varDeclsOrBindings_8_0, 
                              		"eu.numberfour.n4js.N4JS.ExportedVariableDeclarationOrBinding");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop28:
                    do {
                        int alt28=2;
                        int LA28_0 = input.LA(1);

                        if ( (LA28_0==Comma) ) {
                            alt28=1;
                        }


                        switch (alt28) {
                    	case 1 :
                    	    {
                    	    otherlv_9=(Token)match(input,Comma,FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_9, grammarAccess.getAnnotatedExportableElementAccess().getCommaKeyword_1_1_4_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getVarDeclsOrBindingsExportedVariableDeclarationOrBindingParserRuleCall_1_1_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_31);
                    	    lv_varDeclsOrBindings_10_0=ruleExportedVariableDeclarationOrBinding();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"varDeclsOrBindings",
                    	              		lv_varDeclsOrBindings_10_0, 
                    	              		"eu.numberfour.n4js.N4JS.ExportedVariableDeclarationOrBinding");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop28;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getSemiParserRuleCall_1_1_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    int alt37=2;
                    alt37 = dfa37.predict(input);
                    switch (alt37) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAnnotatedExportableElementAccess().getN4ClassDeclarationAnnotationListAction_1_2_0_0_0(),
                                          current);
                                  
                            }

                            }
                            loop29:
                            do {
                                int alt29=2;
                                int LA29_0 = input.LA(1);

                                if ( ((LA29_0>=Protected && LA29_0<=Abstract)||LA29_0==External||(LA29_0>=Private && LA29_0<=Project)||LA29_0==Public||LA29_0==Static||LA29_0==Const) ) {
                                    alt29=1;
                                }


                                switch (alt29) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_2_0_0_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_7);
                            	    lv_declaredModifiers_13_0=ruleN4Modifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"declaredModifiers",
                            	              		lv_declaredModifiers_13_0, 
                            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop29;
                                }
                            } while (true);

                            otherlv_14=(Token)match(input,Class,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getAnnotatedExportableElementAccess().getClassKeyword_1_2_0_0_2());
                                  
                            }
                            int alt30=2;
                            int LA30_0 = input.LA(1);

                            if ( (LA30_0==Tilde) ) {
                                alt30=1;
                            }
                            switch (alt30) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_1_2_0_0_3_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_9);
                                    lv_typingStrategy_15_0=ruleTypingStrategyDefSiteOperator();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"typingStrategy",
                                              		lv_typingStrategy_15_0, 
                                              		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyDefSiteOperator");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getNameBindingIdentifierParserRuleCall_1_2_0_0_4_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_10);
                            lv_name_16_0=ruleBindingIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_16_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt31=2;
                            int LA31_0 = input.LA(1);

                            if ( (LA31_0==LessThanSign) ) {
                                alt31=1;
                            }
                            switch (alt31) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getTypeVariablesParserRuleCall_1_2_0_0_5()); 
                                          
                                    }
                                    pushFollow(FOLLOW_10);
                                    this_TypeVariables_17=ruleTypeVariables(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_TypeVariables_17;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }
                            int alt32=2;
                            int LA32_0 = input.LA(1);

                            if ( (LA32_0==Implements||LA32_0==Extends) ) {
                                alt32=1;
                            }
                            switch (alt32) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getClassExtendsClauseParserRuleCall_1_2_0_0_6()); 
                                          
                                    }
                                    pushFollow(FOLLOW_10);
                                    this_ClassExtendsClause_18=ruleClassExtendsClause(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_ClassExtendsClause_18;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAnnotatedExportableElementAccess().getN4InterfaceDeclarationAnnotationListAction_1_2_0_1_0(),
                                          current);
                                  
                            }

                            }
                            loop33:
                            do {
                                int alt33=2;
                                int LA33_0 = input.LA(1);

                                if ( ((LA33_0>=Protected && LA33_0<=Abstract)||LA33_0==External||(LA33_0>=Private && LA33_0<=Project)||LA33_0==Public||LA33_0==Static||LA33_0==Const) ) {
                                    alt33=1;
                                }


                                switch (alt33) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_2_0_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_11);
                            	    lv_declaredModifiers_20_0=ruleN4Modifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"declaredModifiers",
                            	              		lv_declaredModifiers_20_0, 
                            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop33;
                                }
                            } while (true);

                            otherlv_21=(Token)match(input,Interface,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_21, grammarAccess.getAnnotatedExportableElementAccess().getInterfaceKeyword_1_2_0_1_2());
                                  
                            }
                            int alt34=2;
                            int LA34_0 = input.LA(1);

                            if ( (LA34_0==Tilde) ) {
                                alt34=1;
                            }
                            switch (alt34) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_1_2_0_1_3_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_9);
                                    lv_typingStrategy_22_0=ruleTypingStrategyDefSiteOperator();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"typingStrategy",
                                              		lv_typingStrategy_22_0, 
                                              		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyDefSiteOperator");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getNameBindingIdentifierParserRuleCall_1_2_0_1_4_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_10);
                            lv_name_23_0=ruleBindingIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_23_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt35=2;
                            int LA35_0 = input.LA(1);

                            if ( (LA35_0==LessThanSign) ) {
                                alt35=1;
                            }
                            switch (alt35) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getTypeVariablesParserRuleCall_1_2_0_1_5()); 
                                          
                                    }
                                    pushFollow(FOLLOW_10);
                                    this_TypeVariables_24=ruleTypeVariables(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_TypeVariables_24;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }
                            int alt36=2;
                            int LA36_0 = input.LA(1);

                            if ( (LA36_0==Implements||LA36_0==Extends) ) {
                                alt36=1;
                            }
                            switch (alt36) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getInterfaceImplementsListParserRuleCall_1_2_0_1_6()); 
                                          
                                    }
                                    pushFollow(FOLLOW_10);
                                    this_InterfaceImplementsList_25=ruleInterfaceImplementsList(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_InterfaceImplementsList_25;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getMembersParserRuleCall_1_2_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Members_26=ruleMembers(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Members_26;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExportableElementAccess().getN4EnumDeclarationAnnotationListAction_1_3_0(),
                                  current);
                          
                    }

                    }
                    loop38:
                    do {
                        int alt38=2;
                        int LA38_0 = input.LA(1);

                        if ( ((LA38_0>=Protected && LA38_0<=Abstract)||LA38_0==External||(LA38_0>=Private && LA38_0<=Project)||LA38_0==Public||LA38_0==Static||LA38_0==Const) ) {
                            alt38=1;
                        }


                        switch (alt38) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    lv_declaredModifiers_28_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_28_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop38;
                        }
                    } while (true);

                    otherlv_29=(Token)match(input,Enum,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_29, grammarAccess.getAnnotatedExportableElementAccess().getEnumKeyword_1_3_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getNameBindingIdentifierParserRuleCall_1_3_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_13);
                    lv_name_30_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_30_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_31=(Token)match(input,LeftCurlyBracket,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_31, grammarAccess.getAnnotatedExportableElementAccess().getLeftCurlyBracketKeyword_1_3_4());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getLiteralsN4EnumLiteralParserRuleCall_1_3_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_15);
                    lv_literals_32_0=ruleN4EnumLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                      	        }
                             		add(
                             			current, 
                             			"literals",
                              		lv_literals_32_0, 
                              		"eu.numberfour.n4js.N4JS.N4EnumLiteral");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop39:
                    do {
                        int alt39=2;
                        int LA39_0 = input.LA(1);

                        if ( (LA39_0==Comma) ) {
                            alt39=1;
                        }


                        switch (alt39) {
                    	case 1 :
                    	    {
                    	    otherlv_33=(Token)match(input,Comma,FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_33, grammarAccess.getAnnotatedExportableElementAccess().getCommaKeyword_1_3_6_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getLiteralsN4EnumLiteralParserRuleCall_1_3_6_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_literals_34_0=ruleN4EnumLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"literals",
                    	              		lv_literals_34_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4EnumLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop39;
                        }
                    } while (true);

                    otherlv_35=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_35, grammarAccess.getAnnotatedExportableElementAccess().getRightCurlyBracketKeyword_1_3_7());
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImportDeclaration=ruleImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_ImportDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getImportDeclarationAccess().getImportDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getImportDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getImportDeclarationAccess().getImportDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_ImportDeclarationImpl_1=ruleImportDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ImportDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleImportDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token lv_importFrom_2_0=null;
        EObject this_ImportClause_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Import,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getImportDeclarationImplAccess().getImportKeyword_0());
                  
            }
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( ((LA41_0>=Intersection && LA41_0<=Implements)||(LA41_0>=Promisify && LA41_0<=Abstract)||LA41_0==External||(LA41_0>=Private && LA41_0<=Project)||LA41_0==Public||LA41_0==Static||LA41_0==Target||(LA41_0>=Async && LA41_0<=Await)||LA41_0==Union||(LA41_0>=Yield && LA41_0<=This)||LA41_0==From||LA41_0==Type||(LA41_0>=Get && LA41_0<=Let)||(LA41_0>=Out && LA41_0<=Set)||LA41_0==As||LA41_0==Of||LA41_0==Asterisk||LA41_0==LeftCurlyBracket||LA41_0==RULE_IDENTIFIER) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getImportDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getImportDeclarationImplAccess().getImportClauseParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_19);
                    this_ImportClause_1=ruleImportClause(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ImportClause_1;
                              afterParserOrEnumRuleCall();
                          
                    }
                    {
                    {
                    lv_importFrom_2_0=(Token)match(input,From,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_importFrom_2_0, grammarAccess.getImportDeclarationImplAccess().getImportFromFromKeyword_1_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getImportDeclarationImplRule());
                      	        }
                             		setWithLastConsumed(current, "importFrom", true, "from");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getImportDeclarationImplRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getImportDeclarationImplAccess().getModuleTModuleCrossReference_2_0()); 
              	    
            }
            pushFollow(FOLLOW_20);
            ruleModuleSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getImportDeclarationImplAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleImportClause(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_importSpecifiers_0_0 = null;

        EObject this_ImportSpecifiersExceptDefault_2 = null;

        EObject this_ImportSpecifiersExceptDefault_3 = null;


         enterRule(); 
            
        try {
            {
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( ((LA43_0>=Intersection && LA43_0<=Implements)||(LA43_0>=Promisify && LA43_0<=Abstract)||LA43_0==External||(LA43_0>=Private && LA43_0<=Project)||LA43_0==Public||LA43_0==Static||LA43_0==Target||(LA43_0>=Async && LA43_0<=Await)||LA43_0==Union||(LA43_0>=Yield && LA43_0<=This)||LA43_0==From||LA43_0==Type||(LA43_0>=Get && LA43_0<=Let)||(LA43_0>=Out && LA43_0<=Set)||LA43_0==As||LA43_0==Of||LA43_0==RULE_IDENTIFIER) ) {
                alt43=1;
            }
            else if ( (LA43_0==Asterisk||LA43_0==LeftCurlyBracket) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getImportClauseAccess().getImportSpecifiersDefaultImportSpecifierParserRuleCall_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_33);
                    lv_importSpecifiers_0_0=ruleDefaultImportSpecifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getImportClauseRule());
                      	        }
                             		add(
                             			current, 
                             			"importSpecifiers",
                              		lv_importSpecifiers_0_0, 
                              		"eu.numberfour.n4js.N4JS.DefaultImportSpecifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==Comma) ) {
                        alt42=1;
                    }
                    switch (alt42) {
                        case 1 :
                            {
                            otherlv_1=(Token)match(input,Comma,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_1, grammarAccess.getImportClauseAccess().getCommaKeyword_0_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getImportClauseRule());
                              		}
                                      newCompositeNode(grammarAccess.getImportClauseAccess().getImportSpecifiersExceptDefaultParserRuleCall_0_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_2);
                            this_ImportSpecifiersExceptDefault_2=ruleImportSpecifiersExceptDefault(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ImportSpecifiersExceptDefault_2;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getImportClauseRule());
                      		}
                              newCompositeNode(grammarAccess.getImportClauseAccess().getImportSpecifiersExceptDefaultParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ImportSpecifiersExceptDefault_3=ruleImportSpecifiersExceptDefault(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ImportSpecifiersExceptDefault_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleImportSpecifiersExceptDefault(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_importSpecifiers_0_0 = null;

        EObject lv_importSpecifiers_2_0 = null;

        EObject lv_importSpecifiers_4_0 = null;


         enterRule(); 
            
        try {
            {
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==Asterisk) ) {
                alt47=1;
            }
            else if ( (LA47_0==LeftCurlyBracket) ) {
                alt47=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }
            switch (alt47) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getImportSpecifiersExceptDefaultAccess().getImportSpecifiersNamespaceImportSpecifierParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_importSpecifiers_0_0=ruleNamespaceImportSpecifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getImportSpecifiersExceptDefaultRule());
                      	        }
                             		add(
                             			current, 
                             			"importSpecifiers",
                              		lv_importSpecifiers_0_0, 
                              		"eu.numberfour.n4js.N4JS.NamespaceImportSpecifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getImportSpecifiersExceptDefaultAccess().getLeftCurlyBracketKeyword_1_0());
                          
                    }
                    int alt46=2;
                    int LA46_0 = input.LA(1);

                    if ( ((LA46_0>=Intersection && LA46_0<=With)||(LA46_0>=For && LA46_0<=Var)||(LA46_0>=As && LA46_0<=Of)||LA46_0==RULE_IDENTIFIER) ) {
                        alt46=1;
                    }
                    switch (alt46) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getImportSpecifiersExceptDefaultAccess().getImportSpecifiersNamedImportSpecifierParserRuleCall_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_15);
                            lv_importSpecifiers_2_0=ruleNamedImportSpecifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getImportSpecifiersExceptDefaultRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"importSpecifiers",
                                      		lv_importSpecifiers_2_0, 
                                      		"eu.numberfour.n4js.N4JS.NamedImportSpecifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop44:
                            do {
                                int alt44=2;
                                int LA44_0 = input.LA(1);

                                if ( (LA44_0==Comma) ) {
                                    int LA44_1 = input.LA(2);

                                    if ( ((LA44_1>=Intersection && LA44_1<=With)||(LA44_1>=For && LA44_1<=Var)||(LA44_1>=As && LA44_1<=Of)||LA44_1==RULE_IDENTIFIER) ) {
                                        alt44=1;
                                    }


                                }


                                switch (alt44) {
                            	case 1 :
                            	    {
                            	    otherlv_3=(Token)match(input,Comma,FOLLOW_27); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_3, grammarAccess.getImportSpecifiersExceptDefaultAccess().getCommaKeyword_1_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getImportSpecifiersExceptDefaultAccess().getImportSpecifiersNamedImportSpecifierParserRuleCall_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_15);
                            	    lv_importSpecifiers_4_0=ruleNamedImportSpecifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getImportSpecifiersExceptDefaultRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"importSpecifiers",
                            	              		lv_importSpecifiers_4_0, 
                            	              		"eu.numberfour.n4js.N4JS.NamedImportSpecifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop44;
                                }
                            } while (true);
                            int alt45=2;
                            int LA45_0 = input.LA(1);

                            if ( (LA45_0==Comma) ) {
                                alt45=1;
                            }
                            switch (alt45) {
                                case 1 :
                                    {
                                    otherlv_5=(Token)match(input,Comma,FOLLOW_25); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_5, grammarAccess.getImportSpecifiersExceptDefaultAccess().getCommaKeyword_1_1_2());
                                          
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getImportSpecifiersExceptDefaultAccess().getRightCurlyBracketKeyword_1_2());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleNamedImportSpecifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedImportSpecifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedImportSpecifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedImportSpecifier=ruleNamedImportSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedImportSpecifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleNamedImportSpecifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_alias_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt48=2;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getNamedImportSpecifierRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNamedImportSpecifierAccess().getImportedElementTExportableElementCrossReference_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getNamedImportSpecifierRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNamedImportSpecifierAccess().getImportedElementTExportableElementCrossReference_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_36);
                    ruleIdentifierName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,As,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getNamedImportSpecifierAccess().getAsKeyword_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNamedImportSpecifierAccess().getAliasBindingIdentifierParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_alias_3_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNamedImportSpecifierRule());
                      	        }
                             		set(
                             			current, 
                             			"alias",
                              		lv_alias_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleDefaultImportSpecifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefaultImportSpecifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefaultImportSpecifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefaultImportSpecifier=ruleDefaultImportSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefaultImportSpecifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleDefaultImportSpecifier() throws RecognitionException {
        EObject current = null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getDefaultImportSpecifierRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDefaultImportSpecifierAccess().getImportedElementTExportableElementCrossReference_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleNamespaceImportSpecifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespaceImportSpecifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceImportSpecifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespaceImportSpecifier=ruleNamespaceImportSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceImportSpecifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleNamespaceImportSpecifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_declaredDynamic_4_0=null;
        AntlrDatatypeRuleToken lv_alias_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getNamespaceImportSpecifierAccess().getNamespaceImportSpecifierAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Asterisk,FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getNamespaceImportSpecifierAccess().getAsteriskKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,As,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getNamespaceImportSpecifierAccess().getAsKeyword_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getNamespaceImportSpecifierAccess().getAliasBindingIdentifierParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_37);
            lv_alias_3_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNamespaceImportSpecifierRule());
              	        }
                     		set(
                     			current, 
                     			"alias",
                      		lv_alias_3_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==PlusSign) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    {
                    {
                    lv_declaredDynamic_4_0=(Token)match(input,PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredDynamic_4_0, grammarAccess.getNamespaceImportSpecifierAccess().getDeclaredDynamicPlusSignKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getNamespaceImportSpecifierRule());
                      	        }
                             		setWithLastConsumed(current, "declaredDynamic", true, "+");
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleModuleSpecifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleModuleSpecifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModuleSpecifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModuleSpecifier=ruleModuleSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModuleSpecifier.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleModuleSpecifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;

         enterRule(); 
            
        try {
            {
            this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_STRING_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_STRING_0, grammarAccess.getModuleSpecifierAccess().getSTRINGTerminalRuleCall()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionDeclaration=ruleFunctionDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_AsyncNoTrailingLineBreak_2 = null;

        EObject this_FunctionImpl_3 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFunctionDeclarationAccess().getFunctionDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( ((LA50_0>=Protected && LA50_0<=Abstract)||LA50_0==External||(LA50_0>=Private && LA50_0<=Project)||LA50_0==Public||LA50_0==Static||LA50_0==Const) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getFunctionDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_0_0_2()); 
                  
            }
            pushFollow(FOLLOW_6);
            this_AsyncNoTrailingLineBreak_2=ruleAsyncNoTrailingLineBreak(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AsyncNoTrailingLineBreak_2;
                      afterParserOrEnumRuleCall();
                  
            }
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getFunctionImplParserRuleCall_0_0_3()); 
                  
            }
            pushFollow(FOLLOW_38);
            this_FunctionImpl_3=ruleFunctionImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionImpl_3;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }


            }
            int alt51=2;
            alt51 = dfa51.predict(input);
            switch (alt51) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getSemiParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_FunctionDeclaration() throws RecognitionException {
        EObject current = null;

        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_AsyncNoTrailingLineBreak_2 = null;

        EObject this_FunctionImpl_3 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFunctionDeclarationAccess().getFunctionDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( ((LA52_0>=Protected && LA52_0<=Abstract)||LA52_0==External||(LA52_0>=Private && LA52_0<=Project)||LA52_0==Public||LA52_0==Static||LA52_0==Const) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getFunctionDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_0_0_2()); 
                  
            }
            pushFollow(FOLLOW_39);
            this_AsyncNoTrailingLineBreak_2=ruleAsyncNoTrailingLineBreak(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AsyncNoTrailingLineBreak_2;
                      afterParserOrEnumRuleCall();
                  
            }
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getFunctionImplParserRuleCall_0_0_3()); 
                  
            }
            pushFollow(FOLLOW_38);
            this_FunctionImpl_3=norm3_FunctionImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionImpl_3;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }


            }
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==Semicolon) ) {
                int LA53_1 = input.LA(2);

                if ( (synpred20_InternalN4JSParser()) ) {
                    alt53=1;
                }
            }
            else if ( (LA53_0==EOF||LA53_0==RULE_ML_COMMENT||LA53_0==RULE_EOL) && (synpred20_InternalN4JSParser())) {
                alt53=1;
            }
            else if ( (LA53_0==RightCurlyBracket) ) {
                int LA53_3 = input.LA(2);

                if ( (synpred20_InternalN4JSParser()) ) {
                    alt53=1;
                }
            }
            switch (alt53) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getSemiParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAsyncNoTrailingLineBreak(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_declaredAsync_0_0=null;
        EObject this_NoLineTerminator_1 = null;


         enterRule(); 
            
        try {
            {
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==Async) ) {
                int LA54_1 = input.LA(2);

                if ( ((LA54_1>=Intersection && LA54_1<=With)||(LA54_1>=For && LA54_1<=Var)||(LA54_1>=As && LA54_1<=Of)||LA54_1==LeftSquareBracket||LA54_1==RULE_DOUBLE||LA54_1==RULE_HEX_INT||LA54_1==RULE_OCTAL_INT||LA54_1==RULE_SCIENTIFIC_INT||LA54_1==RULE_IDENTIFIER||LA54_1==RULE_STRING||LA54_1==RULE_NO_LINE_TERMINATOR||LA54_1==RULE_INT) ) {
                    alt54=1;
                }
            }
            switch (alt54) {
                case 1 :
                    {
                    {
                    {
                    lv_declaredAsync_0_0=(Token)match(input,Async,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredAsync_0_0, grammarAccess.getAsyncNoTrailingLineBreakAccess().getDeclaredAsyncAsyncKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAsyncNoTrailingLineBreakRule());
                      	        }
                             		setWithLastConsumed(current, "declaredAsync", true, "async");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAsyncNoTrailingLineBreakRule());
                      		}
                              newCompositeNode(grammarAccess.getAsyncNoTrailingLineBreakAccess().getNoLineTerminatorParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_NoLineTerminator_1=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFunctionImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token lv_generator_1_0=null;
        EObject this_FunctionHeader_2 = null;

        EObject this_FunctionBody_3 = null;

        EObject this_FunctionHeader_4 = null;

        EObject this_FunctionBody_5 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Function,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getFunctionImplAccess().getFunctionKeyword_0());
                  
            }
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==Asterisk) ) {
                alt55=1;
            }
            else if ( ((LA55_0>=Intersection && LA55_0<=Implements)||(LA55_0>=Promisify && LA55_0<=Abstract)||LA55_0==External||(LA55_0>=Private && LA55_0<=Project)||LA55_0==Public||LA55_0==Static||LA55_0==Target||(LA55_0>=Async && LA55_0<=Await)||LA55_0==Union||(LA55_0>=Yield && LA55_0<=This)||LA55_0==From||LA55_0==Type||(LA55_0>=Get && LA55_0<=Let)||(LA55_0>=Out && LA55_0<=Set)||LA55_0==As||LA55_0==Of||LA55_0==LeftParenthesis||LA55_0==LessThanSign||LA55_0==RULE_IDENTIFIER) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_1_0=(Token)match(input,Asterisk,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_1_0, grammarAccess.getFunctionImplAccess().getGeneratorAsteriskKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionImplRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionHeaderParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_13);
                    this_FunctionHeader_2=norm2_FunctionHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionHeader_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionBodyParserRuleCall_1_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionBody_3=norm1_FunctionBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionBody_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionHeaderParserRuleCall_1_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_13);
                    this_FunctionHeader_4=ruleFunctionHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionHeader_4;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionBodyParserRuleCall_1_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionBody_5=ruleFunctionBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionBody_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_FunctionImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token lv_generator_1_0=null;
        EObject this_FunctionHeader_2 = null;

        EObject this_FunctionBody_3 = null;

        EObject this_FunctionHeader_4 = null;

        EObject this_FunctionBody_5 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Function,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getFunctionImplAccess().getFunctionKeyword_0());
                  
            }
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==Asterisk) ) {
                alt56=1;
            }
            else if ( ((LA56_0>=Intersection && LA56_0<=Implements)||(LA56_0>=Promisify && LA56_0<=Abstract)||LA56_0==External||(LA56_0>=Private && LA56_0<=Project)||LA56_0==Public||LA56_0==Static||LA56_0==Target||(LA56_0>=Async && LA56_0<=Await)||LA56_0==Union||LA56_0==This||LA56_0==From||LA56_0==Type||(LA56_0>=Get && LA56_0<=Let)||(LA56_0>=Out && LA56_0<=Set)||LA56_0==As||LA56_0==Of||LA56_0==LeftParenthesis||LA56_0==LessThanSign||LA56_0==RULE_IDENTIFIER) ) {
                alt56=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_1_0=(Token)match(input,Asterisk,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_1_0, grammarAccess.getFunctionImplAccess().getGeneratorAsteriskKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionImplRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionHeaderParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_13);
                    this_FunctionHeader_2=norm3_FunctionHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionHeader_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionBodyParserRuleCall_1_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionBody_3=norm1_FunctionBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionBody_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionHeaderParserRuleCall_1_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_13);
                    this_FunctionHeader_4=norm1_FunctionHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionHeader_4;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionBodyParserRuleCall_1_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionBody_5=ruleFunctionBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionBody_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm6_FunctionImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token lv_generator_1_0=null;
        EObject this_FunctionHeader_2 = null;

        EObject this_FunctionBody_3 = null;

        EObject this_FunctionHeader_4 = null;

        EObject this_FunctionBody_5 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Function,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getFunctionImplAccess().getFunctionKeyword_0());
                  
            }
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==Asterisk) ) {
                alt57=1;
            }
            else if ( ((LA57_0>=Intersection && LA57_0<=Implements)||(LA57_0>=Promisify && LA57_0<=Abstract)||LA57_0==External||(LA57_0>=Private && LA57_0<=Project)||LA57_0==Public||LA57_0==Static||LA57_0==Target||(LA57_0>=Async && LA57_0<=Await)||LA57_0==Union||(LA57_0>=Yield && LA57_0<=This)||LA57_0==From||LA57_0==Type||(LA57_0>=Get && LA57_0<=Let)||(LA57_0>=Out && LA57_0<=Set)||LA57_0==As||LA57_0==Of||LA57_0==LeftParenthesis||LA57_0==LessThanSign||LA57_0==RULE_IDENTIFIER) ) {
                alt57=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }
            switch (alt57) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_1_0=(Token)match(input,Asterisk,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_1_0, grammarAccess.getFunctionImplAccess().getGeneratorAsteriskKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionImplRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionHeaderParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_13);
                    this_FunctionHeader_2=norm3_FunctionHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionHeader_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionBodyParserRuleCall_1_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionBody_3=norm3_FunctionBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionBody_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionHeaderParserRuleCall_1_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_13);
                    this_FunctionHeader_4=ruleFunctionHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionHeader_4;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionBodyParserRuleCall_1_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionBody_5=norm2_FunctionBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionBody_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFunctionHeader(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject this_TypeVariables_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_StrictFormalParameters_2 = null;

        EObject lv_returnTypeRef_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==LessThanSign) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionHeaderAccess().getTypeVariablesParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_41);
                    this_TypeVariables_0=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( ((LA59_0>=Intersection && LA59_0<=Implements)||(LA59_0>=Promisify && LA59_0<=Abstract)||LA59_0==External||(LA59_0>=Private && LA59_0<=Project)||LA59_0==Public||LA59_0==Static||LA59_0==Target||(LA59_0>=Async && LA59_0<=Await)||LA59_0==Union||(LA59_0>=Yield && LA59_0<=This)||LA59_0==From||LA59_0==Type||(LA59_0>=Get && LA59_0<=Let)||(LA59_0>=Out && LA59_0<=Set)||LA59_0==As||LA59_0==Of||LA59_0==RULE_IDENTIFIER) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getNameBindingIdentifierParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_41);
                    lv_name_1_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionHeaderRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionHeaderAccess().getStrictFormalParametersParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_43);
            this_StrictFormalParameters_2=ruleStrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_2;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==Colon) && (synpred21_InternalN4JSParser())) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    {
                    {
                    otherlv_3=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getFunctionHeaderAccess().getColonKeyword_3_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getReturnTypeRefTypeRefParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_returnTypeRef_4_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_FunctionHeader(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject this_TypeVariables_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_StrictFormalParameters_2 = null;

        EObject lv_returnTypeRef_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==LessThanSign) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionHeaderAccess().getTypeVariablesParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_41);
                    this_TypeVariables_0=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( ((LA62_0>=Intersection && LA62_0<=Implements)||(LA62_0>=Promisify && LA62_0<=Abstract)||LA62_0==External||(LA62_0>=Private && LA62_0<=Project)||LA62_0==Public||LA62_0==Static||LA62_0==Target||(LA62_0>=Async && LA62_0<=Await)||LA62_0==Union||LA62_0==This||LA62_0==From||LA62_0==Type||(LA62_0>=Get && LA62_0<=Let)||(LA62_0>=Out && LA62_0<=Set)||LA62_0==As||LA62_0==Of||LA62_0==RULE_IDENTIFIER) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getNameBindingIdentifierParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_41);
                    lv_name_1_0=norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionHeaderRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionHeaderAccess().getStrictFormalParametersParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_43);
            this_StrictFormalParameters_2=ruleStrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_2;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==Colon) && (synpred22_InternalN4JSParser())) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    {
                    {
                    otherlv_3=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getFunctionHeaderAccess().getColonKeyword_3_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getReturnTypeRefTypeRefParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_returnTypeRef_4_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_FunctionHeader(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject this_TypeVariables_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_StrictFormalParameters_2 = null;

        EObject lv_returnTypeRef_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==LessThanSign) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionHeaderAccess().getTypeVariablesParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_42);
                    this_TypeVariables_0=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( ((LA65_0>=Intersection && LA65_0<=Implements)||(LA65_0>=Promisify && LA65_0<=Abstract)||LA65_0==External||(LA65_0>=Private && LA65_0<=Project)||LA65_0==Public||LA65_0==Static||LA65_0==Target||(LA65_0>=Async && LA65_0<=Await)||LA65_0==Union||(LA65_0>=Yield && LA65_0<=This)||LA65_0==From||LA65_0==Type||(LA65_0>=Get && LA65_0<=Let)||(LA65_0>=Out && LA65_0<=Set)||LA65_0==As||LA65_0==Of||LA65_0==RULE_IDENTIFIER) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getNameBindingIdentifierParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_42);
                    lv_name_1_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionHeaderRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionHeaderAccess().getStrictFormalParametersParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_43);
            this_StrictFormalParameters_2=norm1_StrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_2;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==Colon) && (synpred23_InternalN4JSParser())) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    {
                    {
                    otherlv_3=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getFunctionHeaderAccess().getColonKeyword_3_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getReturnTypeRefTypeRefParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_returnTypeRef_4_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_FunctionHeader(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject this_TypeVariables_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_StrictFormalParameters_2 = null;

        EObject lv_returnTypeRef_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==LessThanSign) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionHeaderAccess().getTypeVariablesParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_42);
                    this_TypeVariables_0=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( ((LA68_0>=Intersection && LA68_0<=Implements)||(LA68_0>=Promisify && LA68_0<=Abstract)||LA68_0==External||(LA68_0>=Private && LA68_0<=Project)||LA68_0==Public||LA68_0==Static||LA68_0==Target||(LA68_0>=Async && LA68_0<=Await)||LA68_0==Union||LA68_0==This||LA68_0==From||LA68_0==Type||(LA68_0>=Get && LA68_0<=Let)||(LA68_0>=Out && LA68_0<=Set)||LA68_0==As||LA68_0==Of||LA68_0==RULE_IDENTIFIER) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getNameBindingIdentifierParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_42);
                    lv_name_1_0=norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionHeaderRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionHeaderAccess().getStrictFormalParametersParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_43);
            this_StrictFormalParameters_2=norm1_StrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_2;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==Colon) && (synpred24_InternalN4JSParser())) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    {
                    {
                    otherlv_3=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getFunctionHeaderAccess().getColonKeyword_3_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getReturnTypeRefTypeRefParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_returnTypeRef_4_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFunctionBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_body_0_0 = null;


         enterRule(); 
            
        try {
            {
            int alt70=2;
            alt70 = dfa70.predict(input);
            switch (alt70) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionBodyAccess().getBodyBlockParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_0_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_0_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_FunctionBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_body_0_0 = null;


         enterRule(); 
            
        try {
            {
            int alt71=2;
            alt71 = dfa71.predict(input);
            switch (alt71) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionBodyAccess().getBodyBlockParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_0_0=norm1_Block();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_0_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_FunctionBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_body_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFunctionBodyAccess().getBodyBlockParserRuleCall_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_0_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_0_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_FunctionBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_body_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFunctionBodyAccess().getBodyBlockParserRuleCall_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_0_0=norm1_Block();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_0_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportedFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportedFunctionDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportedFunctionDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportedFunctionDeclaration=ruleExportedFunctionDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportedFunctionDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportedFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_FunctionDeclaration_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExportedFunctionDeclarationAccess().getFunctionDeclarationParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FunctionDeclaration_0=ruleFunctionDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionDeclaration_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotatedFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedFunctionDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedFunctionDeclaration=ruleAnnotatedFunctionDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedFunctionDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotatedFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject lv_annotationList_0_0 = null;

        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_AsyncNoTrailingLineBreak_2 = null;

        EObject this_FunctionImpl_3 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getAnnotationListAnnotationListParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_annotationList_0_0=ruleAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAnnotatedFunctionDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"annotationList",
                      		lv_annotationList_0_0, 
                      		"eu.numberfour.n4js.N4JS.AnnotationList");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( ((LA72_0>=Protected && LA72_0<=Abstract)||LA72_0==External||(LA72_0>=Private && LA72_0<=Project)||LA72_0==Public||LA72_0==Static||LA72_0==Const) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedFunctionDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAnnotatedFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_6);
            this_AsyncNoTrailingLineBreak_2=ruleAsyncNoTrailingLineBreak(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AsyncNoTrailingLineBreak_2;
                      afterParserOrEnumRuleCall();
                  
            }
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAnnotatedFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getFunctionImplParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FunctionImpl_3=ruleFunctionImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionImpl_3;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AnnotatedFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject lv_annotationList_0_0 = null;

        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_AsyncNoTrailingLineBreak_2 = null;

        EObject this_FunctionImpl_3 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getAnnotationListAnnotationListParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_annotationList_0_0=ruleAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAnnotatedFunctionDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"annotationList",
                      		lv_annotationList_0_0, 
                      		"eu.numberfour.n4js.N4JS.AnnotationList");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( ((LA73_0>=Protected && LA73_0<=Abstract)||LA73_0==External||(LA73_0>=Private && LA73_0<=Project)||LA73_0==Public||LA73_0==Static||LA73_0==Const) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedFunctionDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAnnotatedFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_39);
            this_AsyncNoTrailingLineBreak_2=ruleAsyncNoTrailingLineBreak(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AsyncNoTrailingLineBreak_2;
                      afterParserOrEnumRuleCall();
                  
            }
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAnnotatedFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getFunctionImplParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FunctionImpl_3=norm3_FunctionImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionImpl_3;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleFunctionExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionExpression=ruleFunctionExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFunctionExpression() throws RecognitionException {
        EObject current = null;

        EObject this_FunctionImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFunctionExpressionAccess().getFunctionExpressionAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionExpressionAccess().getFunctionImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FunctionImpl_1=norm6_FunctionImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAsyncFunctionExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAsyncFunctionExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAsyncFunctionExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAsyncFunctionExpression=ruleAsyncFunctionExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAsyncFunctionExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAsyncFunctionExpression() throws RecognitionException {
        EObject current = null;

        Token lv_declaredAsync_0_0=null;
        Token otherlv_2=null;
        EObject this_NoLineTerminator_1 = null;

        EObject this_FunctionHeader_3 = null;

        EObject this_FunctionBody_4 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            {
            lv_declaredAsync_0_0=(Token)match(input,Async,FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_declaredAsync_0_0, grammarAccess.getAsyncFunctionExpressionAccess().getDeclaredAsyncAsyncKeyword_0_0_0_0());
                  
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getAsyncFunctionExpressionRule());
              	        }
                     		setWithLastConsumed(current, "declaredAsync", true, "async");
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAsyncFunctionExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getAsyncFunctionExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_1()); 
                  
            }
            pushFollow(FOLLOW_46);
            this_NoLineTerminator_1=ruleNoLineTerminator(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_NoLineTerminator_1;
                      afterParserOrEnumRuleCall();
                  
            }
            otherlv_2=(Token)match(input,Function,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getAsyncFunctionExpressionAccess().getFunctionKeyword_0_0_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAsyncFunctionExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getAsyncFunctionExpressionAccess().getFunctionHeaderParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_13);
            this_FunctionHeader_3=ruleFunctionHeader(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionHeader_3;
                      afterParserOrEnumRuleCall();
                  
            }
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAsyncFunctionExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getAsyncFunctionExpressionAccess().getFunctionBodyParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FunctionBody_4=norm2_FunctionBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionBody_4;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrowExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrowExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrowExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrowExpression=ruleArrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrowExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_declaredAsync_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token lv_generator_16_0=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_26=null;
        Token lv_hasBracesAroundBody_27_0=null;
        Token otherlv_29=null;
        EObject lv_fpars_1_0 = null;

        EObject lv_fpars_3_0 = null;

        EObject lv_returnTypeRef_6_0 = null;

        EObject this_NoLineTerminator_8 = null;

        EObject lv_fpars_10_0 = null;

        EObject lv_fpars_12_0 = null;

        EObject lv_returnTypeRef_15_0 = null;

        EObject this_NoLineTerminator_17 = null;

        EObject lv_fpars_19_0 = null;

        EObject lv_fpars_21_0 = null;

        EObject lv_returnTypeRef_24_0 = null;

        EObject lv_fpars_25_0 = null;

        EObject lv_body_28_0 = null;

        EObject lv_body_30_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            int alt83=4;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==LeftParenthesis) && (synpred37_InternalN4JSParser())) {
                alt83=1;
            }
            else if ( (LA83_0==Async) ) {
                int LA83_2 = input.LA(2);

                if ( (LA83_2==EqualsSignGreaterThanSign) ) {
                    alt83=4;
                }
                else if ( (LA83_2==RULE_NO_LINE_TERMINATOR) && (synpred38_InternalN4JSParser())) {
                    alt83=2;
                }
                else if ( (LA83_2==LeftParenthesis) && (synpred38_InternalN4JSParser())) {
                    alt83=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 83, 2, input);

                    throw nvae;
                }
            }
            else if ( (LA83_0==Asterisk) && (synpred39_InternalN4JSParser())) {
                alt83=3;
            }
            else if ( ((LA83_0>=Intersection && LA83_0<=Implements)||(LA83_0>=Promisify && LA83_0<=Abstract)||LA83_0==External||(LA83_0>=Private && LA83_0<=Project)||LA83_0==Public||LA83_0==Static||LA83_0==Target||LA83_0==Await||LA83_0==Union||(LA83_0>=Yield && LA83_0<=This)||LA83_0==From||LA83_0==Type||(LA83_0>=Get && LA83_0<=Let)||(LA83_0>=Out && LA83_0<=Set)||LA83_0==As||LA83_0==Of||LA83_0==RULE_IDENTIFIER) ) {
                alt83=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 83, 0, input);

                throw nvae;
            }
            switch (alt83) {
                case 1 :
                    {
                    {
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_0_0());
                          
                    }

                    }
                    int alt75=2;
                    int LA75_0 = input.LA(1);

                    if ( ((LA75_0>=Intersection && LA75_0<=Implements)||(LA75_0>=Promisify && LA75_0<=Abstract)||LA75_0==External||(LA75_0>=Private && LA75_0<=Project)||LA75_0==Public||LA75_0==Static||LA75_0==Target||(LA75_0>=Async && LA75_0<=Await)||LA75_0==Union||(LA75_0>=Yield && LA75_0<=This)||LA75_0==From||LA75_0==This_1||(LA75_0>=Type && LA75_0<=Void)||LA75_0==FullStopFullStopFullStop||(LA75_0>=Get && LA75_0<=Let)||(LA75_0>=Out && LA75_0<=Set)||LA75_0==As||LA75_0==Of||(LA75_0>=QuestionMark && LA75_0<=LeftSquareBracket)||LA75_0==LeftCurlyBracket||LA75_0==Tilde||LA75_0==RULE_IDENTIFIER) ) {
                        alt75=1;
                    }
                    switch (alt75) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_48);
                            lv_fpars_1_0=ruleFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_1_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop74:
                            do {
                                int alt74=2;
                                int LA74_0 = input.LA(1);

                                if ( (LA74_0==Comma) ) {
                                    alt74=1;
                                }


                                switch (alt74) {
                            	case 1 :
                            	    {
                            	    otherlv_2=(Token)match(input,Comma,FOLLOW_49); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_2, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_0_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_48);
                            	    lv_fpars_3_0=ruleFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_3_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop74;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_0_2());
                          
                    }
                    int alt76=2;
                    int LA76_0 = input.LA(1);

                    if ( (LA76_0==Colon) ) {
                        alt76=1;
                    }
                    switch (alt76) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_0_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_0_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_51);
                            lv_returnTypeRef_6_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_6_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    {
                    lv_declaredAsync_7_0=(Token)match(input,Async,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredAsync_7_0, grammarAccess.getArrowExpressionAccess().getDeclaredAsyncAsyncKeyword_0_0_0_1_0_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "declaredAsync", true, "async");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArrowExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getArrowExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_0_1_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_53);
                    this_NoLineTerminator_8=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_8;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_9=(Token)match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_1_0_0_2());
                          
                    }

                    }


                    }
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( ((LA78_0>=Intersection && LA78_0<=Implements)||(LA78_0>=Promisify && LA78_0<=Abstract)||LA78_0==External||(LA78_0>=Private && LA78_0<=Project)||LA78_0==Public||LA78_0==Static||LA78_0==Target||(LA78_0>=Async && LA78_0<=Await)||LA78_0==Union||(LA78_0>=Yield && LA78_0<=This)||LA78_0==From||LA78_0==This_1||(LA78_0>=Type && LA78_0<=Void)||LA78_0==FullStopFullStopFullStop||(LA78_0>=Get && LA78_0<=Let)||(LA78_0>=Out && LA78_0<=Set)||LA78_0==As||LA78_0==Of||(LA78_0>=QuestionMark && LA78_0<=LeftSquareBracket)||LA78_0==LeftCurlyBracket||LA78_0==Tilde||LA78_0==RULE_IDENTIFIER) ) {
                        alt78=1;
                    }
                    switch (alt78) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_48);
                            lv_fpars_10_0=ruleFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_10_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop77:
                            do {
                                int alt77=2;
                                int LA77_0 = input.LA(1);

                                if ( (LA77_0==Comma) ) {
                                    alt77=1;
                                }


                                switch (alt77) {
                            	case 1 :
                            	    {
                            	    otherlv_11=(Token)match(input,Comma,FOLLOW_49); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_11, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_1_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_48);
                            	    lv_fpars_12_0=ruleFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_12_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop77;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,RightParenthesis,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_1_2());
                          
                    }
                    int alt79=2;
                    int LA79_0 = input.LA(1);

                    if ( (LA79_0==Colon) ) {
                        alt79=1;
                    }
                    switch (alt79) {
                        case 1 :
                            {
                            otherlv_14=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_1_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_1_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_51);
                            lv_returnTypeRef_15_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_15_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    {
                    {
                    {
                    lv_generator_16_0=(Token)match(input,Asterisk,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_16_0, grammarAccess.getArrowExpressionAccess().getGeneratorAsteriskKeyword_0_0_0_2_0_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArrowExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getArrowExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_0_2_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_53);
                    this_NoLineTerminator_17=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_17;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_18=(Token)match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_18, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_2_0_0_2());
                          
                    }

                    }


                    }
                    int alt81=2;
                    int LA81_0 = input.LA(1);

                    if ( ((LA81_0>=Intersection && LA81_0<=Implements)||(LA81_0>=Promisify && LA81_0<=Abstract)||LA81_0==External||(LA81_0>=Private && LA81_0<=Project)||LA81_0==Public||LA81_0==Static||LA81_0==Target||(LA81_0>=Async && LA81_0<=Await)||LA81_0==Union||(LA81_0>=Yield && LA81_0<=This)||LA81_0==From||LA81_0==This_1||(LA81_0>=Type && LA81_0<=Void)||LA81_0==FullStopFullStopFullStop||(LA81_0>=Get && LA81_0<=Let)||(LA81_0>=Out && LA81_0<=Set)||LA81_0==As||LA81_0==Of||(LA81_0>=QuestionMark && LA81_0<=LeftSquareBracket)||LA81_0==LeftCurlyBracket||LA81_0==Tilde||LA81_0==RULE_IDENTIFIER) ) {
                        alt81=1;
                    }
                    switch (alt81) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_2_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_48);
                            lv_fpars_19_0=ruleFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_19_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop80:
                            do {
                                int alt80=2;
                                int LA80_0 = input.LA(1);

                                if ( (LA80_0==Comma) ) {
                                    alt80=1;
                                }


                                switch (alt80) {
                            	case 1 :
                            	    {
                            	    otherlv_20=(Token)match(input,Comma,FOLLOW_49); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_20, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_2_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_2_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_48);
                            	    lv_fpars_21_0=ruleFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_21_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop80;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_22, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_2_2());
                          
                    }
                    int alt82=2;
                    int LA82_0 = input.LA(1);

                    if ( (LA82_0==Colon) ) {
                        alt82=1;
                    }
                    switch (alt82) {
                        case 1 :
                            {
                            otherlv_23=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_23, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_2_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_2_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_51);
                            lv_returnTypeRef_24_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_24_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsBindingIdentifierAsFormalParameterParserRuleCall_0_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_51);
                    lv_fpars_25_0=ruleBindingIdentifierAsFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_25_0, 
                              		"eu.numberfour.n4js.N4JS.BindingIdentifierAsFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_26=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_26, grammarAccess.getArrowExpressionAccess().getEqualsSignGreaterThanSignKeyword_0_0_1());
                  
            }

            }


            }
            int alt84=2;
            alt84 = dfa84.predict(input);
            switch (alt84) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_hasBracesAroundBody_27_0=(Token)match(input,LeftCurlyBracket,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_hasBracesAroundBody_27_0, grammarAccess.getArrowExpressionAccess().getHasBracesAroundBodyLeftCurlyBracketKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "hasBracesAroundBody", true, "{");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyBlockMinusBracesParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_25);
                    lv_body_28_0=norm1_BlockMinusBraces();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_28_0, 
                              		"eu.numberfour.n4js.N4JS.BlockMinusBraces");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_29=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_29, grammarAccess.getArrowExpressionAccess().getRightCurlyBracketKeyword_1_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyExpressionDisguisedAsBlockParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_30_0=norm2_ExpressionDisguisedAsBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_30_0, 
                              		"eu.numberfour.n4js.N4JS.ExpressionDisguisedAsBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ArrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_declaredAsync_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token lv_generator_16_0=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_26=null;
        Token lv_hasBracesAroundBody_27_0=null;
        Token otherlv_29=null;
        EObject lv_fpars_1_0 = null;

        EObject lv_fpars_3_0 = null;

        EObject lv_returnTypeRef_6_0 = null;

        EObject this_NoLineTerminator_8 = null;

        EObject lv_fpars_10_0 = null;

        EObject lv_fpars_12_0 = null;

        EObject lv_returnTypeRef_15_0 = null;

        EObject this_NoLineTerminator_17 = null;

        EObject lv_fpars_19_0 = null;

        EObject lv_fpars_21_0 = null;

        EObject lv_returnTypeRef_24_0 = null;

        EObject lv_fpars_25_0 = null;

        EObject lv_body_28_0 = null;

        EObject lv_body_30_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            int alt94=4;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==LeftParenthesis) && (synpred45_InternalN4JSParser())) {
                alt94=1;
            }
            else if ( (LA94_0==Async) ) {
                int LA94_2 = input.LA(2);

                if ( (LA94_2==RULE_NO_LINE_TERMINATOR) && (synpred46_InternalN4JSParser())) {
                    alt94=2;
                }
                else if ( (LA94_2==LeftParenthesis) && (synpred46_InternalN4JSParser())) {
                    alt94=2;
                }
                else if ( (LA94_2==EqualsSignGreaterThanSign) ) {
                    alt94=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 2, input);

                    throw nvae;
                }
            }
            else if ( (LA94_0==Asterisk) && (synpred47_InternalN4JSParser())) {
                alt94=3;
            }
            else if ( ((LA94_0>=Intersection && LA94_0<=Implements)||(LA94_0>=Promisify && LA94_0<=Abstract)||LA94_0==External||(LA94_0>=Private && LA94_0<=Project)||LA94_0==Public||LA94_0==Static||LA94_0==Target||LA94_0==Await||LA94_0==Union||(LA94_0>=Yield && LA94_0<=This)||LA94_0==From||LA94_0==Type||(LA94_0>=Get && LA94_0<=Let)||(LA94_0>=Out && LA94_0<=Set)||LA94_0==As||LA94_0==Of||LA94_0==RULE_IDENTIFIER) ) {
                alt94=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 94, 0, input);

                throw nvae;
            }
            switch (alt94) {
                case 1 :
                    {
                    {
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_0_0());
                          
                    }

                    }
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( ((LA86_0>=Intersection && LA86_0<=Implements)||(LA86_0>=Promisify && LA86_0<=Abstract)||LA86_0==External||(LA86_0>=Private && LA86_0<=Project)||LA86_0==Public||LA86_0==Static||LA86_0==Target||(LA86_0>=Async && LA86_0<=Await)||LA86_0==Union||(LA86_0>=Yield && LA86_0<=This)||LA86_0==From||LA86_0==This_1||(LA86_0>=Type && LA86_0<=Void)||LA86_0==FullStopFullStopFullStop||(LA86_0>=Get && LA86_0<=Let)||(LA86_0>=Out && LA86_0<=Set)||LA86_0==As||LA86_0==Of||(LA86_0>=QuestionMark && LA86_0<=LeftSquareBracket)||LA86_0==LeftCurlyBracket||LA86_0==Tilde||LA86_0==RULE_IDENTIFIER) ) {
                        alt86=1;
                    }
                    switch (alt86) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_48);
                            lv_fpars_1_0=ruleFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_1_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop85:
                            do {
                                int alt85=2;
                                int LA85_0 = input.LA(1);

                                if ( (LA85_0==Comma) ) {
                                    alt85=1;
                                }


                                switch (alt85) {
                            	case 1 :
                            	    {
                            	    otherlv_2=(Token)match(input,Comma,FOLLOW_49); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_2, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_0_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_48);
                            	    lv_fpars_3_0=ruleFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_3_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop85;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_0_2());
                          
                    }
                    int alt87=2;
                    int LA87_0 = input.LA(1);

                    if ( (LA87_0==Colon) ) {
                        alt87=1;
                    }
                    switch (alt87) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_0_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_0_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_51);
                            lv_returnTypeRef_6_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_6_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    {
                    lv_declaredAsync_7_0=(Token)match(input,Async,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredAsync_7_0, grammarAccess.getArrowExpressionAccess().getDeclaredAsyncAsyncKeyword_0_0_0_1_0_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "declaredAsync", true, "async");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArrowExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getArrowExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_0_1_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_53);
                    this_NoLineTerminator_8=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_8;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_9=(Token)match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_1_0_0_2());
                          
                    }

                    }


                    }
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( ((LA89_0>=Intersection && LA89_0<=Implements)||(LA89_0>=Promisify && LA89_0<=Abstract)||LA89_0==External||(LA89_0>=Private && LA89_0<=Project)||LA89_0==Public||LA89_0==Static||LA89_0==Target||(LA89_0>=Async && LA89_0<=Await)||LA89_0==Union||(LA89_0>=Yield && LA89_0<=This)||LA89_0==From||LA89_0==This_1||(LA89_0>=Type && LA89_0<=Void)||LA89_0==FullStopFullStopFullStop||(LA89_0>=Get && LA89_0<=Let)||(LA89_0>=Out && LA89_0<=Set)||LA89_0==As||LA89_0==Of||(LA89_0>=QuestionMark && LA89_0<=LeftSquareBracket)||LA89_0==LeftCurlyBracket||LA89_0==Tilde||LA89_0==RULE_IDENTIFIER) ) {
                        alt89=1;
                    }
                    switch (alt89) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_48);
                            lv_fpars_10_0=ruleFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_10_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop88:
                            do {
                                int alt88=2;
                                int LA88_0 = input.LA(1);

                                if ( (LA88_0==Comma) ) {
                                    alt88=1;
                                }


                                switch (alt88) {
                            	case 1 :
                            	    {
                            	    otherlv_11=(Token)match(input,Comma,FOLLOW_49); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_11, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_1_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_48);
                            	    lv_fpars_12_0=ruleFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_12_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop88;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,RightParenthesis,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_1_2());
                          
                    }
                    int alt90=2;
                    int LA90_0 = input.LA(1);

                    if ( (LA90_0==Colon) ) {
                        alt90=1;
                    }
                    switch (alt90) {
                        case 1 :
                            {
                            otherlv_14=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_1_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_1_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_51);
                            lv_returnTypeRef_15_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_15_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    {
                    {
                    {
                    lv_generator_16_0=(Token)match(input,Asterisk,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_16_0, grammarAccess.getArrowExpressionAccess().getGeneratorAsteriskKeyword_0_0_0_2_0_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArrowExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getArrowExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_0_2_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_53);
                    this_NoLineTerminator_17=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_17;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_18=(Token)match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_18, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_2_0_0_2());
                          
                    }

                    }


                    }
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( ((LA92_0>=Intersection && LA92_0<=Implements)||(LA92_0>=Promisify && LA92_0<=Abstract)||LA92_0==External||(LA92_0>=Private && LA92_0<=Project)||LA92_0==Public||LA92_0==Static||LA92_0==Target||(LA92_0>=Async && LA92_0<=Await)||LA92_0==Union||(LA92_0>=Yield && LA92_0<=This)||LA92_0==From||LA92_0==This_1||(LA92_0>=Type && LA92_0<=Void)||LA92_0==FullStopFullStopFullStop||(LA92_0>=Get && LA92_0<=Let)||(LA92_0>=Out && LA92_0<=Set)||LA92_0==As||LA92_0==Of||(LA92_0>=QuestionMark && LA92_0<=LeftSquareBracket)||LA92_0==LeftCurlyBracket||LA92_0==Tilde||LA92_0==RULE_IDENTIFIER) ) {
                        alt92=1;
                    }
                    switch (alt92) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_2_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_48);
                            lv_fpars_19_0=ruleFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_19_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop91:
                            do {
                                int alt91=2;
                                int LA91_0 = input.LA(1);

                                if ( (LA91_0==Comma) ) {
                                    alt91=1;
                                }


                                switch (alt91) {
                            	case 1 :
                            	    {
                            	    otherlv_20=(Token)match(input,Comma,FOLLOW_49); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_20, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_2_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_2_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_48);
                            	    lv_fpars_21_0=ruleFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_21_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop91;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_22, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_2_2());
                          
                    }
                    int alt93=2;
                    int LA93_0 = input.LA(1);

                    if ( (LA93_0==Colon) ) {
                        alt93=1;
                    }
                    switch (alt93) {
                        case 1 :
                            {
                            otherlv_23=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_23, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_2_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_2_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_51);
                            lv_returnTypeRef_24_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_24_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsBindingIdentifierAsFormalParameterParserRuleCall_0_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_51);
                    lv_fpars_25_0=ruleBindingIdentifierAsFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_25_0, 
                              		"eu.numberfour.n4js.N4JS.BindingIdentifierAsFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_26=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_26, grammarAccess.getArrowExpressionAccess().getEqualsSignGreaterThanSignKeyword_0_0_1());
                  
            }

            }


            }
            int alt95=2;
            alt95 = dfa95.predict(input);
            switch (alt95) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_hasBracesAroundBody_27_0=(Token)match(input,LeftCurlyBracket,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_hasBracesAroundBody_27_0, grammarAccess.getArrowExpressionAccess().getHasBracesAroundBodyLeftCurlyBracketKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "hasBracesAroundBody", true, "{");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyBlockMinusBracesParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_25);
                    lv_body_28_0=norm1_BlockMinusBraces();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_28_0, 
                              		"eu.numberfour.n4js.N4JS.BlockMinusBraces");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_29=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_29, grammarAccess.getArrowExpressionAccess().getRightCurlyBracketKeyword_1_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyExpressionDisguisedAsBlockParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_30_0=norm3_ExpressionDisguisedAsBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_30_0, 
                              		"eu.numberfour.n4js.N4JS.ExpressionDisguisedAsBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_ArrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_declaredAsync_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token lv_generator_16_0=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_26=null;
        Token lv_hasBracesAroundBody_27_0=null;
        Token otherlv_29=null;
        EObject lv_fpars_1_0 = null;

        EObject lv_fpars_3_0 = null;

        EObject lv_returnTypeRef_6_0 = null;

        EObject this_NoLineTerminator_8 = null;

        EObject lv_fpars_10_0 = null;

        EObject lv_fpars_12_0 = null;

        EObject lv_returnTypeRef_15_0 = null;

        EObject this_NoLineTerminator_17 = null;

        EObject lv_fpars_19_0 = null;

        EObject lv_fpars_21_0 = null;

        EObject lv_returnTypeRef_24_0 = null;

        EObject lv_fpars_25_0 = null;

        EObject lv_body_28_0 = null;

        EObject lv_body_30_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            int alt105=4;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==LeftParenthesis) && (synpred53_InternalN4JSParser())) {
                alt105=1;
            }
            else if ( (LA105_0==Async) ) {
                int LA105_2 = input.LA(2);

                if ( (LA105_2==EqualsSignGreaterThanSign) ) {
                    alt105=4;
                }
                else if ( (LA105_2==RULE_NO_LINE_TERMINATOR) && (synpred54_InternalN4JSParser())) {
                    alt105=2;
                }
                else if ( (LA105_2==LeftParenthesis) && (synpred54_InternalN4JSParser())) {
                    alt105=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 105, 2, input);

                    throw nvae;
                }
            }
            else if ( (LA105_0==Asterisk) && (synpred55_InternalN4JSParser())) {
                alt105=3;
            }
            else if ( ((LA105_0>=Intersection && LA105_0<=Implements)||(LA105_0>=Promisify && LA105_0<=Abstract)||LA105_0==External||(LA105_0>=Private && LA105_0<=Project)||LA105_0==Public||LA105_0==Static||LA105_0==Target||LA105_0==Await||LA105_0==Union||LA105_0==This||LA105_0==From||LA105_0==Type||(LA105_0>=Get && LA105_0<=Let)||(LA105_0>=Out && LA105_0<=Set)||LA105_0==As||LA105_0==Of||LA105_0==RULE_IDENTIFIER) ) {
                alt105=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }
            switch (alt105) {
                case 1 :
                    {
                    {
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_0_0());
                          
                    }

                    }
                    int alt97=2;
                    int LA97_0 = input.LA(1);

                    if ( ((LA97_0>=Intersection && LA97_0<=Implements)||(LA97_0>=Promisify && LA97_0<=Abstract)||LA97_0==External||(LA97_0>=Private && LA97_0<=Project)||LA97_0==Public||LA97_0==Static||LA97_0==Target||(LA97_0>=Async && LA97_0<=Await)||LA97_0==Union||LA97_0==This||LA97_0==From||LA97_0==This_1||(LA97_0>=Type && LA97_0<=Void)||LA97_0==FullStopFullStopFullStop||(LA97_0>=Get && LA97_0<=Let)||(LA97_0>=Out && LA97_0<=Set)||LA97_0==As||LA97_0==Of||(LA97_0>=QuestionMark && LA97_0<=LeftSquareBracket)||LA97_0==LeftCurlyBracket||LA97_0==Tilde||LA97_0==RULE_IDENTIFIER) ) {
                        alt97=1;
                    }
                    switch (alt97) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_48);
                            lv_fpars_1_0=norm1_FormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_1_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop96:
                            do {
                                int alt96=2;
                                int LA96_0 = input.LA(1);

                                if ( (LA96_0==Comma) ) {
                                    alt96=1;
                                }


                                switch (alt96) {
                            	case 1 :
                            	    {
                            	    otherlv_2=(Token)match(input,Comma,FOLLOW_49); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_2, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_0_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_48);
                            	    lv_fpars_3_0=norm1_FormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_3_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop96;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_0_2());
                          
                    }
                    int alt98=2;
                    int LA98_0 = input.LA(1);

                    if ( (LA98_0==Colon) ) {
                        alt98=1;
                    }
                    switch (alt98) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_0_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_0_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_51);
                            lv_returnTypeRef_6_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_6_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    {
                    lv_declaredAsync_7_0=(Token)match(input,Async,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredAsync_7_0, grammarAccess.getArrowExpressionAccess().getDeclaredAsyncAsyncKeyword_0_0_0_1_0_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "declaredAsync", true, "async");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArrowExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getArrowExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_0_1_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_53);
                    this_NoLineTerminator_8=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_8;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_9=(Token)match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_1_0_0_2());
                          
                    }

                    }


                    }
                    int alt100=2;
                    int LA100_0 = input.LA(1);

                    if ( ((LA100_0>=Intersection && LA100_0<=Implements)||(LA100_0>=Promisify && LA100_0<=Abstract)||LA100_0==External||(LA100_0>=Private && LA100_0<=Project)||LA100_0==Public||LA100_0==Static||LA100_0==Target||(LA100_0>=Async && LA100_0<=Await)||LA100_0==Union||LA100_0==This||LA100_0==From||LA100_0==This_1||(LA100_0>=Type && LA100_0<=Void)||LA100_0==FullStopFullStopFullStop||(LA100_0>=Get && LA100_0<=Let)||(LA100_0>=Out && LA100_0<=Set)||LA100_0==As||LA100_0==Of||(LA100_0>=QuestionMark && LA100_0<=LeftSquareBracket)||LA100_0==LeftCurlyBracket||LA100_0==Tilde||LA100_0==RULE_IDENTIFIER) ) {
                        alt100=1;
                    }
                    switch (alt100) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_48);
                            lv_fpars_10_0=norm1_FormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_10_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop99:
                            do {
                                int alt99=2;
                                int LA99_0 = input.LA(1);

                                if ( (LA99_0==Comma) ) {
                                    alt99=1;
                                }


                                switch (alt99) {
                            	case 1 :
                            	    {
                            	    otherlv_11=(Token)match(input,Comma,FOLLOW_49); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_11, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_1_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_48);
                            	    lv_fpars_12_0=norm1_FormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_12_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop99;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,RightParenthesis,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_1_2());
                          
                    }
                    int alt101=2;
                    int LA101_0 = input.LA(1);

                    if ( (LA101_0==Colon) ) {
                        alt101=1;
                    }
                    switch (alt101) {
                        case 1 :
                            {
                            otherlv_14=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_1_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_1_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_51);
                            lv_returnTypeRef_15_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_15_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    {
                    {
                    {
                    lv_generator_16_0=(Token)match(input,Asterisk,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_16_0, grammarAccess.getArrowExpressionAccess().getGeneratorAsteriskKeyword_0_0_0_2_0_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArrowExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getArrowExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_0_2_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_53);
                    this_NoLineTerminator_17=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_17;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_18=(Token)match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_18, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_2_0_0_2());
                          
                    }

                    }


                    }
                    int alt103=2;
                    int LA103_0 = input.LA(1);

                    if ( ((LA103_0>=Intersection && LA103_0<=Implements)||(LA103_0>=Promisify && LA103_0<=Abstract)||LA103_0==External||(LA103_0>=Private && LA103_0<=Project)||LA103_0==Public||LA103_0==Static||LA103_0==Target||(LA103_0>=Async && LA103_0<=Await)||LA103_0==Union||LA103_0==This||LA103_0==From||LA103_0==This_1||(LA103_0>=Type && LA103_0<=Void)||LA103_0==FullStopFullStopFullStop||(LA103_0>=Get && LA103_0<=Let)||(LA103_0>=Out && LA103_0<=Set)||LA103_0==As||LA103_0==Of||(LA103_0>=QuestionMark && LA103_0<=LeftSquareBracket)||LA103_0==LeftCurlyBracket||LA103_0==Tilde||LA103_0==RULE_IDENTIFIER) ) {
                        alt103=1;
                    }
                    switch (alt103) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_2_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_48);
                            lv_fpars_19_0=norm1_FormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_19_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop102:
                            do {
                                int alt102=2;
                                int LA102_0 = input.LA(1);

                                if ( (LA102_0==Comma) ) {
                                    alt102=1;
                                }


                                switch (alt102) {
                            	case 1 :
                            	    {
                            	    otherlv_20=(Token)match(input,Comma,FOLLOW_49); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_20, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_2_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_2_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_48);
                            	    lv_fpars_21_0=norm1_FormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_21_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop102;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_22, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_2_2());
                          
                    }
                    int alt104=2;
                    int LA104_0 = input.LA(1);

                    if ( (LA104_0==Colon) ) {
                        alt104=1;
                    }
                    switch (alt104) {
                        case 1 :
                            {
                            otherlv_23=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_23, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_2_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_2_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_51);
                            lv_returnTypeRef_24_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_24_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsBindingIdentifierAsFormalParameterParserRuleCall_0_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_51);
                    lv_fpars_25_0=norm1_BindingIdentifierAsFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_25_0, 
                              		"eu.numberfour.n4js.N4JS.BindingIdentifierAsFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_26=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_26, grammarAccess.getArrowExpressionAccess().getEqualsSignGreaterThanSignKeyword_0_0_1());
                  
            }

            }


            }
            int alt106=2;
            alt106 = dfa106.predict(input);
            switch (alt106) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_hasBracesAroundBody_27_0=(Token)match(input,LeftCurlyBracket,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_hasBracesAroundBody_27_0, grammarAccess.getArrowExpressionAccess().getHasBracesAroundBodyLeftCurlyBracketKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "hasBracesAroundBody", true, "{");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyBlockMinusBracesParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_25);
                    lv_body_28_0=norm1_BlockMinusBraces();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_28_0, 
                              		"eu.numberfour.n4js.N4JS.BlockMinusBraces");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_29=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_29, grammarAccess.getArrowExpressionAccess().getRightCurlyBracketKeyword_1_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyExpressionDisguisedAsBlockParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_30_0=norm2_ExpressionDisguisedAsBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_30_0, 
                              		"eu.numberfour.n4js.N4JS.ExpressionDisguisedAsBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_ArrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_declaredAsync_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token lv_generator_16_0=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_26=null;
        Token lv_hasBracesAroundBody_27_0=null;
        Token otherlv_29=null;
        EObject lv_fpars_1_0 = null;

        EObject lv_fpars_3_0 = null;

        EObject lv_returnTypeRef_6_0 = null;

        EObject this_NoLineTerminator_8 = null;

        EObject lv_fpars_10_0 = null;

        EObject lv_fpars_12_0 = null;

        EObject lv_returnTypeRef_15_0 = null;

        EObject this_NoLineTerminator_17 = null;

        EObject lv_fpars_19_0 = null;

        EObject lv_fpars_21_0 = null;

        EObject lv_returnTypeRef_24_0 = null;

        EObject lv_fpars_25_0 = null;

        EObject lv_body_28_0 = null;

        EObject lv_body_30_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            int alt116=4;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==LeftParenthesis) && (synpred61_InternalN4JSParser())) {
                alt116=1;
            }
            else if ( (LA116_0==Async) ) {
                int LA116_2 = input.LA(2);

                if ( (LA116_2==EqualsSignGreaterThanSign) ) {
                    alt116=4;
                }
                else if ( (LA116_2==RULE_NO_LINE_TERMINATOR) && (synpred62_InternalN4JSParser())) {
                    alt116=2;
                }
                else if ( (LA116_2==LeftParenthesis) && (synpred62_InternalN4JSParser())) {
                    alt116=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 116, 2, input);

                    throw nvae;
                }
            }
            else if ( (LA116_0==Asterisk) && (synpred63_InternalN4JSParser())) {
                alt116=3;
            }
            else if ( ((LA116_0>=Intersection && LA116_0<=Implements)||(LA116_0>=Promisify && LA116_0<=Abstract)||LA116_0==External||(LA116_0>=Private && LA116_0<=Project)||LA116_0==Public||LA116_0==Static||LA116_0==Target||LA116_0==Await||LA116_0==Union||LA116_0==This||LA116_0==From||LA116_0==Type||(LA116_0>=Get && LA116_0<=Let)||(LA116_0>=Out && LA116_0<=Set)||LA116_0==As||LA116_0==Of||LA116_0==RULE_IDENTIFIER) ) {
                alt116=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 116, 0, input);

                throw nvae;
            }
            switch (alt116) {
                case 1 :
                    {
                    {
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_0_0());
                          
                    }

                    }
                    int alt108=2;
                    int LA108_0 = input.LA(1);

                    if ( ((LA108_0>=Intersection && LA108_0<=Implements)||(LA108_0>=Promisify && LA108_0<=Abstract)||LA108_0==External||(LA108_0>=Private && LA108_0<=Project)||LA108_0==Public||LA108_0==Static||LA108_0==Target||(LA108_0>=Async && LA108_0<=Await)||LA108_0==Union||LA108_0==This||LA108_0==From||LA108_0==This_1||(LA108_0>=Type && LA108_0<=Void)||LA108_0==FullStopFullStopFullStop||(LA108_0>=Get && LA108_0<=Let)||(LA108_0>=Out && LA108_0<=Set)||LA108_0==As||LA108_0==Of||(LA108_0>=QuestionMark && LA108_0<=LeftSquareBracket)||LA108_0==LeftCurlyBracket||LA108_0==Tilde||LA108_0==RULE_IDENTIFIER) ) {
                        alt108=1;
                    }
                    switch (alt108) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_48);
                            lv_fpars_1_0=norm1_FormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_1_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop107:
                            do {
                                int alt107=2;
                                int LA107_0 = input.LA(1);

                                if ( (LA107_0==Comma) ) {
                                    alt107=1;
                                }


                                switch (alt107) {
                            	case 1 :
                            	    {
                            	    otherlv_2=(Token)match(input,Comma,FOLLOW_49); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_2, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_0_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_48);
                            	    lv_fpars_3_0=norm1_FormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_3_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop107;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_0_2());
                          
                    }
                    int alt109=2;
                    int LA109_0 = input.LA(1);

                    if ( (LA109_0==Colon) ) {
                        alt109=1;
                    }
                    switch (alt109) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_0_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_0_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_51);
                            lv_returnTypeRef_6_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_6_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    {
                    lv_declaredAsync_7_0=(Token)match(input,Async,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredAsync_7_0, grammarAccess.getArrowExpressionAccess().getDeclaredAsyncAsyncKeyword_0_0_0_1_0_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "declaredAsync", true, "async");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArrowExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getArrowExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_0_1_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_53);
                    this_NoLineTerminator_8=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_8;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_9=(Token)match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_1_0_0_2());
                          
                    }

                    }


                    }
                    int alt111=2;
                    int LA111_0 = input.LA(1);

                    if ( ((LA111_0>=Intersection && LA111_0<=Implements)||(LA111_0>=Promisify && LA111_0<=Abstract)||LA111_0==External||(LA111_0>=Private && LA111_0<=Project)||LA111_0==Public||LA111_0==Static||LA111_0==Target||(LA111_0>=Async && LA111_0<=Await)||LA111_0==Union||LA111_0==This||LA111_0==From||LA111_0==This_1||(LA111_0>=Type && LA111_0<=Void)||LA111_0==FullStopFullStopFullStop||(LA111_0>=Get && LA111_0<=Let)||(LA111_0>=Out && LA111_0<=Set)||LA111_0==As||LA111_0==Of||(LA111_0>=QuestionMark && LA111_0<=LeftSquareBracket)||LA111_0==LeftCurlyBracket||LA111_0==Tilde||LA111_0==RULE_IDENTIFIER) ) {
                        alt111=1;
                    }
                    switch (alt111) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_48);
                            lv_fpars_10_0=norm1_FormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_10_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop110:
                            do {
                                int alt110=2;
                                int LA110_0 = input.LA(1);

                                if ( (LA110_0==Comma) ) {
                                    alt110=1;
                                }


                                switch (alt110) {
                            	case 1 :
                            	    {
                            	    otherlv_11=(Token)match(input,Comma,FOLLOW_49); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_11, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_1_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_48);
                            	    lv_fpars_12_0=norm1_FormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_12_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop110;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,RightParenthesis,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_1_2());
                          
                    }
                    int alt112=2;
                    int LA112_0 = input.LA(1);

                    if ( (LA112_0==Colon) ) {
                        alt112=1;
                    }
                    switch (alt112) {
                        case 1 :
                            {
                            otherlv_14=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_1_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_1_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_51);
                            lv_returnTypeRef_15_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_15_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    {
                    {
                    {
                    lv_generator_16_0=(Token)match(input,Asterisk,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_16_0, grammarAccess.getArrowExpressionAccess().getGeneratorAsteriskKeyword_0_0_0_2_0_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArrowExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getArrowExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_0_2_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_53);
                    this_NoLineTerminator_17=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_17;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_18=(Token)match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_18, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_2_0_0_2());
                          
                    }

                    }


                    }
                    int alt114=2;
                    int LA114_0 = input.LA(1);

                    if ( ((LA114_0>=Intersection && LA114_0<=Implements)||(LA114_0>=Promisify && LA114_0<=Abstract)||LA114_0==External||(LA114_0>=Private && LA114_0<=Project)||LA114_0==Public||LA114_0==Static||LA114_0==Target||(LA114_0>=Async && LA114_0<=Await)||LA114_0==Union||LA114_0==This||LA114_0==From||LA114_0==This_1||(LA114_0>=Type && LA114_0<=Void)||LA114_0==FullStopFullStopFullStop||(LA114_0>=Get && LA114_0<=Let)||(LA114_0>=Out && LA114_0<=Set)||LA114_0==As||LA114_0==Of||(LA114_0>=QuestionMark && LA114_0<=LeftSquareBracket)||LA114_0==LeftCurlyBracket||LA114_0==Tilde||LA114_0==RULE_IDENTIFIER) ) {
                        alt114=1;
                    }
                    switch (alt114) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_2_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_48);
                            lv_fpars_19_0=norm1_FormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_19_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop113:
                            do {
                                int alt113=2;
                                int LA113_0 = input.LA(1);

                                if ( (LA113_0==Comma) ) {
                                    alt113=1;
                                }


                                switch (alt113) {
                            	case 1 :
                            	    {
                            	    otherlv_20=(Token)match(input,Comma,FOLLOW_49); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_20, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_2_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_2_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_48);
                            	    lv_fpars_21_0=norm1_FormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_21_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop113;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_22, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_2_2());
                          
                    }
                    int alt115=2;
                    int LA115_0 = input.LA(1);

                    if ( (LA115_0==Colon) ) {
                        alt115=1;
                    }
                    switch (alt115) {
                        case 1 :
                            {
                            otherlv_23=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_23, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_2_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_2_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_51);
                            lv_returnTypeRef_24_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_24_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsBindingIdentifierAsFormalParameterParserRuleCall_0_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_51);
                    lv_fpars_25_0=norm1_BindingIdentifierAsFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_25_0, 
                              		"eu.numberfour.n4js.N4JS.BindingIdentifierAsFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_26=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_26, grammarAccess.getArrowExpressionAccess().getEqualsSignGreaterThanSignKeyword_0_0_1());
                  
            }

            }


            }
            int alt117=2;
            alt117 = dfa117.predict(input);
            switch (alt117) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_hasBracesAroundBody_27_0=(Token)match(input,LeftCurlyBracket,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_hasBracesAroundBody_27_0, grammarAccess.getArrowExpressionAccess().getHasBracesAroundBodyLeftCurlyBracketKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "hasBracesAroundBody", true, "{");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyBlockMinusBracesParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_25);
                    lv_body_28_0=norm1_BlockMinusBraces();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_28_0, 
                              		"eu.numberfour.n4js.N4JS.BlockMinusBraces");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_29=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_29, grammarAccess.getArrowExpressionAccess().getRightCurlyBracketKeyword_1_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyExpressionDisguisedAsBlockParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_30_0=norm3_ExpressionDisguisedAsBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_30_0, 
                              		"eu.numberfour.n4js.N4JS.ExpressionDisguisedAsBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleStrictFormalParameters(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_fpars_1_0 = null;

        EObject lv_fpars_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getStrictFormalParametersAccess().getLeftParenthesisKeyword_0());
                  
            }
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( ((LA119_0>=Intersection && LA119_0<=Implements)||(LA119_0>=Promisify && LA119_0<=Abstract)||LA119_0==External||(LA119_0>=Private && LA119_0<=Project)||LA119_0==Public||LA119_0==Static||LA119_0==Target||(LA119_0>=Async && LA119_0<=Await)||LA119_0==Union||(LA119_0>=Yield && LA119_0<=This)||LA119_0==From||LA119_0==This_1||(LA119_0>=Type && LA119_0<=Void)||LA119_0==FullStopFullStopFullStop||(LA119_0>=Get && LA119_0<=Let)||(LA119_0>=Out && LA119_0<=Set)||LA119_0==As||LA119_0==Of||(LA119_0>=QuestionMark && LA119_0<=LeftSquareBracket)||LA119_0==LeftCurlyBracket||LA119_0==Tilde||LA119_0==RULE_IDENTIFIER) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getStrictFormalParametersAccess().getFparsFormalParameterParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_48);
                    lv_fpars_1_0=ruleFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStrictFormalParametersRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_1_0, 
                              		"eu.numberfour.n4js.N4JS.FormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop118:
                    do {
                        int alt118=2;
                        int LA118_0 = input.LA(1);

                        if ( (LA118_0==Comma) ) {
                            alt118=1;
                        }


                        switch (alt118) {
                    	case 1 :
                    	    {
                    	    otherlv_2=(Token)match(input,Comma,FOLLOW_49); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getStrictFormalParametersAccess().getCommaKeyword_1_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getStrictFormalParametersAccess().getFparsFormalParameterParserRuleCall_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_48);
                    	    lv_fpars_3_0=ruleFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStrictFormalParametersRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"fpars",
                    	              		lv_fpars_3_0, 
                    	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop118;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getStrictFormalParametersAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_StrictFormalParameters(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_fpars_1_0 = null;

        EObject lv_fpars_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getStrictFormalParametersAccess().getLeftParenthesisKeyword_0());
                  
            }
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( ((LA121_0>=Intersection && LA121_0<=Implements)||(LA121_0>=Promisify && LA121_0<=Abstract)||LA121_0==External||(LA121_0>=Private && LA121_0<=Project)||LA121_0==Public||LA121_0==Static||LA121_0==Target||(LA121_0>=Async && LA121_0<=Await)||LA121_0==Union||LA121_0==This||LA121_0==From||LA121_0==This_1||(LA121_0>=Type && LA121_0<=Void)||LA121_0==FullStopFullStopFullStop||(LA121_0>=Get && LA121_0<=Let)||(LA121_0>=Out && LA121_0<=Set)||LA121_0==As||LA121_0==Of||(LA121_0>=QuestionMark && LA121_0<=LeftSquareBracket)||LA121_0==LeftCurlyBracket||LA121_0==Tilde||LA121_0==RULE_IDENTIFIER) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getStrictFormalParametersAccess().getFparsFormalParameterParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_48);
                    lv_fpars_1_0=norm1_FormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStrictFormalParametersRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_1_0, 
                              		"eu.numberfour.n4js.N4JS.FormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop120:
                    do {
                        int alt120=2;
                        int LA120_0 = input.LA(1);

                        if ( (LA120_0==Comma) ) {
                            alt120=1;
                        }


                        switch (alt120) {
                    	case 1 :
                    	    {
                    	    otherlv_2=(Token)match(input,Comma,FOLLOW_49); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getStrictFormalParametersAccess().getCommaKeyword_1_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getStrictFormalParametersAccess().getFparsFormalParameterParserRuleCall_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_48);
                    	    lv_fpars_3_0=norm1_FormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStrictFormalParametersRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"fpars",
                    	              		lv_fpars_3_0, 
                    	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop120;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getStrictFormalParametersAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBindingIdentifierAsFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingIdentifierAsFormalParameter = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingIdentifierAsFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingIdentifierAsFormalParameter=ruleBindingIdentifierAsFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingIdentifierAsFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingIdentifierAsFormalParameter() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getBindingIdentifierAsFormalParameterAccess().getNameBindingIdentifierParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getBindingIdentifierAsFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BindingIdentifierAsFormalParameter() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getBindingIdentifierAsFormalParameterAccess().getNameBindingIdentifierParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getBindingIdentifierAsFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BlockMinusBraces() throws RecognitionException {
        EObject current = null;

        EObject lv_statements_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBlockMinusBracesAccess().getBlockAction_0(),
                          current);
                  
            }

            }
            loop122:
            do {
                int alt122=2;
                int LA122_0 = input.LA(1);

                if ( ((LA122_0>=Intersection && LA122_0<=Implements)||(LA122_0>=Promisify && LA122_0<=Function)||(LA122_0>=Private && LA122_0<=Delete)||(LA122_0>=Public && LA122_0<=Break)||(LA122_0>=Class && LA122_0<=This)||(LA122_0>=From && LA122_0<=With)||(LA122_0>=For && LA122_0<=Var)||LA122_0==PlusSignPlusSign||LA122_0==HyphenMinusHyphenMinus||LA122_0==SolidusEqualsSign||(LA122_0>=As && LA122_0<=If)||LA122_0==Of||LA122_0==ExclamationMark||LA122_0==LeftParenthesis||(LA122_0>=Asterisk && LA122_0<=PlusSign)||LA122_0==HyphenMinus||LA122_0==Solidus||(LA122_0>=Semicolon && LA122_0<=LessThanSign)||(LA122_0>=CommercialAt && LA122_0<=LeftSquareBracket)||LA122_0==LeftCurlyBracket||LA122_0==Tilde||LA122_0==RULE_DOUBLE||(LA122_0>=RULE_HEX_INT && LA122_0<=RULE_LEGACY_OCTAL_INT)||LA122_0==RULE_SCIENTIFIC_INT||LA122_0==RULE_IDENTIFIER||LA122_0==RULE_STRING||(LA122_0>=RULE_TEMPLATE_HEAD && LA122_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA122_0==RULE_INT) ) {
                    alt122=1;
                }


                switch (alt122) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBlockMinusBracesAccess().getStatementsStatementParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_statements_1_0=norm1_Statement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBlockMinusBracesRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_1_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop122;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_ExpressionDisguisedAsBlock() throws RecognitionException {
        EObject current = null;

        EObject lv_statements_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExpressionDisguisedAsBlockAccess().getBlockAction_0(),
                          current);
                  
            }

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExpressionDisguisedAsBlockAccess().getStatementsAssignmentExpressionStatementParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statements_1_0=norm2_AssignmentExpressionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExpressionDisguisedAsBlockRule());
              	        }
                     		add(
                     			current, 
                     			"statements",
                      		lv_statements_1_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpressionStatement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_ExpressionDisguisedAsBlock() throws RecognitionException {
        EObject current = null;

        EObject lv_statements_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExpressionDisguisedAsBlockAccess().getBlockAction_0(),
                          current);
                  
            }

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExpressionDisguisedAsBlockAccess().getStatementsAssignmentExpressionStatementParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statements_1_0=norm3_AssignmentExpressionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExpressionDisguisedAsBlockRule());
              	        }
                     		add(
                     			current, 
                     			"statements",
                      		lv_statements_1_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpressionStatement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAssignmentExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignmentExpressionStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentExpressionStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssignmentExpressionStatement=ruleAssignmentExpressionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignmentExpressionStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAssignmentExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentExpressionStatementAccess().getExpressionAssignmentExpressionParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_0_0=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AssignmentExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentExpressionStatementAccess().getExpressionAssignmentExpressionParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_0_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_AssignmentExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentExpressionStatementAccess().getExpressionAssignmentExpressionParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_0_0=norm2_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_AssignmentExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentExpressionStatementAccess().getExpressionAssignmentExpressionParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_0_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedExpression=ruleAnnotatedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_ExpressionAnnotationList_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject this_ClassExtendsClause_4 = null;

        EObject this_Members_5 = null;

        EObject this_AsyncNoTrailingLineBreak_7 = null;

        EObject this_FunctionImpl_8 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getExpressionAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_56);
            this_ExpressionAnnotationList_0=ruleExpressionAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ExpressionAnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==Class) ) {
                alt125=1;
            }
            else if ( (LA125_0==Function||LA125_0==Async) ) {
                alt125=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 125, 0, input);

                throw nvae;
            }
            switch (alt125) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExpressionAccess().getN4ClassExpressionAnnotationListAction_1_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,Class,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getAnnotatedExpressionAccess().getClassKeyword_1_0_1());
                          
                    }
                    int alt123=2;
                    int LA123_0 = input.LA(1);

                    if ( ((LA123_0>=Intersection && LA123_0<=Constructor)||(LA123_0>=Promisify && LA123_0<=Abstract)||LA123_0==External||(LA123_0>=Private && LA123_0<=Project)||LA123_0==Public||LA123_0==Static||LA123_0==Target||(LA123_0>=Async && LA123_0<=Await)||LA123_0==Union||(LA123_0>=Yield && LA123_0<=This)||LA123_0==From||LA123_0==Type||(LA123_0>=Get && LA123_0<=Let)||(LA123_0>=Out && LA123_0<=Set)||LA123_0==As||LA123_0==Of||LA123_0==RULE_IDENTIFIER) ) {
                        alt123=1;
                    }
                    else if ( (LA123_0==Implements) ) {
                        int LA123_2 = input.LA(2);

                        if ( (LA123_2==Implements||LA123_2==Extends||LA123_2==LeftCurlyBracket) ) {
                            alt123=1;
                        }
                    }
                    switch (alt123) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getNameBindingIdentifierParserRuleCall_1_0_2_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_10);
                            lv_name_3_0=ruleBindingIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_3_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt124=2;
                    int LA124_0 = input.LA(1);

                    if ( (LA124_0==Implements||LA124_0==Extends) ) {
                        alt124=1;
                    }
                    switch (alt124) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getClassExtendsClauseParserRuleCall_1_0_3()); 
                                  
                            }
                            pushFollow(FOLLOW_10);
                            this_ClassExtendsClause_4=ruleClassExtendsClause(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ClassExtendsClause_4;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getMembersParserRuleCall_1_0_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Members_5=ruleMembers(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Members_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExpressionAccess().getFunctionExpressionAnnotationListAction_1_1_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getAsyncNoTrailingLineBreakParserRuleCall_1_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_46);
                    this_AsyncNoTrailingLineBreak_7=ruleAsyncNoTrailingLineBreak(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncNoTrailingLineBreak_7;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getFunctionImplParserRuleCall_1_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionImpl_8=norm6_FunctionImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionImpl_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AnnotatedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_ExpressionAnnotationList_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject this_ClassExtendsClause_4 = null;

        EObject this_Members_5 = null;

        EObject this_AsyncNoTrailingLineBreak_7 = null;

        EObject this_FunctionImpl_8 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getExpressionAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_56);
            this_ExpressionAnnotationList_0=ruleExpressionAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ExpressionAnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==Class) ) {
                alt128=1;
            }
            else if ( (LA128_0==Function||LA128_0==Async) ) {
                alt128=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;
            }
            switch (alt128) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExpressionAccess().getN4ClassExpressionAnnotationListAction_1_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,Class,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getAnnotatedExpressionAccess().getClassKeyword_1_0_1());
                          
                    }
                    int alt126=2;
                    int LA126_0 = input.LA(1);

                    if ( ((LA126_0>=Intersection && LA126_0<=Constructor)||(LA126_0>=Promisify && LA126_0<=Abstract)||LA126_0==External||(LA126_0>=Private && LA126_0<=Project)||LA126_0==Public||LA126_0==Static||LA126_0==Target||(LA126_0>=Async && LA126_0<=Await)||LA126_0==Union||LA126_0==This||LA126_0==From||LA126_0==Type||(LA126_0>=Get && LA126_0<=Let)||(LA126_0>=Out && LA126_0<=Set)||LA126_0==As||LA126_0==Of||LA126_0==RULE_IDENTIFIER) ) {
                        alt126=1;
                    }
                    else if ( (LA126_0==Implements) ) {
                        int LA126_2 = input.LA(2);

                        if ( (LA126_2==Implements||LA126_2==Extends||LA126_2==LeftCurlyBracket) ) {
                            alt126=1;
                        }
                    }
                    switch (alt126) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getNameBindingIdentifierParserRuleCall_1_0_2_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_58);
                            lv_name_3_0=norm1_BindingIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_3_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt127=2;
                    int LA127_0 = input.LA(1);

                    if ( (LA127_0==Implements||LA127_0==Extends) ) {
                        alt127=1;
                    }
                    switch (alt127) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getClassExtendsClauseParserRuleCall_1_0_3()); 
                                  
                            }
                            pushFollow(FOLLOW_58);
                            this_ClassExtendsClause_4=norm1_ClassExtendsClause(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ClassExtendsClause_4;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getMembersParserRuleCall_1_0_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Members_5=norm1_Members(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Members_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExpressionAccess().getFunctionExpressionAnnotationListAction_1_1_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getAsyncNoTrailingLineBreakParserRuleCall_1_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_46);
                    this_AsyncNoTrailingLineBreak_7=ruleAsyncNoTrailingLineBreak(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncNoTrailingLineBreak_7;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getFunctionImplParserRuleCall_1_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionImpl_8=norm6_FunctionImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionImpl_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeVariable = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeVariable=ruleTypeVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeVariable() throws RecognitionException {
        EObject current = null;

        Token lv_declaredCovariant_0_0=null;
        Token lv_declaredContravariant_1_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_declaredUpperBound_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt129=3;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==Out) ) {
                alt129=1;
            }
            else if ( (LA129_0==In) ) {
                alt129=2;
            }
            switch (alt129) {
                case 1 :
                    {
                    {
                    {
                    lv_declaredCovariant_0_0=(Token)match(input,Out,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredCovariant_0_0, grammarAccess.getTypeVariableAccess().getDeclaredCovariantOutKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTypeVariableRule());
                      	        }
                             		setWithLastConsumed(current, "declaredCovariant", true, "out");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    lv_declaredContravariant_1_0=(Token)match(input,In,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredContravariant_1_0, grammarAccess.getTypeVariableAccess().getDeclaredContravariantInKeyword_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTypeVariableRule());
                      	        }
                             		setWithLastConsumed(current, "declaredContravariant", true, "in");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypeVariableAccess().getNameIdentifierOrThisParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_59);
            lv_name_2_0=ruleIdentifierOrThis();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeVariableRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierOrThis");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==Extends) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    {
                    otherlv_3=(Token)match(input,Extends,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getTypeVariableAccess().getExtendsKeyword_2_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTypeVariableAccess().getDeclaredUpperBoundTypeRefParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaredUpperBound_4_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredUpperBound",
                              		lv_declaredUpperBound_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFormalParameter = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFormalParameter=ruleFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject this_BindingElementFragment_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFormalParameterAccess().getFormalParameterAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFormalParameterRule());
              		}
                      newCompositeNode(grammarAccess.getFormalParameterAccess().getBindingElementFragmentParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_BindingElementFragment_1=ruleBindingElementFragment(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BindingElementFragment_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_FormalParameter() throws RecognitionException {
        EObject current = null;

        EObject this_BindingElementFragment_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFormalParameterAccess().getFormalParameterAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFormalParameterRule());
              		}
                      newCompositeNode(grammarAccess.getFormalParameterAccess().getBindingElementFragmentParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_BindingElementFragment_1=norm1_BindingElementFragment(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BindingElementFragment_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingElementFragment(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_variadic_3_0=null;
        Token otherlv_6=null;
        EObject lv_bindingPattern_0_0 = null;

        EObject lv_annotations_1_0 = null;

        EObject this_BogusTypeRefFragment_2 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        EObject this_ColonSepTypeRef_5 = null;

        EObject lv_initializer_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt135=2;
            alt135 = dfa135.predict(input);
            switch (alt135) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getBindingPatternBindingPatternParserRuleCall_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_60);
                    lv_bindingPattern_0_0=ruleBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"bindingPattern",
                              		lv_bindingPattern_0_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    loop131:
                    do {
                        int alt131=2;
                        int LA131_0 = input.LA(1);

                        if ( (LA131_0==CommercialAt) ) {
                            alt131=1;
                        }


                        switch (alt131) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getAnnotationsAnnotationParserRuleCall_0_1_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_61);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"annotations",
                    	              		lv_annotations_1_0, 
                    	              		"eu.numberfour.n4js.N4JS.Annotation");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop131;
                        }
                    } while (true);
                    int alt132=2;
                    alt132 = dfa132.predict(input);
                    switch (alt132) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getBindingElementFragmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getBogusTypeRefFragmentParserRuleCall_0_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_62);
                            this_BogusTypeRefFragment_2=ruleBogusTypeRefFragment(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_BogusTypeRefFragment_2;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt133=2;
                    int LA133_0 = input.LA(1);

                    if ( (LA133_0==FullStopFullStopFullStop) ) {
                        alt133=1;
                    }
                    switch (alt133) {
                        case 1 :
                            {
                            {
                            lv_variadic_3_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_variadic_3_0, grammarAccess.getBindingElementFragmentAccess().getVariadicFullStopFullStopFullStopKeyword_0_1_2_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getBindingElementFragmentRule());
                              	        }
                                     		setWithLastConsumed(current, "variadic", true, "...");
                              	    
                            }

                            }


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getNameBindingIdentifierParserRuleCall_0_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_63);
                    lv_name_4_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt134=2;
                    int LA134_0 = input.LA(1);

                    if ( (LA134_0==Colon) ) {
                        alt134=1;
                    }
                    switch (alt134) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getBindingElementFragmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getColonSepTypeRefParserRuleCall_0_1_4()); 
                                  
                            }
                            pushFollow(FOLLOW_60);
                            this_ColonSepTypeRef_5=ruleColonSepTypeRef(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ColonSepTypeRef_5;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==EqualsSign) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    {
                    otherlv_6=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getBindingElementFragmentAccess().getEqualsSignKeyword_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getInitializerAssignmentExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_initializer_7_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"initializer",
                              		lv_initializer_7_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BindingElementFragment(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_variadic_3_0=null;
        Token otherlv_6=null;
        EObject lv_bindingPattern_0_0 = null;

        EObject lv_annotations_1_0 = null;

        EObject this_BogusTypeRefFragment_2 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        EObject this_ColonSepTypeRef_5 = null;

        EObject lv_initializer_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt141=2;
            alt141 = dfa141.predict(input);
            switch (alt141) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getBindingPatternBindingPatternParserRuleCall_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_60);
                    lv_bindingPattern_0_0=norm1_BindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"bindingPattern",
                              		lv_bindingPattern_0_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    loop137:
                    do {
                        int alt137=2;
                        int LA137_0 = input.LA(1);

                        if ( (LA137_0==CommercialAt) ) {
                            alt137=1;
                        }


                        switch (alt137) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getAnnotationsAnnotationParserRuleCall_0_1_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_61);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"annotations",
                    	              		lv_annotations_1_0, 
                    	              		"eu.numberfour.n4js.N4JS.Annotation");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop137;
                        }
                    } while (true);
                    int alt138=2;
                    alt138 = dfa138.predict(input);
                    switch (alt138) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getBindingElementFragmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getBogusTypeRefFragmentParserRuleCall_0_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_62);
                            this_BogusTypeRefFragment_2=ruleBogusTypeRefFragment(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_BogusTypeRefFragment_2;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt139=2;
                    int LA139_0 = input.LA(1);

                    if ( (LA139_0==FullStopFullStopFullStop) ) {
                        alt139=1;
                    }
                    switch (alt139) {
                        case 1 :
                            {
                            {
                            lv_variadic_3_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_variadic_3_0, grammarAccess.getBindingElementFragmentAccess().getVariadicFullStopFullStopFullStopKeyword_0_1_2_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getBindingElementFragmentRule());
                              	        }
                                     		setWithLastConsumed(current, "variadic", true, "...");
                              	    
                            }

                            }


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getNameBindingIdentifierParserRuleCall_0_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_63);
                    lv_name_4_0=norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt140=2;
                    int LA140_0 = input.LA(1);

                    if ( (LA140_0==Colon) ) {
                        alt140=1;
                    }
                    switch (alt140) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getBindingElementFragmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getColonSepTypeRefParserRuleCall_0_1_4()); 
                                  
                            }
                            pushFollow(FOLLOW_60);
                            this_ColonSepTypeRef_5=ruleColonSepTypeRef(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ColonSepTypeRef_5;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==EqualsSign) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
                    {
                    otherlv_6=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getBindingElementFragmentAccess().getEqualsSignKeyword_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getInitializerAssignmentExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_initializer_7_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"initializer",
                              		lv_initializer_7_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleColonSepTypeRef(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject lv_declaredTypeRef_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getColonSepTypeRefAccess().getColonKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getColonSepTypeRefAccess().getDeclaredTypeRefTypeRefParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_declaredTypeRef_1_0=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getColonSepTypeRefRule());
              	        }
                     		set(
                     			current, 
                     			"declaredTypeRef",
                      		lv_declaredTypeRef_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBogusTypeRefFragment(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_bogusTypeRef_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getBogusTypeRefFragmentAccess().getBogusTypeRefBogusTypeRefParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_bogusTypeRef_0_0=ruleBogusTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getBogusTypeRefFragmentRule());
              	        }
                     		set(
                     			current, 
                     			"bogusTypeRef",
                      		lv_bogusTypeRef_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BogusTypeRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBlock = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBlock=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_statements_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBlockAccess().getBlockAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0_0_1());
                  
            }

            }


            }
            loop143:
            do {
                int alt143=2;
                int LA143_0 = input.LA(1);

                if ( ((LA143_0>=Intersection && LA143_0<=Implements)||(LA143_0>=Promisify && LA143_0<=Function)||(LA143_0>=Private && LA143_0<=Delete)||(LA143_0>=Public && LA143_0<=Break)||(LA143_0>=Class && LA143_0<=This)||(LA143_0>=From && LA143_0<=With)||(LA143_0>=For && LA143_0<=Var)||LA143_0==PlusSignPlusSign||LA143_0==HyphenMinusHyphenMinus||LA143_0==SolidusEqualsSign||(LA143_0>=As && LA143_0<=If)||LA143_0==Of||LA143_0==ExclamationMark||LA143_0==LeftParenthesis||(LA143_0>=Asterisk && LA143_0<=PlusSign)||LA143_0==HyphenMinus||LA143_0==Solidus||(LA143_0>=Semicolon && LA143_0<=LessThanSign)||(LA143_0>=CommercialAt && LA143_0<=LeftSquareBracket)||LA143_0==LeftCurlyBracket||LA143_0==Tilde||LA143_0==RULE_DOUBLE||(LA143_0>=RULE_HEX_INT && LA143_0<=RULE_LEGACY_OCTAL_INT)||LA143_0==RULE_SCIENTIFIC_INT||LA143_0==RULE_IDENTIFIER||LA143_0==RULE_STRING||(LA143_0>=RULE_TEMPLATE_HEAD && LA143_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA143_0==RULE_INT) ) {
                    alt143=1;
                }


                switch (alt143) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_55);
            	    lv_statements_2_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBlockRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop143;
                }
            } while (true);

            otherlv_3=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_Block() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_statements_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBlockAccess().getBlockAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0_0_1());
                  
            }

            }


            }
            loop144:
            do {
                int alt144=2;
                int LA144_0 = input.LA(1);

                if ( ((LA144_0>=Intersection && LA144_0<=Implements)||(LA144_0>=Promisify && LA144_0<=Function)||(LA144_0>=Private && LA144_0<=Delete)||(LA144_0>=Public && LA144_0<=Break)||(LA144_0>=Class && LA144_0<=This)||(LA144_0>=From && LA144_0<=With)||(LA144_0>=For && LA144_0<=Var)||LA144_0==PlusSignPlusSign||LA144_0==HyphenMinusHyphenMinus||LA144_0==SolidusEqualsSign||(LA144_0>=As && LA144_0<=If)||LA144_0==Of||LA144_0==ExclamationMark||LA144_0==LeftParenthesis||(LA144_0>=Asterisk && LA144_0<=PlusSign)||LA144_0==HyphenMinus||LA144_0==Solidus||(LA144_0>=Semicolon && LA144_0<=LessThanSign)||(LA144_0>=CommercialAt && LA144_0<=LeftSquareBracket)||LA144_0==LeftCurlyBracket||LA144_0==Tilde||LA144_0==RULE_DOUBLE||(LA144_0>=RULE_HEX_INT && LA144_0<=RULE_LEGACY_OCTAL_INT)||LA144_0==RULE_SCIENTIFIC_INT||LA144_0==RULE_IDENTIFIER||LA144_0==RULE_STRING||(LA144_0>=RULE_TEMPLATE_HEAD && LA144_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA144_0==RULE_INT) ) {
                    alt144=1;
                }


                switch (alt144) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_55);
            	    lv_statements_2_0=norm1_Statement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBlockRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop144;
                }
            } while (true);

            otherlv_3=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleRootStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRootStatement=ruleRootStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleRootStatement() throws RecognitionException {
        EObject current = null;

        EObject this_Block_0 = null;

        EObject this_FunctionDeclaration_1 = null;

        EObject this_VariableStatement_2 = null;

        EObject this_EmptyStatement_3 = null;

        EObject this_LabelledStatement_4 = null;

        EObject this_ExpressionStatement_5 = null;

        EObject this_IfStatement_6 = null;

        EObject this_IterationStatement_7 = null;

        EObject this_ContinueStatement_8 = null;

        EObject this_BreakStatement_9 = null;

        EObject this_ReturnStatement_10 = null;

        EObject this_WithStatement_11 = null;

        EObject this_SwitchStatement_12 = null;

        EObject this_ThrowStatement_13 = null;

        EObject this_TryStatement_14 = null;

        EObject this_DebuggerStatement_15 = null;


         enterRule(); 
            
        try {
            {
            int alt145=16;
            alt145 = dfa145.predict(input);
            switch (alt145) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getBlockParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Block_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Block_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getFunctionDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionDeclaration_1=ruleFunctionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getVariableStatementParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableStatement_2=norm1_VariableStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableStatement_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getEmptyStatementParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_EmptyStatement_3=ruleEmptyStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_EmptyStatement_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getLabelledStatementParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_LabelledStatement_4=ruleLabelledStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LabelledStatement_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getExpressionStatementParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionStatement_5=ruleExpressionStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExpressionStatement_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getIfStatementParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IfStatement_6=ruleIfStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IfStatement_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getIterationStatementParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IterationStatement_7=ruleIterationStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IterationStatement_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getContinueStatementParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ContinueStatement_8=ruleContinueStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ContinueStatement_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getBreakStatementParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BreakStatement_9=ruleBreakStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BreakStatement_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getReturnStatementParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ReturnStatement_10=ruleReturnStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ReturnStatement_10;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 12 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getWithStatementParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WithStatement_11=ruleWithStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_WithStatement_11;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 13 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getSwitchStatementParserRuleCall_12()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SwitchStatement_12=ruleSwitchStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SwitchStatement_12;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 14 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getThrowStatementParserRuleCall_13()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThrowStatement_13=ruleThrowStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThrowStatement_13;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 15 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getTryStatementParserRuleCall_14()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TryStatement_14=ruleTryStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TryStatement_14;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 16 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getDebuggerStatementParserRuleCall_15()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DebuggerStatement_15=ruleDebuggerStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DebuggerStatement_15;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_RootStatement() throws RecognitionException {
        EObject current = null;

        EObject this_Block_0 = null;

        EObject this_FunctionDeclaration_1 = null;

        EObject this_VariableStatement_2 = null;

        EObject this_EmptyStatement_3 = null;

        EObject this_LabelledStatement_4 = null;

        EObject this_ExpressionStatement_5 = null;

        EObject this_IfStatement_6 = null;

        EObject this_IterationStatement_7 = null;

        EObject this_ContinueStatement_8 = null;

        EObject this_BreakStatement_9 = null;

        EObject this_ReturnStatement_10 = null;

        EObject this_WithStatement_11 = null;

        EObject this_SwitchStatement_12 = null;

        EObject this_ThrowStatement_13 = null;

        EObject this_TryStatement_14 = null;

        EObject this_DebuggerStatement_15 = null;


         enterRule(); 
            
        try {
            {
            int alt146=16;
            alt146 = dfa146.predict(input);
            switch (alt146) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getBlockParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Block_0=norm1_Block();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Block_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getFunctionDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionDeclaration_1=norm1_FunctionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getVariableStatementParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableStatement_2=norm3_VariableStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableStatement_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getEmptyStatementParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_EmptyStatement_3=ruleEmptyStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_EmptyStatement_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getLabelledStatementParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_LabelledStatement_4=norm1_LabelledStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LabelledStatement_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getExpressionStatementParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionStatement_5=norm1_ExpressionStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExpressionStatement_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getIfStatementParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IfStatement_6=norm1_IfStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IfStatement_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getIterationStatementParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IterationStatement_7=norm1_IterationStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IterationStatement_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getContinueStatementParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ContinueStatement_8=norm1_ContinueStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ContinueStatement_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getBreakStatementParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BreakStatement_9=norm1_BreakStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BreakStatement_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getReturnStatementParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ReturnStatement_10=norm1_ReturnStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ReturnStatement_10;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 12 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getWithStatementParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WithStatement_11=norm1_WithStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_WithStatement_11;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 13 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getSwitchStatementParserRuleCall_12()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SwitchStatement_12=norm1_SwitchStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SwitchStatement_12;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 14 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getThrowStatementParserRuleCall_13()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThrowStatement_13=norm1_ThrowStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThrowStatement_13;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 15 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getTryStatementParserRuleCall_14()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TryStatement_14=norm1_TryStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TryStatement_14;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 16 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getDebuggerStatementParserRuleCall_15()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DebuggerStatement_15=ruleDebuggerStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DebuggerStatement_15;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedFunctionDeclaration_0 = null;

        EObject this_RootStatement_1 = null;


         enterRule(); 
            
        try {
            {
            int alt147=2;
            alt147 = dfa147.predict(input);
            switch (alt147) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getAnnotatedFunctionDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedFunctionDeclaration_0=ruleAnnotatedFunctionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedFunctionDeclaration_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getRootStatementParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_RootStatement_1=ruleRootStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_RootStatement_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_Statement() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedFunctionDeclaration_0 = null;

        EObject this_RootStatement_1 = null;


         enterRule(); 
            
        try {
            {
            int alt148=2;
            alt148 = dfa148.predict(input);
            switch (alt148) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getAnnotatedFunctionDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedFunctionDeclaration_0=norm1_AnnotatedFunctionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedFunctionDeclaration_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getRootStatementParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_RootStatement_1=norm1_RootStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_RootStatement_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_VariableStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Enumerator lv_varStmtKeyword_1_0 = null;

        EObject lv_varDeclsOrBindings_2_0 = null;

        EObject lv_varDeclsOrBindings_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableStatementAccess().getVariableStatementAction_0_0_0(),
                          current);
                  
            }

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableStatementAccess().getVarStmtKeywordVariableStatementKeywordEnumRuleCall_0_0_1_0()); 
              	    
            }
            pushFollow(FOLLOW_30);
            lv_varStmtKeyword_1_0=ruleVariableStatementKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableStatementRule());
              	        }
                     		set(
                     			current, 
                     			"varStmtKeyword",
                      		lv_varStmtKeyword_1_0, 
                      		"eu.numberfour.n4js.N4JS.VariableStatementKeyword");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_31);
            lv_varDeclsOrBindings_2_0=norm1_VariableDeclarationOrBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableStatementRule());
              	        }
                     		add(
                     			current, 
                     			"varDeclsOrBindings",
                      		lv_varDeclsOrBindings_2_0, 
                      		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop149:
            do {
                int alt149=2;
                int LA149_0 = input.LA(1);

                if ( (LA149_0==Comma) ) {
                    alt149=1;
                }


                switch (alt149) {
            	case 1 :
            	    {
            	    otherlv_3=(Token)match(input,Comma,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getVariableStatementAccess().getCommaKeyword_2_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_varDeclsOrBindings_4_0=norm1_VariableDeclarationOrBinding();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"varDeclsOrBindings",
            	              		lv_varDeclsOrBindings_4_0, 
            	              		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop149;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getVariableStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_VariableStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Enumerator lv_varStmtKeyword_1_0 = null;

        EObject lv_varDeclsOrBindings_2_0 = null;

        EObject lv_varDeclsOrBindings_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableStatementAccess().getVariableStatementAction_0_0_0(),
                          current);
                  
            }

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableStatementAccess().getVarStmtKeywordVariableStatementKeywordEnumRuleCall_0_0_1_0()); 
              	    
            }
            pushFollow(FOLLOW_30);
            lv_varStmtKeyword_1_0=ruleVariableStatementKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableStatementRule());
              	        }
                     		set(
                     			current, 
                     			"varStmtKeyword",
                      		lv_varStmtKeyword_1_0, 
                      		"eu.numberfour.n4js.N4JS.VariableStatementKeyword");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_31);
            lv_varDeclsOrBindings_2_0=norm3_VariableDeclarationOrBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableStatementRule());
              	        }
                     		add(
                     			current, 
                     			"varDeclsOrBindings",
                      		lv_varDeclsOrBindings_2_0, 
                      		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop150:
            do {
                int alt150=2;
                int LA150_0 = input.LA(1);

                if ( (LA150_0==Comma) ) {
                    alt150=1;
                }


                switch (alt150) {
            	case 1 :
            	    {
            	    otherlv_3=(Token)match(input,Comma,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getVariableStatementAccess().getCommaKeyword_2_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_varDeclsOrBindings_4_0=norm3_VariableDeclarationOrBinding();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"varDeclsOrBindings",
            	              		lv_varDeclsOrBindings_4_0, 
            	              		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop150;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getVariableStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportedVariableStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportedVariableStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportedVariableStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportedVariableStatement=ruleExportedVariableStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportedVariableStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportedVariableStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        Enumerator lv_varStmtKeyword_2_0 = null;

        EObject lv_varDeclsOrBindings_3_0 = null;

        EObject lv_varDeclsOrBindings_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExportedVariableStatementAccess().getExportedVariableStatementAction_0(),
                          current);
                  
            }

            }
            loop151:
            do {
                int alt151=2;
                alt151 = dfa151.predict(input);
                switch (alt151) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getExportedVariableStatementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_29);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getExportedVariableStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop151;
                }
            } while (true);
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportedVariableStatementAccess().getVarStmtKeywordVariableStatementKeywordEnumRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_30);
            lv_varStmtKeyword_2_0=ruleVariableStatementKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportedVariableStatementRule());
              	        }
                     		set(
                     			current, 
                     			"varStmtKeyword",
                      		lv_varStmtKeyword_2_0, 
                      		"eu.numberfour.n4js.N4JS.VariableStatementKeyword");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportedVariableStatementAccess().getVarDeclsOrBindingsExportedVariableDeclarationOrBindingParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_31);
            lv_varDeclsOrBindings_3_0=ruleExportedVariableDeclarationOrBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportedVariableStatementRule());
              	        }
                     		add(
                     			current, 
                     			"varDeclsOrBindings",
                      		lv_varDeclsOrBindings_3_0, 
                      		"eu.numberfour.n4js.N4JS.ExportedVariableDeclarationOrBinding");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop152:
            do {
                int alt152=2;
                int LA152_0 = input.LA(1);

                if ( (LA152_0==Comma) ) {
                    alt152=1;
                }


                switch (alt152) {
            	case 1 :
            	    {
            	    otherlv_4=(Token)match(input,Comma,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getExportedVariableStatementAccess().getCommaKeyword_4_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getExportedVariableStatementAccess().getVarDeclsOrBindingsExportedVariableDeclarationOrBindingParserRuleCall_4_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_varDeclsOrBindings_5_0=ruleExportedVariableDeclarationOrBinding();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getExportedVariableStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"varDeclsOrBindings",
            	              		lv_varDeclsOrBindings_5_0, 
            	              		"eu.numberfour.n4js.N4JS.ExportedVariableDeclarationOrBinding");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop152;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExportedVariableStatementAccess().getSemiParserRuleCall_5()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleVariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclarationOrBinding = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationOrBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVariableDeclarationOrBinding=ruleVariableDeclarationOrBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclarationOrBinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleVariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_VariableBinding_0 = null;

        EObject this_VariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==LeftCurlyBracket) && (synpred81_InternalN4JSParser())) {
                alt153=1;
            }
            else if ( (LA153_0==LeftSquareBracket) && (synpred81_InternalN4JSParser())) {
                alt153=1;
            }
            else if ( ((LA153_0>=Intersection && LA153_0<=Implements)||(LA153_0>=Promisify && LA153_0<=Abstract)||LA153_0==External||(LA153_0>=Private && LA153_0<=Project)||LA153_0==Public||LA153_0==Static||LA153_0==Target||(LA153_0>=Async && LA153_0<=Await)||LA153_0==Union||(LA153_0>=Yield && LA153_0<=This)||LA153_0==From||LA153_0==Type||(LA153_0>=Get && LA153_0<=Let)||(LA153_0>=Out && LA153_0<=Set)||LA153_0==As||LA153_0==Of||LA153_0==CommercialAt||LA153_0==RULE_IDENTIFIER) ) {
                alt153=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 153, 0, input);

                throw nvae;
            }
            switch (alt153) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableBinding_0=ruleVariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableDeclaration_1=norm4_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_VariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_VariableBinding_0 = null;

        EObject this_VariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==LeftCurlyBracket) && (synpred82_InternalN4JSParser())) {
                alt154=1;
            }
            else if ( (LA154_0==LeftSquareBracket) && (synpred82_InternalN4JSParser())) {
                alt154=1;
            }
            else if ( ((LA154_0>=Intersection && LA154_0<=Implements)||(LA154_0>=Promisify && LA154_0<=Abstract)||LA154_0==External||(LA154_0>=Private && LA154_0<=Project)||LA154_0==Public||LA154_0==Static||LA154_0==Target||(LA154_0>=Async && LA154_0<=Await)||LA154_0==Union||(LA154_0>=Yield && LA154_0<=This)||LA154_0==From||LA154_0==Type||(LA154_0>=Get && LA154_0<=Let)||(LA154_0>=Out && LA154_0<=Set)||LA154_0==As||LA154_0==Of||LA154_0==CommercialAt||LA154_0==RULE_IDENTIFIER) ) {
                alt154=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 154, 0, input);

                throw nvae;
            }
            switch (alt154) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableBinding_0=norm1_VariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableDeclaration_1=norm5_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_VariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_VariableBinding_0 = null;

        EObject this_VariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==LeftCurlyBracket) && (synpred83_InternalN4JSParser())) {
                alt155=1;
            }
            else if ( (LA155_0==LeftSquareBracket) && (synpred83_InternalN4JSParser())) {
                alt155=1;
            }
            else if ( ((LA155_0>=Intersection && LA155_0<=Implements)||(LA155_0>=Promisify && LA155_0<=Abstract)||LA155_0==External||(LA155_0>=Private && LA155_0<=Project)||LA155_0==Public||LA155_0==Static||LA155_0==Target||(LA155_0>=Async && LA155_0<=Await)||LA155_0==Union||LA155_0==This||LA155_0==From||LA155_0==Type||(LA155_0>=Get && LA155_0<=Let)||(LA155_0>=Out && LA155_0<=Set)||LA155_0==As||LA155_0==Of||LA155_0==CommercialAt||LA155_0==RULE_IDENTIFIER) ) {
                alt155=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 155, 0, input);

                throw nvae;
            }
            switch (alt155) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableBinding_0=norm2_VariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableDeclaration_1=norm6_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_VariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_VariableBinding_0 = null;

        EObject this_VariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==LeftCurlyBracket) && (synpred84_InternalN4JSParser())) {
                alt156=1;
            }
            else if ( (LA156_0==LeftSquareBracket) && (synpred84_InternalN4JSParser())) {
                alt156=1;
            }
            else if ( ((LA156_0>=Intersection && LA156_0<=Implements)||(LA156_0>=Promisify && LA156_0<=Abstract)||LA156_0==External||(LA156_0>=Private && LA156_0<=Project)||LA156_0==Public||LA156_0==Static||LA156_0==Target||(LA156_0>=Async && LA156_0<=Await)||LA156_0==Union||LA156_0==This||LA156_0==From||LA156_0==Type||(LA156_0>=Get && LA156_0<=Let)||(LA156_0>=Out && LA156_0<=Set)||LA156_0==As||LA156_0==Of||LA156_0==CommercialAt||LA156_0==RULE_IDENTIFIER) ) {
                alt156=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 156, 0, input);

                throw nvae;
            }
            switch (alt156) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableBinding_0=norm3_VariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableDeclaration_1=norm7_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm4_VariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_VariableBinding_0 = null;

        EObject this_VariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==LeftCurlyBracket) && (synpred85_InternalN4JSParser())) {
                alt157=1;
            }
            else if ( (LA157_0==LeftSquareBracket) && (synpred85_InternalN4JSParser())) {
                alt157=1;
            }
            else if ( ((LA157_0>=Intersection && LA157_0<=Implements)||(LA157_0>=Promisify && LA157_0<=Abstract)||LA157_0==External||(LA157_0>=Private && LA157_0<=Project)||LA157_0==Public||LA157_0==Static||LA157_0==Target||(LA157_0>=Async && LA157_0<=Await)||LA157_0==Union||(LA157_0>=Yield && LA157_0<=This)||LA157_0==From||LA157_0==Type||(LA157_0>=Get && LA157_0<=Let)||(LA157_0>=Out && LA157_0<=Set)||LA157_0==As||LA157_0==Of||LA157_0==CommercialAt||LA157_0==RULE_IDENTIFIER) ) {
                alt157=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 157, 0, input);

                throw nvae;
            }
            switch (alt157) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableBinding_0=norm4_VariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableDeclaration_1=norm4_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm6_VariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_VariableBinding_0 = null;

        EObject this_VariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==LeftCurlyBracket) && (synpred86_InternalN4JSParser())) {
                alt158=1;
            }
            else if ( (LA158_0==LeftSquareBracket) && (synpred86_InternalN4JSParser())) {
                alt158=1;
            }
            else if ( ((LA158_0>=Intersection && LA158_0<=Implements)||(LA158_0>=Promisify && LA158_0<=Abstract)||LA158_0==External||(LA158_0>=Private && LA158_0<=Project)||LA158_0==Public||LA158_0==Static||LA158_0==Target||(LA158_0>=Async && LA158_0<=Await)||LA158_0==Union||LA158_0==This||LA158_0==From||LA158_0==Type||(LA158_0>=Get && LA158_0<=Let)||(LA158_0>=Out && LA158_0<=Set)||LA158_0==As||LA158_0==Of||LA158_0==CommercialAt||LA158_0==RULE_IDENTIFIER) ) {
                alt158=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 158, 0, input);

                throw nvae;
            }
            switch (alt158) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableBinding_0=norm6_VariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableDeclaration_1=norm6_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleVariableBinding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableBinding = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVariableBinding=ruleVariableBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableBinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleVariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_pattern_0_0=ruleBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            {
            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_1_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_pattern_0_0=ruleBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            {
            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_1_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_pattern_0_0=norm1_BindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            {
            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_1_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm2_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_pattern_0_0=norm1_BindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            {
            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_1_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm4_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_60);
            lv_pattern_0_0=ruleBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==EqualsSign) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_0_0_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm5_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_60);
            lv_pattern_0_0=ruleBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==EqualsSign) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_0_0_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm6_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_60);
            lv_pattern_0_0=norm1_BindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==EqualsSign) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_0_0_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=norm2_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm7_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_60);
            lv_pattern_0_0=norm1_BindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==EqualsSign) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_0_0_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_VariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm1_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_VariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm3_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm4_VariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm4_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm5_VariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm5_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm6_VariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm6_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm7_VariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm7_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleVariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop163:
            do {
                int alt163=2;
                alt163 = dfa163.predict(input);
                switch (alt163) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop163;
                }
            } while (true);
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_1_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_60);
            lv_name_1_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==EqualsSign) ) {
                alt164=1;
            }
            switch (alt164) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_1_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop165:
            do {
                int alt165=2;
                alt165 = dfa165.predict(input);
                switch (alt165) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop165;
                }
            } while (true);
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_1_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_60);
            lv_name_1_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==EqualsSign) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_1_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop167:
            do {
                int alt167=2;
                alt167 = dfa167.predict(input);
                switch (alt167) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop167;
                }
            } while (true);
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_1_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_60);
            lv_name_1_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==EqualsSign) ) {
                alt168=1;
            }
            switch (alt168) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_1_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm2_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop169:
            do {
                int alt169=2;
                alt169 = dfa169.predict(input);
                switch (alt169) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop169;
                }
            } while (true);
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_1_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_60);
            lv_name_1_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==EqualsSign) ) {
                alt170=1;
            }
            switch (alt170) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_1_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm4_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_ColonSepTypeRef_2 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop171:
            do {
                int alt171=2;
                alt171 = dfa171.predict(input);
                switch (alt171) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop171;
                }
            } while (true);
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_0_0_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_63);
            lv_name_1_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==Colon) ) {
                alt172=1;
            }
            switch (alt172) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getVariableDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getColonSepTypeRefParserRuleCall_1_0_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_60);
                    this_ColonSepTypeRef_2=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }
            int alt173=2;
            int LA173_0 = input.LA(1);

            if ( (LA173_0==EqualsSign) ) {
                alt173=1;
            }
            switch (alt173) {
                case 1 :
                    {
                    otherlv_3=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_0_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_4_0=ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_4_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm5_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_ColonSepTypeRef_2 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop174:
            do {
                int alt174=2;
                alt174 = dfa174.predict(input);
                switch (alt174) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop174;
                }
            } while (true);
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_0_0_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_63);
            lv_name_1_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==Colon) ) {
                alt175=1;
            }
            switch (alt175) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getVariableDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getColonSepTypeRefParserRuleCall_1_0_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_60);
                    this_ColonSepTypeRef_2=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==EqualsSign) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    {
                    otherlv_3=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_0_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_4_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_4_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm6_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_ColonSepTypeRef_2 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop177:
            do {
                int alt177=2;
                alt177 = dfa177.predict(input);
                switch (alt177) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop177;
                }
            } while (true);
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_0_0_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_63);
            lv_name_1_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==Colon) ) {
                alt178=1;
            }
            switch (alt178) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getVariableDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getColonSepTypeRefParserRuleCall_1_0_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_60);
                    this_ColonSepTypeRef_2=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==EqualsSign) ) {
                alt179=1;
            }
            switch (alt179) {
                case 1 :
                    {
                    otherlv_3=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_0_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_4_0=norm2_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_4_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm7_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_ColonSepTypeRef_2 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop180:
            do {
                int alt180=2;
                alt180 = dfa180.predict(input);
                switch (alt180) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop180;
                }
            } while (true);
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_0_0_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_63);
            lv_name_1_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==Colon) ) {
                alt181=1;
            }
            switch (alt181) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getVariableDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getColonSepTypeRefParserRuleCall_1_0_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_60);
                    this_ColonSepTypeRef_2=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( (LA182_0==EqualsSign) ) {
                alt182=1;
            }
            switch (alt182) {
                case 1 :
                    {
                    otherlv_3=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_0_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_4_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_4_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportedVariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportedVariableDeclarationOrBinding = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportedVariableDeclarationOrBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportedVariableDeclarationOrBinding=ruleExportedVariableDeclarationOrBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportedVariableDeclarationOrBinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportedVariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_ExportedVariableBinding_0 = null;

        EObject this_ExportedVariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==LeftCurlyBracket) && (synpred103_InternalN4JSParser())) {
                alt183=1;
            }
            else if ( (LA183_0==LeftSquareBracket) && (synpred103_InternalN4JSParser())) {
                alt183=1;
            }
            else if ( ((LA183_0>=Intersection && LA183_0<=Implements)||(LA183_0>=Promisify && LA183_0<=Abstract)||LA183_0==External||(LA183_0>=Private && LA183_0<=Project)||LA183_0==Public||LA183_0==Static||LA183_0==Target||(LA183_0>=Async && LA183_0<=Await)||LA183_0==Union||(LA183_0>=Yield && LA183_0<=This)||LA183_0==From||LA183_0==Type||(LA183_0>=Get && LA183_0<=Let)||(LA183_0>=Out && LA183_0<=Set)||LA183_0==As||LA183_0==Of||LA183_0==CommercialAt||LA183_0==RULE_IDENTIFIER) ) {
                alt183=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 183, 0, input);

                throw nvae;
            }
            switch (alt183) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportedVariableDeclarationOrBindingAccess().getExportedVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportedVariableBinding_0=ruleExportedVariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportedVariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportedVariableDeclarationOrBindingAccess().getExportedVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportedVariableDeclaration_1=ruleExportedVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportedVariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ExportedVariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_ExportedVariableBinding_0 = null;

        EObject this_ExportedVariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( (LA184_0==LeftCurlyBracket) && (synpred104_InternalN4JSParser())) {
                alt184=1;
            }
            else if ( (LA184_0==LeftSquareBracket) && (synpred104_InternalN4JSParser())) {
                alt184=1;
            }
            else if ( ((LA184_0>=Intersection && LA184_0<=Implements)||(LA184_0>=Promisify && LA184_0<=Abstract)||LA184_0==External||(LA184_0>=Private && LA184_0<=Project)||LA184_0==Public||LA184_0==Static||LA184_0==Target||(LA184_0>=Async && LA184_0<=Await)||LA184_0==Union||LA184_0==This||LA184_0==From||LA184_0==Type||(LA184_0>=Get && LA184_0<=Let)||(LA184_0>=Out && LA184_0<=Set)||LA184_0==As||LA184_0==Of||LA184_0==CommercialAt||LA184_0==RULE_IDENTIFIER) ) {
                alt184=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 184, 0, input);

                throw nvae;
            }
            switch (alt184) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportedVariableDeclarationOrBindingAccess().getExportedVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportedVariableBinding_0=norm1_ExportedVariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportedVariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportedVariableDeclarationOrBindingAccess().getExportedVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportedVariableDeclaration_1=norm1_ExportedVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportedVariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportedVariableBinding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportedVariableBinding = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportedVariableBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportedVariableBinding=ruleExportedVariableBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportedVariableBinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportedVariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportedVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_pattern_0_0=ruleBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportedVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getExportedVariableBindingAccess().getEqualsSignKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportedVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportedVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ExportedVariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportedVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_pattern_0_0=norm1_BindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportedVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getExportedVariableBindingAccess().getEqualsSignKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportedVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportedVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportedVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportedVariableDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportedVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportedVariableDeclaration=ruleExportedVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportedVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportedVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExportedVariableDeclarationAccess().getExportedVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getExportedVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getExportedVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm5_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ExportedVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExportedVariableDeclarationAccess().getExportedVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getExportedVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getExportedVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm7_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleEmptyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyStatement=ruleEmptyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleEmptyStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getEmptyStatementAccess().getEmptyStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getEmptyStatementAccess().getSemicolonKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionStatement=ruleExpressionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_20);
            lv_expression_0_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExpressionStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpressionStatementAccess().getSemiParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_20);
            lv_expression_0_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExpressionStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpressionStatementAccess().getSemiParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleIfStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIfStatement=ruleIfStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIfStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_expression_2_0 = null;

        EObject lv_ifStmt_4_0 = null;

        EObject lv_elseStmt_6_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,If,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_66);
            lv_expression_2_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfStatementAccess().getIfStmtStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_68);
            lv_ifStmt_4_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
              	        }
                     		set(
                     			current, 
                     			"ifStmt",
                      		lv_ifStmt_4_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( (LA185_0==Else) ) {
                int LA185_1 = input.LA(2);

                if ( (synpred107_InternalN4JSParser()) ) {
                    alt185=1;
                }
            }
            switch (alt185) {
                case 1 :
                    {
                    {
                    otherlv_5=(Token)match(input,Else,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getIfStatementAccess().getElseKeyword_5_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfStatementAccess().getElseStmtStatementParserRuleCall_5_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_elseStmt_6_0=ruleStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"elseStmt",
                              		lv_elseStmt_6_0, 
                              		"eu.numberfour.n4js.N4JS.Statement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_IfStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_expression_2_0 = null;

        EObject lv_ifStmt_4_0 = null;

        EObject lv_elseStmt_6_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,If,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_66);
            lv_expression_2_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfStatementAccess().getIfStmtStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_68);
            lv_ifStmt_4_0=norm1_Statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
              	        }
                     		set(
                     			current, 
                     			"ifStmt",
                      		lv_ifStmt_4_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt186=2;
            int LA186_0 = input.LA(1);

            if ( (LA186_0==Else) ) {
                int LA186_1 = input.LA(2);

                if ( (synpred108_InternalN4JSParser()) ) {
                    alt186=1;
                }
            }
            switch (alt186) {
                case 1 :
                    {
                    {
                    otherlv_5=(Token)match(input,Else,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getIfStatementAccess().getElseKeyword_5_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfStatementAccess().getElseStmtStatementParserRuleCall_5_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_elseStmt_6_0=norm1_Statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"elseStmt",
                              		lv_elseStmt_6_0, 
                              		"eu.numberfour.n4js.N4JS.Statement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleIterationStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIterationStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIterationStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIterationStatement=ruleIterationStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIterationStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIterationStatement() throws RecognitionException {
        EObject current = null;

        EObject this_DoStatement_0 = null;

        EObject this_WhileStatement_1 = null;

        EObject this_ForStatement_2 = null;


         enterRule(); 
            
        try {
            {
            int alt187=3;
            switch ( input.LA(1) ) {
            case Do:
                {
                alt187=1;
                }
                break;
            case While:
                {
                alt187=2;
                }
                break;
            case For:
                {
                alt187=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 187, 0, input);

                throw nvae;
            }

            switch (alt187) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIterationStatementAccess().getDoStatementParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DoStatement_0=ruleDoStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DoStatement_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIterationStatementAccess().getWhileStatementParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WhileStatement_1=ruleWhileStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_WhileStatement_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIterationStatementAccess().getForStatementParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ForStatement_2=ruleForStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ForStatement_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_IterationStatement() throws RecognitionException {
        EObject current = null;

        EObject this_DoStatement_0 = null;

        EObject this_WhileStatement_1 = null;

        EObject this_ForStatement_2 = null;


         enterRule(); 
            
        try {
            {
            int alt188=3;
            switch ( input.LA(1) ) {
            case Do:
                {
                alt188=1;
                }
                break;
            case While:
                {
                alt188=2;
                }
                break;
            case For:
                {
                alt188=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 188, 0, input);

                throw nvae;
            }

            switch (alt188) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIterationStatementAccess().getDoStatementParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DoStatement_0=norm1_DoStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DoStatement_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIterationStatementAccess().getWhileStatementParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WhileStatement_1=norm1_WhileStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_WhileStatement_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIterationStatementAccess().getForStatementParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ForStatement_2=norm1_ForStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ForStatement_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleDoStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDoStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDoStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDoStatement=ruleDoStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDoStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleDoStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_statement_1_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Do,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getDoStatementAccess().getDoKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDoStatementAccess().getStatementStatementParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_69);
            lv_statement_1_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDoStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_1_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,While,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDoStatementAccess().getWhileKeyword_2());
                  
            }
            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDoStatementAccess().getExpressionExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_66);
            lv_expression_4_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDoStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_4_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5());
                  
            }
            int alt189=2;
            alt189 = dfa189.predict(input);
            switch (alt189) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDoStatementAccess().getSemiParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_DoStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_statement_1_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Do,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getDoStatementAccess().getDoKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDoStatementAccess().getStatementStatementParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_69);
            lv_statement_1_0=norm1_Statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDoStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_1_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,While,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDoStatementAccess().getWhileKeyword_2());
                  
            }
            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDoStatementAccess().getExpressionExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_66);
            lv_expression_4_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDoStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_4_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5());
                  
            }
            int alt190=2;
            int LA190_0 = input.LA(1);

            if ( (LA190_0==Semicolon) ) {
                int LA190_1 = input.LA(2);

                if ( (synpred110_InternalN4JSParser()) ) {
                    alt190=1;
                }
            }
            else if ( (LA190_0==EOF||LA190_0==RULE_ML_COMMENT||LA190_0==RULE_EOL) && (synpred110_InternalN4JSParser())) {
                alt190=1;
            }
            else if ( (LA190_0==RightCurlyBracket) ) {
                int LA190_3 = input.LA(2);

                if ( (synpred110_InternalN4JSParser()) ) {
                    alt190=1;
                }
            }
            switch (alt190) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDoStatementAccess().getSemiParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleWhileStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhileStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhileStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWhileStatement=ruleWhileStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhileStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleWhileStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expression_2_0 = null;

        EObject lv_statement_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,While,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWhileStatementAccess().getWhileKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWhileStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_66);
            lv_expression_2_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWhileStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWhileStatementAccess().getStatementStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_4_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWhileStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_4_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_WhileStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expression_2_0 = null;

        EObject lv_statement_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,While,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWhileStatementAccess().getWhileKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWhileStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_66);
            lv_expression_2_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWhileStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWhileStatementAccess().getStatementStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_4_0=norm1_Statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWhileStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_4_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleForStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForStatement=ruleForStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleForStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_forIn_4_0=null;
        Token otherlv_6=null;
        Token lv_forIn_9_0=null;
        Token lv_forOf_10_0=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token lv_forIn_19_0=null;
        Token lv_forOf_21_0=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token lv_forIn_28_0=null;
        Token lv_forOf_30_0=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        EObject lv_initExpr_3_0 = null;

        EObject lv_expression_5_0 = null;

        Enumerator lv_varStmtKeyword_7_0 = null;

        EObject lv_varDeclsOrBindings_8_0 = null;

        EObject lv_expression_11_0 = null;

        EObject lv_varDeclsOrBindings_12_0 = null;

        EObject lv_varDeclsOrBindings_14_0 = null;

        EObject lv_expression_16_0 = null;

        EObject lv_updateExpr_18_0 = null;

        EObject lv_expression_20_0 = null;

        EObject lv_expression_22_0 = null;

        EObject lv_initExpr_23_0 = null;

        EObject lv_expression_25_0 = null;

        EObject lv_updateExpr_27_0 = null;

        EObject lv_expression_29_0 = null;

        EObject lv_expression_31_0 = null;

        EObject lv_expression_33_0 = null;

        EObject lv_updateExpr_35_0 = null;

        EObject lv_statement_37_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getForStatementAccess().getForStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,For,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getForStatementAccess().getForKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_70); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_2());
                  
            }
            int alt208=2;
            alt208 = dfa208.predict(input);
            switch (alt208) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getForStatementAccess().getInitExprLetIdentifierRefParserRuleCall_3_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_71);
                    lv_initExpr_3_0=ruleLetIdentifierRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"initExpr",
                              		lv_initExpr_3_0, 
                              		"eu.numberfour.n4js.N4JS.LetIdentifierRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    {
                    lv_forIn_4_0=(Token)match(input,In,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_forIn_4_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_0_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getForStatementRule());
                      	        }
                             		setWithLastConsumed(current, "forIn", true, "in");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_66);
                    lv_expression_5_0=norm1_Expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_5_0, 
                              		"eu.numberfour.n4js.N4JS.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_3_0_0_3());
                          
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    int alt207=3;
                    alt207 = dfa207.predict(input);
                    switch (alt207) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getForStatementAccess().getVarStmtKeywordVariableStatementKeywordEnumRuleCall_3_1_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_30);
                            lv_varStmtKeyword_7_0=ruleVariableStatementKeyword();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"varStmtKeyword",
                                      		lv_varStmtKeyword_7_0, 
                                      		"eu.numberfour.n4js.N4JS.VariableStatementKeyword");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt199=2;
                            alt199 = dfa199.predict(input);
                            switch (alt199) {
                                case 1 :
                                    {
                                    {
                                    {
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getVarDeclsOrBindingsBindingIdentifierAsVariableDeclarationParserRuleCall_3_1_0_0_1_0_0_0_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_72);
                                    lv_varDeclsOrBindings_8_0=ruleBindingIdentifierAsVariableDeclaration();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		add(
                                             			current, 
                                             			"varDeclsOrBindings",
                                              		lv_varDeclsOrBindings_8_0, 
                                              		"eu.numberfour.n4js.N4JS.BindingIdentifierAsVariableDeclaration");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    int alt191=2;
                                    int LA191_0 = input.LA(1);

                                    if ( (LA191_0==In) ) {
                                        alt191=1;
                                    }
                                    else if ( (LA191_0==Of) ) {
                                        alt191=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 191, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt191) {
                                        case 1 :
                                            {
                                            {
                                            {
                                            lv_forIn_9_0=(Token)match(input,In,FOLLOW_73); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forIn_9_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_1_0_0_1_0_0_1_0_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forIn", true, "in");
                                              	    
                                            }

                                            }


                                            }


                                            }
                                            break;
                                        case 2 :
                                            {
                                            {
                                            {
                                            lv_forOf_10_0=(Token)match(input,Of,FOLLOW_73); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forOf_10_0, grammarAccess.getForStatementAccess().getForOfOfKeyword_3_1_0_0_1_0_0_1_1_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forOf", true, "of");
                                              	    
                                            }

                                            }


                                            }


                                            }
                                            break;

                                    }
                                    int alt192=2;
                                    alt192 = dfa192.predict(input);
                                    switch (alt192) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0_0_1_0_0_2_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_66);
                                            lv_expression_11_0=norm1_AssignmentExpression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_11_0, 
                                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    {
                                    {
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_3_1_0_0_1_1_0_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_74);
                                    lv_varDeclsOrBindings_12_0=norm4_VariableDeclarationOrBinding();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		add(
                                             			current, 
                                             			"varDeclsOrBindings",
                                              		lv_varDeclsOrBindings_12_0, 
                                              		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    int alt198=3;
                                    switch ( input.LA(1) ) {
                                    case Comma:
                                    case Semicolon:
                                        {
                                        alt198=1;
                                        }
                                        break;
                                    case In:
                                        {
                                        alt198=2;
                                        }
                                        break;
                                    case Of:
                                        {
                                        alt198=3;
                                        }
                                        break;
                                    default:
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 198, 0, input);

                                        throw nvae;
                                    }

                                    switch (alt198) {
                                        case 1 :
                                            {
                                            {
                                            loop193:
                                            do {
                                                int alt193=2;
                                                int LA193_0 = input.LA(1);

                                                if ( (LA193_0==Comma) ) {
                                                    alt193=1;
                                                }


                                                switch (alt193) {
                                            	case 1 :
                                            	    {
                                            	    otherlv_13=(Token)match(input,Comma,FOLLOW_30); if (state.failed) return current;
                                            	    if ( state.backtracking==0 ) {

                                            	          	newLeafNode(otherlv_13, grammarAccess.getForStatementAccess().getCommaKeyword_3_1_0_0_1_1_1_0_0_0());
                                            	          
                                            	    }
                                            	    {
                                            	    {
                                            	    if ( state.backtracking==0 ) {
                                            	       
                                            	      	        newCompositeNode(grammarAccess.getForStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_3_1_0_0_1_1_1_0_0_1_0()); 
                                            	      	    
                                            	    }
                                            	    pushFollow(FOLLOW_75);
                                            	    lv_varDeclsOrBindings_14_0=ruleVariableDeclarationOrBinding();

                                            	    state._fsp--;
                                            	    if (state.failed) return current;
                                            	    if ( state.backtracking==0 ) {

                                            	      	        if (current==null) {
                                            	      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                            	      	        }
                                            	             		add(
                                            	             			current, 
                                            	             			"varDeclsOrBindings",
                                            	              		lv_varDeclsOrBindings_14_0, 
                                            	              		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
                                            	      	        afterParserOrEnumRuleCall();
                                            	      	    
                                            	    }

                                            	    }


                                            	    }


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop193;
                                                }
                                            } while (true);

                                            otherlv_15=(Token)match(input,Semicolon,FOLLOW_76); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_15, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_0_1_1_1_0_1());
                                                  
                                            }
                                            int alt194=2;
                                            int LA194_0 = input.LA(1);

                                            if ( ((LA194_0>=Intersection && LA194_0<=Implements)||(LA194_0>=Promisify && LA194_0<=Abstract)||(LA194_0>=External && LA194_0<=Function)||(LA194_0>=Private && LA194_0<=Delete)||LA194_0==Public||LA194_0==Static||(LA194_0>=Target && LA194_0<=Await)||LA194_0==Class||(LA194_0>=False && LA194_0<=Super)||LA194_0==Union||(LA194_0>=Yield && LA194_0<=This)||(LA194_0>=From && LA194_0<=Void)||(LA194_0>=Get && LA194_0<=Set)||LA194_0==PlusSignPlusSign||LA194_0==HyphenMinusHyphenMinus||LA194_0==SolidusEqualsSign||LA194_0==As||LA194_0==Of||LA194_0==ExclamationMark||LA194_0==LeftParenthesis||(LA194_0>=Asterisk && LA194_0<=PlusSign)||LA194_0==HyphenMinus||LA194_0==Solidus||LA194_0==LessThanSign||(LA194_0>=CommercialAt && LA194_0<=LeftSquareBracket)||LA194_0==LeftCurlyBracket||LA194_0==Tilde||LA194_0==RULE_DOUBLE||(LA194_0>=RULE_HEX_INT && LA194_0<=RULE_LEGACY_OCTAL_INT)||LA194_0==RULE_SCIENTIFIC_INT||LA194_0==RULE_IDENTIFIER||LA194_0==RULE_STRING||(LA194_0>=RULE_TEMPLATE_HEAD && LA194_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA194_0==RULE_INT) ) {
                                                alt194=1;
                                            }
                                            switch (alt194) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_0_1_1_1_0_2_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_77);
                                                    lv_expression_16_0=norm1_Expression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"expression",
                                                              		lv_expression_16_0, 
                                                              		"eu.numberfour.n4js.N4JS.Expression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }

                                            otherlv_17=(Token)match(input,Semicolon,FOLLOW_73); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_17, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_0_1_1_1_0_3());
                                                  
                                            }
                                            int alt195=2;
                                            int LA195_0 = input.LA(1);

                                            if ( ((LA195_0>=Intersection && LA195_0<=Implements)||(LA195_0>=Promisify && LA195_0<=Abstract)||(LA195_0>=External && LA195_0<=Function)||(LA195_0>=Private && LA195_0<=Delete)||LA195_0==Public||LA195_0==Static||(LA195_0>=Target && LA195_0<=Await)||LA195_0==Class||(LA195_0>=False && LA195_0<=Super)||LA195_0==Union||(LA195_0>=Yield && LA195_0<=This)||(LA195_0>=From && LA195_0<=Void)||(LA195_0>=Get && LA195_0<=Set)||LA195_0==PlusSignPlusSign||LA195_0==HyphenMinusHyphenMinus||LA195_0==SolidusEqualsSign||LA195_0==As||LA195_0==Of||LA195_0==ExclamationMark||LA195_0==LeftParenthesis||(LA195_0>=Asterisk && LA195_0<=PlusSign)||LA195_0==HyphenMinus||LA195_0==Solidus||LA195_0==LessThanSign||(LA195_0>=CommercialAt && LA195_0<=LeftSquareBracket)||LA195_0==LeftCurlyBracket||LA195_0==Tilde||LA195_0==RULE_DOUBLE||(LA195_0>=RULE_HEX_INT && LA195_0<=RULE_LEGACY_OCTAL_INT)||LA195_0==RULE_SCIENTIFIC_INT||LA195_0==RULE_IDENTIFIER||LA195_0==RULE_STRING||(LA195_0>=RULE_TEMPLATE_HEAD && LA195_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA195_0==RULE_INT) ) {
                                                alt195=1;
                                            }
                                            switch (alt195) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getUpdateExprExpressionParserRuleCall_3_1_0_0_1_1_1_0_4_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_66);
                                                    lv_updateExpr_18_0=norm1_Expression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"updateExpr",
                                                              		lv_updateExpr_18_0, 
                                                              		"eu.numberfour.n4js.N4JS.Expression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }


                                            }


                                            }
                                            break;
                                        case 2 :
                                            {
                                            {
                                            {
                                            {
                                            lv_forIn_19_0=(Token)match(input,In,FOLLOW_73); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forIn_19_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_1_0_0_1_1_1_1_0_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forIn", true, "in");
                                              	    
                                            }

                                            }


                                            }
                                            int alt196=2;
                                            int LA196_0 = input.LA(1);

                                            if ( ((LA196_0>=Intersection && LA196_0<=Implements)||(LA196_0>=Promisify && LA196_0<=Abstract)||(LA196_0>=External && LA196_0<=Function)||(LA196_0>=Private && LA196_0<=Delete)||LA196_0==Public||LA196_0==Static||(LA196_0>=Target && LA196_0<=Await)||LA196_0==Class||(LA196_0>=False && LA196_0<=Super)||LA196_0==Union||(LA196_0>=Yield && LA196_0<=This)||(LA196_0>=From && LA196_0<=Void)||(LA196_0>=Get && LA196_0<=Set)||LA196_0==PlusSignPlusSign||LA196_0==HyphenMinusHyphenMinus||LA196_0==SolidusEqualsSign||LA196_0==As||LA196_0==Of||LA196_0==ExclamationMark||LA196_0==LeftParenthesis||(LA196_0>=Asterisk && LA196_0<=PlusSign)||LA196_0==HyphenMinus||LA196_0==Solidus||LA196_0==LessThanSign||(LA196_0>=CommercialAt && LA196_0<=LeftSquareBracket)||LA196_0==LeftCurlyBracket||LA196_0==Tilde||LA196_0==RULE_DOUBLE||(LA196_0>=RULE_HEX_INT && LA196_0<=RULE_LEGACY_OCTAL_INT)||LA196_0==RULE_SCIENTIFIC_INT||LA196_0==RULE_IDENTIFIER||LA196_0==RULE_STRING||(LA196_0>=RULE_TEMPLATE_HEAD && LA196_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA196_0==RULE_INT) ) {
                                                alt196=1;
                                            }
                                            switch (alt196) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_0_1_1_1_1_1_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_66);
                                                    lv_expression_20_0=norm1_Expression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"expression",
                                                              		lv_expression_20_0, 
                                                              		"eu.numberfour.n4js.N4JS.Expression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }


                                            }


                                            }
                                            break;
                                        case 3 :
                                            {
                                            {
                                            {
                                            {
                                            lv_forOf_21_0=(Token)match(input,Of,FOLLOW_73); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forOf_21_0, grammarAccess.getForStatementAccess().getForOfOfKeyword_3_1_0_0_1_1_1_2_0_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forOf", true, "of");
                                              	    
                                            }

                                            }


                                            }
                                            int alt197=2;
                                            int LA197_0 = input.LA(1);

                                            if ( ((LA197_0>=Intersection && LA197_0<=Implements)||(LA197_0>=Promisify && LA197_0<=Abstract)||(LA197_0>=External && LA197_0<=Function)||(LA197_0>=Private && LA197_0<=Delete)||LA197_0==Public||LA197_0==Static||(LA197_0>=Target && LA197_0<=Await)||LA197_0==Class||(LA197_0>=False && LA197_0<=Super)||LA197_0==Union||(LA197_0>=Yield && LA197_0<=This)||(LA197_0>=From && LA197_0<=Void)||(LA197_0>=Get && LA197_0<=Set)||LA197_0==PlusSignPlusSign||LA197_0==HyphenMinusHyphenMinus||LA197_0==SolidusEqualsSign||LA197_0==As||LA197_0==Of||LA197_0==ExclamationMark||LA197_0==LeftParenthesis||(LA197_0>=Asterisk && LA197_0<=PlusSign)||LA197_0==HyphenMinus||LA197_0==Solidus||LA197_0==LessThanSign||(LA197_0>=CommercialAt && LA197_0<=LeftSquareBracket)||LA197_0==LeftCurlyBracket||LA197_0==Tilde||LA197_0==RULE_DOUBLE||(LA197_0>=RULE_HEX_INT && LA197_0<=RULE_LEGACY_OCTAL_INT)||LA197_0==RULE_SCIENTIFIC_INT||LA197_0==RULE_IDENTIFIER||LA197_0==RULE_STRING||(LA197_0>=RULE_TEMPLATE_HEAD && LA197_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA197_0==RULE_INT) ) {
                                                alt197=1;
                                            }
                                            switch (alt197) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0_0_1_1_1_2_1_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_66);
                                                    lv_expression_22_0=norm1_AssignmentExpression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"expression",
                                                              		lv_expression_22_0, 
                                                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }


                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getForStatementAccess().getInitExprExpressionParserRuleCall_3_1_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_78);
                            lv_initExpr_23_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"initExpr",
                                      		lv_initExpr_23_0, 
                                      		"eu.numberfour.n4js.N4JS.Expression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt204=3;
                            switch ( input.LA(1) ) {
                            case Semicolon:
                                {
                                alt204=1;
                                }
                                break;
                            case In:
                                {
                                alt204=2;
                                }
                                break;
                            case Of:
                                {
                                alt204=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 204, 0, input);

                                throw nvae;
                            }

                            switch (alt204) {
                                case 1 :
                                    {
                                    {
                                    otherlv_24=(Token)match(input,Semicolon,FOLLOW_76); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_24, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_1_1_0_0());
                                          
                                    }
                                    int alt200=2;
                                    int LA200_0 = input.LA(1);

                                    if ( ((LA200_0>=Intersection && LA200_0<=Implements)||(LA200_0>=Promisify && LA200_0<=Abstract)||(LA200_0>=External && LA200_0<=Function)||(LA200_0>=Private && LA200_0<=Delete)||LA200_0==Public||LA200_0==Static||(LA200_0>=Target && LA200_0<=Await)||LA200_0==Class||(LA200_0>=False && LA200_0<=Super)||LA200_0==Union||(LA200_0>=Yield && LA200_0<=This)||(LA200_0>=From && LA200_0<=Void)||(LA200_0>=Get && LA200_0<=Set)||LA200_0==PlusSignPlusSign||LA200_0==HyphenMinusHyphenMinus||LA200_0==SolidusEqualsSign||LA200_0==As||LA200_0==Of||LA200_0==ExclamationMark||LA200_0==LeftParenthesis||(LA200_0>=Asterisk && LA200_0<=PlusSign)||LA200_0==HyphenMinus||LA200_0==Solidus||LA200_0==LessThanSign||(LA200_0>=CommercialAt && LA200_0<=LeftSquareBracket)||LA200_0==LeftCurlyBracket||LA200_0==Tilde||LA200_0==RULE_DOUBLE||(LA200_0>=RULE_HEX_INT && LA200_0<=RULE_LEGACY_OCTAL_INT)||LA200_0==RULE_SCIENTIFIC_INT||LA200_0==RULE_IDENTIFIER||LA200_0==RULE_STRING||(LA200_0>=RULE_TEMPLATE_HEAD && LA200_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA200_0==RULE_INT) ) {
                                        alt200=1;
                                    }
                                    switch (alt200) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_1_1_0_1_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_77);
                                            lv_expression_25_0=norm1_Expression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_25_0, 
                                                      		"eu.numberfour.n4js.N4JS.Expression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }

                                    otherlv_26=(Token)match(input,Semicolon,FOLLOW_73); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_26, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_1_1_0_2());
                                          
                                    }
                                    int alt201=2;
                                    int LA201_0 = input.LA(1);

                                    if ( ((LA201_0>=Intersection && LA201_0<=Implements)||(LA201_0>=Promisify && LA201_0<=Abstract)||(LA201_0>=External && LA201_0<=Function)||(LA201_0>=Private && LA201_0<=Delete)||LA201_0==Public||LA201_0==Static||(LA201_0>=Target && LA201_0<=Await)||LA201_0==Class||(LA201_0>=False && LA201_0<=Super)||LA201_0==Union||(LA201_0>=Yield && LA201_0<=This)||(LA201_0>=From && LA201_0<=Void)||(LA201_0>=Get && LA201_0<=Set)||LA201_0==PlusSignPlusSign||LA201_0==HyphenMinusHyphenMinus||LA201_0==SolidusEqualsSign||LA201_0==As||LA201_0==Of||LA201_0==ExclamationMark||LA201_0==LeftParenthesis||(LA201_0>=Asterisk && LA201_0<=PlusSign)||LA201_0==HyphenMinus||LA201_0==Solidus||LA201_0==LessThanSign||(LA201_0>=CommercialAt && LA201_0<=LeftSquareBracket)||LA201_0==LeftCurlyBracket||LA201_0==Tilde||LA201_0==RULE_DOUBLE||(LA201_0>=RULE_HEX_INT && LA201_0<=RULE_LEGACY_OCTAL_INT)||LA201_0==RULE_SCIENTIFIC_INT||LA201_0==RULE_IDENTIFIER||LA201_0==RULE_STRING||(LA201_0>=RULE_TEMPLATE_HEAD && LA201_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA201_0==RULE_INT) ) {
                                        alt201=1;
                                    }
                                    switch (alt201) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getUpdateExprExpressionParserRuleCall_3_1_0_1_1_0_3_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_66);
                                            lv_updateExpr_27_0=norm1_Expression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"updateExpr",
                                                      		lv_updateExpr_27_0, 
                                                      		"eu.numberfour.n4js.N4JS.Expression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    {
                                    {
                                    {
                                    {
                                    lv_forIn_28_0=(Token)match(input,In,FOLLOW_73); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_forIn_28_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_1_0_1_1_1_0_0());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getForStatementRule());
                                      	        }
                                             		setWithLastConsumed(current, "forIn", true, "in");
                                      	    
                                    }

                                    }


                                    }
                                    int alt202=2;
                                    int LA202_0 = input.LA(1);

                                    if ( ((LA202_0>=Intersection && LA202_0<=Implements)||(LA202_0>=Promisify && LA202_0<=Abstract)||(LA202_0>=External && LA202_0<=Function)||(LA202_0>=Private && LA202_0<=Delete)||LA202_0==Public||LA202_0==Static||(LA202_0>=Target && LA202_0<=Await)||LA202_0==Class||(LA202_0>=False && LA202_0<=Super)||LA202_0==Union||(LA202_0>=Yield && LA202_0<=This)||(LA202_0>=From && LA202_0<=Void)||(LA202_0>=Get && LA202_0<=Set)||LA202_0==PlusSignPlusSign||LA202_0==HyphenMinusHyphenMinus||LA202_0==SolidusEqualsSign||LA202_0==As||LA202_0==Of||LA202_0==ExclamationMark||LA202_0==LeftParenthesis||(LA202_0>=Asterisk && LA202_0<=PlusSign)||LA202_0==HyphenMinus||LA202_0==Solidus||LA202_0==LessThanSign||(LA202_0>=CommercialAt && LA202_0<=LeftSquareBracket)||LA202_0==LeftCurlyBracket||LA202_0==Tilde||LA202_0==RULE_DOUBLE||(LA202_0>=RULE_HEX_INT && LA202_0<=RULE_LEGACY_OCTAL_INT)||LA202_0==RULE_SCIENTIFIC_INT||LA202_0==RULE_IDENTIFIER||LA202_0==RULE_STRING||(LA202_0>=RULE_TEMPLATE_HEAD && LA202_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA202_0==RULE_INT) ) {
                                        alt202=1;
                                    }
                                    switch (alt202) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_1_1_1_1_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_66);
                                            lv_expression_29_0=norm1_Expression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_29_0, 
                                                      		"eu.numberfour.n4js.N4JS.Expression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;
                                case 3 :
                                    {
                                    {
                                    {
                                    {
                                    lv_forOf_30_0=(Token)match(input,Of,FOLLOW_73); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_forOf_30_0, grammarAccess.getForStatementAccess().getForOfOfKeyword_3_1_0_1_1_2_0_0());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getForStatementRule());
                                      	        }
                                             		setWithLastConsumed(current, "forOf", true, "of");
                                      	    
                                    }

                                    }


                                    }
                                    int alt203=2;
                                    int LA203_0 = input.LA(1);

                                    if ( ((LA203_0>=Intersection && LA203_0<=Implements)||(LA203_0>=Promisify && LA203_0<=Abstract)||(LA203_0>=External && LA203_0<=Function)||(LA203_0>=Private && LA203_0<=Delete)||LA203_0==Public||LA203_0==Static||(LA203_0>=Target && LA203_0<=Await)||LA203_0==Class||(LA203_0>=False && LA203_0<=Super)||LA203_0==Union||(LA203_0>=Yield && LA203_0<=This)||(LA203_0>=From && LA203_0<=Void)||(LA203_0>=Get && LA203_0<=Set)||LA203_0==PlusSignPlusSign||LA203_0==HyphenMinusHyphenMinus||LA203_0==SolidusEqualsSign||LA203_0==As||LA203_0==Of||LA203_0==ExclamationMark||LA203_0==LeftParenthesis||(LA203_0>=Asterisk && LA203_0<=PlusSign)||LA203_0==HyphenMinus||LA203_0==Solidus||LA203_0==LessThanSign||(LA203_0>=CommercialAt && LA203_0<=LeftSquareBracket)||LA203_0==LeftCurlyBracket||LA203_0==Tilde||LA203_0==RULE_DOUBLE||(LA203_0>=RULE_HEX_INT && LA203_0<=RULE_LEGACY_OCTAL_INT)||LA203_0==RULE_SCIENTIFIC_INT||LA203_0==RULE_IDENTIFIER||LA203_0==RULE_STRING||(LA203_0>=RULE_TEMPLATE_HEAD && LA203_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA203_0==RULE_INT) ) {
                                        alt203=1;
                                    }
                                    switch (alt203) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0_1_1_2_1_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_66);
                                            lv_expression_31_0=norm1_AssignmentExpression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_31_0, 
                                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            {
                            {
                            otherlv_32=(Token)match(input,Semicolon,FOLLOW_76); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_32, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_2_0());
                                  
                            }
                            int alt205=2;
                            int LA205_0 = input.LA(1);

                            if ( ((LA205_0>=Intersection && LA205_0<=Implements)||(LA205_0>=Promisify && LA205_0<=Abstract)||(LA205_0>=External && LA205_0<=Function)||(LA205_0>=Private && LA205_0<=Delete)||LA205_0==Public||LA205_0==Static||(LA205_0>=Target && LA205_0<=Await)||LA205_0==Class||(LA205_0>=False && LA205_0<=Super)||LA205_0==Union||(LA205_0>=Yield && LA205_0<=This)||(LA205_0>=From && LA205_0<=Void)||(LA205_0>=Get && LA205_0<=Set)||LA205_0==PlusSignPlusSign||LA205_0==HyphenMinusHyphenMinus||LA205_0==SolidusEqualsSign||LA205_0==As||LA205_0==Of||LA205_0==ExclamationMark||LA205_0==LeftParenthesis||(LA205_0>=Asterisk && LA205_0<=PlusSign)||LA205_0==HyphenMinus||LA205_0==Solidus||LA205_0==LessThanSign||(LA205_0>=CommercialAt && LA205_0<=LeftSquareBracket)||LA205_0==LeftCurlyBracket||LA205_0==Tilde||LA205_0==RULE_DOUBLE||(LA205_0>=RULE_HEX_INT && LA205_0<=RULE_LEGACY_OCTAL_INT)||LA205_0==RULE_SCIENTIFIC_INT||LA205_0==RULE_IDENTIFIER||LA205_0==RULE_STRING||(LA205_0>=RULE_TEMPLATE_HEAD && LA205_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA205_0==RULE_INT) ) {
                                alt205=1;
                            }
                            switch (alt205) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_2_1_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_77);
                                    lv_expression_33_0=norm1_Expression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"expression",
                                              		lv_expression_33_0, 
                                              		"eu.numberfour.n4js.N4JS.Expression");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }

                            otherlv_34=(Token)match(input,Semicolon,FOLLOW_73); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_34, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_2_2());
                                  
                            }
                            int alt206=2;
                            int LA206_0 = input.LA(1);

                            if ( ((LA206_0>=Intersection && LA206_0<=Implements)||(LA206_0>=Promisify && LA206_0<=Abstract)||(LA206_0>=External && LA206_0<=Function)||(LA206_0>=Private && LA206_0<=Delete)||LA206_0==Public||LA206_0==Static||(LA206_0>=Target && LA206_0<=Await)||LA206_0==Class||(LA206_0>=False && LA206_0<=Super)||LA206_0==Union||(LA206_0>=Yield && LA206_0<=This)||(LA206_0>=From && LA206_0<=Void)||(LA206_0>=Get && LA206_0<=Set)||LA206_0==PlusSignPlusSign||LA206_0==HyphenMinusHyphenMinus||LA206_0==SolidusEqualsSign||LA206_0==As||LA206_0==Of||LA206_0==ExclamationMark||LA206_0==LeftParenthesis||(LA206_0>=Asterisk && LA206_0<=PlusSign)||LA206_0==HyphenMinus||LA206_0==Solidus||LA206_0==LessThanSign||(LA206_0>=CommercialAt && LA206_0<=LeftSquareBracket)||LA206_0==LeftCurlyBracket||LA206_0==Tilde||LA206_0==RULE_DOUBLE||(LA206_0>=RULE_HEX_INT && LA206_0<=RULE_LEGACY_OCTAL_INT)||LA206_0==RULE_SCIENTIFIC_INT||LA206_0==RULE_IDENTIFIER||LA206_0==RULE_STRING||(LA206_0>=RULE_TEMPLATE_HEAD && LA206_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA206_0==RULE_INT) ) {
                                alt206=1;
                            }
                            switch (alt206) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getUpdateExprExpressionParserRuleCall_3_1_0_2_3_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_66);
                                    lv_updateExpr_35_0=norm1_Expression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"updateExpr",
                                              		lv_updateExpr_35_0, 
                                              		"eu.numberfour.n4js.N4JS.Expression");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    otherlv_36=(Token)match(input,RightParenthesis,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_36, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_3_1_1());
                          
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getForStatementAccess().getStatementStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_37_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_37_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ForStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_forIn_4_0=null;
        Token otherlv_6=null;
        Token lv_forIn_9_0=null;
        Token lv_forOf_10_0=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token lv_forIn_19_0=null;
        Token lv_forOf_21_0=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token lv_forIn_28_0=null;
        Token lv_forOf_30_0=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        EObject lv_initExpr_3_0 = null;

        EObject lv_expression_5_0 = null;

        Enumerator lv_varStmtKeyword_7_0 = null;

        EObject lv_varDeclsOrBindings_8_0 = null;

        EObject lv_expression_11_0 = null;

        EObject lv_varDeclsOrBindings_12_0 = null;

        EObject lv_varDeclsOrBindings_14_0 = null;

        EObject lv_expression_16_0 = null;

        EObject lv_updateExpr_18_0 = null;

        EObject lv_expression_20_0 = null;

        EObject lv_expression_22_0 = null;

        EObject lv_initExpr_23_0 = null;

        EObject lv_expression_25_0 = null;

        EObject lv_updateExpr_27_0 = null;

        EObject lv_expression_29_0 = null;

        EObject lv_expression_31_0 = null;

        EObject lv_expression_33_0 = null;

        EObject lv_updateExpr_35_0 = null;

        EObject lv_statement_37_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getForStatementAccess().getForStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,For,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getForStatementAccess().getForKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_70); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_2());
                  
            }
            int alt226=2;
            alt226 = dfa226.predict(input);
            switch (alt226) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getForStatementAccess().getInitExprLetIdentifierRefParserRuleCall_3_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_71);
                    lv_initExpr_3_0=ruleLetIdentifierRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"initExpr",
                              		lv_initExpr_3_0, 
                              		"eu.numberfour.n4js.N4JS.LetIdentifierRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    {
                    lv_forIn_4_0=(Token)match(input,In,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_forIn_4_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_0_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getForStatementRule());
                      	        }
                             		setWithLastConsumed(current, "forIn", true, "in");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_66);
                    lv_expression_5_0=norm3_Expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_5_0, 
                              		"eu.numberfour.n4js.N4JS.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_3_0_0_3());
                          
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    int alt225=3;
                    alt225 = dfa225.predict(input);
                    switch (alt225) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getForStatementAccess().getVarStmtKeywordVariableStatementKeywordEnumRuleCall_3_1_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_30);
                            lv_varStmtKeyword_7_0=ruleVariableStatementKeyword();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"varStmtKeyword",
                                      		lv_varStmtKeyword_7_0, 
                                      		"eu.numberfour.n4js.N4JS.VariableStatementKeyword");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt217=2;
                            alt217 = dfa217.predict(input);
                            switch (alt217) {
                                case 1 :
                                    {
                                    {
                                    {
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getVarDeclsOrBindingsBindingIdentifierAsVariableDeclarationParserRuleCall_3_1_0_0_1_0_0_0_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_72);
                                    lv_varDeclsOrBindings_8_0=norm2_BindingIdentifierAsVariableDeclaration();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		add(
                                             			current, 
                                             			"varDeclsOrBindings",
                                              		lv_varDeclsOrBindings_8_0, 
                                              		"eu.numberfour.n4js.N4JS.BindingIdentifierAsVariableDeclaration");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    int alt209=2;
                                    int LA209_0 = input.LA(1);

                                    if ( (LA209_0==In) ) {
                                        alt209=1;
                                    }
                                    else if ( (LA209_0==Of) ) {
                                        alt209=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 209, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt209) {
                                        case 1 :
                                            {
                                            {
                                            {
                                            lv_forIn_9_0=(Token)match(input,In,FOLLOW_73); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forIn_9_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_1_0_0_1_0_0_1_0_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forIn", true, "in");
                                              	    
                                            }

                                            }


                                            }


                                            }
                                            break;
                                        case 2 :
                                            {
                                            {
                                            {
                                            lv_forOf_10_0=(Token)match(input,Of,FOLLOW_73); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forOf_10_0, grammarAccess.getForStatementAccess().getForOfOfKeyword_3_1_0_0_1_0_0_1_1_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forOf", true, "of");
                                              	    
                                            }

                                            }


                                            }


                                            }
                                            break;

                                    }
                                    int alt210=2;
                                    alt210 = dfa210.predict(input);
                                    switch (alt210) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0_0_1_0_0_2_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_66);
                                            lv_expression_11_0=norm3_AssignmentExpression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_11_0, 
                                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    {
                                    {
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_3_1_0_0_1_1_0_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_74);
                                    lv_varDeclsOrBindings_12_0=norm6_VariableDeclarationOrBinding();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		add(
                                             			current, 
                                             			"varDeclsOrBindings",
                                              		lv_varDeclsOrBindings_12_0, 
                                              		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    int alt216=3;
                                    switch ( input.LA(1) ) {
                                    case Comma:
                                    case Semicolon:
                                        {
                                        alt216=1;
                                        }
                                        break;
                                    case In:
                                        {
                                        alt216=2;
                                        }
                                        break;
                                    case Of:
                                        {
                                        alt216=3;
                                        }
                                        break;
                                    default:
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 216, 0, input);

                                        throw nvae;
                                    }

                                    switch (alt216) {
                                        case 1 :
                                            {
                                            {
                                            loop211:
                                            do {
                                                int alt211=2;
                                                int LA211_0 = input.LA(1);

                                                if ( (LA211_0==Comma) ) {
                                                    alt211=1;
                                                }


                                                switch (alt211) {
                                            	case 1 :
                                            	    {
                                            	    otherlv_13=(Token)match(input,Comma,FOLLOW_30); if (state.failed) return current;
                                            	    if ( state.backtracking==0 ) {

                                            	          	newLeafNode(otherlv_13, grammarAccess.getForStatementAccess().getCommaKeyword_3_1_0_0_1_1_1_0_0_0());
                                            	          
                                            	    }
                                            	    {
                                            	    {
                                            	    if ( state.backtracking==0 ) {
                                            	       
                                            	      	        newCompositeNode(grammarAccess.getForStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_3_1_0_0_1_1_1_0_0_1_0()); 
                                            	      	    
                                            	    }
                                            	    pushFollow(FOLLOW_75);
                                            	    lv_varDeclsOrBindings_14_0=norm2_VariableDeclarationOrBinding();

                                            	    state._fsp--;
                                            	    if (state.failed) return current;
                                            	    if ( state.backtracking==0 ) {

                                            	      	        if (current==null) {
                                            	      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                            	      	        }
                                            	             		add(
                                            	             			current, 
                                            	             			"varDeclsOrBindings",
                                            	              		lv_varDeclsOrBindings_14_0, 
                                            	              		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
                                            	      	        afterParserOrEnumRuleCall();
                                            	      	    
                                            	    }

                                            	    }


                                            	    }


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop211;
                                                }
                                            } while (true);

                                            otherlv_15=(Token)match(input,Semicolon,FOLLOW_76); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_15, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_0_1_1_1_0_1());
                                                  
                                            }
                                            int alt212=2;
                                            int LA212_0 = input.LA(1);

                                            if ( ((LA212_0>=Intersection && LA212_0<=Implements)||(LA212_0>=Promisify && LA212_0<=Abstract)||(LA212_0>=External && LA212_0<=Function)||(LA212_0>=Private && LA212_0<=Delete)||LA212_0==Public||LA212_0==Static||(LA212_0>=Target && LA212_0<=Await)||LA212_0==Class||(LA212_0>=False && LA212_0<=Super)||LA212_0==Union||(LA212_0>=Yield && LA212_0<=This)||(LA212_0>=From && LA212_0<=Void)||(LA212_0>=Get && LA212_0<=Set)||LA212_0==PlusSignPlusSign||LA212_0==HyphenMinusHyphenMinus||LA212_0==SolidusEqualsSign||LA212_0==As||LA212_0==Of||LA212_0==ExclamationMark||LA212_0==LeftParenthesis||(LA212_0>=Asterisk && LA212_0<=PlusSign)||LA212_0==HyphenMinus||LA212_0==Solidus||LA212_0==LessThanSign||(LA212_0>=CommercialAt && LA212_0<=LeftSquareBracket)||LA212_0==LeftCurlyBracket||LA212_0==Tilde||LA212_0==RULE_DOUBLE||(LA212_0>=RULE_HEX_INT && LA212_0<=RULE_LEGACY_OCTAL_INT)||LA212_0==RULE_SCIENTIFIC_INT||LA212_0==RULE_IDENTIFIER||LA212_0==RULE_STRING||(LA212_0>=RULE_TEMPLATE_HEAD && LA212_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA212_0==RULE_INT) ) {
                                                alt212=1;
                                            }
                                            switch (alt212) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_0_1_1_1_0_2_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_77);
                                                    lv_expression_16_0=norm3_Expression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"expression",
                                                              		lv_expression_16_0, 
                                                              		"eu.numberfour.n4js.N4JS.Expression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }

                                            otherlv_17=(Token)match(input,Semicolon,FOLLOW_73); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_17, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_0_1_1_1_0_3());
                                                  
                                            }
                                            int alt213=2;
                                            int LA213_0 = input.LA(1);

                                            if ( ((LA213_0>=Intersection && LA213_0<=Implements)||(LA213_0>=Promisify && LA213_0<=Abstract)||(LA213_0>=External && LA213_0<=Function)||(LA213_0>=Private && LA213_0<=Delete)||LA213_0==Public||LA213_0==Static||(LA213_0>=Target && LA213_0<=Await)||LA213_0==Class||(LA213_0>=False && LA213_0<=Super)||LA213_0==Union||(LA213_0>=Yield && LA213_0<=This)||(LA213_0>=From && LA213_0<=Void)||(LA213_0>=Get && LA213_0<=Set)||LA213_0==PlusSignPlusSign||LA213_0==HyphenMinusHyphenMinus||LA213_0==SolidusEqualsSign||LA213_0==As||LA213_0==Of||LA213_0==ExclamationMark||LA213_0==LeftParenthesis||(LA213_0>=Asterisk && LA213_0<=PlusSign)||LA213_0==HyphenMinus||LA213_0==Solidus||LA213_0==LessThanSign||(LA213_0>=CommercialAt && LA213_0<=LeftSquareBracket)||LA213_0==LeftCurlyBracket||LA213_0==Tilde||LA213_0==RULE_DOUBLE||(LA213_0>=RULE_HEX_INT && LA213_0<=RULE_LEGACY_OCTAL_INT)||LA213_0==RULE_SCIENTIFIC_INT||LA213_0==RULE_IDENTIFIER||LA213_0==RULE_STRING||(LA213_0>=RULE_TEMPLATE_HEAD && LA213_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA213_0==RULE_INT) ) {
                                                alt213=1;
                                            }
                                            switch (alt213) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getUpdateExprExpressionParserRuleCall_3_1_0_0_1_1_1_0_4_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_66);
                                                    lv_updateExpr_18_0=norm3_Expression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"updateExpr",
                                                              		lv_updateExpr_18_0, 
                                                              		"eu.numberfour.n4js.N4JS.Expression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }


                                            }


                                            }
                                            break;
                                        case 2 :
                                            {
                                            {
                                            {
                                            {
                                            lv_forIn_19_0=(Token)match(input,In,FOLLOW_73); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forIn_19_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_1_0_0_1_1_1_1_0_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forIn", true, "in");
                                              	    
                                            }

                                            }


                                            }
                                            int alt214=2;
                                            int LA214_0 = input.LA(1);

                                            if ( ((LA214_0>=Intersection && LA214_0<=Implements)||(LA214_0>=Promisify && LA214_0<=Abstract)||(LA214_0>=External && LA214_0<=Function)||(LA214_0>=Private && LA214_0<=Delete)||LA214_0==Public||LA214_0==Static||(LA214_0>=Target && LA214_0<=Await)||LA214_0==Class||(LA214_0>=False && LA214_0<=Super)||LA214_0==Union||(LA214_0>=Yield && LA214_0<=This)||(LA214_0>=From && LA214_0<=Void)||(LA214_0>=Get && LA214_0<=Set)||LA214_0==PlusSignPlusSign||LA214_0==HyphenMinusHyphenMinus||LA214_0==SolidusEqualsSign||LA214_0==As||LA214_0==Of||LA214_0==ExclamationMark||LA214_0==LeftParenthesis||(LA214_0>=Asterisk && LA214_0<=PlusSign)||LA214_0==HyphenMinus||LA214_0==Solidus||LA214_0==LessThanSign||(LA214_0>=CommercialAt && LA214_0<=LeftSquareBracket)||LA214_0==LeftCurlyBracket||LA214_0==Tilde||LA214_0==RULE_DOUBLE||(LA214_0>=RULE_HEX_INT && LA214_0<=RULE_LEGACY_OCTAL_INT)||LA214_0==RULE_SCIENTIFIC_INT||LA214_0==RULE_IDENTIFIER||LA214_0==RULE_STRING||(LA214_0>=RULE_TEMPLATE_HEAD && LA214_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA214_0==RULE_INT) ) {
                                                alt214=1;
                                            }
                                            switch (alt214) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_0_1_1_1_1_1_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_66);
                                                    lv_expression_20_0=norm3_Expression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"expression",
                                                              		lv_expression_20_0, 
                                                              		"eu.numberfour.n4js.N4JS.Expression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }


                                            }


                                            }
                                            break;
                                        case 3 :
                                            {
                                            {
                                            {
                                            {
                                            lv_forOf_21_0=(Token)match(input,Of,FOLLOW_73); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forOf_21_0, grammarAccess.getForStatementAccess().getForOfOfKeyword_3_1_0_0_1_1_1_2_0_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forOf", true, "of");
                                              	    
                                            }

                                            }


                                            }
                                            int alt215=2;
                                            int LA215_0 = input.LA(1);

                                            if ( ((LA215_0>=Intersection && LA215_0<=Implements)||(LA215_0>=Promisify && LA215_0<=Abstract)||(LA215_0>=External && LA215_0<=Function)||(LA215_0>=Private && LA215_0<=Delete)||LA215_0==Public||LA215_0==Static||(LA215_0>=Target && LA215_0<=Await)||LA215_0==Class||(LA215_0>=False && LA215_0<=Super)||LA215_0==Union||(LA215_0>=Yield && LA215_0<=This)||(LA215_0>=From && LA215_0<=Void)||(LA215_0>=Get && LA215_0<=Set)||LA215_0==PlusSignPlusSign||LA215_0==HyphenMinusHyphenMinus||LA215_0==SolidusEqualsSign||LA215_0==As||LA215_0==Of||LA215_0==ExclamationMark||LA215_0==LeftParenthesis||(LA215_0>=Asterisk && LA215_0<=PlusSign)||LA215_0==HyphenMinus||LA215_0==Solidus||LA215_0==LessThanSign||(LA215_0>=CommercialAt && LA215_0<=LeftSquareBracket)||LA215_0==LeftCurlyBracket||LA215_0==Tilde||LA215_0==RULE_DOUBLE||(LA215_0>=RULE_HEX_INT && LA215_0<=RULE_LEGACY_OCTAL_INT)||LA215_0==RULE_SCIENTIFIC_INT||LA215_0==RULE_IDENTIFIER||LA215_0==RULE_STRING||(LA215_0>=RULE_TEMPLATE_HEAD && LA215_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA215_0==RULE_INT) ) {
                                                alt215=1;
                                            }
                                            switch (alt215) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0_0_1_1_1_2_1_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_66);
                                                    lv_expression_22_0=norm3_AssignmentExpression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"expression",
                                                              		lv_expression_22_0, 
                                                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }


                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getForStatementAccess().getInitExprExpressionParserRuleCall_3_1_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_78);
                            lv_initExpr_23_0=norm2_Expression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"initExpr",
                                      		lv_initExpr_23_0, 
                                      		"eu.numberfour.n4js.N4JS.Expression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt222=3;
                            switch ( input.LA(1) ) {
                            case Semicolon:
                                {
                                alt222=1;
                                }
                                break;
                            case In:
                                {
                                alt222=2;
                                }
                                break;
                            case Of:
                                {
                                alt222=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 222, 0, input);

                                throw nvae;
                            }

                            switch (alt222) {
                                case 1 :
                                    {
                                    {
                                    otherlv_24=(Token)match(input,Semicolon,FOLLOW_76); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_24, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_1_1_0_0());
                                          
                                    }
                                    int alt218=2;
                                    int LA218_0 = input.LA(1);

                                    if ( ((LA218_0>=Intersection && LA218_0<=Implements)||(LA218_0>=Promisify && LA218_0<=Abstract)||(LA218_0>=External && LA218_0<=Function)||(LA218_0>=Private && LA218_0<=Delete)||LA218_0==Public||LA218_0==Static||(LA218_0>=Target && LA218_0<=Await)||LA218_0==Class||(LA218_0>=False && LA218_0<=Super)||LA218_0==Union||(LA218_0>=Yield && LA218_0<=This)||(LA218_0>=From && LA218_0<=Void)||(LA218_0>=Get && LA218_0<=Set)||LA218_0==PlusSignPlusSign||LA218_0==HyphenMinusHyphenMinus||LA218_0==SolidusEqualsSign||LA218_0==As||LA218_0==Of||LA218_0==ExclamationMark||LA218_0==LeftParenthesis||(LA218_0>=Asterisk && LA218_0<=PlusSign)||LA218_0==HyphenMinus||LA218_0==Solidus||LA218_0==LessThanSign||(LA218_0>=CommercialAt && LA218_0<=LeftSquareBracket)||LA218_0==LeftCurlyBracket||LA218_0==Tilde||LA218_0==RULE_DOUBLE||(LA218_0>=RULE_HEX_INT && LA218_0<=RULE_LEGACY_OCTAL_INT)||LA218_0==RULE_SCIENTIFIC_INT||LA218_0==RULE_IDENTIFIER||LA218_0==RULE_STRING||(LA218_0>=RULE_TEMPLATE_HEAD && LA218_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA218_0==RULE_INT) ) {
                                        alt218=1;
                                    }
                                    switch (alt218) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_1_1_0_1_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_77);
                                            lv_expression_25_0=norm3_Expression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_25_0, 
                                                      		"eu.numberfour.n4js.N4JS.Expression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }

                                    otherlv_26=(Token)match(input,Semicolon,FOLLOW_73); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_26, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_1_1_0_2());
                                          
                                    }
                                    int alt219=2;
                                    int LA219_0 = input.LA(1);

                                    if ( ((LA219_0>=Intersection && LA219_0<=Implements)||(LA219_0>=Promisify && LA219_0<=Abstract)||(LA219_0>=External && LA219_0<=Function)||(LA219_0>=Private && LA219_0<=Delete)||LA219_0==Public||LA219_0==Static||(LA219_0>=Target && LA219_0<=Await)||LA219_0==Class||(LA219_0>=False && LA219_0<=Super)||LA219_0==Union||(LA219_0>=Yield && LA219_0<=This)||(LA219_0>=From && LA219_0<=Void)||(LA219_0>=Get && LA219_0<=Set)||LA219_0==PlusSignPlusSign||LA219_0==HyphenMinusHyphenMinus||LA219_0==SolidusEqualsSign||LA219_0==As||LA219_0==Of||LA219_0==ExclamationMark||LA219_0==LeftParenthesis||(LA219_0>=Asterisk && LA219_0<=PlusSign)||LA219_0==HyphenMinus||LA219_0==Solidus||LA219_0==LessThanSign||(LA219_0>=CommercialAt && LA219_0<=LeftSquareBracket)||LA219_0==LeftCurlyBracket||LA219_0==Tilde||LA219_0==RULE_DOUBLE||(LA219_0>=RULE_HEX_INT && LA219_0<=RULE_LEGACY_OCTAL_INT)||LA219_0==RULE_SCIENTIFIC_INT||LA219_0==RULE_IDENTIFIER||LA219_0==RULE_STRING||(LA219_0>=RULE_TEMPLATE_HEAD && LA219_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA219_0==RULE_INT) ) {
                                        alt219=1;
                                    }
                                    switch (alt219) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getUpdateExprExpressionParserRuleCall_3_1_0_1_1_0_3_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_66);
                                            lv_updateExpr_27_0=norm3_Expression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"updateExpr",
                                                      		lv_updateExpr_27_0, 
                                                      		"eu.numberfour.n4js.N4JS.Expression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    {
                                    {
                                    {
                                    {
                                    lv_forIn_28_0=(Token)match(input,In,FOLLOW_73); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_forIn_28_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_1_0_1_1_1_0_0());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getForStatementRule());
                                      	        }
                                             		setWithLastConsumed(current, "forIn", true, "in");
                                      	    
                                    }

                                    }


                                    }
                                    int alt220=2;
                                    int LA220_0 = input.LA(1);

                                    if ( ((LA220_0>=Intersection && LA220_0<=Implements)||(LA220_0>=Promisify && LA220_0<=Abstract)||(LA220_0>=External && LA220_0<=Function)||(LA220_0>=Private && LA220_0<=Delete)||LA220_0==Public||LA220_0==Static||(LA220_0>=Target && LA220_0<=Await)||LA220_0==Class||(LA220_0>=False && LA220_0<=Super)||LA220_0==Union||(LA220_0>=Yield && LA220_0<=This)||(LA220_0>=From && LA220_0<=Void)||(LA220_0>=Get && LA220_0<=Set)||LA220_0==PlusSignPlusSign||LA220_0==HyphenMinusHyphenMinus||LA220_0==SolidusEqualsSign||LA220_0==As||LA220_0==Of||LA220_0==ExclamationMark||LA220_0==LeftParenthesis||(LA220_0>=Asterisk && LA220_0<=PlusSign)||LA220_0==HyphenMinus||LA220_0==Solidus||LA220_0==LessThanSign||(LA220_0>=CommercialAt && LA220_0<=LeftSquareBracket)||LA220_0==LeftCurlyBracket||LA220_0==Tilde||LA220_0==RULE_DOUBLE||(LA220_0>=RULE_HEX_INT && LA220_0<=RULE_LEGACY_OCTAL_INT)||LA220_0==RULE_SCIENTIFIC_INT||LA220_0==RULE_IDENTIFIER||LA220_0==RULE_STRING||(LA220_0>=RULE_TEMPLATE_HEAD && LA220_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA220_0==RULE_INT) ) {
                                        alt220=1;
                                    }
                                    switch (alt220) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_1_1_1_1_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_66);
                                            lv_expression_29_0=norm3_Expression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_29_0, 
                                                      		"eu.numberfour.n4js.N4JS.Expression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;
                                case 3 :
                                    {
                                    {
                                    {
                                    {
                                    lv_forOf_30_0=(Token)match(input,Of,FOLLOW_73); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_forOf_30_0, grammarAccess.getForStatementAccess().getForOfOfKeyword_3_1_0_1_1_2_0_0());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getForStatementRule());
                                      	        }
                                             		setWithLastConsumed(current, "forOf", true, "of");
                                      	    
                                    }

                                    }


                                    }
                                    int alt221=2;
                                    int LA221_0 = input.LA(1);

                                    if ( ((LA221_0>=Intersection && LA221_0<=Implements)||(LA221_0>=Promisify && LA221_0<=Abstract)||(LA221_0>=External && LA221_0<=Function)||(LA221_0>=Private && LA221_0<=Delete)||LA221_0==Public||LA221_0==Static||(LA221_0>=Target && LA221_0<=Await)||LA221_0==Class||(LA221_0>=False && LA221_0<=Super)||LA221_0==Union||(LA221_0>=Yield && LA221_0<=This)||(LA221_0>=From && LA221_0<=Void)||(LA221_0>=Get && LA221_0<=Set)||LA221_0==PlusSignPlusSign||LA221_0==HyphenMinusHyphenMinus||LA221_0==SolidusEqualsSign||LA221_0==As||LA221_0==Of||LA221_0==ExclamationMark||LA221_0==LeftParenthesis||(LA221_0>=Asterisk && LA221_0<=PlusSign)||LA221_0==HyphenMinus||LA221_0==Solidus||LA221_0==LessThanSign||(LA221_0>=CommercialAt && LA221_0<=LeftSquareBracket)||LA221_0==LeftCurlyBracket||LA221_0==Tilde||LA221_0==RULE_DOUBLE||(LA221_0>=RULE_HEX_INT && LA221_0<=RULE_LEGACY_OCTAL_INT)||LA221_0==RULE_SCIENTIFIC_INT||LA221_0==RULE_IDENTIFIER||LA221_0==RULE_STRING||(LA221_0>=RULE_TEMPLATE_HEAD && LA221_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA221_0==RULE_INT) ) {
                                        alt221=1;
                                    }
                                    switch (alt221) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0_1_1_2_1_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_66);
                                            lv_expression_31_0=norm3_AssignmentExpression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_31_0, 
                                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            {
                            {
                            otherlv_32=(Token)match(input,Semicolon,FOLLOW_76); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_32, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_2_0());
                                  
                            }
                            int alt223=2;
                            int LA223_0 = input.LA(1);

                            if ( ((LA223_0>=Intersection && LA223_0<=Implements)||(LA223_0>=Promisify && LA223_0<=Abstract)||(LA223_0>=External && LA223_0<=Function)||(LA223_0>=Private && LA223_0<=Delete)||LA223_0==Public||LA223_0==Static||(LA223_0>=Target && LA223_0<=Await)||LA223_0==Class||(LA223_0>=False && LA223_0<=Super)||LA223_0==Union||(LA223_0>=Yield && LA223_0<=This)||(LA223_0>=From && LA223_0<=Void)||(LA223_0>=Get && LA223_0<=Set)||LA223_0==PlusSignPlusSign||LA223_0==HyphenMinusHyphenMinus||LA223_0==SolidusEqualsSign||LA223_0==As||LA223_0==Of||LA223_0==ExclamationMark||LA223_0==LeftParenthesis||(LA223_0>=Asterisk && LA223_0<=PlusSign)||LA223_0==HyphenMinus||LA223_0==Solidus||LA223_0==LessThanSign||(LA223_0>=CommercialAt && LA223_0<=LeftSquareBracket)||LA223_0==LeftCurlyBracket||LA223_0==Tilde||LA223_0==RULE_DOUBLE||(LA223_0>=RULE_HEX_INT && LA223_0<=RULE_LEGACY_OCTAL_INT)||LA223_0==RULE_SCIENTIFIC_INT||LA223_0==RULE_IDENTIFIER||LA223_0==RULE_STRING||(LA223_0>=RULE_TEMPLATE_HEAD && LA223_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA223_0==RULE_INT) ) {
                                alt223=1;
                            }
                            switch (alt223) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_2_1_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_77);
                                    lv_expression_33_0=norm3_Expression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"expression",
                                              		lv_expression_33_0, 
                                              		"eu.numberfour.n4js.N4JS.Expression");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }

                            otherlv_34=(Token)match(input,Semicolon,FOLLOW_73); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_34, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_2_2());
                                  
                            }
                            int alt224=2;
                            int LA224_0 = input.LA(1);

                            if ( ((LA224_0>=Intersection && LA224_0<=Implements)||(LA224_0>=Promisify && LA224_0<=Abstract)||(LA224_0>=External && LA224_0<=Function)||(LA224_0>=Private && LA224_0<=Delete)||LA224_0==Public||LA224_0==Static||(LA224_0>=Target && LA224_0<=Await)||LA224_0==Class||(LA224_0>=False && LA224_0<=Super)||LA224_0==Union||(LA224_0>=Yield && LA224_0<=This)||(LA224_0>=From && LA224_0<=Void)||(LA224_0>=Get && LA224_0<=Set)||LA224_0==PlusSignPlusSign||LA224_0==HyphenMinusHyphenMinus||LA224_0==SolidusEqualsSign||LA224_0==As||LA224_0==Of||LA224_0==ExclamationMark||LA224_0==LeftParenthesis||(LA224_0>=Asterisk && LA224_0<=PlusSign)||LA224_0==HyphenMinus||LA224_0==Solidus||LA224_0==LessThanSign||(LA224_0>=CommercialAt && LA224_0<=LeftSquareBracket)||LA224_0==LeftCurlyBracket||LA224_0==Tilde||LA224_0==RULE_DOUBLE||(LA224_0>=RULE_HEX_INT && LA224_0<=RULE_LEGACY_OCTAL_INT)||LA224_0==RULE_SCIENTIFIC_INT||LA224_0==RULE_IDENTIFIER||LA224_0==RULE_STRING||(LA224_0>=RULE_TEMPLATE_HEAD && LA224_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA224_0==RULE_INT) ) {
                                alt224=1;
                            }
                            switch (alt224) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getUpdateExprExpressionParserRuleCall_3_1_0_2_3_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_66);
                                    lv_updateExpr_35_0=norm3_Expression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"updateExpr",
                                              		lv_updateExpr_35_0, 
                                              		"eu.numberfour.n4js.N4JS.Expression");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    otherlv_36=(Token)match(input,RightParenthesis,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_36, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_3_1_1());
                          
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getForStatementAccess().getStatementStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_37_0=norm1_Statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_37_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLetIdentifierRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLetIdentifierRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLetIdentifierRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLetIdentifierRef=ruleLetIdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLetIdentifierRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLetIdentifierRef() throws RecognitionException {
        EObject current = null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getLetIdentifierRefRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLetIdentifierRefAccess().getIdIdentifiableElementCrossReference_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleLetAsIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleLetAsIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLetAsIdentifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLetAsIdentifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLetAsIdentifier=ruleLetAsIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLetAsIdentifier.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleLetAsIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,Let,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getLetAsIdentifierAccess().getLetKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBindingIdentifierAsVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingIdentifierAsVariableDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingIdentifierAsVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingIdentifierAsVariableDeclaration=ruleBindingIdentifierAsVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingIdentifierAsVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingIdentifierAsVariableDeclaration() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getBindingIdentifierAsVariableDeclarationAccess().getNameBindingIdentifierParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getBindingIdentifierAsVariableDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_BindingIdentifierAsVariableDeclaration() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getBindingIdentifierAsVariableDeclarationAccess().getNameBindingIdentifierParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getBindingIdentifierAsVariableDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleContinueStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleContinueStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getContinueStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleContinueStatement=ruleContinueStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleContinueStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleContinueStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getContinueStatementAccess().getContinueStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Continue,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getContinueStatementAccess().getContinueKeyword_1());
                  
            }
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( ((LA227_0>=Intersection && LA227_0<=Implements)||(LA227_0>=Promisify && LA227_0<=Abstract)||LA227_0==External||(LA227_0>=Private && LA227_0<=Project)||LA227_0==Public||LA227_0==Static||LA227_0==Target||(LA227_0>=Async && LA227_0<=Await)||LA227_0==Union||(LA227_0>=Yield && LA227_0<=This)||LA227_0==From||LA227_0==Type||(LA227_0>=Get && LA227_0<=Let)||(LA227_0>=Out && LA227_0<=Set)||LA227_0==As||LA227_0==Of||LA227_0==RULE_IDENTIFIER) ) {
                alt227=1;
            }
            switch (alt227) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getContinueStatementRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getContinueStatementAccess().getLabelLabelledStatementCrossReference_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_20);
                    ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getContinueStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ContinueStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getContinueStatementAccess().getContinueStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Continue,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getContinueStatementAccess().getContinueKeyword_1());
                  
            }
            int alt228=2;
            int LA228_0 = input.LA(1);

            if ( ((LA228_0>=Intersection && LA228_0<=Implements)||(LA228_0>=Promisify && LA228_0<=Abstract)||LA228_0==External||(LA228_0>=Private && LA228_0<=Project)||LA228_0==Public||LA228_0==Static||LA228_0==Target||(LA228_0>=Async && LA228_0<=Await)||LA228_0==Union||LA228_0==This||LA228_0==From||LA228_0==Type||(LA228_0>=Get && LA228_0<=Let)||(LA228_0>=Out && LA228_0<=Set)||LA228_0==As||LA228_0==Of||LA228_0==RULE_IDENTIFIER) ) {
                alt228=1;
            }
            switch (alt228) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getContinueStatementRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getContinueStatementAccess().getLabelLabelledStatementCrossReference_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_20);
                    norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getContinueStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBreakStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBreakStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBreakStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBreakStatement=ruleBreakStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBreakStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBreakStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBreakStatementAccess().getBreakStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Break,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getBreakStatementAccess().getBreakKeyword_1());
                  
            }
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( ((LA229_0>=Intersection && LA229_0<=Implements)||(LA229_0>=Promisify && LA229_0<=Abstract)||LA229_0==External||(LA229_0>=Private && LA229_0<=Project)||LA229_0==Public||LA229_0==Static||LA229_0==Target||(LA229_0>=Async && LA229_0<=Await)||LA229_0==Union||(LA229_0>=Yield && LA229_0<=This)||LA229_0==From||LA229_0==Type||(LA229_0>=Get && LA229_0<=Let)||(LA229_0>=Out && LA229_0<=Set)||LA229_0==As||LA229_0==Of||LA229_0==RULE_IDENTIFIER) ) {
                alt229=1;
            }
            switch (alt229) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getBreakStatementRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBreakStatementAccess().getLabelLabelledStatementCrossReference_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_20);
                    ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBreakStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BreakStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBreakStatementAccess().getBreakStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Break,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getBreakStatementAccess().getBreakKeyword_1());
                  
            }
            int alt230=2;
            int LA230_0 = input.LA(1);

            if ( ((LA230_0>=Intersection && LA230_0<=Implements)||(LA230_0>=Promisify && LA230_0<=Abstract)||LA230_0==External||(LA230_0>=Private && LA230_0<=Project)||LA230_0==Public||LA230_0==Static||LA230_0==Target||(LA230_0>=Async && LA230_0<=Await)||LA230_0==Union||LA230_0==This||LA230_0==From||LA230_0==Type||(LA230_0>=Get && LA230_0<=Let)||(LA230_0>=Out && LA230_0<=Set)||LA230_0==As||LA230_0==Of||LA230_0==RULE_IDENTIFIER) ) {
                alt230=1;
            }
            switch (alt230) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getBreakStatementRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBreakStatementAccess().getLabelLabelledStatementCrossReference_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_20);
                    norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBreakStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleReturnStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturnStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReturnStatement=ruleReturnStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturnStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleReturnStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getReturnStatementAccess().getReturnStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Return,FOLLOW_80); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getReturnStatementAccess().getReturnKeyword_1());
                  
            }
            int alt231=2;
            int LA231_0 = input.LA(1);

            if ( ((LA231_0>=Intersection && LA231_0<=Implements)||(LA231_0>=Promisify && LA231_0<=Abstract)||(LA231_0>=External && LA231_0<=Function)||(LA231_0>=Private && LA231_0<=Delete)||LA231_0==Public||LA231_0==Static||(LA231_0>=Target && LA231_0<=Await)||LA231_0==Class||(LA231_0>=False && LA231_0<=Super)||LA231_0==Union||(LA231_0>=Yield && LA231_0<=This)||(LA231_0>=From && LA231_0<=Void)||(LA231_0>=Get && LA231_0<=Set)||LA231_0==PlusSignPlusSign||LA231_0==HyphenMinusHyphenMinus||LA231_0==SolidusEqualsSign||LA231_0==As||LA231_0==Of||LA231_0==ExclamationMark||LA231_0==LeftParenthesis||(LA231_0>=Asterisk && LA231_0<=PlusSign)||LA231_0==HyphenMinus||LA231_0==Solidus||LA231_0==LessThanSign||(LA231_0>=CommercialAt && LA231_0<=LeftSquareBracket)||LA231_0==LeftCurlyBracket||LA231_0==Tilde||LA231_0==RULE_DOUBLE||(LA231_0>=RULE_HEX_INT && LA231_0<=RULE_LEGACY_OCTAL_INT)||LA231_0==RULE_SCIENTIFIC_INT||LA231_0==RULE_IDENTIFIER||LA231_0==RULE_STRING||(LA231_0>=RULE_TEMPLATE_HEAD && LA231_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA231_0==RULE_INT) ) {
                alt231=1;
            }
            switch (alt231) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_20);
                    lv_expression_2_0=norm1_Expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReturnStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"eu.numberfour.n4js.N4JS.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getReturnStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ReturnStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getReturnStatementAccess().getReturnStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Return,FOLLOW_80); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getReturnStatementAccess().getReturnKeyword_1());
                  
            }
            int alt232=2;
            int LA232_0 = input.LA(1);

            if ( ((LA232_0>=Intersection && LA232_0<=Implements)||(LA232_0>=Promisify && LA232_0<=Abstract)||(LA232_0>=External && LA232_0<=Function)||(LA232_0>=Private && LA232_0<=Delete)||LA232_0==Public||LA232_0==Static||(LA232_0>=Target && LA232_0<=Await)||LA232_0==Class||(LA232_0>=False && LA232_0<=Super)||LA232_0==Union||(LA232_0>=Yield && LA232_0<=This)||(LA232_0>=From && LA232_0<=Void)||(LA232_0>=Get && LA232_0<=Set)||LA232_0==PlusSignPlusSign||LA232_0==HyphenMinusHyphenMinus||LA232_0==SolidusEqualsSign||LA232_0==As||LA232_0==Of||LA232_0==ExclamationMark||LA232_0==LeftParenthesis||(LA232_0>=Asterisk && LA232_0<=PlusSign)||LA232_0==HyphenMinus||LA232_0==Solidus||LA232_0==LessThanSign||(LA232_0>=CommercialAt && LA232_0<=LeftSquareBracket)||LA232_0==LeftCurlyBracket||LA232_0==Tilde||LA232_0==RULE_DOUBLE||(LA232_0>=RULE_HEX_INT && LA232_0<=RULE_LEGACY_OCTAL_INT)||LA232_0==RULE_SCIENTIFIC_INT||LA232_0==RULE_IDENTIFIER||LA232_0==RULE_STRING||(LA232_0>=RULE_TEMPLATE_HEAD && LA232_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA232_0==RULE_INT) ) {
                alt232=1;
            }
            switch (alt232) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_20);
                    lv_expression_2_0=norm3_Expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReturnStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"eu.numberfour.n4js.N4JS.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getReturnStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleWithStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWithStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWithStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWithStatement=ruleWithStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWithStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleWithStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expression_2_0 = null;

        EObject lv_statement_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,With,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWithStatementAccess().getWithKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWithStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWithStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_66);
            lv_expression_2_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWithStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getWithStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWithStatementAccess().getStatementStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_4_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWithStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_4_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_WithStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expression_2_0 = null;

        EObject lv_statement_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,With,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWithStatementAccess().getWithKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWithStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWithStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_66);
            lv_expression_2_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWithStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getWithStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWithStatementAccess().getStatementStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_4_0=norm1_Statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWithStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_4_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleSwitchStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSwitchStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSwitchStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSwitchStatement=ruleSwitchStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSwitchStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleSwitchStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_8=null;
        EObject lv_expression_2_0 = null;

        EObject lv_cases_5_0 = null;

        EObject lv_cases_6_0 = null;

        EObject lv_cases_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Switch,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_66);
            lv_expression_2_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,LeftCurlyBracket,FOLLOW_81); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4());
                  
            }
            loop233:
            do {
                int alt233=2;
                int LA233_0 = input.LA(1);

                if ( (LA233_0==Case) ) {
                    alt233=1;
                }


                switch (alt233) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getCasesCaseClauseParserRuleCall_5_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_81);
            	    lv_cases_5_0=ruleCaseClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"cases",
            	              		lv_cases_5_0, 
            	              		"eu.numberfour.n4js.N4JS.CaseClause");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop233;
                }
            } while (true);
            int alt235=2;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==Default) ) {
                alt235=1;
            }
            switch (alt235) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getCasesDefaultClauseParserRuleCall_6_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_82);
                    lv_cases_6_0=ruleDefaultClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
                      	        }
                             		add(
                             			current, 
                             			"cases",
                              		lv_cases_6_0, 
                              		"eu.numberfour.n4js.N4JS.DefaultClause");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop234:
                    do {
                        int alt234=2;
                        int LA234_0 = input.LA(1);

                        if ( (LA234_0==Case) ) {
                            alt234=1;
                        }


                        switch (alt234) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getCasesCaseClauseParserRuleCall_6_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_82);
                    	    lv_cases_7_0=ruleCaseClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"cases",
                    	              		lv_cases_7_0, 
                    	              		"eu.numberfour.n4js.N4JS.CaseClause");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop234;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_7());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_SwitchStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_8=null;
        EObject lv_expression_2_0 = null;

        EObject lv_cases_5_0 = null;

        EObject lv_cases_6_0 = null;

        EObject lv_cases_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Switch,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_66);
            lv_expression_2_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,LeftCurlyBracket,FOLLOW_81); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4());
                  
            }
            loop236:
            do {
                int alt236=2;
                int LA236_0 = input.LA(1);

                if ( (LA236_0==Case) ) {
                    alt236=1;
                }


                switch (alt236) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getCasesCaseClauseParserRuleCall_5_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_81);
            	    lv_cases_5_0=norm1_CaseClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"cases",
            	              		lv_cases_5_0, 
            	              		"eu.numberfour.n4js.N4JS.CaseClause");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop236;
                }
            } while (true);
            int alt238=2;
            int LA238_0 = input.LA(1);

            if ( (LA238_0==Default) ) {
                alt238=1;
            }
            switch (alt238) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getCasesDefaultClauseParserRuleCall_6_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_82);
                    lv_cases_6_0=norm1_DefaultClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
                      	        }
                             		add(
                             			current, 
                             			"cases",
                              		lv_cases_6_0, 
                              		"eu.numberfour.n4js.N4JS.DefaultClause");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop237:
                    do {
                        int alt237=2;
                        int LA237_0 = input.LA(1);

                        if ( (LA237_0==Case) ) {
                            alt237=1;
                        }


                        switch (alt237) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getCasesCaseClauseParserRuleCall_6_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_82);
                    	    lv_cases_7_0=norm1_CaseClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"cases",
                    	              		lv_cases_7_0, 
                    	              		"eu.numberfour.n4js.N4JS.CaseClause");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop237;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_7());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleCaseClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCaseClause = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCaseClause=ruleCaseClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCaseClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleCaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;

        EObject lv_statements_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Case,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getCaseClauseAccess().getCaseKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCaseClauseAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_83);
            lv_expression_1_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCaseClauseRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,Colon,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getCaseClauseAccess().getColonKeyword_2());
                  
            }
            loop239:
            do {
                int alt239=2;
                int LA239_0 = input.LA(1);

                if ( ((LA239_0>=Intersection && LA239_0<=Implements)||(LA239_0>=Promisify && LA239_0<=Function)||(LA239_0>=Private && LA239_0<=Delete)||(LA239_0>=Public && LA239_0<=Break)||(LA239_0>=Class && LA239_0<=This)||(LA239_0>=From && LA239_0<=With)||(LA239_0>=For && LA239_0<=Var)||LA239_0==PlusSignPlusSign||LA239_0==HyphenMinusHyphenMinus||LA239_0==SolidusEqualsSign||(LA239_0>=As && LA239_0<=If)||LA239_0==Of||LA239_0==ExclamationMark||LA239_0==LeftParenthesis||(LA239_0>=Asterisk && LA239_0<=PlusSign)||LA239_0==HyphenMinus||LA239_0==Solidus||(LA239_0>=Semicolon && LA239_0<=LessThanSign)||(LA239_0>=CommercialAt && LA239_0<=LeftSquareBracket)||LA239_0==LeftCurlyBracket||LA239_0==Tilde||LA239_0==RULE_DOUBLE||(LA239_0>=RULE_HEX_INT && LA239_0<=RULE_LEGACY_OCTAL_INT)||LA239_0==RULE_SCIENTIFIC_INT||LA239_0==RULE_IDENTIFIER||LA239_0==RULE_STRING||(LA239_0>=RULE_TEMPLATE_HEAD && LA239_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA239_0==RULE_INT) ) {
                    alt239=1;
                }


                switch (alt239) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getCaseClauseAccess().getStatementsStatementParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_statements_3_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getCaseClauseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_3_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop239;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_CaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;

        EObject lv_statements_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Case,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getCaseClauseAccess().getCaseKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCaseClauseAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_83);
            lv_expression_1_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCaseClauseRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,Colon,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getCaseClauseAccess().getColonKeyword_2());
                  
            }
            loop240:
            do {
                int alt240=2;
                int LA240_0 = input.LA(1);

                if ( ((LA240_0>=Intersection && LA240_0<=Implements)||(LA240_0>=Promisify && LA240_0<=Function)||(LA240_0>=Private && LA240_0<=Delete)||(LA240_0>=Public && LA240_0<=Break)||(LA240_0>=Class && LA240_0<=This)||(LA240_0>=From && LA240_0<=With)||(LA240_0>=For && LA240_0<=Var)||LA240_0==PlusSignPlusSign||LA240_0==HyphenMinusHyphenMinus||LA240_0==SolidusEqualsSign||(LA240_0>=As && LA240_0<=If)||LA240_0==Of||LA240_0==ExclamationMark||LA240_0==LeftParenthesis||(LA240_0>=Asterisk && LA240_0<=PlusSign)||LA240_0==HyphenMinus||LA240_0==Solidus||(LA240_0>=Semicolon && LA240_0<=LessThanSign)||(LA240_0>=CommercialAt && LA240_0<=LeftSquareBracket)||LA240_0==LeftCurlyBracket||LA240_0==Tilde||LA240_0==RULE_DOUBLE||(LA240_0>=RULE_HEX_INT && LA240_0<=RULE_LEGACY_OCTAL_INT)||LA240_0==RULE_SCIENTIFIC_INT||LA240_0==RULE_IDENTIFIER||LA240_0==RULE_STRING||(LA240_0>=RULE_TEMPLATE_HEAD && LA240_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA240_0==RULE_INT) ) {
                    alt240=1;
                }


                switch (alt240) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getCaseClauseAccess().getStatementsStatementParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_statements_3_0=norm1_Statement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getCaseClauseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_3_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop240;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleDefaultClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefaultClause = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefaultClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefaultClause=ruleDefaultClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefaultClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleDefaultClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_statements_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getDefaultClauseAccess().getDefaultClauseAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Default,FOLLOW_83); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDefaultClauseAccess().getDefaultKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,Colon,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDefaultClauseAccess().getColonKeyword_2());
                  
            }
            loop241:
            do {
                int alt241=2;
                int LA241_0 = input.LA(1);

                if ( ((LA241_0>=Intersection && LA241_0<=Implements)||(LA241_0>=Promisify && LA241_0<=Function)||(LA241_0>=Private && LA241_0<=Delete)||(LA241_0>=Public && LA241_0<=Break)||(LA241_0>=Class && LA241_0<=This)||(LA241_0>=From && LA241_0<=With)||(LA241_0>=For && LA241_0<=Var)||LA241_0==PlusSignPlusSign||LA241_0==HyphenMinusHyphenMinus||LA241_0==SolidusEqualsSign||(LA241_0>=As && LA241_0<=If)||LA241_0==Of||LA241_0==ExclamationMark||LA241_0==LeftParenthesis||(LA241_0>=Asterisk && LA241_0<=PlusSign)||LA241_0==HyphenMinus||LA241_0==Solidus||(LA241_0>=Semicolon && LA241_0<=LessThanSign)||(LA241_0>=CommercialAt && LA241_0<=LeftSquareBracket)||LA241_0==LeftCurlyBracket||LA241_0==Tilde||LA241_0==RULE_DOUBLE||(LA241_0>=RULE_HEX_INT && LA241_0<=RULE_LEGACY_OCTAL_INT)||LA241_0==RULE_SCIENTIFIC_INT||LA241_0==RULE_IDENTIFIER||LA241_0==RULE_STRING||(LA241_0>=RULE_TEMPLATE_HEAD && LA241_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA241_0==RULE_INT) ) {
                    alt241=1;
                }


                switch (alt241) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDefaultClauseAccess().getStatementsStatementParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_statements_3_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDefaultClauseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_3_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop241;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_DefaultClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_statements_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getDefaultClauseAccess().getDefaultClauseAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Default,FOLLOW_83); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDefaultClauseAccess().getDefaultKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,Colon,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDefaultClauseAccess().getColonKeyword_2());
                  
            }
            loop242:
            do {
                int alt242=2;
                int LA242_0 = input.LA(1);

                if ( ((LA242_0>=Intersection && LA242_0<=Implements)||(LA242_0>=Promisify && LA242_0<=Function)||(LA242_0>=Private && LA242_0<=Delete)||(LA242_0>=Public && LA242_0<=Break)||(LA242_0>=Class && LA242_0<=This)||(LA242_0>=From && LA242_0<=With)||(LA242_0>=For && LA242_0<=Var)||LA242_0==PlusSignPlusSign||LA242_0==HyphenMinusHyphenMinus||LA242_0==SolidusEqualsSign||(LA242_0>=As && LA242_0<=If)||LA242_0==Of||LA242_0==ExclamationMark||LA242_0==LeftParenthesis||(LA242_0>=Asterisk && LA242_0<=PlusSign)||LA242_0==HyphenMinus||LA242_0==Solidus||(LA242_0>=Semicolon && LA242_0<=LessThanSign)||(LA242_0>=CommercialAt && LA242_0<=LeftSquareBracket)||LA242_0==LeftCurlyBracket||LA242_0==Tilde||LA242_0==RULE_DOUBLE||(LA242_0>=RULE_HEX_INT && LA242_0<=RULE_LEGACY_OCTAL_INT)||LA242_0==RULE_SCIENTIFIC_INT||LA242_0==RULE_IDENTIFIER||LA242_0==RULE_STRING||(LA242_0>=RULE_TEMPLATE_HEAD && LA242_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA242_0==RULE_INT) ) {
                    alt242=1;
                }


                switch (alt242) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDefaultClauseAccess().getStatementsStatementParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_statements_3_0=norm1_Statement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDefaultClauseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_3_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop242;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLabelledStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabelledStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabelledStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLabelledStatement=ruleLabelledStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabelledStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLabelledStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_statement_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLabelledStatementAccess().getNameBindingIdentifierParserRuleCall_0_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_83);
            lv_name_0_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLabelledStatementRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,Colon,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getLabelledStatementAccess().getColonKeyword_0_0_1());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLabelledStatementAccess().getStatementStatementParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_2_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLabelledStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_2_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_LabelledStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_statement_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLabelledStatementAccess().getNameBindingIdentifierParserRuleCall_0_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_83);
            lv_name_0_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLabelledStatementRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,Colon,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getLabelledStatementAccess().getColonKeyword_0_0_1());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLabelledStatementAccess().getStatementStatementParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_2_0=norm1_Statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLabelledStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_2_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleThrowStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThrowStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThrowStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThrowStatement=ruleThrowStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThrowStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleThrowStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Throw,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getThrowStatementAccess().getThrowKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getThrowStatementAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_20);
            lv_expression_1_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getThrowStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getThrowStatementAccess().getSemiParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ThrowStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Throw,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getThrowStatementAccess().getThrowKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getThrowStatementAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_20);
            lv_expression_1_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getThrowStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getThrowStatementAccess().getSemiParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTryStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTryStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTryStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTryStatement=ruleTryStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTryStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTryStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_block_1_0 = null;

        EObject lv_catch_2_0 = null;

        EObject lv_finally_3_0 = null;

        EObject lv_finally_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Try,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTryStatementAccess().getTryKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTryStatementAccess().getBlockBlockParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_84);
            lv_block_1_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
              	        }
                     		set(
                     			current, 
                     			"block",
                      		lv_block_1_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt244=2;
            int LA244_0 = input.LA(1);

            if ( (LA244_0==Catch) ) {
                alt244=1;
            }
            else if ( (LA244_0==Finally) ) {
                alt244=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 244, 0, input);

                throw nvae;
            }
            switch (alt244) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTryStatementAccess().getCatchCatchBlockParserRuleCall_2_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_85);
                    lv_catch_2_0=ruleCatchBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"catch",
                              		lv_catch_2_0, 
                              		"eu.numberfour.n4js.N4JS.CatchBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt243=2;
                    int LA243_0 = input.LA(1);

                    if ( (LA243_0==Finally) ) {
                        alt243=1;
                    }
                    switch (alt243) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTryStatementAccess().getFinallyFinallyBlockParserRuleCall_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_finally_3_0=ruleFinallyBlock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"finally",
                                      		lv_finally_3_0, 
                                      		"eu.numberfour.n4js.N4JS.FinallyBlock");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTryStatementAccess().getFinallyFinallyBlockParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_finally_4_0=ruleFinallyBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"finally",
                              		lv_finally_4_0, 
                              		"eu.numberfour.n4js.N4JS.FinallyBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_TryStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_block_1_0 = null;

        EObject lv_catch_2_0 = null;

        EObject lv_finally_3_0 = null;

        EObject lv_finally_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Try,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTryStatementAccess().getTryKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTryStatementAccess().getBlockBlockParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_84);
            lv_block_1_0=norm1_Block();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
              	        }
                     		set(
                     			current, 
                     			"block",
                      		lv_block_1_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt246=2;
            int LA246_0 = input.LA(1);

            if ( (LA246_0==Catch) ) {
                alt246=1;
            }
            else if ( (LA246_0==Finally) ) {
                alt246=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 246, 0, input);

                throw nvae;
            }
            switch (alt246) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTryStatementAccess().getCatchCatchBlockParserRuleCall_2_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_85);
                    lv_catch_2_0=norm1_CatchBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"catch",
                              		lv_catch_2_0, 
                              		"eu.numberfour.n4js.N4JS.CatchBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt245=2;
                    int LA245_0 = input.LA(1);

                    if ( (LA245_0==Finally) ) {
                        alt245=1;
                    }
                    switch (alt245) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTryStatementAccess().getFinallyFinallyBlockParserRuleCall_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_finally_3_0=norm1_FinallyBlock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"finally",
                                      		lv_finally_3_0, 
                                      		"eu.numberfour.n4js.N4JS.FinallyBlock");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTryStatementAccess().getFinallyFinallyBlockParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_finally_4_0=norm1_FinallyBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"finally",
                              		lv_finally_4_0, 
                              		"eu.numberfour.n4js.N4JS.FinallyBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleCatchBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCatchBlock = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCatchBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCatchBlock=ruleCatchBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCatchBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleCatchBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_catchVariable_3_0 = null;

        EObject lv_block_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getCatchBlockAccess().getCatchBlockAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Catch,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCatchBlockAccess().getCatchKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_86); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getCatchBlockAccess().getLeftParenthesisKeyword_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCatchBlockAccess().getCatchVariableCatchVariableParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_66);
            lv_catchVariable_3_0=ruleCatchVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCatchBlockRule());
              	        }
                     		set(
                     			current, 
                     			"catchVariable",
                      		lv_catchVariable_3_0, 
                      		"eu.numberfour.n4js.N4JS.CatchVariable");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getCatchBlockAccess().getRightParenthesisKeyword_4());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCatchBlockAccess().getBlockBlockParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_block_5_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCatchBlockRule());
              	        }
                     		set(
                     			current, 
                     			"block",
                      		lv_block_5_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_CatchBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_catchVariable_3_0 = null;

        EObject lv_block_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getCatchBlockAccess().getCatchBlockAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Catch,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCatchBlockAccess().getCatchKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_86); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getCatchBlockAccess().getLeftParenthesisKeyword_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCatchBlockAccess().getCatchVariableCatchVariableParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_66);
            lv_catchVariable_3_0=norm1_CatchVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCatchBlockRule());
              	        }
                     		set(
                     			current, 
                     			"catchVariable",
                      		lv_catchVariable_3_0, 
                      		"eu.numberfour.n4js.N4JS.CatchVariable");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getCatchBlockAccess().getRightParenthesisKeyword_4());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCatchBlockAccess().getBlockBlockParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_block_5_0=norm1_Block();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCatchBlockRule());
              	        }
                     		set(
                     			current, 
                     			"block",
                      		lv_block_5_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleCatchVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCatchVariable = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCatchVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCatchVariable=ruleCatchVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCatchVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleCatchVariable() throws RecognitionException {
        EObject current = null;

        EObject lv_bindingPattern_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_ColonSepTypeRef_2 = null;

        EObject this_BogusTypeRefFragment_3 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;


         enterRule(); 
            
        try {
            {
            int alt248=3;
            alt248 = dfa248.predict(input);
            switch (alt248) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCatchVariableAccess().getBindingPatternBindingPatternParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_bindingPattern_0_0=ruleBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCatchVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"bindingPattern",
                              		lv_bindingPattern_0_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCatchVariableAccess().getNameBindingIdentifierParserRuleCall_1_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_83);
                    lv_name_1_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCatchVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getCatchVariableRule());
                      		}
                              newCompositeNode(grammarAccess.getCatchVariableAccess().getColonSepTypeRefParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ColonSepTypeRef_2=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    int alt247=2;
                    alt247 = dfa247.predict(input);
                    switch (alt247) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getCatchVariableRule());
                              		}
                                      newCompositeNode(grammarAccess.getCatchVariableAccess().getBogusTypeRefFragmentParserRuleCall_2_0()); 
                                  
                            }
                            pushFollow(FOLLOW_9);
                            this_BogusTypeRefFragment_3=ruleBogusTypeRefFragment(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_BogusTypeRefFragment_3;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCatchVariableAccess().getNameBindingIdentifierParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_4_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCatchVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_CatchVariable() throws RecognitionException {
        EObject current = null;

        EObject lv_bindingPattern_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_ColonSepTypeRef_2 = null;

        EObject this_BogusTypeRefFragment_3 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;


         enterRule(); 
            
        try {
            {
            int alt250=3;
            alt250 = dfa250.predict(input);
            switch (alt250) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCatchVariableAccess().getBindingPatternBindingPatternParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_bindingPattern_0_0=norm1_BindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCatchVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"bindingPattern",
                              		lv_bindingPattern_0_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCatchVariableAccess().getNameBindingIdentifierParserRuleCall_1_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_83);
                    lv_name_1_0=norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCatchVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getCatchVariableRule());
                      		}
                              newCompositeNode(grammarAccess.getCatchVariableAccess().getColonSepTypeRefParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ColonSepTypeRef_2=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    int alt249=2;
                    alt249 = dfa249.predict(input);
                    switch (alt249) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getCatchVariableRule());
                              		}
                                      newCompositeNode(grammarAccess.getCatchVariableAccess().getBogusTypeRefFragmentParserRuleCall_2_0()); 
                                  
                            }
                            pushFollow(FOLLOW_9);
                            this_BogusTypeRefFragment_3=ruleBogusTypeRefFragment(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_BogusTypeRefFragment_3;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCatchVariableAccess().getNameBindingIdentifierParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_4_0=norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCatchVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleFinallyBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFinallyBlock = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFinallyBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFinallyBlock=ruleFinallyBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFinallyBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFinallyBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_block_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFinallyBlockAccess().getFinallyBlockAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Finally,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getFinallyBlockAccess().getFinallyKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFinallyBlockAccess().getBlockBlockParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_block_2_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFinallyBlockRule());
              	        }
                     		set(
                     			current, 
                     			"block",
                      		lv_block_2_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_FinallyBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_block_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFinallyBlockAccess().getFinallyBlockAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Finally,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getFinallyBlockAccess().getFinallyKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFinallyBlockAccess().getBlockBlockParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_block_2_0=norm1_Block();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFinallyBlockRule());
              	        }
                     		set(
                     			current, 
                     			"block",
                      		lv_block_2_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleDebuggerStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDebuggerStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDebuggerStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDebuggerStatement=ruleDebuggerStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDebuggerStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleDebuggerStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getDebuggerStatementAccess().getDebuggerStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Debugger,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDebuggerStatementAccess().getDebuggerKeyword_1());
                  
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getDebuggerStatementAccess().getSemiParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpression=rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePrimaryExpression() throws RecognitionException {
        EObject current = null;
        EObject this_ThisLiteral_0 = null;

        EObject this_SuperLiteral_1 = null;

        EObject this_IdentifierRef_2 = null;

        EObject this_ParameterizedCallExpression_3 = null;

        EObject this_Literal_4 = null;

        EObject this_ArrayLiteral_5 = null;

        EObject this_ObjectLiteral_6 = null;

        EObject this_ParenExpression_7 = null;

        EObject this_AnnotatedExpression_8 = null;

        EObject this_FunctionExpression_9 = null;

        EObject this_AsyncFunctionExpression_10 = null;

        EObject this_N4ClassExpression_11 = null;

        EObject this_TemplateLiteral_12 = null;


        enterRule(); 
        try { 
        	{
            int alt251=13;
            // REPLACEMENT rulePrimaryExpression.java.replacement START
            try {
                alt251 = dfa251.predict(input);
            } catch (NoViableAltException re) {
            	int as = input.LA(1);
            	if (as==Async) { alt251=3; }
            	else throw re;
            }
            // REPLACEMENT rulePrimaryExpression.java.replacement END
            switch (alt251) {
                case 1 : 
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getThisLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThisLiteral_0=ruleThisLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThisLiteral_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSuperLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SuperLiteral_1=ruleSuperLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SuperLiteral_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getIdentifierRefParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IdentifierRef_2=ruleIdentifierRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IdentifierRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParameterizedCallExpressionParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedCallExpression_3=ruleParameterizedCallExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedCallExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Literal_4=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Literal_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArrayLiteralParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayLiteral_5=ruleArrayLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayLiteral_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getObjectLiteralParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ObjectLiteral_6=ruleObjectLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ObjectLiteral_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParenExpressionParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParenExpression_7=ruleParenExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParenExpression_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getAnnotatedExpressionParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedExpression_8=ruleAnnotatedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedExpression_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getFunctionExpressionParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionExpression_9=ruleFunctionExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionExpression_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getAsyncFunctionExpressionParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AsyncFunctionExpression_10=ruleAsyncFunctionExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncFunctionExpression_10;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 12 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getN4ClassExpressionParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4ClassExpression_11=ruleN4ClassExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4ClassExpression_11;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 13 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTemplateLiteralParserRuleCall_12()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TemplateLiteral_12=ruleTemplateLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TemplateLiteral_12;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ThisLiteral_0 = null;

        EObject this_SuperLiteral_1 = null;

        EObject this_IdentifierRef_2 = null;

        EObject this_ParameterizedCallExpression_3 = null;

        EObject this_Literal_4 = null;

        EObject this_ArrayLiteral_5 = null;

        EObject this_ObjectLiteral_6 = null;

        EObject this_ParenExpression_7 = null;

        EObject this_AnnotatedExpression_8 = null;

        EObject this_FunctionExpression_9 = null;

        EObject this_AsyncFunctionExpression_10 = null;

        EObject this_N4ClassExpression_11 = null;

        EObject this_TemplateLiteral_12 = null;


         enterRule(); 
            
        try {
            {
            int alt252=13;
            alt252 = dfa252.predict(input);
            switch (alt252) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getThisLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThisLiteral_0=ruleThisLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThisLiteral_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSuperLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SuperLiteral_1=ruleSuperLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SuperLiteral_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getIdentifierRefParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IdentifierRef_2=norm1_IdentifierRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IdentifierRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParameterizedCallExpressionParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedCallExpression_3=norm1_ParameterizedCallExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedCallExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Literal_4=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Literal_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArrayLiteralParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayLiteral_5=norm1_ArrayLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayLiteral_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getObjectLiteralParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ObjectLiteral_6=norm1_ObjectLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ObjectLiteral_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParenExpressionParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParenExpression_7=norm1_ParenExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParenExpression_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getAnnotatedExpressionParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedExpression_8=norm1_AnnotatedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedExpression_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getFunctionExpressionParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionExpression_9=ruleFunctionExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionExpression_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getAsyncFunctionExpressionParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AsyncFunctionExpression_10=ruleAsyncFunctionExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncFunctionExpression_10;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 12 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getN4ClassExpressionParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4ClassExpression_11=norm1_N4ClassExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4ClassExpression_11;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 13 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTemplateLiteralParserRuleCall_12()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TemplateLiteral_12=norm1_TemplateLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TemplateLiteral_12;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleParenExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParenExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParenExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParenExpression=ruleParenExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParenExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleParenExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getParenExpressionAccess().getLeftParenthesisKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParenExpressionAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_66);
            lv_expression_1_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParenExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getParenExpressionAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ParenExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getParenExpressionAccess().getLeftParenthesisKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParenExpressionAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_66);
            lv_expression_1_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParenExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getParenExpressionAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleIdentifierRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentifierRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentifierRef=ruleIdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifierRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIdentifierRef() throws RecognitionException {
        EObject current = null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getIdentifierRefRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIdentifierRefAccess().getIdIdentifiableElementCrossReference_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_IdentifierRef() throws RecognitionException {
        EObject current = null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getIdentifierRefRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIdentifierRefAccess().getIdIdentifiableElementCrossReference_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleSuperLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuperLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuperLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSuperLiteral=ruleSuperLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuperLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleSuperLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSuperLiteralAccess().getSuperLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Super,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSuperLiteralAccess().getSuperKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleThisLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThisLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThisLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThisLiteral=ruleThisLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThisLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleThisLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getThisLiteralAccess().getThisLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,This_1,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getThisLiteralAccess().getThisKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrayLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayLiteral=ruleArrayLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrayLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token lv_trailingComma_7_0=null;
        Token otherlv_9=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;

        EObject lv_elements_6_0 = null;

        EObject lv_elements_8_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayLiteralAccess().getArrayLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_87); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrayLiteralAccess().getLeftSquareBracketKeyword_1());
                  
            }
            loop253:
            do {
                int alt253=2;
                int LA253_0 = input.LA(1);

                if ( (LA253_0==Comma) ) {
                    alt253=1;
                }


                switch (alt253) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayPaddingParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_87);
            	    lv_elements_2_0=ruleArrayPadding();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"elements",
            	              		lv_elements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.ArrayPadding");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop253;
                }
            } while (true);
            int alt258=2;
            int LA258_0 = input.LA(1);

            if ( ((LA258_0>=Intersection && LA258_0<=Implements)||(LA258_0>=Promisify && LA258_0<=Abstract)||(LA258_0>=External && LA258_0<=Function)||(LA258_0>=Private && LA258_0<=Delete)||LA258_0==Public||LA258_0==Static||(LA258_0>=Target && LA258_0<=Await)||LA258_0==Class||(LA258_0>=False && LA258_0<=Super)||LA258_0==Union||(LA258_0>=Yield && LA258_0<=This)||(LA258_0>=From && LA258_0<=Void)||LA258_0==FullStopFullStopFullStop||(LA258_0>=Get && LA258_0<=Set)||LA258_0==PlusSignPlusSign||LA258_0==HyphenMinusHyphenMinus||LA258_0==SolidusEqualsSign||LA258_0==As||LA258_0==Of||LA258_0==ExclamationMark||LA258_0==LeftParenthesis||(LA258_0>=Asterisk && LA258_0<=PlusSign)||LA258_0==HyphenMinus||LA258_0==Solidus||LA258_0==LessThanSign||(LA258_0>=CommercialAt && LA258_0<=LeftSquareBracket)||LA258_0==LeftCurlyBracket||LA258_0==Tilde||LA258_0==RULE_DOUBLE||(LA258_0>=RULE_HEX_INT && LA258_0<=RULE_LEGACY_OCTAL_INT)||LA258_0==RULE_SCIENTIFIC_INT||LA258_0==RULE_IDENTIFIER||LA258_0==RULE_STRING||(LA258_0>=RULE_TEMPLATE_HEAD && LA258_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA258_0==RULE_INT) ) {
                alt258=1;
            }
            switch (alt258) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayElementParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_88);
                    lv_elements_3_0=ruleArrayElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"eu.numberfour.n4js.N4JS.ArrayElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop255:
                    do {
                        int alt255=2;
                        alt255 = dfa255.predict(input);
                        switch (alt255) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_89); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getArrayLiteralAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    loop254:
                    	    do {
                    	        int alt254=2;
                    	        int LA254_0 = input.LA(1);

                    	        if ( (LA254_0==Comma) ) {
                    	            alt254=1;
                    	        }


                    	        switch (alt254) {
                    	    	case 1 :
                    	    	    {
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayPaddingParserRuleCall_3_1_1_0()); 
                    	    	      	    
                    	    	    }
                    	    	    pushFollow(FOLLOW_89);
                    	    	    lv_elements_5_0=ruleArrayPadding();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      	        if (current==null) {
                    	    	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                    	    	      	        }
                    	    	             		add(
                    	    	             			current, 
                    	    	             			"elements",
                    	    	              		lv_elements_5_0, 
                    	    	              		"eu.numberfour.n4js.N4JS.ArrayPadding");
                    	    	      	        afterParserOrEnumRuleCall();
                    	    	      	    
                    	    	    }

                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop254;
                    	        }
                    	    } while (true);
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayElementParserRuleCall_3_1_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_88);
                    	    lv_elements_6_0=ruleArrayElement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_6_0, 
                    	              		"eu.numberfour.n4js.N4JS.ArrayElement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop255;
                        }
                    } while (true);
                    int alt257=2;
                    int LA257_0 = input.LA(1);

                    if ( (LA257_0==Comma) ) {
                        alt257=1;
                    }
                    switch (alt257) {
                        case 1 :
                            {
                            {
                            {
                            lv_trailingComma_7_0=(Token)match(input,Comma,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_trailingComma_7_0, grammarAccess.getArrayLiteralAccess().getTrailingCommaCommaKeyword_3_2_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getArrayLiteralRule());
                              	        }
                                     		setWithLastConsumed(current, "trailingComma", true, ",");
                              	    
                            }

                            }


                            }
                            loop256:
                            do {
                                int alt256=2;
                                int LA256_0 = input.LA(1);

                                if ( (LA256_0==Comma) ) {
                                    alt256=1;
                                }


                                switch (alt256) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayPaddingParserRuleCall_3_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_88);
                            	    lv_elements_8_0=ruleArrayPadding();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"elements",
                            	              		lv_elements_8_0, 
                            	              		"eu.numberfour.n4js.N4JS.ArrayPadding");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop256;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getArrayLiteralAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ArrayLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token lv_trailingComma_7_0=null;
        Token otherlv_9=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;

        EObject lv_elements_6_0 = null;

        EObject lv_elements_8_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayLiteralAccess().getArrayLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_87); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrayLiteralAccess().getLeftSquareBracketKeyword_1());
                  
            }
            loop259:
            do {
                int alt259=2;
                int LA259_0 = input.LA(1);

                if ( (LA259_0==Comma) ) {
                    alt259=1;
                }


                switch (alt259) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayPaddingParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_87);
            	    lv_elements_2_0=ruleArrayPadding();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"elements",
            	              		lv_elements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.ArrayPadding");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop259;
                }
            } while (true);
            int alt264=2;
            int LA264_0 = input.LA(1);

            if ( ((LA264_0>=Intersection && LA264_0<=Implements)||(LA264_0>=Promisify && LA264_0<=Abstract)||(LA264_0>=External && LA264_0<=Function)||(LA264_0>=Private && LA264_0<=Delete)||LA264_0==Public||LA264_0==Static||(LA264_0>=Target && LA264_0<=Await)||LA264_0==Class||(LA264_0>=False && LA264_0<=Super)||LA264_0==Union||(LA264_0>=Yield && LA264_0<=This)||(LA264_0>=From && LA264_0<=Void)||LA264_0==FullStopFullStopFullStop||(LA264_0>=Get && LA264_0<=Set)||LA264_0==PlusSignPlusSign||LA264_0==HyphenMinusHyphenMinus||LA264_0==SolidusEqualsSign||LA264_0==As||LA264_0==Of||LA264_0==ExclamationMark||LA264_0==LeftParenthesis||(LA264_0>=Asterisk && LA264_0<=PlusSign)||LA264_0==HyphenMinus||LA264_0==Solidus||LA264_0==LessThanSign||(LA264_0>=CommercialAt && LA264_0<=LeftSquareBracket)||LA264_0==LeftCurlyBracket||LA264_0==Tilde||LA264_0==RULE_DOUBLE||(LA264_0>=RULE_HEX_INT && LA264_0<=RULE_LEGACY_OCTAL_INT)||LA264_0==RULE_SCIENTIFIC_INT||LA264_0==RULE_IDENTIFIER||LA264_0==RULE_STRING||(LA264_0>=RULE_TEMPLATE_HEAD && LA264_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA264_0==RULE_INT) ) {
                alt264=1;
            }
            switch (alt264) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayElementParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_88);
                    lv_elements_3_0=norm1_ArrayElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"eu.numberfour.n4js.N4JS.ArrayElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop261:
                    do {
                        int alt261=2;
                        alt261 = dfa261.predict(input);
                        switch (alt261) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_89); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getArrayLiteralAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    loop260:
                    	    do {
                    	        int alt260=2;
                    	        int LA260_0 = input.LA(1);

                    	        if ( (LA260_0==Comma) ) {
                    	            alt260=1;
                    	        }


                    	        switch (alt260) {
                    	    	case 1 :
                    	    	    {
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayPaddingParserRuleCall_3_1_1_0()); 
                    	    	      	    
                    	    	    }
                    	    	    pushFollow(FOLLOW_89);
                    	    	    lv_elements_5_0=ruleArrayPadding();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      	        if (current==null) {
                    	    	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                    	    	      	        }
                    	    	             		add(
                    	    	             			current, 
                    	    	             			"elements",
                    	    	              		lv_elements_5_0, 
                    	    	              		"eu.numberfour.n4js.N4JS.ArrayPadding");
                    	    	      	        afterParserOrEnumRuleCall();
                    	    	      	    
                    	    	    }

                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop260;
                    	        }
                    	    } while (true);
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayElementParserRuleCall_3_1_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_88);
                    	    lv_elements_6_0=norm1_ArrayElement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_6_0, 
                    	              		"eu.numberfour.n4js.N4JS.ArrayElement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop261;
                        }
                    } while (true);
                    int alt263=2;
                    int LA263_0 = input.LA(1);

                    if ( (LA263_0==Comma) ) {
                        alt263=1;
                    }
                    switch (alt263) {
                        case 1 :
                            {
                            {
                            {
                            lv_trailingComma_7_0=(Token)match(input,Comma,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_trailingComma_7_0, grammarAccess.getArrayLiteralAccess().getTrailingCommaCommaKeyword_3_2_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getArrayLiteralRule());
                              	        }
                                     		setWithLastConsumed(current, "trailingComma", true, ",");
                              	    
                            }

                            }


                            }
                            loop262:
                            do {
                                int alt262=2;
                                int LA262_0 = input.LA(1);

                                if ( (LA262_0==Comma) ) {
                                    alt262=1;
                                }


                                switch (alt262) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayPaddingParserRuleCall_3_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_88);
                            	    lv_elements_8_0=ruleArrayPadding();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"elements",
                            	              		lv_elements_8_0, 
                            	              		"eu.numberfour.n4js.N4JS.ArrayPadding");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop262;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getArrayLiteralAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrayPadding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayPadding = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayPaddingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayPadding=ruleArrayPadding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayPadding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrayPadding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayPaddingAccess().getArrayPaddingAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Comma,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrayPaddingAccess().getCommaKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrayElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayElement=ruleArrayElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrayElement() throws RecognitionException {
        EObject current = null;

        Token lv_spread_1_0=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayElementAccess().getArrayElementAction_0(),
                          current);
                  
            }

            }
            int alt265=2;
            int LA265_0 = input.LA(1);

            if ( (LA265_0==FullStopFullStopFullStop) ) {
                alt265=1;
            }
            switch (alt265) {
                case 1 :
                    {
                    {
                    lv_spread_1_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_spread_1_0, grammarAccess.getArrayElementAccess().getSpreadFullStopFullStopFullStopKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrayElementRule());
                      	        }
                             		setWithLastConsumed(current, "spread", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArrayElementAccess().getExpressionAssignmentExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArrayElementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ArrayElement() throws RecognitionException {
        EObject current = null;

        Token lv_spread_1_0=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayElementAccess().getArrayElementAction_0(),
                          current);
                  
            }

            }
            int alt266=2;
            int LA266_0 = input.LA(1);

            if ( (LA266_0==FullStopFullStopFullStop) ) {
                alt266=1;
            }
            switch (alt266) {
                case 1 :
                    {
                    {
                    lv_spread_1_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_spread_1_0, grammarAccess.getArrayElementAccess().getSpreadFullStopFullStopFullStopKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrayElementRule());
                      	        }
                             		setWithLastConsumed(current, "spread", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArrayElementAccess().getExpressionAssignmentExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArrayElementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleObjectLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObjectLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObjectLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObjectLiteral=ruleObjectLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObjectLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleObjectLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_propertyAssignments_2_0 = null;

        EObject lv_propertyAssignments_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getObjectLiteralAccess().getObjectLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getObjectLiteralAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            int alt269=2;
            int LA269_0 = input.LA(1);

            if ( ((LA269_0>=Intersection && LA269_0<=With)||(LA269_0>=For && LA269_0<=Var)||(LA269_0>=As && LA269_0<=Of)||LA269_0==LeftParenthesis||LA269_0==Asterisk||LA269_0==LessThanSign||(LA269_0>=QuestionMark && LA269_0<=LeftSquareBracket)||LA269_0==LeftCurlyBracket||LA269_0==Tilde||LA269_0==RULE_DOUBLE||LA269_0==RULE_HEX_INT||LA269_0==RULE_OCTAL_INT||LA269_0==RULE_SCIENTIFIC_INT||LA269_0==RULE_IDENTIFIER||LA269_0==RULE_STRING||LA269_0==RULE_INT) ) {
                alt269=1;
            }
            switch (alt269) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getObjectLiteralAccess().getPropertyAssignmentsPropertyAssignmentParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_15);
                    lv_propertyAssignments_2_0=rulePropertyAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getObjectLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"propertyAssignments",
                              		lv_propertyAssignments_2_0, 
                              		"eu.numberfour.n4js.N4JS.PropertyAssignment");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop267:
                    do {
                        int alt267=2;
                        int LA267_0 = input.LA(1);

                        if ( (LA267_0==Comma) ) {
                            int LA267_1 = input.LA(2);

                            if ( ((LA267_1>=Intersection && LA267_1<=With)||(LA267_1>=For && LA267_1<=Var)||(LA267_1>=As && LA267_1<=Of)||LA267_1==LeftParenthesis||LA267_1==Asterisk||LA267_1==LessThanSign||(LA267_1>=QuestionMark && LA267_1<=LeftSquareBracket)||LA267_1==LeftCurlyBracket||LA267_1==Tilde||LA267_1==RULE_DOUBLE||LA267_1==RULE_HEX_INT||LA267_1==RULE_OCTAL_INT||LA267_1==RULE_SCIENTIFIC_INT||LA267_1==RULE_IDENTIFIER||LA267_1==RULE_STRING||LA267_1==RULE_INT) ) {
                                alt267=1;
                            }


                        }


                        switch (alt267) {
                    	case 1 :
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_91); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getObjectLiteralAccess().getCommaKeyword_2_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getObjectLiteralAccess().getPropertyAssignmentsPropertyAssignmentParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_propertyAssignments_4_0=rulePropertyAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getObjectLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"propertyAssignments",
                    	              		lv_propertyAssignments_4_0, 
                    	              		"eu.numberfour.n4js.N4JS.PropertyAssignment");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop267;
                        }
                    } while (true);
                    int alt268=2;
                    int LA268_0 = input.LA(1);

                    if ( (LA268_0==Comma) ) {
                        alt268=1;
                    }
                    switch (alt268) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Comma,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getObjectLiteralAccess().getCommaKeyword_2_2());
                                  
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getObjectLiteralAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ObjectLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_propertyAssignments_2_0 = null;

        EObject lv_propertyAssignments_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getObjectLiteralAccess().getObjectLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getObjectLiteralAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            int alt272=2;
            int LA272_0 = input.LA(1);

            if ( ((LA272_0>=Intersection && LA272_0<=With)||(LA272_0>=For && LA272_0<=Var)||(LA272_0>=As && LA272_0<=Of)||LA272_0==LeftParenthesis||LA272_0==Asterisk||LA272_0==LessThanSign||(LA272_0>=QuestionMark && LA272_0<=LeftSquareBracket)||LA272_0==LeftCurlyBracket||LA272_0==Tilde||LA272_0==RULE_DOUBLE||LA272_0==RULE_HEX_INT||LA272_0==RULE_OCTAL_INT||LA272_0==RULE_SCIENTIFIC_INT||LA272_0==RULE_IDENTIFIER||LA272_0==RULE_STRING||LA272_0==RULE_INT) ) {
                alt272=1;
            }
            switch (alt272) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getObjectLiteralAccess().getPropertyAssignmentsPropertyAssignmentParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_15);
                    lv_propertyAssignments_2_0=norm1_PropertyAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getObjectLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"propertyAssignments",
                              		lv_propertyAssignments_2_0, 
                              		"eu.numberfour.n4js.N4JS.PropertyAssignment");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop270:
                    do {
                        int alt270=2;
                        int LA270_0 = input.LA(1);

                        if ( (LA270_0==Comma) ) {
                            int LA270_1 = input.LA(2);

                            if ( ((LA270_1>=Intersection && LA270_1<=With)||(LA270_1>=For && LA270_1<=Var)||(LA270_1>=As && LA270_1<=Of)||LA270_1==LeftParenthesis||LA270_1==Asterisk||LA270_1==LessThanSign||(LA270_1>=QuestionMark && LA270_1<=LeftSquareBracket)||LA270_1==LeftCurlyBracket||LA270_1==Tilde||LA270_1==RULE_DOUBLE||LA270_1==RULE_HEX_INT||LA270_1==RULE_OCTAL_INT||LA270_1==RULE_SCIENTIFIC_INT||LA270_1==RULE_IDENTIFIER||LA270_1==RULE_STRING||LA270_1==RULE_INT) ) {
                                alt270=1;
                            }


                        }


                        switch (alt270) {
                    	case 1 :
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_91); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getObjectLiteralAccess().getCommaKeyword_2_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getObjectLiteralAccess().getPropertyAssignmentsPropertyAssignmentParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_propertyAssignments_4_0=norm1_PropertyAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getObjectLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"propertyAssignments",
                    	              		lv_propertyAssignments_4_0, 
                    	              		"eu.numberfour.n4js.N4JS.PropertyAssignment");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop270;
                        }
                    } while (true);
                    int alt271=2;
                    int LA271_0 = input.LA(1);

                    if ( (LA271_0==Comma) ) {
                        alt271=1;
                    }
                    switch (alt271) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Comma,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getObjectLiteralAccess().getCommaKeyword_2_2());
                                  
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getObjectLiteralAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertyAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyAssignment = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyAssignment=rulePropertyAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertyAssignment() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedPropertyAssignment_0 = null;

        EObject this_PropertyNameValuePair_1 = null;

        EObject this_PropertyGetterDeclaration_2 = null;

        EObject this_PropertySetterDeclaration_3 = null;

        EObject this_PropertyMethodDeclaration_4 = null;

        EObject this_PropertyNameValuePairSingleName_5 = null;


         enterRule(); 
            
        try {
            {
            int alt273=6;
            alt273 = dfa273.predict(input);
            switch (alt273) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getAnnotatedPropertyAssignmentParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedPropertyAssignment_0=ruleAnnotatedPropertyAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedPropertyAssignment_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyNameValuePairParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyNameValuePair_1=rulePropertyNameValuePair();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyNameValuePair_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyGetterDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyGetterDeclaration_2=rulePropertyGetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyGetterDeclaration_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertySetterDeclarationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertySetterDeclaration_3=rulePropertySetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertySetterDeclaration_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyMethodDeclarationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyMethodDeclaration_4=rulePropertyMethodDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyMethodDeclaration_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyNameValuePairSingleNameParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyNameValuePairSingleName_5=rulePropertyNameValuePairSingleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyNameValuePairSingleName_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PropertyAssignment() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedPropertyAssignment_0 = null;

        EObject this_PropertyNameValuePair_1 = null;

        EObject this_PropertyGetterDeclaration_2 = null;

        EObject this_PropertySetterDeclaration_3 = null;

        EObject this_PropertyMethodDeclaration_4 = null;

        EObject this_PropertyNameValuePairSingleName_5 = null;


         enterRule(); 
            
        try {
            {
            int alt274=6;
            alt274 = dfa274.predict(input);
            switch (alt274) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getAnnotatedPropertyAssignmentParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedPropertyAssignment_0=norm1_AnnotatedPropertyAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedPropertyAssignment_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyNameValuePairParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyNameValuePair_1=norm1_PropertyNameValuePair();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyNameValuePair_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyGetterDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyGetterDeclaration_2=norm1_PropertyGetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyGetterDeclaration_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertySetterDeclarationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertySetterDeclaration_3=norm1_PropertySetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertySetterDeclaration_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyMethodDeclarationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyMethodDeclaration_4=norm1_PropertyMethodDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyMethodDeclaration_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyNameValuePairSingleNameParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyNameValuePairSingleName_5=norm1_PropertyNameValuePairSingleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyNameValuePairSingleName_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotatedPropertyAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedPropertyAssignment = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedPropertyAssignment=ruleAnnotatedPropertyAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedPropertyAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotatedPropertyAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token lv_generator_19_0=null;
        Token otherlv_24=null;
        Token otherlv_28=null;
        EObject this_PropertyAssignmentAnnotationList_0 = null;

        EObject lv_declaredTypeRef_2_0 = null;

        EObject lv_declaredName_3_0 = null;

        EObject lv_expression_5_0 = null;

        EObject this_GetterHeader_7 = null;

        EObject lv_body_8_0 = null;

        EObject lv_declaredName_11_0 = null;

        EObject lv_fpar_13_0 = null;

        EObject lv_body_15_0 = null;

        EObject this_TypeVariables_17 = null;

        EObject lv_returnTypeRef_18_0 = null;

        EObject lv_declaredName_20_0 = null;

        EObject this_MethodParamsAndBody_21 = null;

        EObject lv_declaredName_22_0 = null;

        EObject this_MethodParamsAndBody_23 = null;

        EObject lv_declaredTypeRef_26_0 = null;

        EObject lv_identifierRef_27_0 = null;

        EObject lv_expression_29_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyAssignmentAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_92);
            this_PropertyAssignmentAnnotationList_0=rulePropertyAssignmentAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_PropertyAssignmentAnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt282=5;
            alt282 = dfa282.predict(input);
            switch (alt282) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyNameValuePairAnnotationListAction_1_0_0_0_0(),
                                  current);
                          
                    }

                    }
                    int alt275=2;
                    alt275 = dfa275.predict(input);
                    switch (alt275) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredTypeRefTypeRefWithModifiersParserRuleCall_1_0_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_93);
                            lv_declaredTypeRef_2_0=ruleTypeRefWithModifiers();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredTypeRef",
                                      		lv_declaredTypeRef_2_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_0_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_83);
                    lv_declaredName_3_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_3_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getAnnotatedPropertyAssignmentAccess().getColonKeyword_1_0_0_0_3());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_5_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_5_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyGetterDeclarationAnnotationListAction_1_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getGetterHeaderParserRuleCall_1_1_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_13);
                    this_GetterHeader_7=ruleGetterHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_GetterHeader_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getBodyBlockParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_8_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_8_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertySetterDeclarationAnnotationListAction_1_2_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_10=(Token)match(input,Set,FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getAnnotatedPropertyAssignmentAccess().getSetKeyword_1_2_0_0_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_2_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_53);
                    lv_declaredName_11_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_11_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }

                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getAnnotatedPropertyAssignmentAccess().getLeftParenthesisKeyword_1_2_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getFparFormalParameterParserRuleCall_1_2_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_66);
                    lv_fpar_13_0=ruleFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"fpar",
                              		lv_fpar_13_0, 
                              		"eu.numberfour.n4js.N4JS.FormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_14=(Token)match(input,RightParenthesis,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getAnnotatedPropertyAssignmentAccess().getRightParenthesisKeyword_1_2_3());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getBodyBlockParserRuleCall_1_2_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_15_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_15_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyMethodDeclarationAnnotationListAction_1_3_0_0_0(),
                                  current);
                          
                    }

                    }
                    int alt276=2;
                    int LA276_0 = input.LA(1);

                    if ( (LA276_0==LessThanSign) ) {
                        alt276=1;
                    }
                    switch (alt276) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getTypeVariablesParserRuleCall_1_3_0_0_1()); 
                                  
                            }
                            pushFollow(FOLLOW_94);
                            this_TypeVariables_17=ruleTypeVariables(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_TypeVariables_17;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt277=2;
                    alt277 = dfa277.predict(input);
                    switch (alt277) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getReturnTypeRefTypeRefWithModifiersParserRuleCall_1_3_0_0_2_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_94);
                            lv_returnTypeRef_18_0=ruleTypeRefWithModifiers();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_18_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt278=2;
                    int LA278_0 = input.LA(1);

                    if ( (LA278_0==Asterisk) ) {
                        alt278=1;
                    }
                    else if ( ((LA278_0>=Intersection && LA278_0<=With)||(LA278_0>=For && LA278_0<=Var)||(LA278_0>=As && LA278_0<=Of)||LA278_0==LeftSquareBracket||LA278_0==RULE_DOUBLE||LA278_0==RULE_HEX_INT||LA278_0==RULE_OCTAL_INT||LA278_0==RULE_SCIENTIFIC_INT||LA278_0==RULE_IDENTIFIER||LA278_0==RULE_STRING||LA278_0==RULE_INT) ) {
                        alt278=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 278, 0, input);

                        throw nvae;
                    }
                    switch (alt278) {
                        case 1 :
                            {
                            {
                            {
                            {
                            lv_generator_19_0=(Token)match(input,Asterisk,FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_generator_19_0, grammarAccess.getAnnotatedPropertyAssignmentAccess().getGeneratorAsteriskKeyword_1_3_0_0_3_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		setWithLastConsumed(current, "generator", true, "*");
                              	    
                            }

                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_3_0_0_3_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_42);
                            lv_declaredName_20_0=ruleLiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_20_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getMethodParamsAndBodyParserRuleCall_1_3_0_0_3_0_2()); 
                                  
                            }
                            pushFollow(FOLLOW_95);
                            this_MethodParamsAndBody_21=norm1_MethodParamsAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsAndBody_21;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_3_0_0_3_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_41);
                            lv_declaredName_22_0=ruleLiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_22_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getMethodParamsAndBodyParserRuleCall_1_3_0_0_3_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_95);
                            this_MethodParamsAndBody_23=ruleMethodParamsAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsAndBody_23;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    int alt279=2;
                    int LA279_0 = input.LA(1);

                    if ( (LA279_0==Semicolon) ) {
                        alt279=1;
                    }
                    switch (alt279) {
                        case 1 :
                            {
                            otherlv_24=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_24, grammarAccess.getAnnotatedPropertyAssignmentAccess().getSemicolonKeyword_1_3_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyNameValuePairSingleNameAnnotationListAction_1_4_0(),
                                  current);
                          
                    }

                    }
                    int alt280=2;
                    alt280 = dfa280.predict(input);
                    switch (alt280) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredTypeRefTypeRefParserRuleCall_1_4_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_9);
                            lv_declaredTypeRef_26_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredTypeRef",
                                      		lv_declaredTypeRef_26_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getIdentifierRefIdentifierRefParserRuleCall_1_4_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_60);
                    lv_identifierRef_27_0=ruleIdentifierRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"identifierRef",
                              		lv_identifierRef_27_0, 
                              		"eu.numberfour.n4js.N4JS.IdentifierRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt281=2;
                    int LA281_0 = input.LA(1);

                    if ( (LA281_0==EqualsSign) ) {
                        alt281=1;
                    }
                    switch (alt281) {
                        case 1 :
                            {
                            otherlv_28=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_28, grammarAccess.getAnnotatedPropertyAssignmentAccess().getEqualsSignKeyword_1_4_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getExpressionAssignmentExpressionParserRuleCall_1_4_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_29_0=norm1_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_29_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AnnotatedPropertyAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token lv_generator_19_0=null;
        Token otherlv_24=null;
        Token otherlv_28=null;
        EObject this_PropertyAssignmentAnnotationList_0 = null;

        EObject lv_declaredTypeRef_2_0 = null;

        EObject lv_declaredName_3_0 = null;

        EObject lv_expression_5_0 = null;

        EObject this_GetterHeader_7 = null;

        EObject lv_body_8_0 = null;

        EObject lv_declaredName_11_0 = null;

        EObject lv_fpar_13_0 = null;

        EObject lv_body_15_0 = null;

        EObject this_TypeVariables_17 = null;

        EObject lv_returnTypeRef_18_0 = null;

        EObject lv_declaredName_20_0 = null;

        EObject this_MethodParamsAndBody_21 = null;

        EObject lv_declaredName_22_0 = null;

        EObject this_MethodParamsAndBody_23 = null;

        EObject lv_declaredTypeRef_26_0 = null;

        EObject lv_identifierRef_27_0 = null;

        EObject lv_expression_29_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyAssignmentAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_92);
            this_PropertyAssignmentAnnotationList_0=rulePropertyAssignmentAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_PropertyAssignmentAnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt290=5;
            alt290 = dfa290.predict(input);
            switch (alt290) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyNameValuePairAnnotationListAction_1_0_0_0_0(),
                                  current);
                          
                    }

                    }
                    int alt283=2;
                    alt283 = dfa283.predict(input);
                    switch (alt283) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredTypeRefTypeRefWithModifiersParserRuleCall_1_0_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_93);
                            lv_declaredTypeRef_2_0=ruleTypeRefWithModifiers();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredTypeRef",
                                      		lv_declaredTypeRef_2_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_0_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_83);
                    lv_declaredName_3_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_3_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getAnnotatedPropertyAssignmentAccess().getColonKeyword_1_0_0_0_3());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_5_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_5_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyGetterDeclarationAnnotationListAction_1_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getGetterHeaderParserRuleCall_1_1_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_13);
                    this_GetterHeader_7=norm1_GetterHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_GetterHeader_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getBodyBlockParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_8_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_8_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertySetterDeclarationAnnotationListAction_1_2_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_10=(Token)match(input,Set,FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getAnnotatedPropertyAssignmentAccess().getSetKeyword_1_2_0_0_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_2_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_53);
                    lv_declaredName_11_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_11_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }

                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getAnnotatedPropertyAssignmentAccess().getLeftParenthesisKeyword_1_2_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getFparFormalParameterParserRuleCall_1_2_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_66);
                    lv_fpar_13_0=norm1_FormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"fpar",
                              		lv_fpar_13_0, 
                              		"eu.numberfour.n4js.N4JS.FormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_14=(Token)match(input,RightParenthesis,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getAnnotatedPropertyAssignmentAccess().getRightParenthesisKeyword_1_2_3());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getBodyBlockParserRuleCall_1_2_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_15_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_15_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyMethodDeclarationAnnotationListAction_1_3_0_0_0(),
                                  current);
                          
                    }

                    }
                    int alt284=2;
                    int LA284_0 = input.LA(1);

                    if ( (LA284_0==LessThanSign) ) {
                        alt284=1;
                    }
                    switch (alt284) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getTypeVariablesParserRuleCall_1_3_0_0_1()); 
                                  
                            }
                            pushFollow(FOLLOW_94);
                            this_TypeVariables_17=ruleTypeVariables(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_TypeVariables_17;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt285=2;
                    alt285 = dfa285.predict(input);
                    switch (alt285) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getReturnTypeRefTypeRefWithModifiersParserRuleCall_1_3_0_0_2_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_94);
                            lv_returnTypeRef_18_0=ruleTypeRefWithModifiers();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_18_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt286=2;
                    int LA286_0 = input.LA(1);

                    if ( (LA286_0==Asterisk) ) {
                        alt286=1;
                    }
                    else if ( ((LA286_0>=Intersection && LA286_0<=With)||(LA286_0>=For && LA286_0<=Var)||(LA286_0>=As && LA286_0<=Of)||LA286_0==LeftSquareBracket||LA286_0==RULE_DOUBLE||LA286_0==RULE_HEX_INT||LA286_0==RULE_OCTAL_INT||LA286_0==RULE_SCIENTIFIC_INT||LA286_0==RULE_IDENTIFIER||LA286_0==RULE_STRING||LA286_0==RULE_INT) ) {
                        alt286=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 286, 0, input);

                        throw nvae;
                    }
                    switch (alt286) {
                        case 1 :
                            {
                            {
                            {
                            {
                            lv_generator_19_0=(Token)match(input,Asterisk,FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_generator_19_0, grammarAccess.getAnnotatedPropertyAssignmentAccess().getGeneratorAsteriskKeyword_1_3_0_0_3_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		setWithLastConsumed(current, "generator", true, "*");
                              	    
                            }

                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_3_0_0_3_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_42);
                            lv_declaredName_20_0=norm1_LiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_20_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getMethodParamsAndBodyParserRuleCall_1_3_0_0_3_0_2()); 
                                  
                            }
                            pushFollow(FOLLOW_95);
                            this_MethodParamsAndBody_21=norm1_MethodParamsAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsAndBody_21;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_3_0_0_3_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_41);
                            lv_declaredName_22_0=norm1_LiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_22_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getMethodParamsAndBodyParserRuleCall_1_3_0_0_3_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_95);
                            this_MethodParamsAndBody_23=ruleMethodParamsAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsAndBody_23;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    int alt287=2;
                    int LA287_0 = input.LA(1);

                    if ( (LA287_0==Semicolon) ) {
                        alt287=1;
                    }
                    switch (alt287) {
                        case 1 :
                            {
                            otherlv_24=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_24, grammarAccess.getAnnotatedPropertyAssignmentAccess().getSemicolonKeyword_1_3_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyNameValuePairSingleNameAnnotationListAction_1_4_0(),
                                  current);
                          
                    }

                    }
                    int alt288=2;
                    alt288 = dfa288.predict(input);
                    switch (alt288) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredTypeRefTypeRefParserRuleCall_1_4_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_9);
                            lv_declaredTypeRef_26_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredTypeRef",
                                      		lv_declaredTypeRef_26_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getIdentifierRefIdentifierRefParserRuleCall_1_4_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_60);
                    lv_identifierRef_27_0=norm1_IdentifierRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"identifierRef",
                              		lv_identifierRef_27_0, 
                              		"eu.numberfour.n4js.N4JS.IdentifierRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt289=2;
                    int LA289_0 = input.LA(1);

                    if ( (LA289_0==EqualsSign) ) {
                        alt289=1;
                    }
                    switch (alt289) {
                        case 1 :
                            {
                            otherlv_28=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_28, grammarAccess.getAnnotatedPropertyAssignmentAccess().getEqualsSignKeyword_1_4_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getExpressionAssignmentExpressionParserRuleCall_1_4_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_29_0=norm3_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_29_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertyMethodDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyMethodDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyMethodDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyMethodDeclaration=rulePropertyMethodDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyMethodDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertyMethodDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_generator_3_0=null;
        Token otherlv_8=null;
        EObject this_TypeVariables_1 = null;

        EObject lv_returnTypeRef_2_0 = null;

        EObject lv_declaredName_4_0 = null;

        EObject this_MethodParamsAndBody_5 = null;

        EObject lv_declaredName_6_0 = null;

        EObject this_MethodParamsAndBody_7 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyMethodDeclarationAccess().getPropertyMethodDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            int alt291=2;
            int LA291_0 = input.LA(1);

            if ( (LA291_0==LessThanSign) ) {
                alt291=1;
            }
            switch (alt291) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getTypeVariablesParserRuleCall_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_94);
                    this_TypeVariables_1=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt292=2;
            alt292 = dfa292.predict(input);
            switch (alt292) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getReturnTypeRefTypeRefWithModifiersParserRuleCall_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_94);
                    lv_returnTypeRef_2_0=ruleTypeRefWithModifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt293=2;
            int LA293_0 = input.LA(1);

            if ( (LA293_0==Asterisk) ) {
                alt293=1;
            }
            else if ( ((LA293_0>=Intersection && LA293_0<=With)||(LA293_0>=For && LA293_0<=Var)||(LA293_0>=As && LA293_0<=Of)||LA293_0==LeftSquareBracket||LA293_0==RULE_DOUBLE||LA293_0==RULE_HEX_INT||LA293_0==RULE_OCTAL_INT||LA293_0==RULE_SCIENTIFIC_INT||LA293_0==RULE_IDENTIFIER||LA293_0==RULE_STRING||LA293_0==RULE_INT) ) {
                alt293=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 293, 0, input);

                throw nvae;
            }
            switch (alt293) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_3_0=(Token)match(input,Asterisk,FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_3_0, grammarAccess.getPropertyMethodDeclarationAccess().getGeneratorAsteriskKeyword_0_0_3_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_3_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_42);
                    lv_declaredName_4_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_4_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getMethodParamsAndBodyParserRuleCall_0_0_3_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_95);
                    this_MethodParamsAndBody_5=norm1_MethodParamsAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsAndBody_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_3_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_41);
                    lv_declaredName_6_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_6_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getMethodParamsAndBodyParserRuleCall_0_0_3_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_95);
                    this_MethodParamsAndBody_7=ruleMethodParamsAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsAndBody_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }
            int alt294=2;
            int LA294_0 = input.LA(1);

            if ( (LA294_0==Semicolon) ) {
                alt294=1;
            }
            switch (alt294) {
                case 1 :
                    {
                    otherlv_8=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getPropertyMethodDeclarationAccess().getSemicolonKeyword_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PropertyMethodDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_generator_3_0=null;
        Token otherlv_8=null;
        EObject this_TypeVariables_1 = null;

        EObject lv_returnTypeRef_2_0 = null;

        EObject lv_declaredName_4_0 = null;

        EObject this_MethodParamsAndBody_5 = null;

        EObject lv_declaredName_6_0 = null;

        EObject this_MethodParamsAndBody_7 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyMethodDeclarationAccess().getPropertyMethodDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            int alt295=2;
            int LA295_0 = input.LA(1);

            if ( (LA295_0==LessThanSign) ) {
                alt295=1;
            }
            switch (alt295) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getTypeVariablesParserRuleCall_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_94);
                    this_TypeVariables_1=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt296=2;
            alt296 = dfa296.predict(input);
            switch (alt296) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getReturnTypeRefTypeRefWithModifiersParserRuleCall_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_94);
                    lv_returnTypeRef_2_0=ruleTypeRefWithModifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt297=2;
            int LA297_0 = input.LA(1);

            if ( (LA297_0==Asterisk) ) {
                alt297=1;
            }
            else if ( ((LA297_0>=Intersection && LA297_0<=With)||(LA297_0>=For && LA297_0<=Var)||(LA297_0>=As && LA297_0<=Of)||LA297_0==LeftSquareBracket||LA297_0==RULE_DOUBLE||LA297_0==RULE_HEX_INT||LA297_0==RULE_OCTAL_INT||LA297_0==RULE_SCIENTIFIC_INT||LA297_0==RULE_IDENTIFIER||LA297_0==RULE_STRING||LA297_0==RULE_INT) ) {
                alt297=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 297, 0, input);

                throw nvae;
            }
            switch (alt297) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_3_0=(Token)match(input,Asterisk,FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_3_0, grammarAccess.getPropertyMethodDeclarationAccess().getGeneratorAsteriskKeyword_0_0_3_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_3_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_42);
                    lv_declaredName_4_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_4_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getMethodParamsAndBodyParserRuleCall_0_0_3_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_95);
                    this_MethodParamsAndBody_5=norm1_MethodParamsAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsAndBody_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_3_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_41);
                    lv_declaredName_6_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_6_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getMethodParamsAndBodyParserRuleCall_0_0_3_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_95);
                    this_MethodParamsAndBody_7=ruleMethodParamsAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsAndBody_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }
            int alt298=2;
            int LA298_0 = input.LA(1);

            if ( (LA298_0==Semicolon) ) {
                alt298=1;
            }
            switch (alt298) {
                case 1 :
                    {
                    otherlv_8=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getPropertyMethodDeclarationAccess().getSemicolonKeyword_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertyNameValuePair() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyNameValuePair = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyNameValuePairRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyNameValuePair=rulePropertyNameValuePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyNameValuePair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertyNameValuePair() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_declaredTypeRef_1_0 = null;

        EObject lv_declaredName_2_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyNameValuePairAccess().getPropertyNameValuePairAction_0_0_0(),
                          current);
                  
            }

            }
            int alt299=2;
            alt299 = dfa299.predict(input);
            switch (alt299) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyNameValuePairAccess().getDeclaredTypeRefTypeRefWithModifiersParserRuleCall_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_93);
                    lv_declaredTypeRef_1_0=ruleTypeRefWithModifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredTypeRef",
                              		lv_declaredTypeRef_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyNameValuePairAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_83);
            lv_declaredName_2_0=ruleLiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,Colon,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getPropertyNameValuePairAccess().getColonKeyword_0_0_3());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyNameValuePairAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_4_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_4_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PropertyNameValuePair() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_declaredTypeRef_1_0 = null;

        EObject lv_declaredName_2_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyNameValuePairAccess().getPropertyNameValuePairAction_0_0_0(),
                          current);
                  
            }

            }
            int alt300=2;
            alt300 = dfa300.predict(input);
            switch (alt300) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyNameValuePairAccess().getDeclaredTypeRefTypeRefWithModifiersParserRuleCall_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_93);
                    lv_declaredTypeRef_1_0=ruleTypeRefWithModifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredTypeRef",
                              		lv_declaredTypeRef_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyNameValuePairAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_83);
            lv_declaredName_2_0=norm1_LiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,Colon,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getPropertyNameValuePairAccess().getColonKeyword_0_0_3());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyNameValuePairAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_4_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_4_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertyNameValuePairSingleName() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyNameValuePairSingleName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyNameValuePairSingleName=rulePropertyNameValuePairSingleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyNameValuePairSingleName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertyNameValuePairSingleName() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_declaredTypeRef_0_0 = null;

        EObject lv_identifierRef_1_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt301=2;
            alt301 = dfa301.predict(input);
            switch (alt301) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameAccess().getDeclaredTypeRefTypeRefParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_9);
                    lv_declaredTypeRef_0_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairSingleNameRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredTypeRef",
                              		lv_declaredTypeRef_0_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameAccess().getIdentifierRefIdentifierRefParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_60);
            lv_identifierRef_1_0=ruleIdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairSingleNameRule());
              	        }
                     		set(
                     			current, 
                     			"identifierRef",
                      		lv_identifierRef_1_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt302=2;
            int LA302_0 = input.LA(1);

            if ( (LA302_0==EqualsSign) ) {
                alt302=1;
            }
            switch (alt302) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getPropertyNameValuePairSingleNameAccess().getEqualsSignKeyword_2_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameAccess().getExpressionAssignmentExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairSingleNameRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PropertyNameValuePairSingleName() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_declaredTypeRef_0_0 = null;

        EObject lv_identifierRef_1_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt303=2;
            alt303 = dfa303.predict(input);
            switch (alt303) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameAccess().getDeclaredTypeRefTypeRefParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_9);
                    lv_declaredTypeRef_0_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairSingleNameRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredTypeRef",
                              		lv_declaredTypeRef_0_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameAccess().getIdentifierRefIdentifierRefParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_60);
            lv_identifierRef_1_0=norm1_IdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairSingleNameRule());
              	        }
                     		set(
                     			current, 
                     			"identifierRef",
                      		lv_identifierRef_1_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt304=2;
            int LA304_0 = input.LA(1);

            if ( (LA304_0==EqualsSign) ) {
                alt304=1;
            }
            switch (alt304) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getPropertyNameValuePairSingleNameAccess().getEqualsSignKeyword_2_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameAccess().getExpressionAssignmentExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairSingleNameRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertyGetterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyGetterDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyGetterDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyGetterDeclaration=rulePropertyGetterDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyGetterDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertyGetterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_GetterHeader_1 = null;

        EObject lv_body_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyGetterDeclarationAccess().getPropertyGetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getPropertyGetterDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getPropertyGetterDeclarationAccess().getGetterHeaderParserRuleCall_0_0_1()); 
                  
            }
            pushFollow(FOLLOW_13);
            this_GetterHeader_1=ruleGetterHeader(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_GetterHeader_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyGetterDeclarationAccess().getBodyBlockParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_2_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyGetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_2_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PropertyGetterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_GetterHeader_1 = null;

        EObject lv_body_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyGetterDeclarationAccess().getPropertyGetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getPropertyGetterDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getPropertyGetterDeclarationAccess().getGetterHeaderParserRuleCall_0_0_1()); 
                  
            }
            pushFollow(FOLLOW_13);
            this_GetterHeader_1=norm1_GetterHeader(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_GetterHeader_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyGetterDeclarationAccess().getBodyBlockParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_2_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyGetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_2_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertySetterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertySetterDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertySetterDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertySetterDeclaration=rulePropertySetterDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertySetterDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertySetterDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_declaredName_2_0 = null;

        EObject lv_fpar_4_0 = null;

        EObject lv_body_6_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertySetterDeclarationAccess().getPropertySetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Set,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPropertySetterDeclarationAccess().getSetKeyword_0_0_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertySetterDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_53);
            lv_declaredName_2_0=ruleLiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertySetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getPropertySetterDeclarationAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertySetterDeclarationAccess().getFparFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_66);
            lv_fpar_4_0=ruleFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertySetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"fpar",
                      		lv_fpar_4_0, 
                      		"eu.numberfour.n4js.N4JS.FormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getPropertySetterDeclarationAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertySetterDeclarationAccess().getBodyBlockParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_6_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertySetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_6_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PropertySetterDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_declaredName_2_0 = null;

        EObject lv_fpar_4_0 = null;

        EObject lv_body_6_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertySetterDeclarationAccess().getPropertySetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Set,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPropertySetterDeclarationAccess().getSetKeyword_0_0_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertySetterDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_53);
            lv_declaredName_2_0=norm1_LiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertySetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getPropertySetterDeclarationAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertySetterDeclarationAccess().getFparFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_66);
            lv_fpar_4_0=norm1_FormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertySetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"fpar",
                      		lv_fpar_4_0, 
                      		"eu.numberfour.n4js.N4JS.FormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getPropertySetterDeclarationAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertySetterDeclarationAccess().getBodyBlockParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_6_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertySetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_6_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleParameterizedCallExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterizedCallExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterizedCallExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterizedCallExpression=ruleParameterizedCallExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterizedCallExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleParameterizedCallExpression() throws RecognitionException {
        EObject current = null;

        EObject this_TypeArguments_0 = null;

        EObject lv_target_1_0 = null;

        EObject this_ArgumentsWithParentheses_2 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getParameterizedCallExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getParameterizedCallExpressionAccess().getTypeArgumentsParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_9);
            this_TypeArguments_0=ruleTypeArguments(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypeArguments_0;
                      afterParserOrEnumRuleCall();
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedCallExpressionAccess().getTargetIdentifierRefParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_53);
            lv_target_1_0=ruleIdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterizedCallExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"target",
                      		lv_target_1_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getParameterizedCallExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getParameterizedCallExpressionAccess().getArgumentsWithParenthesesParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_ArgumentsWithParentheses_2=ruleArgumentsWithParentheses(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ArgumentsWithParentheses_2;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ParameterizedCallExpression() throws RecognitionException {
        EObject current = null;

        EObject this_TypeArguments_0 = null;

        EObject lv_target_1_0 = null;

        EObject this_ArgumentsWithParentheses_2 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getParameterizedCallExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getParameterizedCallExpressionAccess().getTypeArgumentsParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_9);
            this_TypeArguments_0=ruleTypeArguments(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypeArguments_0;
                      afterParserOrEnumRuleCall();
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedCallExpressionAccess().getTargetIdentifierRefParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_53);
            lv_target_1_0=norm1_IdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterizedCallExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"target",
                      		lv_target_1_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getParameterizedCallExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getParameterizedCallExpressionAccess().getArgumentsWithParenthesesParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_ArgumentsWithParentheses_2=norm1_ArgumentsWithParentheses(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ArgumentsWithParentheses_2;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLeftHandSideExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLeftHandSideExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLeftHandSideExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLeftHandSideExpression=ruleLeftHandSideExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLeftHandSideExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLeftHandSideExpression() throws RecognitionException {
        EObject current = null;

        EObject this_MemberExpression_0 = null;

        EObject this_ArgumentsWithParentheses_2 = null;

        EObject this_ArgumentsWithParentheses_4 = null;

        EObject this_IndexedAccessExpressionTail_6 = null;

        EObject this_ParameterizedPropertyAccessExpressionTail_8 = null;

        EObject lv_template_10_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getMemberExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_96);
            this_MemberExpression_0=ruleMemberExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_MemberExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt306=2;
            int LA306_0 = input.LA(1);

            if ( (LA306_0==LeftParenthesis) ) {
                alt306=1;
            }
            switch (alt306) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getLeftHandSideExpressionAccess().getParameterizedCallExpressionTargetAction_1_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getArgumentsWithParenthesesParserRuleCall_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_97);
                    this_ArgumentsWithParentheses_2=ruleArgumentsWithParentheses(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArgumentsWithParentheses_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    loop305:
                    do {
                        int alt305=5;
                        int LA305_0 = input.LA(1);

                        if ( (LA305_0==LeftParenthesis) ) {
                            alt305=1;
                        }
                        else if ( (LA305_0==LeftSquareBracket) ) {
                            alt305=2;
                        }
                        else if ( (LA305_0==FullStop) ) {
                            alt305=3;
                        }
                        else if ( (LA305_0==RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) && (synpred179_InternalN4JSParser())) {
                            alt305=4;
                        }
                        else if ( (LA305_0==RULE_TEMPLATE_HEAD) && (synpred179_InternalN4JSParser())) {
                            alt305=4;
                        }


                        switch (alt305) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getParameterizedCallExpressionTargetAction_1_2_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getArgumentsWithParenthesesParserRuleCall_1_2_0_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    this_ArgumentsWithParentheses_4=ruleArgumentsWithParentheses(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_ArgumentsWithParentheses_4;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getIndexedAccessExpressionTargetAction_1_2_1_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getIndexedAccessExpressionTailParserRuleCall_1_2_1_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    this_IndexedAccessExpressionTail_6=ruleIndexedAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_IndexedAccessExpressionTail_6;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getParameterizedPropertyAccessExpressionTargetAction_1_2_2_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getParameterizedPropertyAccessExpressionTailParserRuleCall_1_2_2_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    this_ParameterizedPropertyAccessExpressionTail_8=ruleParameterizedPropertyAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_ParameterizedPropertyAccessExpressionTail_8;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    {
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getTaggedTemplateStringTargetAction_1_2_3_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getTemplateTemplateLiteralParserRuleCall_1_2_3_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    lv_template_10_0=ruleTemplateLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getLeftHandSideExpressionRule());
                    	      	        }
                    	             		set(
                    	             			current, 
                    	             			"template",
                    	              		lv_template_10_0, 
                    	              		"eu.numberfour.n4js.N4JS.TemplateLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop305;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_LeftHandSideExpression() throws RecognitionException {
        EObject current = null;

        EObject this_MemberExpression_0 = null;

        EObject this_ArgumentsWithParentheses_2 = null;

        EObject this_ArgumentsWithParentheses_4 = null;

        EObject this_IndexedAccessExpressionTail_6 = null;

        EObject this_ParameterizedPropertyAccessExpressionTail_8 = null;

        EObject lv_template_10_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getMemberExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_96);
            this_MemberExpression_0=norm1_MemberExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_MemberExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt308=2;
            int LA308_0 = input.LA(1);

            if ( (LA308_0==LeftParenthesis) ) {
                alt308=1;
            }
            switch (alt308) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getLeftHandSideExpressionAccess().getParameterizedCallExpressionTargetAction_1_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getArgumentsWithParenthesesParserRuleCall_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_97);
                    this_ArgumentsWithParentheses_2=norm1_ArgumentsWithParentheses(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArgumentsWithParentheses_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    loop307:
                    do {
                        int alt307=5;
                        int LA307_0 = input.LA(1);

                        if ( (LA307_0==LeftParenthesis) ) {
                            alt307=1;
                        }
                        else if ( (LA307_0==LeftSquareBracket) ) {
                            alt307=2;
                        }
                        else if ( (LA307_0==FullStop) ) {
                            alt307=3;
                        }
                        else if ( (LA307_0==RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) && (synpred180_InternalN4JSParser())) {
                            alt307=4;
                        }
                        else if ( (LA307_0==RULE_TEMPLATE_HEAD) && (synpred180_InternalN4JSParser())) {
                            alt307=4;
                        }


                        switch (alt307) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getParameterizedCallExpressionTargetAction_1_2_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getArgumentsWithParenthesesParserRuleCall_1_2_0_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    this_ArgumentsWithParentheses_4=norm1_ArgumentsWithParentheses(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_ArgumentsWithParentheses_4;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getIndexedAccessExpressionTargetAction_1_2_1_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getIndexedAccessExpressionTailParserRuleCall_1_2_1_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    this_IndexedAccessExpressionTail_6=norm1_IndexedAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_IndexedAccessExpressionTail_6;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getParameterizedPropertyAccessExpressionTargetAction_1_2_2_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getParameterizedPropertyAccessExpressionTailParserRuleCall_1_2_2_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    this_ParameterizedPropertyAccessExpressionTail_8=norm1_ParameterizedPropertyAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_ParameterizedPropertyAccessExpressionTail_8;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    {
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getTaggedTemplateStringTargetAction_1_2_3_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getTemplateTemplateLiteralParserRuleCall_1_2_3_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    lv_template_10_0=norm1_TemplateLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getLeftHandSideExpressionRule());
                    	      	        }
                    	             		set(
                    	             			current, 
                    	             			"template",
                    	              		lv_template_10_0, 
                    	              		"eu.numberfour.n4js.N4JS.TemplateLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop307;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArgumentsWithParentheses(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_Arguments_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_98); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getArgumentsWithParenthesesAccess().getLeftParenthesisKeyword_0());
                  
            }
            int alt309=2;
            int LA309_0 = input.LA(1);

            if ( ((LA309_0>=Intersection && LA309_0<=Implements)||(LA309_0>=Promisify && LA309_0<=Abstract)||(LA309_0>=External && LA309_0<=Function)||(LA309_0>=Private && LA309_0<=Delete)||LA309_0==Public||LA309_0==Static||(LA309_0>=Target && LA309_0<=Await)||LA309_0==Class||(LA309_0>=False && LA309_0<=Super)||LA309_0==Union||(LA309_0>=Yield && LA309_0<=This)||(LA309_0>=From && LA309_0<=Void)||LA309_0==FullStopFullStopFullStop||(LA309_0>=Get && LA309_0<=Set)||LA309_0==PlusSignPlusSign||LA309_0==HyphenMinusHyphenMinus||LA309_0==SolidusEqualsSign||LA309_0==As||LA309_0==Of||LA309_0==ExclamationMark||LA309_0==LeftParenthesis||(LA309_0>=Asterisk && LA309_0<=PlusSign)||LA309_0==HyphenMinus||LA309_0==Solidus||LA309_0==LessThanSign||(LA309_0>=CommercialAt && LA309_0<=LeftSquareBracket)||LA309_0==LeftCurlyBracket||LA309_0==Tilde||LA309_0==RULE_DOUBLE||(LA309_0>=RULE_HEX_INT && LA309_0<=RULE_LEGACY_OCTAL_INT)||LA309_0==RULE_SCIENTIFIC_INT||LA309_0==RULE_IDENTIFIER||LA309_0==RULE_STRING||(LA309_0>=RULE_TEMPLATE_HEAD && LA309_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA309_0==RULE_INT) ) {
                alt309=1;
            }
            switch (alt309) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArgumentsWithParenthesesRule());
                      		}
                              newCompositeNode(grammarAccess.getArgumentsWithParenthesesAccess().getArgumentsParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_66);
                    this_Arguments_1=ruleArguments(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Arguments_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getArgumentsWithParenthesesAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ArgumentsWithParentheses(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_Arguments_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_98); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getArgumentsWithParenthesesAccess().getLeftParenthesisKeyword_0());
                  
            }
            int alt310=2;
            int LA310_0 = input.LA(1);

            if ( ((LA310_0>=Intersection && LA310_0<=Implements)||(LA310_0>=Promisify && LA310_0<=Abstract)||(LA310_0>=External && LA310_0<=Function)||(LA310_0>=Private && LA310_0<=Delete)||LA310_0==Public||LA310_0==Static||(LA310_0>=Target && LA310_0<=Await)||LA310_0==Class||(LA310_0>=False && LA310_0<=Super)||LA310_0==Union||(LA310_0>=Yield && LA310_0<=This)||(LA310_0>=From && LA310_0<=Void)||LA310_0==FullStopFullStopFullStop||(LA310_0>=Get && LA310_0<=Set)||LA310_0==PlusSignPlusSign||LA310_0==HyphenMinusHyphenMinus||LA310_0==SolidusEqualsSign||LA310_0==As||LA310_0==Of||LA310_0==ExclamationMark||LA310_0==LeftParenthesis||(LA310_0>=Asterisk && LA310_0<=PlusSign)||LA310_0==HyphenMinus||LA310_0==Solidus||LA310_0==LessThanSign||(LA310_0>=CommercialAt && LA310_0<=LeftSquareBracket)||LA310_0==LeftCurlyBracket||LA310_0==Tilde||LA310_0==RULE_DOUBLE||(LA310_0>=RULE_HEX_INT && LA310_0<=RULE_LEGACY_OCTAL_INT)||LA310_0==RULE_SCIENTIFIC_INT||LA310_0==RULE_IDENTIFIER||LA310_0==RULE_STRING||(LA310_0>=RULE_TEMPLATE_HEAD && LA310_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA310_0==RULE_INT) ) {
                alt310=1;
            }
            switch (alt310) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArgumentsWithParenthesesRule());
                      		}
                              newCompositeNode(grammarAccess.getArgumentsWithParenthesesAccess().getArgumentsParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_66);
                    this_Arguments_1=norm1_Arguments(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Arguments_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getArgumentsWithParenthesesAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArguments(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_arguments_0_0 = null;

        EObject lv_arguments_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_33);
            lv_arguments_0_0=ruleArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArgumentsRule());
              	        }
                     		add(
                     			current, 
                     			"arguments",
                      		lv_arguments_0_0, 
                      		"eu.numberfour.n4js.N4JS.Argument");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop311:
            do {
                int alt311=2;
                int LA311_0 = input.LA(1);

                if ( (LA311_0==Comma) ) {
                    alt311=1;
                }


                switch (alt311) {
            	case 1 :
            	    {
            	    otherlv_1=(Token)match(input,Comma,FOLLOW_99); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getArgumentsAccess().getCommaKeyword_1_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_33);
            	    lv_arguments_2_0=ruleArgument();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArgumentsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"arguments",
            	              		lv_arguments_2_0, 
            	              		"eu.numberfour.n4js.N4JS.Argument");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop311;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_Arguments(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_arguments_0_0 = null;

        EObject lv_arguments_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_33);
            lv_arguments_0_0=norm1_Argument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArgumentsRule());
              	        }
                     		add(
                     			current, 
                     			"arguments",
                      		lv_arguments_0_0, 
                      		"eu.numberfour.n4js.N4JS.Argument");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop312:
            do {
                int alt312=2;
                int LA312_0 = input.LA(1);

                if ( (LA312_0==Comma) ) {
                    alt312=1;
                }


                switch (alt312) {
            	case 1 :
            	    {
            	    otherlv_1=(Token)match(input,Comma,FOLLOW_99); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getArgumentsAccess().getCommaKeyword_1_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_33);
            	    lv_arguments_2_0=norm1_Argument();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArgumentsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"arguments",
            	              		lv_arguments_2_0, 
            	              		"eu.numberfour.n4js.N4JS.Argument");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop312;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArgument = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArgument=ruleArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArgument() throws RecognitionException {
        EObject current = null;

        Token lv_spread_0_0=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt313=2;
            int LA313_0 = input.LA(1);

            if ( (LA313_0==FullStopFullStopFullStop) ) {
                alt313=1;
            }
            switch (alt313) {
                case 1 :
                    {
                    {
                    lv_spread_0_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_spread_0_0, grammarAccess.getArgumentAccess().getSpreadFullStopFullStopFullStopKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArgumentRule());
                      	        }
                             		setWithLastConsumed(current, "spread", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArgumentAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_1_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArgumentRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_Argument() throws RecognitionException {
        EObject current = null;

        Token lv_spread_0_0=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt314=2;
            int LA314_0 = input.LA(1);

            if ( (LA314_0==FullStopFullStopFullStop) ) {
                alt314=1;
            }
            switch (alt314) {
                case 1 :
                    {
                    {
                    lv_spread_0_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_spread_0_0, grammarAccess.getArgumentAccess().getSpreadFullStopFullStopFullStopKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArgumentRule());
                      	        }
                             		setWithLastConsumed(current, "spread", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArgumentAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_1_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArgumentRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeArguments(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_typeArgs_1_0 = null;

        EObject lv_typeArgs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LessThanSign,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTypeArgumentsAccess().getLessThanSignKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypeArgumentsAccess().getTypeArgsTypeRefParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_17);
            lv_typeArgs_1_0=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeArgumentsRule());
              	        }
                     		add(
                     			current, 
                     			"typeArgs",
                      		lv_typeArgs_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop315:
            do {
                int alt315=2;
                int LA315_0 = input.LA(1);

                if ( (LA315_0==Comma) ) {
                    alt315=1;
                }


                switch (alt315) {
            	case 1 :
            	    {
            	    otherlv_2=(Token)match(input,Comma,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getTypeArgumentsAccess().getCommaKeyword_2_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTypeArgumentsAccess().getTypeArgsTypeRefParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_17);
            	    lv_typeArgs_3_0=ruleTypeRef();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTypeArgumentsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"typeArgs",
            	              		lv_typeArgs_3_0, 
            	              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop315;
                }
            } while (true);

            otherlv_4=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getTypeArgumentsAccess().getGreaterThanSignKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleMemberExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMemberExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMemberExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMemberExpression=ruleMemberExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMemberExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleMemberExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_withArgs_8_0=null;
        Token otherlv_10=null;
        EObject lv_callee_6_0 = null;

        EObject this_TypeArguments_7 = null;

        EObject this_Arguments_9 = null;

        EObject this_IndexedAccessExpressionTail_12 = null;

        EObject this_ParameterizedPropertyAccessExpressionTail_14 = null;

        EObject lv_template_16_0 = null;

        EObject this_PrimaryExpression_17 = null;

        EObject this_IndexedAccessExpressionTail_19 = null;

        EObject this_ParameterizedPropertyAccessExpressionTail_21 = null;

        EObject lv_template_23_0 = null;


         enterRule(); 
            
        try {
            {
            int alt321=3;
            alt321 = dfa321.predict(input);
            switch (alt321) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getMemberExpressionAccess().getNewTargetAction_0_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,New,FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMemberExpressionAccess().getNewKeyword_0_0_0_1());
                          
                    }
                    otherlv_2=(Token)match(input,FullStop,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getMemberExpressionAccess().getFullStopKeyword_0_0_0_2());
                          
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,Target,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getMemberExpressionAccess().getTargetKeyword_0_1());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getMemberExpressionAccess().getNewExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_5=(Token)match(input,New,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getMemberExpressionAccess().getNewKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMemberExpressionAccess().getCalleeMemberExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_103);
                    lv_callee_6_0=ruleMemberExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMemberExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"callee",
                              		lv_callee_6_0, 
                              		"eu.numberfour.n4js.N4JS.MemberExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt316=2;
                    int LA316_0 = input.LA(1);

                    if ( (LA316_0==LessThanSign) ) {
                        int LA316_1 = input.LA(2);

                        if ( (synpred183_InternalN4JSParser()) ) {
                            alt316=1;
                        }
                    }
                    switch (alt316) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getMemberExpressionRule());
                              		}
                                      newCompositeNode(grammarAccess.getMemberExpressionAccess().getTypeArgumentsParserRuleCall_1_2()); 
                                  
                            }
                            pushFollow(FOLLOW_96);
                            this_TypeArguments_7=ruleTypeArguments(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_TypeArguments_7;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt319=2;
                    int LA319_0 = input.LA(1);

                    if ( (LA319_0==LeftParenthesis) ) {
                        int LA319_1 = input.LA(2);

                        if ( (synpred184_InternalN4JSParser()) ) {
                            alt319=1;
                        }
                    }
                    switch (alt319) {
                        case 1 :
                            {
                            {
                            {
                            lv_withArgs_8_0=(Token)match(input,LeftParenthesis,FOLLOW_98); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_withArgs_8_0, grammarAccess.getMemberExpressionAccess().getWithArgsLeftParenthesisKeyword_1_3_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMemberExpressionRule());
                              	        }
                                     		setWithLastConsumed(current, "withArgs", true, "(");
                              	    
                            }

                            }


                            }
                            int alt317=2;
                            int LA317_0 = input.LA(1);

                            if ( ((LA317_0>=Intersection && LA317_0<=Implements)||(LA317_0>=Promisify && LA317_0<=Abstract)||(LA317_0>=External && LA317_0<=Function)||(LA317_0>=Private && LA317_0<=Delete)||LA317_0==Public||LA317_0==Static||(LA317_0>=Target && LA317_0<=Await)||LA317_0==Class||(LA317_0>=False && LA317_0<=Super)||LA317_0==Union||(LA317_0>=Yield && LA317_0<=This)||(LA317_0>=From && LA317_0<=Void)||LA317_0==FullStopFullStopFullStop||(LA317_0>=Get && LA317_0<=Set)||LA317_0==PlusSignPlusSign||LA317_0==HyphenMinusHyphenMinus||LA317_0==SolidusEqualsSign||LA317_0==As||LA317_0==Of||LA317_0==ExclamationMark||LA317_0==LeftParenthesis||(LA317_0>=Asterisk && LA317_0<=PlusSign)||LA317_0==HyphenMinus||LA317_0==Solidus||LA317_0==LessThanSign||(LA317_0>=CommercialAt && LA317_0<=LeftSquareBracket)||LA317_0==LeftCurlyBracket||LA317_0==Tilde||LA317_0==RULE_DOUBLE||(LA317_0>=RULE_HEX_INT && LA317_0<=RULE_LEGACY_OCTAL_INT)||LA317_0==RULE_SCIENTIFIC_INT||LA317_0==RULE_IDENTIFIER||LA317_0==RULE_STRING||(LA317_0>=RULE_TEMPLATE_HEAD && LA317_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA317_0==RULE_INT) ) {
                                alt317=1;
                            }
                            switch (alt317) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                                      		}
                                              newCompositeNode(grammarAccess.getMemberExpressionAccess().getArgumentsParserRuleCall_1_3_1()); 
                                          
                                    }
                                    pushFollow(FOLLOW_66);
                                    this_Arguments_9=ruleArguments(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_Arguments_9;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }

                            otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_10, grammarAccess.getMemberExpressionAccess().getRightParenthesisKeyword_1_3_2());
                                  
                            }
                            loop318:
                            do {
                                int alt318=4;
                                switch ( input.LA(1) ) {
                                case LeftSquareBracket:
                                    {
                                    alt318=1;
                                    }
                                    break;
                                case FullStop:
                                    {
                                    alt318=2;
                                    }
                                    break;
                                case RULE_TEMPLATE_HEAD:
                                case RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL:
                                    {
                                    alt318=3;
                                    }
                                    break;

                                }

                                switch (alt318) {
                            	case 1 :
                            	    {
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	              current = forceCreateModelElementAndSet(
                            	                  grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTargetAction_1_3_3_0_0(),
                            	                  current);
                            	          
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {
                            	       
                            	      		if (current==null) {
                            	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                            	      		}
                            	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTailParserRuleCall_1_3_3_0_1()); 
                            	          
                            	    }
                            	    pushFollow(FOLLOW_97);
                            	    this_IndexedAccessExpressionTail_12=ruleIndexedAccessExpressionTail(current);

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	              current = this_IndexedAccessExpressionTail_12;
                            	              afterParserOrEnumRuleCall();
                            	          
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    {
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	              current = forceCreateModelElementAndSet(
                            	                  grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTargetAction_1_3_3_1_0(),
                            	                  current);
                            	          
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {
                            	       
                            	      		if (current==null) {
                            	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                            	      		}
                            	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTailParserRuleCall_1_3_3_1_1()); 
                            	          
                            	    }
                            	    pushFollow(FOLLOW_97);
                            	    this_ParameterizedPropertyAccessExpressionTail_14=ruleParameterizedPropertyAccessExpressionTail(current);

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	              current = this_ParameterizedPropertyAccessExpressionTail_14;
                            	              afterParserOrEnumRuleCall();
                            	          
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    {
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	              current = forceCreateModelElementAndSet(
                            	                  grammarAccess.getMemberExpressionAccess().getTaggedTemplateStringTargetAction_1_3_3_2_0(),
                            	                  current);
                            	          
                            	    }

                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberExpressionAccess().getTemplateTemplateLiteralParserRuleCall_1_3_3_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_97);
                            	    lv_template_16_0=ruleTemplateLiteral();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberExpressionRule());
                            	      	        }
                            	             		set(
                            	             			current, 
                            	             			"template",
                            	              		lv_template_16_0, 
                            	              		"eu.numberfour.n4js.N4JS.TemplateLiteral");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop318;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getMemberExpressionAccess().getPrimaryExpressionParserRuleCall_2_0()); 
                          
                    }
                    pushFollow(FOLLOW_97);
                    this_PrimaryExpression_17=rulePrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrimaryExpression_17;
                              afterParserOrEnumRuleCall();
                          
                    }
                    loop320:
                    do {
                        int alt320=4;
                        switch ( input.LA(1) ) {
                        case LeftSquareBracket:
                            {
                            alt320=1;
                            }
                            break;
                        case FullStop:
                            {
                            alt320=2;
                            }
                            break;
                        case RULE_TEMPLATE_HEAD:
                        case RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL:
                            {
                            alt320=3;
                            }
                            break;

                        }

                        switch (alt320) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTargetAction_2_1_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTailParserRuleCall_2_1_0_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    this_IndexedAccessExpressionTail_19=ruleIndexedAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_IndexedAccessExpressionTail_19;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTargetAction_2_1_1_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTailParserRuleCall_2_1_1_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    this_ParameterizedPropertyAccessExpressionTail_21=ruleParameterizedPropertyAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_ParameterizedPropertyAccessExpressionTail_21;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getMemberExpressionAccess().getTaggedTemplateStringTargetAction_2_1_2_0(),
                    	                  current);
                    	          
                    	    }

                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberExpressionAccess().getTemplateTemplateLiteralParserRuleCall_2_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    lv_template_23_0=ruleTemplateLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberExpressionRule());
                    	      	        }
                    	             		set(
                    	             			current, 
                    	             			"template",
                    	              		lv_template_23_0, 
                    	              		"eu.numberfour.n4js.N4JS.TemplateLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop320;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_MemberExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_withArgs_8_0=null;
        Token otherlv_10=null;
        EObject lv_callee_6_0 = null;

        EObject this_TypeArguments_7 = null;

        EObject this_Arguments_9 = null;

        EObject this_IndexedAccessExpressionTail_12 = null;

        EObject this_ParameterizedPropertyAccessExpressionTail_14 = null;

        EObject lv_template_16_0 = null;

        EObject this_PrimaryExpression_17 = null;

        EObject this_IndexedAccessExpressionTail_19 = null;

        EObject this_ParameterizedPropertyAccessExpressionTail_21 = null;

        EObject lv_template_23_0 = null;


         enterRule(); 
            
        try {
            {
            int alt327=3;
            alt327 = dfa327.predict(input);
            switch (alt327) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getMemberExpressionAccess().getNewTargetAction_0_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,New,FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMemberExpressionAccess().getNewKeyword_0_0_0_1());
                          
                    }
                    otherlv_2=(Token)match(input,FullStop,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getMemberExpressionAccess().getFullStopKeyword_0_0_0_2());
                          
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,Target,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getMemberExpressionAccess().getTargetKeyword_0_1());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getMemberExpressionAccess().getNewExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_5=(Token)match(input,New,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getMemberExpressionAccess().getNewKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMemberExpressionAccess().getCalleeMemberExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_103);
                    lv_callee_6_0=norm1_MemberExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMemberExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"callee",
                              		lv_callee_6_0, 
                              		"eu.numberfour.n4js.N4JS.MemberExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt322=2;
                    int LA322_0 = input.LA(1);

                    if ( (LA322_0==LessThanSign) ) {
                        int LA322_1 = input.LA(2);

                        if ( (synpred187_InternalN4JSParser()) ) {
                            alt322=1;
                        }
                    }
                    switch (alt322) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getMemberExpressionRule());
                              		}
                                      newCompositeNode(grammarAccess.getMemberExpressionAccess().getTypeArgumentsParserRuleCall_1_2()); 
                                  
                            }
                            pushFollow(FOLLOW_96);
                            this_TypeArguments_7=ruleTypeArguments(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_TypeArguments_7;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt325=2;
                    int LA325_0 = input.LA(1);

                    if ( (LA325_0==LeftParenthesis) ) {
                        int LA325_1 = input.LA(2);

                        if ( (synpred188_InternalN4JSParser()) ) {
                            alt325=1;
                        }
                    }
                    switch (alt325) {
                        case 1 :
                            {
                            {
                            {
                            lv_withArgs_8_0=(Token)match(input,LeftParenthesis,FOLLOW_98); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_withArgs_8_0, grammarAccess.getMemberExpressionAccess().getWithArgsLeftParenthesisKeyword_1_3_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMemberExpressionRule());
                              	        }
                                     		setWithLastConsumed(current, "withArgs", true, "(");
                              	    
                            }

                            }


                            }
                            int alt323=2;
                            int LA323_0 = input.LA(1);

                            if ( ((LA323_0>=Intersection && LA323_0<=Implements)||(LA323_0>=Promisify && LA323_0<=Abstract)||(LA323_0>=External && LA323_0<=Function)||(LA323_0>=Private && LA323_0<=Delete)||LA323_0==Public||LA323_0==Static||(LA323_0>=Target && LA323_0<=Await)||LA323_0==Class||(LA323_0>=False && LA323_0<=Super)||LA323_0==Union||(LA323_0>=Yield && LA323_0<=This)||(LA323_0>=From && LA323_0<=Void)||LA323_0==FullStopFullStopFullStop||(LA323_0>=Get && LA323_0<=Set)||LA323_0==PlusSignPlusSign||LA323_0==HyphenMinusHyphenMinus||LA323_0==SolidusEqualsSign||LA323_0==As||LA323_0==Of||LA323_0==ExclamationMark||LA323_0==LeftParenthesis||(LA323_0>=Asterisk && LA323_0<=PlusSign)||LA323_0==HyphenMinus||LA323_0==Solidus||LA323_0==LessThanSign||(LA323_0>=CommercialAt && LA323_0<=LeftSquareBracket)||LA323_0==LeftCurlyBracket||LA323_0==Tilde||LA323_0==RULE_DOUBLE||(LA323_0>=RULE_HEX_INT && LA323_0<=RULE_LEGACY_OCTAL_INT)||LA323_0==RULE_SCIENTIFIC_INT||LA323_0==RULE_IDENTIFIER||LA323_0==RULE_STRING||(LA323_0>=RULE_TEMPLATE_HEAD && LA323_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA323_0==RULE_INT) ) {
                                alt323=1;
                            }
                            switch (alt323) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                                      		}
                                              newCompositeNode(grammarAccess.getMemberExpressionAccess().getArgumentsParserRuleCall_1_3_1()); 
                                          
                                    }
                                    pushFollow(FOLLOW_66);
                                    this_Arguments_9=norm1_Arguments(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_Arguments_9;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }

                            otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_10, grammarAccess.getMemberExpressionAccess().getRightParenthesisKeyword_1_3_2());
                                  
                            }
                            loop324:
                            do {
                                int alt324=4;
                                switch ( input.LA(1) ) {
                                case LeftSquareBracket:
                                    {
                                    alt324=1;
                                    }
                                    break;
                                case FullStop:
                                    {
                                    alt324=2;
                                    }
                                    break;
                                case RULE_TEMPLATE_HEAD:
                                case RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL:
                                    {
                                    alt324=3;
                                    }
                                    break;

                                }

                                switch (alt324) {
                            	case 1 :
                            	    {
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	              current = forceCreateModelElementAndSet(
                            	                  grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTargetAction_1_3_3_0_0(),
                            	                  current);
                            	          
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {
                            	       
                            	      		if (current==null) {
                            	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                            	      		}
                            	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTailParserRuleCall_1_3_3_0_1()); 
                            	          
                            	    }
                            	    pushFollow(FOLLOW_97);
                            	    this_IndexedAccessExpressionTail_12=norm1_IndexedAccessExpressionTail(current);

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	              current = this_IndexedAccessExpressionTail_12;
                            	              afterParserOrEnumRuleCall();
                            	          
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    {
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	              current = forceCreateModelElementAndSet(
                            	                  grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTargetAction_1_3_3_1_0(),
                            	                  current);
                            	          
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {
                            	       
                            	      		if (current==null) {
                            	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                            	      		}
                            	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTailParserRuleCall_1_3_3_1_1()); 
                            	          
                            	    }
                            	    pushFollow(FOLLOW_97);
                            	    this_ParameterizedPropertyAccessExpressionTail_14=norm1_ParameterizedPropertyAccessExpressionTail(current);

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	              current = this_ParameterizedPropertyAccessExpressionTail_14;
                            	              afterParserOrEnumRuleCall();
                            	          
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    {
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	              current = forceCreateModelElementAndSet(
                            	                  grammarAccess.getMemberExpressionAccess().getTaggedTemplateStringTargetAction_1_3_3_2_0(),
                            	                  current);
                            	          
                            	    }

                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberExpressionAccess().getTemplateTemplateLiteralParserRuleCall_1_3_3_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_97);
                            	    lv_template_16_0=norm1_TemplateLiteral();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberExpressionRule());
                            	      	        }
                            	             		set(
                            	             			current, 
                            	             			"template",
                            	              		lv_template_16_0, 
                            	              		"eu.numberfour.n4js.N4JS.TemplateLiteral");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop324;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getMemberExpressionAccess().getPrimaryExpressionParserRuleCall_2_0()); 
                          
                    }
                    pushFollow(FOLLOW_97);
                    this_PrimaryExpression_17=norm1_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrimaryExpression_17;
                              afterParserOrEnumRuleCall();
                          
                    }
                    loop326:
                    do {
                        int alt326=4;
                        switch ( input.LA(1) ) {
                        case LeftSquareBracket:
                            {
                            alt326=1;
                            }
                            break;
                        case FullStop:
                            {
                            alt326=2;
                            }
                            break;
                        case RULE_TEMPLATE_HEAD:
                        case RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL:
                            {
                            alt326=3;
                            }
                            break;

                        }

                        switch (alt326) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTargetAction_2_1_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTailParserRuleCall_2_1_0_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    this_IndexedAccessExpressionTail_19=norm1_IndexedAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_IndexedAccessExpressionTail_19;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTargetAction_2_1_1_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTailParserRuleCall_2_1_1_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    this_ParameterizedPropertyAccessExpressionTail_21=norm1_ParameterizedPropertyAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_ParameterizedPropertyAccessExpressionTail_21;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getMemberExpressionAccess().getTaggedTemplateStringTargetAction_2_1_2_0(),
                    	                  current);
                    	          
                    	    }

                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberExpressionAccess().getTemplateTemplateLiteralParserRuleCall_2_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    lv_template_23_0=norm1_TemplateLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberExpressionRule());
                    	      	        }
                    	             		set(
                    	             			current, 
                    	             			"template",
                    	              		lv_template_23_0, 
                    	              		"eu.numberfour.n4js.N4JS.TemplateLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop326;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIndexedAccessExpressionTail(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_index_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftSquareBracket,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIndexedAccessExpressionTailAccess().getLeftSquareBracketKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIndexedAccessExpressionTailAccess().getIndexExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_104);
            lv_index_1_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIndexedAccessExpressionTailRule());
              	        }
                     		set(
                     			current, 
                     			"index",
                      		lv_index_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getIndexedAccessExpressionTailAccess().getRightSquareBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_IndexedAccessExpressionTail(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_index_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftSquareBracket,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIndexedAccessExpressionTailAccess().getLeftSquareBracketKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIndexedAccessExpressionTailAccess().getIndexExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_104);
            lv_index_1_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIndexedAccessExpressionTailRule());
              	        }
                     		set(
                     			current, 
                     			"index",
                      		lv_index_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getIndexedAccessExpressionTailAccess().getRightSquareBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleParameterizedPropertyAccessExpressionTail(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject this_TypeArguments_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,FullStop,FOLLOW_105); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getParameterizedPropertyAccessExpressionTailAccess().getFullStopKeyword_0());
                  
            }
            int alt328=2;
            int LA328_0 = input.LA(1);

            if ( (LA328_0==LessThanSign) ) {
                alt328=1;
            }
            switch (alt328) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getParameterizedPropertyAccessExpressionTailRule());
                      		}
                              newCompositeNode(grammarAccess.getParameterizedPropertyAccessExpressionTailAccess().getTypeArgumentsParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_27);
                    this_TypeArguments_1=ruleTypeArguments(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeArguments_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getParameterizedPropertyAccessExpressionTailRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedPropertyAccessExpressionTailAccess().getPropertyIdentifiableElementCrossReference_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ParameterizedPropertyAccessExpressionTail(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject this_TypeArguments_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,FullStop,FOLLOW_105); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getParameterizedPropertyAccessExpressionTailAccess().getFullStopKeyword_0());
                  
            }
            int alt329=2;
            int LA329_0 = input.LA(1);

            if ( (LA329_0==LessThanSign) ) {
                alt329=1;
            }
            switch (alt329) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getParameterizedPropertyAccessExpressionTailRule());
                      		}
                              newCompositeNode(grammarAccess.getParameterizedPropertyAccessExpressionTailAccess().getTypeArgumentsParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_27);
                    this_TypeArguments_1=ruleTypeArguments(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeArguments_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getParameterizedPropertyAccessExpressionTailRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedPropertyAccessExpressionTailAccess().getPropertyIdentifiableElementCrossReference_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePostfixExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostfixExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostfixExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePostfixExpression=rulePostfixExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostfixExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePostfixExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LeftHandSideExpression_0 = null;

        Enumerator lv_op_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getPostfixExpressionAccess().getLeftHandSideExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_106);
            this_LeftHandSideExpression_0=ruleLeftHandSideExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               if (input.LA(1) == PlusSignPlusSign || input.LA(1) == HyphenMinusHyphenMinus) promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                      current = this_LeftHandSideExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt330=2;
            int LA330_0 = input.LA(1);

            if ( (LA330_0==PlusSignPlusSign) && (synpred189_InternalN4JSParser())) {
                alt330=1;
            }
            else if ( (LA330_0==HyphenMinusHyphenMinus) && (synpred189_InternalN4JSParser())) {
                alt330=1;
            }
            switch (alt330) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getPostfixExpressionAccess().getPostfixExpressionExpressionAction_1_0_0(),
                                  current);
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPostfixExpressionAccess().getOpPostfixOperatorEnumRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_op_2_0=rulePostfixOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"op",
                              		lv_op_2_0, 
                              		"eu.numberfour.n4js.N4JS.PostfixOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PostfixExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LeftHandSideExpression_0 = null;

        Enumerator lv_op_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getPostfixExpressionAccess().getLeftHandSideExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_106);
            this_LeftHandSideExpression_0=norm1_LeftHandSideExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LeftHandSideExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt331=2;
            int LA331_0 = input.LA(1);

            if ( (LA331_0==PlusSignPlusSign) && (synpred190_InternalN4JSParser())) {
                alt331=1;
            }
            else if ( (LA331_0==HyphenMinusHyphenMinus) && (synpred190_InternalN4JSParser())) {
                alt331=1;
            }
            switch (alt331) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getPostfixExpressionAccess().getPostfixExpressionExpressionAction_1_0_0(),
                                  current);
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPostfixExpressionAccess().getOpPostfixOperatorEnumRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_op_2_0=rulePostfixOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"op",
                              		lv_op_2_0, 
                              		"eu.numberfour.n4js.N4JS.PostfixOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleCastExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCastExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCastExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCastExpression=ruleCastExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCastExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleCastExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_PostfixExpression_0 = null;

        EObject lv_targetTypeRef_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getCastExpressionAccess().getPostfixExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_26);
            this_PostfixExpression_0=rulePostfixExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_PostfixExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt332=2;
            int LA332_0 = input.LA(1);

            if ( (LA332_0==As) && (synpred191_InternalN4JSParser())) {
                alt332=1;
            }
            switch (alt332) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getCastExpressionAccess().getCastExpressionExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,As,FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getCastExpressionAccess().getAsKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCastExpressionAccess().getTargetTypeRefTypeRefForCastParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_targetTypeRef_3_0=ruleTypeRefForCast();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCastExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"targetTypeRef",
                              		lv_targetTypeRef_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefForCast");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_CastExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_PostfixExpression_0 = null;

        EObject lv_targetTypeRef_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getCastExpressionAccess().getPostfixExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_26);
            this_PostfixExpression_0=norm1_PostfixExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_PostfixExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt333=2;
            int LA333_0 = input.LA(1);

            if ( (LA333_0==As) && (synpred192_InternalN4JSParser())) {
                alt333=1;
            }
            switch (alt333) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getCastExpressionAccess().getCastExpressionExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,As,FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getCastExpressionAccess().getAsKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCastExpressionAccess().getTargetTypeRefTypeRefForCastParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_targetTypeRef_3_0=ruleTypeRefForCast();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCastExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"targetTypeRef",
                              		lv_targetTypeRef_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefForCast");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleUnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpression=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleUnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_CastExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt334=2;
            int LA334_0 = input.LA(1);

            if ( ((LA334_0>=Intersection && LA334_0<=Implements)||(LA334_0>=Promisify && LA334_0<=Abstract)||(LA334_0>=External && LA334_0<=Function)||(LA334_0>=Private && LA334_0<=Project)||LA334_0==Public||LA334_0==Static||LA334_0==Target||(LA334_0>=Async && LA334_0<=Await)||LA334_0==Class||(LA334_0>=False && LA334_0<=Super)||LA334_0==Union||(LA334_0>=Yield && LA334_0<=This)||(LA334_0>=From && LA334_0<=Type)||(LA334_0>=Get && LA334_0<=Set)||LA334_0==SolidusEqualsSign||LA334_0==As||LA334_0==Of||LA334_0==LeftParenthesis||LA334_0==Solidus||LA334_0==LessThanSign||(LA334_0>=CommercialAt && LA334_0<=LeftSquareBracket)||LA334_0==LeftCurlyBracket||LA334_0==RULE_DOUBLE||(LA334_0>=RULE_HEX_INT && LA334_0<=RULE_LEGACY_OCTAL_INT)||LA334_0==RULE_SCIENTIFIC_INT||LA334_0==RULE_IDENTIFIER||LA334_0==RULE_STRING||(LA334_0>=RULE_TEMPLATE_HEAD && LA334_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA334_0==RULE_INT) ) {
                alt334=1;
            }
            else if ( (LA334_0==Delete||LA334_0==Typeof||LA334_0==Void||LA334_0==PlusSignPlusSign||LA334_0==HyphenMinusHyphenMinus||LA334_0==ExclamationMark||LA334_0==PlusSign||LA334_0==HyphenMinus||LA334_0==Tilde) ) {
                alt334=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 334, 0, input);

                throw nvae;
            }
            switch (alt334) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getUnaryExpressionAccess().getCastExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_CastExpression_0=ruleCastExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CastExpression_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                                  current);
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_54);
                    lv_op_2_0=ruleUnaryOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"op",
                              		lv_op_2_0, 
                              		"eu.numberfour.n4js.N4JS.UnaryOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExpressionUnaryExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=ruleUnaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.UnaryExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_UnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_CastExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt335=2;
            int LA335_0 = input.LA(1);

            if ( ((LA335_0>=Intersection && LA335_0<=Implements)||(LA335_0>=Promisify && LA335_0<=Abstract)||(LA335_0>=External && LA335_0<=Function)||(LA335_0>=Private && LA335_0<=Project)||LA335_0==Public||LA335_0==Static||LA335_0==Target||(LA335_0>=Async && LA335_0<=Await)||LA335_0==Class||(LA335_0>=False && LA335_0<=Super)||LA335_0==Union||LA335_0==This||(LA335_0>=From && LA335_0<=Type)||(LA335_0>=Get && LA335_0<=Set)||LA335_0==SolidusEqualsSign||LA335_0==As||LA335_0==Of||LA335_0==LeftParenthesis||LA335_0==Solidus||LA335_0==LessThanSign||(LA335_0>=CommercialAt && LA335_0<=LeftSquareBracket)||LA335_0==LeftCurlyBracket||LA335_0==RULE_DOUBLE||(LA335_0>=RULE_HEX_INT && LA335_0<=RULE_LEGACY_OCTAL_INT)||LA335_0==RULE_SCIENTIFIC_INT||LA335_0==RULE_IDENTIFIER||LA335_0==RULE_STRING||(LA335_0>=RULE_TEMPLATE_HEAD && LA335_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA335_0==RULE_INT) ) {
                alt335=1;
            }
            else if ( (LA335_0==Delete||LA335_0==Typeof||LA335_0==Void||LA335_0==PlusSignPlusSign||LA335_0==HyphenMinusHyphenMinus||LA335_0==ExclamationMark||LA335_0==PlusSign||LA335_0==HyphenMinus||LA335_0==Tilde) ) {
                alt335=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 335, 0, input);

                throw nvae;
            }
            switch (alt335) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getUnaryExpressionAccess().getCastExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_CastExpression_0=norm1_CastExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CastExpression_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                                  current);
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_54);
                    lv_op_2_0=ruleUnaryOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"op",
                              		lv_op_2_0, 
                              		"eu.numberfour.n4js.N4JS.UnaryOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExpressionUnaryExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm1_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.UnaryExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicativeExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_UnaryExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getUnaryExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_108);
            this_UnaryExpression_0=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_UnaryExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop336:
            do {
                int alt336=2;
                int LA336_0 = input.LA(1);

                if ( (LA336_0==Asterisk) && (synpred193_InternalN4JSParser())) {
                    alt336=1;
                }
                else if ( (LA336_0==Solidus) && (synpred193_InternalN4JSParser())) {
                    alt336=1;
                }
                else if ( (LA336_0==PercentSign) && (synpred193_InternalN4JSParser())) {
                    alt336=1;
                }


                switch (alt336) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOpMultiplicativeOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleMultiplicativeOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.MultiplicativeOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRhsUnaryExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_108);
            	    lv_rhs_3_0=ruleUnaryExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.UnaryExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop336;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_MultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_UnaryExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getUnaryExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_108);
            this_UnaryExpression_0=norm1_UnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_UnaryExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop337:
            do {
                int alt337=2;
                int LA337_0 = input.LA(1);

                if ( (LA337_0==Asterisk) && (synpred194_InternalN4JSParser())) {
                    alt337=1;
                }
                else if ( (LA337_0==Solidus) && (synpred194_InternalN4JSParser())) {
                    alt337=1;
                }
                else if ( (LA337_0==PercentSign) && (synpred194_InternalN4JSParser())) {
                    alt337=1;
                }


                switch (alt337) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOpMultiplicativeOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleMultiplicativeOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.MultiplicativeOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRhsUnaryExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_108);
            	    lv_rhs_3_0=norm1_UnaryExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.UnaryExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop337;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAdditiveExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAdditiveExpression=ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_MultiplicativeExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_109);
            this_MultiplicativeExpression_0=ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_MultiplicativeExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop338:
            do {
                int alt338=2;
                int LA338_0 = input.LA(1);

                if ( (LA338_0==PlusSign) && (synpred195_InternalN4JSParser())) {
                    alt338=1;
                }
                else if ( (LA338_0==HyphenMinus) && (synpred195_InternalN4JSParser())) {
                    alt338=1;
                }


                switch (alt338) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOpAdditiveOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleAdditiveOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.AdditiveOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRhsMultiplicativeExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_109);
            	    lv_rhs_3_0=ruleMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.MultiplicativeExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop338;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_MultiplicativeExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_109);
            this_MultiplicativeExpression_0=norm1_MultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_MultiplicativeExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop339:
            do {
                int alt339=2;
                int LA339_0 = input.LA(1);

                if ( (LA339_0==PlusSign) && (synpred196_InternalN4JSParser())) {
                    alt339=1;
                }
                else if ( (LA339_0==HyphenMinus) && (synpred196_InternalN4JSParser())) {
                    alt339=1;
                }


                switch (alt339) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOpAdditiveOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleAdditiveOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.AdditiveOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRhsMultiplicativeExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_109);
            	    lv_rhs_3_0=norm1_MultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.MultiplicativeExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop339;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleShiftExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleShiftExpression=ruleShiftExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleShiftExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AdditiveExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_110);
            this_AdditiveExpression_0=ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AdditiveExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop340:
            do {
                int alt340=2;
                alt340 = dfa340.predict(input);
                switch (alt340) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getShiftExpressionAccess().getShiftExpressionLhsAction_1_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getShiftExpressionAccess().getOpShiftOperatorParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleShiftOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.ShiftOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getShiftExpressionAccess().getRhsAdditiveExpressionParserRuleCall_1_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_110);
            	    lv_rhs_3_0=ruleAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.AdditiveExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop340;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ShiftExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AdditiveExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_110);
            this_AdditiveExpression_0=norm1_AdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AdditiveExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop341:
            do {
                int alt341=2;
                alt341 = dfa341.predict(input);
                switch (alt341) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getShiftExpressionAccess().getShiftExpressionLhsAction_1_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getShiftExpressionAccess().getOpShiftOperatorParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleShiftOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.ShiftOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getShiftExpressionAccess().getRhsAdditiveExpressionParserRuleCall_1_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_110);
            	    lv_rhs_3_0=norm1_AdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.AdditiveExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop341;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleShiftOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleShiftOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleShiftOperator=ruleShiftOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleShiftOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt343=2;
            int LA343_0 = input.LA(1);

            if ( (LA343_0==GreaterThanSign) ) {
                alt343=1;
            }
            else if ( (LA343_0==LessThanSignLessThanSign) ) {
                alt343=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 343, 0, input);

                throw nvae;
            }
            switch (alt343) {
                case 1 :
                    {
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getShiftOperatorAccess().getGreaterThanSignKeyword_0_0()); 
                          
                    }
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getShiftOperatorAccess().getGreaterThanSignKeyword_0_1()); 
                          
                    }
                    int alt342=2;
                    int LA342_0 = input.LA(1);

                    if ( (LA342_0==GreaterThanSign) ) {
                        alt342=1;
                    }
                    switch (alt342) {
                        case 1 :
                            {
                            kw=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getShiftOperatorAccess().getGreaterThanSignKeyword_0_2()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,LessThanSignLessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getShiftOperatorAccess().getLessThanSignLessThanSignKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationalExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationalExpression=ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ShiftExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_113);
            this_ShiftExpression_0=ruleShiftExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ShiftExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop344:
            do {
                int alt344=2;
                alt344 = dfa344.predict(input);
                switch (alt344) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLhsAction_1_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpRelationalOperatorParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleRelationalOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRhsShiftExpressionParserRuleCall_1_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_113);
            	    lv_rhs_3_0=ruleShiftExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.ShiftExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop344;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ShiftExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_114);
            this_ShiftExpression_0=ruleShiftExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ShiftExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop345:
            do {
                int alt345=2;
                alt345 = dfa345.predict(input);
                switch (alt345) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLhsAction_1_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpRelationalOperatorParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=norm1_RelationalOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRhsShiftExpressionParserRuleCall_1_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_114);
            	    lv_rhs_3_0=ruleShiftExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.ShiftExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop345;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ShiftExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_113);
            this_ShiftExpression_0=norm1_ShiftExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ShiftExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop346:
            do {
                int alt346=2;
                alt346 = dfa346.predict(input);
                switch (alt346) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLhsAction_1_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpRelationalOperatorParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleRelationalOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRhsShiftExpressionParserRuleCall_1_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_113);
            	    lv_rhs_3_0=norm1_ShiftExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.ShiftExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop346;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ShiftExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_114);
            this_ShiftExpression_0=norm1_ShiftExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ShiftExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop347:
            do {
                int alt347=2;
                alt347 = dfa347.predict(input);
                switch (alt347) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLhsAction_1_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpRelationalOperatorParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=norm1_RelationalOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRhsShiftExpressionParserRuleCall_1_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_114);
            	    lv_rhs_3_0=norm1_ShiftExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.ShiftExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop347;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleRelationalOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRelationalOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationalOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationalOperator=ruleRelationalOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationalOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleRelationalOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt348=5;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt348=1;
                }
                break;
            case GreaterThanSign:
                {
                alt348=2;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt348=3;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt348=4;
                }
                break;
            case Instanceof:
                {
                alt348=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 348, 0, input);

                throw nvae;
            }

            switch (alt348) {
                case 1 :
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    kw=(Token)match(input,Instanceof,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getInstanceofKeyword_4()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken norm1_RelationalOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt349=6;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt349=1;
                }
                break;
            case GreaterThanSign:
                {
                alt349=2;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt349=3;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt349=4;
                }
                break;
            case Instanceof:
                {
                alt349=5;
                }
                break;
            case In:
                {
                alt349=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 349, 0, input);

                throw nvae;
            }

            switch (alt349) {
                case 1 :
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    kw=(Token)match(input,Instanceof,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getInstanceofKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    kw=(Token)match(input,In,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getInKeyword_5_0()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityExpression=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_115);
            this_RelationalExpression_0=ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_RelationalExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop350:
            do {
                int alt350=2;
                int LA350_0 = input.LA(1);

                if ( (LA350_0==EqualsSignEqualsSignEqualsSign) && (synpred207_InternalN4JSParser())) {
                    alt350=1;
                }
                else if ( (LA350_0==ExclamationMarkEqualsSignEqualsSign) && (synpred207_InternalN4JSParser())) {
                    alt350=1;
                }
                else if ( (LA350_0==EqualsSignEqualsSign) && (synpred207_InternalN4JSParser())) {
                    alt350=1;
                }
                else if ( (LA350_0==ExclamationMarkEqualsSign) && (synpred207_InternalN4JSParser())) {
                    alt350=1;
                }


                switch (alt350) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleEqualityOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRhsRelationalExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_115);
            	    lv_rhs_3_0=ruleRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop350;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_115);
            this_RelationalExpression_0=norm1_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_RelationalExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop351:
            do {
                int alt351=2;
                int LA351_0 = input.LA(1);

                if ( (LA351_0==EqualsSignEqualsSignEqualsSign) && (synpred208_InternalN4JSParser())) {
                    alt351=1;
                }
                else if ( (LA351_0==ExclamationMarkEqualsSignEqualsSign) && (synpred208_InternalN4JSParser())) {
                    alt351=1;
                }
                else if ( (LA351_0==EqualsSignEqualsSign) && (synpred208_InternalN4JSParser())) {
                    alt351=1;
                }
                else if ( (LA351_0==ExclamationMarkEqualsSign) && (synpred208_InternalN4JSParser())) {
                    alt351=1;
                }


                switch (alt351) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleEqualityOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRhsRelationalExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_115);
            	    lv_rhs_3_0=norm1_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop351;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_115);
            this_RelationalExpression_0=norm2_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_RelationalExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop352:
            do {
                int alt352=2;
                int LA352_0 = input.LA(1);

                if ( (LA352_0==EqualsSignEqualsSignEqualsSign) && (synpred209_InternalN4JSParser())) {
                    alt352=1;
                }
                else if ( (LA352_0==ExclamationMarkEqualsSignEqualsSign) && (synpred209_InternalN4JSParser())) {
                    alt352=1;
                }
                else if ( (LA352_0==EqualsSignEqualsSign) && (synpred209_InternalN4JSParser())) {
                    alt352=1;
                }
                else if ( (LA352_0==ExclamationMarkEqualsSign) && (synpred209_InternalN4JSParser())) {
                    alt352=1;
                }


                switch (alt352) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleEqualityOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRhsRelationalExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_115);
            	    lv_rhs_3_0=norm2_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop352;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_115);
            this_RelationalExpression_0=norm3_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_RelationalExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop353:
            do {
                int alt353=2;
                int LA353_0 = input.LA(1);

                if ( (LA353_0==EqualsSignEqualsSignEqualsSign) && (synpred210_InternalN4JSParser())) {
                    alt353=1;
                }
                else if ( (LA353_0==ExclamationMarkEqualsSignEqualsSign) && (synpred210_InternalN4JSParser())) {
                    alt353=1;
                }
                else if ( (LA353_0==EqualsSignEqualsSign) && (synpred210_InternalN4JSParser())) {
                    alt353=1;
                }
                else if ( (LA353_0==ExclamationMarkEqualsSign) && (synpred210_InternalN4JSParser())) {
                    alt353=1;
                }


                switch (alt353) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleEqualityOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRhsRelationalExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_115);
            	    lv_rhs_3_0=norm3_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop353;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBitwiseANDExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseANDExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseANDExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseANDExpression=ruleBitwiseANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseANDExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBitwiseANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getEqualityExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_116);
            this_EqualityExpression_0=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_EqualityExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop354:
            do {
                int alt354=2;
                int LA354_0 = input.LA(1);

                if ( (LA354_0==Ampersand) && (synpred211_InternalN4JSParser())) {
                    alt354=1;
                }


                switch (alt354) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseANDExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getOpBitwiseANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleBitwiseANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getRhsEqualityExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_116);
            	    lv_rhs_3_0=ruleEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop354;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BitwiseANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getEqualityExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_116);
            this_EqualityExpression_0=norm1_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_EqualityExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop355:
            do {
                int alt355=2;
                int LA355_0 = input.LA(1);

                if ( (LA355_0==Ampersand) && (synpred212_InternalN4JSParser())) {
                    alt355=1;
                }


                switch (alt355) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseANDExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getOpBitwiseANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleBitwiseANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getRhsEqualityExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_116);
            	    lv_rhs_3_0=norm1_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop355;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_BitwiseANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getEqualityExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_116);
            this_EqualityExpression_0=norm2_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_EqualityExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop356:
            do {
                int alt356=2;
                int LA356_0 = input.LA(1);

                if ( (LA356_0==Ampersand) && (synpred213_InternalN4JSParser())) {
                    alt356=1;
                }


                switch (alt356) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseANDExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getOpBitwiseANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleBitwiseANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getRhsEqualityExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_116);
            	    lv_rhs_3_0=norm2_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop356;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_BitwiseANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getEqualityExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_116);
            this_EqualityExpression_0=norm3_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_EqualityExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop357:
            do {
                int alt357=2;
                int LA357_0 = input.LA(1);

                if ( (LA357_0==Ampersand) && (synpred214_InternalN4JSParser())) {
                    alt357=1;
                }


                switch (alt357) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseANDExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getOpBitwiseANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleBitwiseANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getRhsEqualityExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_116);
            	    lv_rhs_3_0=norm3_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop357;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleBitwiseANDOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBitwiseANDOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseANDOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseANDOperator=ruleBitwiseANDOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseANDOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleBitwiseANDOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,Ampersand,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getBitwiseANDOperatorAccess().getAmpersandKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBitwiseXORExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseXORExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseXORExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseXORExpression=ruleBitwiseXORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseXORExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBitwiseXORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getBitwiseANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_117);
            this_BitwiseANDExpression_0=ruleBitwiseANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop358:
            do {
                int alt358=2;
                int LA358_0 = input.LA(1);

                if ( (LA358_0==CircumflexAccent) && (synpred215_InternalN4JSParser())) {
                    alt358=1;
                }


                switch (alt358) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseXORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getOpBitwiseXOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleBitwiseXOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getRhsBitwiseANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_117);
            	    lv_rhs_3_0=ruleBitwiseANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop358;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BitwiseXORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getBitwiseANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_117);
            this_BitwiseANDExpression_0=norm1_BitwiseANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop359:
            do {
                int alt359=2;
                int LA359_0 = input.LA(1);

                if ( (LA359_0==CircumflexAccent) && (synpred216_InternalN4JSParser())) {
                    alt359=1;
                }


                switch (alt359) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseXORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getOpBitwiseXOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleBitwiseXOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getRhsBitwiseANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_117);
            	    lv_rhs_3_0=norm1_BitwiseANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop359;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_BitwiseXORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getBitwiseANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_117);
            this_BitwiseANDExpression_0=norm2_BitwiseANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop360:
            do {
                int alt360=2;
                int LA360_0 = input.LA(1);

                if ( (LA360_0==CircumflexAccent) && (synpred217_InternalN4JSParser())) {
                    alt360=1;
                }


                switch (alt360) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseXORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getOpBitwiseXOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleBitwiseXOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getRhsBitwiseANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_117);
            	    lv_rhs_3_0=norm2_BitwiseANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop360;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_BitwiseXORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getBitwiseANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_117);
            this_BitwiseANDExpression_0=norm3_BitwiseANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop361:
            do {
                int alt361=2;
                int LA361_0 = input.LA(1);

                if ( (LA361_0==CircumflexAccent) && (synpred218_InternalN4JSParser())) {
                    alt361=1;
                }


                switch (alt361) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseXORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getOpBitwiseXOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleBitwiseXOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getRhsBitwiseANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_117);
            	    lv_rhs_3_0=norm3_BitwiseANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop361;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleBitwiseXOROperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBitwiseXOROperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseXOROperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseXOROperator=ruleBitwiseXOROperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseXOROperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleBitwiseXOROperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,CircumflexAccent,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getBitwiseXOROperatorAccess().getCircumflexAccentKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBitwiseORExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseORExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseORExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseORExpression=ruleBitwiseORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseORExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBitwiseORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseXORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getBitwiseXORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_118);
            this_BitwiseXORExpression_0=ruleBitwiseXORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseXORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop362:
            do {
                int alt362=2;
                int LA362_0 = input.LA(1);

                if ( (LA362_0==VerticalLine) && (synpred219_InternalN4JSParser())) {
                    alt362=1;
                }


                switch (alt362) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getOpBitwiseOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleBitwiseOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getRhsBitwiseXORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_118);
            	    lv_rhs_3_0=ruleBitwiseXORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop362;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BitwiseORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseXORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getBitwiseXORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_118);
            this_BitwiseXORExpression_0=norm1_BitwiseXORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseXORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop363:
            do {
                int alt363=2;
                int LA363_0 = input.LA(1);

                if ( (LA363_0==VerticalLine) && (synpred220_InternalN4JSParser())) {
                    alt363=1;
                }


                switch (alt363) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getOpBitwiseOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleBitwiseOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getRhsBitwiseXORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_118);
            	    lv_rhs_3_0=norm1_BitwiseXORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop363;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_BitwiseORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseXORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getBitwiseXORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_118);
            this_BitwiseXORExpression_0=norm2_BitwiseXORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseXORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop364:
            do {
                int alt364=2;
                int LA364_0 = input.LA(1);

                if ( (LA364_0==VerticalLine) && (synpred221_InternalN4JSParser())) {
                    alt364=1;
                }


                switch (alt364) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getOpBitwiseOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleBitwiseOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getRhsBitwiseXORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_118);
            	    lv_rhs_3_0=norm2_BitwiseXORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop364;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_BitwiseORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseXORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getBitwiseXORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_118);
            this_BitwiseXORExpression_0=norm3_BitwiseXORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseXORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop365:
            do {
                int alt365=2;
                int LA365_0 = input.LA(1);

                if ( (LA365_0==VerticalLine) && (synpred222_InternalN4JSParser())) {
                    alt365=1;
                }


                switch (alt365) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getOpBitwiseOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleBitwiseOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getRhsBitwiseXORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_118);
            	    lv_rhs_3_0=norm3_BitwiseXORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop365;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleBitwiseOROperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBitwiseOROperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseOROperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseOROperator=ruleBitwiseOROperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseOROperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleBitwiseOROperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,VerticalLine,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getBitwiseOROperatorAccess().getVerticalLineKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLogicalANDExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalANDExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalANDExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLogicalANDExpression=ruleLogicalANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalANDExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLogicalANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getBitwiseORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_119);
            this_BitwiseORExpression_0=ruleBitwiseORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop366:
            do {
                int alt366=2;
                int LA366_0 = input.LA(1);

                if ( (LA366_0==AmpersandAmpersand) && (synpred223_InternalN4JSParser())) {
                    alt366=1;
                }


                switch (alt366) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalANDExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getOpLogicalANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleLogicalANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getRhsBitwiseORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_119);
            	    lv_rhs_3_0=ruleBitwiseORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop366;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_LogicalANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getBitwiseORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_119);
            this_BitwiseORExpression_0=norm1_BitwiseORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop367:
            do {
                int alt367=2;
                int LA367_0 = input.LA(1);

                if ( (LA367_0==AmpersandAmpersand) && (synpred224_InternalN4JSParser())) {
                    alt367=1;
                }


                switch (alt367) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalANDExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getOpLogicalANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleLogicalANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getRhsBitwiseORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_119);
            	    lv_rhs_3_0=norm1_BitwiseORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop367;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_LogicalANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getBitwiseORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_119);
            this_BitwiseORExpression_0=norm2_BitwiseORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop368:
            do {
                int alt368=2;
                int LA368_0 = input.LA(1);

                if ( (LA368_0==AmpersandAmpersand) && (synpred225_InternalN4JSParser())) {
                    alt368=1;
                }


                switch (alt368) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalANDExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getOpLogicalANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleLogicalANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getRhsBitwiseORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_119);
            	    lv_rhs_3_0=norm2_BitwiseORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop368;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_LogicalANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getBitwiseORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_119);
            this_BitwiseORExpression_0=norm3_BitwiseORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop369:
            do {
                int alt369=2;
                int LA369_0 = input.LA(1);

                if ( (LA369_0==AmpersandAmpersand) && (synpred226_InternalN4JSParser())) {
                    alt369=1;
                }


                switch (alt369) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalANDExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getOpLogicalANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleLogicalANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getRhsBitwiseORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_119);
            	    lv_rhs_3_0=norm3_BitwiseORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop369;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleLogicalANDOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLogicalANDOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalANDOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLogicalANDOperator=ruleLogicalANDOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalANDOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleLogicalANDOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,AmpersandAmpersand,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getLogicalANDOperatorAccess().getAmpersandAmpersandKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLogicalORExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalORExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalORExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLogicalORExpression=ruleLogicalORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalORExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLogicalORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getLogicalANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_120);
            this_LogicalANDExpression_0=ruleLogicalANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop370:
            do {
                int alt370=2;
                int LA370_0 = input.LA(1);

                if ( (LA370_0==VerticalLineVerticalLine) && (synpred227_InternalN4JSParser())) {
                    alt370=1;
                }


                switch (alt370) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalORExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getOpLogicalOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleLogicalOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getRhsLogicalANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_120);
            	    lv_rhs_3_0=ruleLogicalANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop370;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_LogicalORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getLogicalANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_120);
            this_LogicalANDExpression_0=norm1_LogicalANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop371:
            do {
                int alt371=2;
                int LA371_0 = input.LA(1);

                if ( (LA371_0==VerticalLineVerticalLine) && (synpred228_InternalN4JSParser())) {
                    alt371=1;
                }


                switch (alt371) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalORExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getOpLogicalOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleLogicalOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getRhsLogicalANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_120);
            	    lv_rhs_3_0=norm1_LogicalANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop371;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_LogicalORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getLogicalANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_120);
            this_LogicalANDExpression_0=norm2_LogicalANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop372:
            do {
                int alt372=2;
                int LA372_0 = input.LA(1);

                if ( (LA372_0==VerticalLineVerticalLine) && (synpred229_InternalN4JSParser())) {
                    alt372=1;
                }


                switch (alt372) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalORExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getOpLogicalOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleLogicalOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getRhsLogicalANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_120);
            	    lv_rhs_3_0=norm2_LogicalANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop372;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_LogicalORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getLogicalANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_120);
            this_LogicalANDExpression_0=norm3_LogicalANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop373:
            do {
                int alt373=2;
                int LA373_0 = input.LA(1);

                if ( (LA373_0==VerticalLineVerticalLine) && (synpred230_InternalN4JSParser())) {
                    alt373=1;
                }


                switch (alt373) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalORExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getOpLogicalOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_op_2_0=ruleLogicalOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getRhsLogicalANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_120);
            	    lv_rhs_3_0=norm3_LogicalANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop373;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleLogicalOROperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLogicalOROperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalOROperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLogicalOROperator=ruleLogicalOROperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalOROperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleLogicalOROperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getLogicalOROperatorAccess().getVerticalLineVerticalLineKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleConditionalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionalExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalExpression=ruleConditionalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleConditionalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_LogicalORExpression_0 = null;

        EObject lv_trueExpression_3_0 = null;

        EObject lv_falseExpression_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getConditionalExpressionAccess().getLogicalORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_121);
            this_LogicalORExpression_0=ruleLogicalORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt374=2;
            int LA374_0 = input.LA(1);

            if ( (LA374_0==QuestionMark) && (synpred231_InternalN4JSParser())) {
                alt374=1;
            }
            switch (alt374) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getConditionalExpressionAccess().getConditionalExpressionExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,QuestionMark,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getTrueExpressionAssignmentExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_83);
                    lv_trueExpression_3_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"trueExpression",
                              		lv_trueExpression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getFalseExpressionAssignmentExpressionParserRuleCall_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_falseExpression_5_0=ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"falseExpression",
                              		lv_falseExpression_5_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ConditionalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_LogicalORExpression_0 = null;

        EObject lv_trueExpression_3_0 = null;

        EObject lv_falseExpression_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getConditionalExpressionAccess().getLogicalORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_121);
            this_LogicalORExpression_0=norm1_LogicalORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt375=2;
            int LA375_0 = input.LA(1);

            if ( (LA375_0==QuestionMark) && (synpred232_InternalN4JSParser())) {
                alt375=1;
            }
            switch (alt375) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getConditionalExpressionAccess().getConditionalExpressionExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,QuestionMark,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getTrueExpressionAssignmentExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_83);
                    lv_trueExpression_3_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"trueExpression",
                              		lv_trueExpression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getFalseExpressionAssignmentExpressionParserRuleCall_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_falseExpression_5_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"falseExpression",
                              		lv_falseExpression_5_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_ConditionalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_LogicalORExpression_0 = null;

        EObject lv_trueExpression_3_0 = null;

        EObject lv_falseExpression_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getConditionalExpressionAccess().getLogicalORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_121);
            this_LogicalORExpression_0=norm2_LogicalORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt376=2;
            int LA376_0 = input.LA(1);

            if ( (LA376_0==QuestionMark) && (synpred233_InternalN4JSParser())) {
                alt376=1;
            }
            switch (alt376) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getConditionalExpressionAccess().getConditionalExpressionExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,QuestionMark,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getTrueExpressionAssignmentExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_83);
                    lv_trueExpression_3_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"trueExpression",
                              		lv_trueExpression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getFalseExpressionAssignmentExpressionParserRuleCall_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_falseExpression_5_0=norm2_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"falseExpression",
                              		lv_falseExpression_5_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_ConditionalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_LogicalORExpression_0 = null;

        EObject lv_trueExpression_3_0 = null;

        EObject lv_falseExpression_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getConditionalExpressionAccess().getLogicalORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_121);
            this_LogicalORExpression_0=norm3_LogicalORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt377=2;
            int LA377_0 = input.LA(1);

            if ( (LA377_0==QuestionMark) && (synpred234_InternalN4JSParser())) {
                alt377=1;
            }
            switch (alt377) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getConditionalExpressionAccess().getConditionalExpressionExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,QuestionMark,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getTrueExpressionAssignmentExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_83);
                    lv_trueExpression_3_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"trueExpression",
                              		lv_trueExpression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getFalseExpressionAssignmentExpressionParserRuleCall_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_falseExpression_5_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"falseExpression",
                              		lv_falseExpression_5_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignmentExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssignmentExpression=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignmentExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AwaitExpression_0 = null;

        EObject this_PromisifyExpression_1 = null;

        EObject this_ArrowExpression_2 = null;

        EObject this_ConditionalExpression_3 = null;

        AntlrDatatypeRuleToken lv_op_5_0 = null;

        EObject lv_rhs_6_0 = null;


         enterRule(); 
            
        try {
            {
            int alt379=4;
            alt379 = dfa379.predict(input);
            switch (alt379) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAwaitExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AwaitExpression_0=ruleAwaitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AwaitExpression_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getPromisifyExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PromisifyExpression_1=rulePromisifyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PromisifyExpression_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getArrowExpressionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrowExpression_2=ruleArrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrowExpression_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getConditionalExpressionParserRuleCall_4_0()); 
                          
                    }
                    pushFollow(FOLLOW_122);
                    this_ConditionalExpression_3=ruleConditionalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ConditionalExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }
                    int alt378=2;
                    alt378 = dfa378.predict(input);
                    switch (alt378) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLhsAction_4_1_0_0_0(),
                                          current);
                                  
                            }

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getOpAssignmentOperatorParserRuleCall_4_1_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_54);
                            lv_op_5_0=ruleAssignmentOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"op",
                                      		lv_op_5_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentOperator");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRhsAssignmentExpressionParserRuleCall_4_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_rhs_6_0=ruleAssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"rhs",
                                      		lv_rhs_6_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AwaitExpression_0 = null;

        EObject this_PromisifyExpression_1 = null;

        EObject this_ArrowExpression_2 = null;

        EObject this_ConditionalExpression_3 = null;

        AntlrDatatypeRuleToken lv_op_5_0 = null;

        EObject lv_rhs_6_0 = null;


         enterRule(); 
            
        try {
            {
            int alt381=4;
            alt381 = dfa381.predict(input);
            switch (alt381) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAwaitExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AwaitExpression_0=norm1_AwaitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AwaitExpression_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getPromisifyExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PromisifyExpression_1=norm1_PromisifyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PromisifyExpression_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getArrowExpressionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrowExpression_2=norm1_ArrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrowExpression_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getConditionalExpressionParserRuleCall_4_0()); 
                          
                    }
                    pushFollow(FOLLOW_122);
                    this_ConditionalExpression_3=norm1_ConditionalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ConditionalExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }
                    int alt380=2;
                    alt380 = dfa380.predict(input);
                    switch (alt380) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLhsAction_4_1_0_0_0(),
                                          current);
                                  
                            }

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getOpAssignmentOperatorParserRuleCall_4_1_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_54);
                            lv_op_5_0=ruleAssignmentOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"op",
                                      		lv_op_5_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentOperator");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRhsAssignmentExpressionParserRuleCall_4_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_rhs_6_0=norm1_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"rhs",
                                      		lv_rhs_6_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_AssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AwaitExpression_0 = null;

        EObject this_PromisifyExpression_1 = null;

        EObject this_ArrowExpression_2 = null;

        EObject this_YieldExpression_3 = null;

        EObject this_ConditionalExpression_4 = null;

        AntlrDatatypeRuleToken lv_op_6_0 = null;

        EObject lv_rhs_7_0 = null;


         enterRule(); 
            
        try {
            {
            int alt383=5;
            alt383 = dfa383.predict(input);
            switch (alt383) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAwaitExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AwaitExpression_0=norm2_AwaitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AwaitExpression_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getPromisifyExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PromisifyExpression_1=norm2_PromisifyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PromisifyExpression_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getArrowExpressionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrowExpression_2=norm2_ArrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrowExpression_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getYieldExpressionParserRuleCall_3_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_YieldExpression_3=ruleYieldExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_YieldExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getConditionalExpressionParserRuleCall_4_0()); 
                          
                    }
                    pushFollow(FOLLOW_122);
                    this_ConditionalExpression_4=norm2_ConditionalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ConditionalExpression_4;
                              afterParserOrEnumRuleCall();
                          
                    }
                    int alt382=2;
                    alt382 = dfa382.predict(input);
                    switch (alt382) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLhsAction_4_1_0_0_0(),
                                          current);
                                  
                            }

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getOpAssignmentOperatorParserRuleCall_4_1_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_54);
                            lv_op_6_0=ruleAssignmentOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"op",
                                      		lv_op_6_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentOperator");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRhsAssignmentExpressionParserRuleCall_4_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_rhs_7_0=norm2_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"rhs",
                                      		lv_rhs_7_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_AssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AwaitExpression_0 = null;

        EObject this_PromisifyExpression_1 = null;

        EObject this_ArrowExpression_2 = null;

        EObject this_YieldExpression_3 = null;

        EObject this_ConditionalExpression_4 = null;

        AntlrDatatypeRuleToken lv_op_6_0 = null;

        EObject lv_rhs_7_0 = null;


         enterRule(); 
            
        try {
            {
            int alt385=5;
            alt385 = dfa385.predict(input);
            switch (alt385) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAwaitExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AwaitExpression_0=norm3_AwaitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AwaitExpression_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getPromisifyExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PromisifyExpression_1=norm3_PromisifyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PromisifyExpression_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getArrowExpressionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrowExpression_2=norm3_ArrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrowExpression_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getYieldExpressionParserRuleCall_3_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_YieldExpression_3=norm1_YieldExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_YieldExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getConditionalExpressionParserRuleCall_4_0()); 
                          
                    }
                    pushFollow(FOLLOW_122);
                    this_ConditionalExpression_4=norm3_ConditionalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ConditionalExpression_4;
                              afterParserOrEnumRuleCall();
                          
                    }
                    int alt384=2;
                    alt384 = dfa384.predict(input);
                    switch (alt384) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLhsAction_4_1_0_0_0(),
                                          current);
                                  
                            }

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getOpAssignmentOperatorParserRuleCall_4_1_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_54);
                            lv_op_6_0=ruleAssignmentOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"op",
                                      		lv_op_6_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentOperator");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRhsAssignmentExpressionParserRuleCall_4_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_rhs_7_0=norm3_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"rhs",
                                      		lv_rhs_7_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleYieldExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleYieldExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getYieldExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleYieldExpression=ruleYieldExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleYieldExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleYieldExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_many_2_0=null;
        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getYieldExpressionAccess().getYieldExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Yield,FOLLOW_123); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getYieldExpressionAccess().getYieldKeyword_1());
                  
            }
            int alt386=2;
            alt386 = dfa386.predict(input);
            switch (alt386) {
                case 1 :
                    {
                    {
                    lv_many_2_0=(Token)match(input,Asterisk,FOLLOW_123); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_many_2_0, grammarAccess.getYieldExpressionAccess().getManyAsteriskKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getYieldExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "many", true, "*");
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt387=2;
            alt387 = dfa387.predict(input);
            switch (alt387) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getYieldExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm2_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getYieldExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_YieldExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_many_2_0=null;
        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getYieldExpressionAccess().getYieldExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Yield,FOLLOW_123); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getYieldExpressionAccess().getYieldKeyword_1());
                  
            }
            int alt388=2;
            alt388 = dfa388.predict(input);
            switch (alt388) {
                case 1 :
                    {
                    {
                    lv_many_2_0=(Token)match(input,Asterisk,FOLLOW_123); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_many_2_0, grammarAccess.getYieldExpressionAccess().getManyAsteriskKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getYieldExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "many", true, "*");
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt389=2;
            alt389 = dfa389.predict(input);
            switch (alt389) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getYieldExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getYieldExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleAssignmentOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAssignmentOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssignmentOperator=ruleAssignmentOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignmentOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleAssignmentOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt391=11;
            switch ( input.LA(1) ) {
            case EqualsSign:
                {
                alt391=1;
                }
                break;
            case AsteriskEqualsSign:
                {
                alt391=2;
                }
                break;
            case SolidusEqualsSign:
                {
                alt391=3;
                }
                break;
            case PercentSignEqualsSign:
                {
                alt391=4;
                }
                break;
            case PlusSignEqualsSign:
                {
                alt391=5;
                }
                break;
            case HyphenMinusEqualsSign:
                {
                alt391=6;
                }
                break;
            case LessThanSignLessThanSignEqualsSign:
                {
                alt391=7;
                }
                break;
            case GreaterThanSign:
                {
                alt391=8;
                }
                break;
            case AmpersandEqualsSign:
                {
                alt391=9;
                }
                break;
            case CircumflexAccentEqualsSign:
                {
                alt391=10;
                }
                break;
            case VerticalLineEqualsSign:
                {
                alt391=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 391, 0, input);

                throw nvae;
            }

            switch (alt391) {
                case 1 :
                    {
                    kw=(Token)match(input,EqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,AsteriskEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,SolidusEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,PercentSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    kw=(Token)match(input,PlusSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    kw=(Token)match(input,HyphenMinusEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    kw=(Token)match(input,LessThanSignLessThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getLessThanSignLessThanSignEqualsSignKeyword_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignKeyword_7_0()); 
                          
                    }
                    int alt390=2;
                    int LA390_0 = input.LA(1);

                    if ( (LA390_0==GreaterThanSign) ) {
                        alt390=1;
                    }
                    switch (alt390) {
                        case 1 :
                            {
                            kw=(Token)match(input,GreaterThanSign,FOLLOW_125); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignKeyword_7_1()); 
                                  
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignEqualsSignKeyword_7_2()); 
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    {
                    kw=(Token)match(input,AmpersandEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getAmpersandEqualsSignKeyword_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    kw=(Token)match(input,CircumflexAccentEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getCircumflexAccentEqualsSignKeyword_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    kw=(Token)match(input,VerticalLineEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getVerticalLineEqualsSignKeyword_10()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAwaitExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAwaitExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAwaitExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAwaitExpression=ruleAwaitExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAwaitExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAwaitExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAwaitExpressionAccess().getAwaitExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Await,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAwaitExpressionAccess().getAwaitKeyword_0_0_1());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAwaitExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAwaitExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AwaitExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAwaitExpressionAccess().getAwaitExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Await,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAwaitExpressionAccess().getAwaitKeyword_0_0_1());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAwaitExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAwaitExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_AwaitExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAwaitExpressionAccess().getAwaitExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Await,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAwaitExpressionAccess().getAwaitKeyword_0_0_1());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAwaitExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm2_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAwaitExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_AwaitExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAwaitExpressionAccess().getAwaitExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Await,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAwaitExpressionAccess().getAwaitKeyword_0_0_1());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAwaitExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAwaitExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePromisifyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePromisifyExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPromisifyExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePromisifyExpression=rulePromisifyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePromisifyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePromisifyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPromisifyExpressionAccess().getPromisifyExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,CommercialAt,FOLLOW_126); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPromisifyExpressionAccess().getCommercialAtKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,Promisify,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getPromisifyExpressionAccess().getPromisifyKeyword_0_0_2());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPromisifyExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_3_0=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPromisifyExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_3_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PromisifyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPromisifyExpressionAccess().getPromisifyExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,CommercialAt,FOLLOW_126); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPromisifyExpressionAccess().getCommercialAtKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,Promisify,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getPromisifyExpressionAccess().getPromisifyKeyword_0_0_2());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPromisifyExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_3_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPromisifyExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_3_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_PromisifyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPromisifyExpressionAccess().getPromisifyExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,CommercialAt,FOLLOW_126); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPromisifyExpressionAccess().getCommercialAtKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,Promisify,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getPromisifyExpressionAccess().getPromisifyKeyword_0_0_2());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPromisifyExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_3_0=norm2_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPromisifyExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_3_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_PromisifyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPromisifyExpressionAccess().getPromisifyExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,CommercialAt,FOLLOW_126); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPromisifyExpressionAccess().getCommercialAtKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,Promisify,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getPromisifyExpressionAccess().getPromisifyKeyword_0_0_2());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPromisifyExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_3_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPromisifyExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_3_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_AssignmentExpression_0 = null;

        EObject lv_exprs_3_0 = null;

        EObject lv_exprs_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_33);
            this_AssignmentExpression_0=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AssignmentExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt393=2;
            int LA393_0 = input.LA(1);

            if ( (LA393_0==Comma) ) {
                alt393=1;
            }
            switch (alt393) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getExpressionAccess().getCommaExpressionExprsAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,Comma,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getExpressionAccess().getCommaKeyword_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_33);
                    lv_exprs_3_0=ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"exprs",
                              		lv_exprs_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop392:
                    do {
                        int alt392=2;
                        int LA392_0 = input.LA(1);

                        if ( (LA392_0==Comma) ) {
                            alt392=1;
                        }


                        switch (alt392) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_54); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getExpressionAccess().getCommaKeyword_1_3_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_33);
                    	    lv_exprs_5_0=ruleAssignmentExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"exprs",
                    	              		lv_exprs_5_0, 
                    	              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop392;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_Expression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_AssignmentExpression_0 = null;

        EObject lv_exprs_3_0 = null;

        EObject lv_exprs_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_33);
            this_AssignmentExpression_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AssignmentExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt395=2;
            int LA395_0 = input.LA(1);

            if ( (LA395_0==Comma) ) {
                alt395=1;
            }
            switch (alt395) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getExpressionAccess().getCommaExpressionExprsAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,Comma,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getExpressionAccess().getCommaKeyword_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_33);
                    lv_exprs_3_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"exprs",
                              		lv_exprs_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop394:
                    do {
                        int alt394=2;
                        int LA394_0 = input.LA(1);

                        if ( (LA394_0==Comma) ) {
                            alt394=1;
                        }


                        switch (alt394) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_54); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getExpressionAccess().getCommaKeyword_1_3_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_33);
                    	    lv_exprs_5_0=norm1_AssignmentExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"exprs",
                    	              		lv_exprs_5_0, 
                    	              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop394;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_Expression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_AssignmentExpression_0 = null;

        EObject lv_exprs_3_0 = null;

        EObject lv_exprs_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_33);
            this_AssignmentExpression_0=norm2_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AssignmentExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt397=2;
            int LA397_0 = input.LA(1);

            if ( (LA397_0==Comma) ) {
                alt397=1;
            }
            switch (alt397) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getExpressionAccess().getCommaExpressionExprsAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,Comma,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getExpressionAccess().getCommaKeyword_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_33);
                    lv_exprs_3_0=norm2_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"exprs",
                              		lv_exprs_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop396:
                    do {
                        int alt396=2;
                        int LA396_0 = input.LA(1);

                        if ( (LA396_0==Comma) ) {
                            alt396=1;
                        }


                        switch (alt396) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_54); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getExpressionAccess().getCommaKeyword_1_3_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_33);
                    	    lv_exprs_5_0=norm2_AssignmentExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"exprs",
                    	              		lv_exprs_5_0, 
                    	              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop396;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_Expression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_AssignmentExpression_0 = null;

        EObject lv_exprs_3_0 = null;

        EObject lv_exprs_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_33);
            this_AssignmentExpression_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AssignmentExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt399=2;
            int LA399_0 = input.LA(1);

            if ( (LA399_0==Comma) ) {
                alt399=1;
            }
            switch (alt399) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getExpressionAccess().getCommaExpressionExprsAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,Comma,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getExpressionAccess().getCommaKeyword_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_33);
                    lv_exprs_3_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"exprs",
                              		lv_exprs_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop398:
                    do {
                        int alt398=2;
                        int LA398_0 = input.LA(1);

                        if ( (LA398_0==Comma) ) {
                            alt398=1;
                        }


                        switch (alt398) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_54); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getExpressionAccess().getCommaKeyword_1_3_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_33);
                    	    lv_exprs_5_0=norm3_AssignmentExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"exprs",
                    	              		lv_exprs_5_0, 
                    	              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop398;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTemplateLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateLiteral=ruleTemplateLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTemplateLiteral() throws RecognitionException {
        EObject current = null;

        EObject lv_segments_1_0 = null;

        EObject lv_segments_2_0 = null;

        EObject lv_segments_3_0 = null;

        EObject lv_segments_5_0 = null;

        EObject lv_segments_6_0 = null;

        EObject lv_segments_8_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTemplateLiteralAccess().getTemplateLiteralAction_0(),
                          current);
                  
            }

            }
            int alt403=2;
            int LA403_0 = input.LA(1);

            if ( (LA403_0==RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) ) {
                alt403=1;
            }
            else if ( (LA403_0==RULE_TEMPLATE_HEAD) ) {
                alt403=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 403, 0, input);

                throw nvae;
            }
            switch (alt403) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsNoSubstitutionTemplateParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_segments_1_0=ruleNoSubstitutionTemplate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"segments",
                              		lv_segments_1_0, 
                              		"eu.numberfour.n4js.N4JS.NoSubstitutionTemplate");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsTemplateHeadParserRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_127);
                    lv_segments_2_0=ruleTemplateHead();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"segments",
                              		lv_segments_2_0, 
                              		"eu.numberfour.n4js.N4JS.TemplateHead");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt400=2;
                    int LA400_0 = input.LA(1);

                    if ( ((LA400_0>=Intersection && LA400_0<=Implements)||(LA400_0>=Promisify && LA400_0<=Abstract)||(LA400_0>=External && LA400_0<=Function)||(LA400_0>=Private && LA400_0<=Delete)||LA400_0==Public||LA400_0==Static||(LA400_0>=Target && LA400_0<=Await)||LA400_0==Class||(LA400_0>=False && LA400_0<=Super)||LA400_0==Union||(LA400_0>=Yield && LA400_0<=This)||(LA400_0>=From && LA400_0<=Void)||(LA400_0>=Get && LA400_0<=Set)||LA400_0==PlusSignPlusSign||LA400_0==HyphenMinusHyphenMinus||LA400_0==SolidusEqualsSign||LA400_0==As||LA400_0==Of||LA400_0==ExclamationMark||LA400_0==LeftParenthesis||(LA400_0>=Asterisk && LA400_0<=PlusSign)||LA400_0==HyphenMinus||LA400_0==Solidus||LA400_0==LessThanSign||(LA400_0>=CommercialAt && LA400_0<=LeftSquareBracket)||LA400_0==LeftCurlyBracket||LA400_0==Tilde||LA400_0==RULE_DOUBLE||(LA400_0>=RULE_HEX_INT && LA400_0<=RULE_LEGACY_OCTAL_INT)||LA400_0==RULE_SCIENTIFIC_INT||LA400_0==RULE_IDENTIFIER||LA400_0==RULE_STRING||(LA400_0>=RULE_TEMPLATE_HEAD && LA400_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA400_0==RULE_INT) ) {
                        alt400=1;
                    }
                    switch (alt400) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsExpressionParserRuleCall_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_127);
                            lv_segments_3_0=norm1_Expression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"segments",
                                      		lv_segments_3_0, 
                                      		"eu.numberfour.n4js.N4JS.Expression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateLiteralAccess().getTemplateExpressionEndParserRuleCall_1_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_128);
                    ruleTemplateExpressionEnd();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }
                    loop402:
                    do {
                        int alt402=2;
                        int LA402_0 = input.LA(1);

                        if ( (LA402_0==RULE_TEMPLATE_MIDDLE) ) {
                            alt402=1;
                        }


                        switch (alt402) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsTemplateMiddleParserRuleCall_1_1_3_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_127);
                    	    lv_segments_5_0=ruleTemplateMiddle();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"segments",
                    	              		lv_segments_5_0, 
                    	              		"eu.numberfour.n4js.N4JS.TemplateMiddle");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    int alt401=2;
                    	    int LA401_0 = input.LA(1);

                    	    if ( ((LA401_0>=Intersection && LA401_0<=Implements)||(LA401_0>=Promisify && LA401_0<=Abstract)||(LA401_0>=External && LA401_0<=Function)||(LA401_0>=Private && LA401_0<=Delete)||LA401_0==Public||LA401_0==Static||(LA401_0>=Target && LA401_0<=Await)||LA401_0==Class||(LA401_0>=False && LA401_0<=Super)||LA401_0==Union||(LA401_0>=Yield && LA401_0<=This)||(LA401_0>=From && LA401_0<=Void)||(LA401_0>=Get && LA401_0<=Set)||LA401_0==PlusSignPlusSign||LA401_0==HyphenMinusHyphenMinus||LA401_0==SolidusEqualsSign||LA401_0==As||LA401_0==Of||LA401_0==ExclamationMark||LA401_0==LeftParenthesis||(LA401_0>=Asterisk && LA401_0<=PlusSign)||LA401_0==HyphenMinus||LA401_0==Solidus||LA401_0==LessThanSign||(LA401_0>=CommercialAt && LA401_0<=LeftSquareBracket)||LA401_0==LeftCurlyBracket||LA401_0==Tilde||LA401_0==RULE_DOUBLE||(LA401_0>=RULE_HEX_INT && LA401_0<=RULE_LEGACY_OCTAL_INT)||LA401_0==RULE_SCIENTIFIC_INT||LA401_0==RULE_IDENTIFIER||LA401_0==RULE_STRING||(LA401_0>=RULE_TEMPLATE_HEAD && LA401_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA401_0==RULE_INT) ) {
                    	        alt401=1;
                    	    }
                    	    switch (alt401) {
                    	        case 1 :
                    	            {
                    	            {
                    	            if ( state.backtracking==0 ) {
                    	               
                    	              	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsExpressionParserRuleCall_1_1_3_1_0()); 
                    	              	    
                    	            }
                    	            pushFollow(FOLLOW_127);
                    	            lv_segments_6_0=norm1_Expression();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                    	              	        }
                    	                     		add(
                    	                     			current, 
                    	                     			"segments",
                    	                      		lv_segments_6_0, 
                    	                      		"eu.numberfour.n4js.N4JS.Expression");
                    	              	        afterParserOrEnumRuleCall();
                    	              	    
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	              newCompositeNode(grammarAccess.getTemplateLiteralAccess().getTemplateExpressionEndParserRuleCall_1_1_3_2()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_128);
                    	    ruleTemplateExpressionEnd();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop402;
                        }
                    } while (true);
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsTemplateTailParserRuleCall_1_1_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_segments_8_0=ruleTemplateTail();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"segments",
                              		lv_segments_8_0, 
                              		"eu.numberfour.n4js.N4JS.TemplateTail");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_TemplateLiteral() throws RecognitionException {
        EObject current = null;

        EObject lv_segments_1_0 = null;

        EObject lv_segments_2_0 = null;

        EObject lv_segments_3_0 = null;

        EObject lv_segments_5_0 = null;

        EObject lv_segments_6_0 = null;

        EObject lv_segments_8_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTemplateLiteralAccess().getTemplateLiteralAction_0(),
                          current);
                  
            }

            }
            int alt407=2;
            int LA407_0 = input.LA(1);

            if ( (LA407_0==RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) ) {
                alt407=1;
            }
            else if ( (LA407_0==RULE_TEMPLATE_HEAD) ) {
                alt407=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 407, 0, input);

                throw nvae;
            }
            switch (alt407) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsNoSubstitutionTemplateParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_segments_1_0=ruleNoSubstitutionTemplate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"segments",
                              		lv_segments_1_0, 
                              		"eu.numberfour.n4js.N4JS.NoSubstitutionTemplate");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsTemplateHeadParserRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_127);
                    lv_segments_2_0=ruleTemplateHead();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"segments",
                              		lv_segments_2_0, 
                              		"eu.numberfour.n4js.N4JS.TemplateHead");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt404=2;
                    int LA404_0 = input.LA(1);

                    if ( ((LA404_0>=Intersection && LA404_0<=Implements)||(LA404_0>=Promisify && LA404_0<=Abstract)||(LA404_0>=External && LA404_0<=Function)||(LA404_0>=Private && LA404_0<=Delete)||LA404_0==Public||LA404_0==Static||(LA404_0>=Target && LA404_0<=Await)||LA404_0==Class||(LA404_0>=False && LA404_0<=Super)||LA404_0==Union||(LA404_0>=Yield && LA404_0<=This)||(LA404_0>=From && LA404_0<=Void)||(LA404_0>=Get && LA404_0<=Set)||LA404_0==PlusSignPlusSign||LA404_0==HyphenMinusHyphenMinus||LA404_0==SolidusEqualsSign||LA404_0==As||LA404_0==Of||LA404_0==ExclamationMark||LA404_0==LeftParenthesis||(LA404_0>=Asterisk && LA404_0<=PlusSign)||LA404_0==HyphenMinus||LA404_0==Solidus||LA404_0==LessThanSign||(LA404_0>=CommercialAt && LA404_0<=LeftSquareBracket)||LA404_0==LeftCurlyBracket||LA404_0==Tilde||LA404_0==RULE_DOUBLE||(LA404_0>=RULE_HEX_INT && LA404_0<=RULE_LEGACY_OCTAL_INT)||LA404_0==RULE_SCIENTIFIC_INT||LA404_0==RULE_IDENTIFIER||LA404_0==RULE_STRING||(LA404_0>=RULE_TEMPLATE_HEAD && LA404_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA404_0==RULE_INT) ) {
                        alt404=1;
                    }
                    switch (alt404) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsExpressionParserRuleCall_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_127);
                            lv_segments_3_0=norm3_Expression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"segments",
                                      		lv_segments_3_0, 
                                      		"eu.numberfour.n4js.N4JS.Expression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateLiteralAccess().getTemplateExpressionEndParserRuleCall_1_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_128);
                    ruleTemplateExpressionEnd();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }
                    loop406:
                    do {
                        int alt406=2;
                        int LA406_0 = input.LA(1);

                        if ( (LA406_0==RULE_TEMPLATE_MIDDLE) ) {
                            alt406=1;
                        }


                        switch (alt406) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsTemplateMiddleParserRuleCall_1_1_3_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_127);
                    	    lv_segments_5_0=ruleTemplateMiddle();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"segments",
                    	              		lv_segments_5_0, 
                    	              		"eu.numberfour.n4js.N4JS.TemplateMiddle");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    int alt405=2;
                    	    int LA405_0 = input.LA(1);

                    	    if ( ((LA405_0>=Intersection && LA405_0<=Implements)||(LA405_0>=Promisify && LA405_0<=Abstract)||(LA405_0>=External && LA405_0<=Function)||(LA405_0>=Private && LA405_0<=Delete)||LA405_0==Public||LA405_0==Static||(LA405_0>=Target && LA405_0<=Await)||LA405_0==Class||(LA405_0>=False && LA405_0<=Super)||LA405_0==Union||(LA405_0>=Yield && LA405_0<=This)||(LA405_0>=From && LA405_0<=Void)||(LA405_0>=Get && LA405_0<=Set)||LA405_0==PlusSignPlusSign||LA405_0==HyphenMinusHyphenMinus||LA405_0==SolidusEqualsSign||LA405_0==As||LA405_0==Of||LA405_0==ExclamationMark||LA405_0==LeftParenthesis||(LA405_0>=Asterisk && LA405_0<=PlusSign)||LA405_0==HyphenMinus||LA405_0==Solidus||LA405_0==LessThanSign||(LA405_0>=CommercialAt && LA405_0<=LeftSquareBracket)||LA405_0==LeftCurlyBracket||LA405_0==Tilde||LA405_0==RULE_DOUBLE||(LA405_0>=RULE_HEX_INT && LA405_0<=RULE_LEGACY_OCTAL_INT)||LA405_0==RULE_SCIENTIFIC_INT||LA405_0==RULE_IDENTIFIER||LA405_0==RULE_STRING||(LA405_0>=RULE_TEMPLATE_HEAD && LA405_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA405_0==RULE_INT) ) {
                    	        alt405=1;
                    	    }
                    	    switch (alt405) {
                    	        case 1 :
                    	            {
                    	            {
                    	            if ( state.backtracking==0 ) {
                    	               
                    	              	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsExpressionParserRuleCall_1_1_3_1_0()); 
                    	              	    
                    	            }
                    	            pushFollow(FOLLOW_127);
                    	            lv_segments_6_0=norm3_Expression();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                    	              	        }
                    	                     		add(
                    	                     			current, 
                    	                     			"segments",
                    	                      		lv_segments_6_0, 
                    	                      		"eu.numberfour.n4js.N4JS.Expression");
                    	              	        afterParserOrEnumRuleCall();
                    	              	    
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	              newCompositeNode(grammarAccess.getTemplateLiteralAccess().getTemplateExpressionEndParserRuleCall_1_1_3_2()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_128);
                    	    ruleTemplateExpressionEnd();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop406;
                        }
                    } while (true);
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsTemplateTailParserRuleCall_1_1_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_segments_8_0=ruleTemplateTail();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"segments",
                              		lv_segments_8_0, 
                              		"eu.numberfour.n4js.N4JS.TemplateTail");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleTemplateExpressionEnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTemplateExpressionEnd = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateExpressionEndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateExpressionEnd=ruleTemplateExpressionEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateExpressionEnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleTemplateExpressionEnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); setInTemplateSegment();
            
        try {
            {
            kw=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getTemplateExpressionEndAccess().getRightCurlyBracketKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleNoSubstitutionTemplate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNoSubstitutionTemplate = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNoSubstitutionTemplateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNoSubstitutionTemplate=ruleNoSubstitutionTemplate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNoSubstitutionTemplate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleNoSubstitutionTemplate() throws RecognitionException {
        EObject current = null;

        Token lv_rawValue_1_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getNoSubstitutionTemplateAccess().getTemplateSegmentAction_0(),
                          current);
                  
            }

            }
            {
            {
            lv_rawValue_1_0=(Token)match(input,RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_rawValue_1_0, grammarAccess.getNoSubstitutionTemplateAccess().getRawValueNO_SUBSTITUTION_TEMPLATE_LITERALTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getNoSubstitutionTemplateRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"rawValue",
                      		lv_rawValue_1_0, 
                      		"eu.numberfour.n4js.N4JS.NO_SUBSTITUTION_TEMPLATE_LITERAL");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTemplateHead() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateHead = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateHeadRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateHead=ruleTemplateHead();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateHead; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTemplateHead() throws RecognitionException {
        EObject current = null;

        Token lv_rawValue_1_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTemplateHeadAccess().getTemplateSegmentAction_0(),
                          current);
                  
            }

            }
            {
            {
            lv_rawValue_1_0=(Token)match(input,RULE_TEMPLATE_HEAD,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_rawValue_1_0, grammarAccess.getTemplateHeadAccess().getRawValueTEMPLATE_HEADTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTemplateHeadRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"rawValue",
                      		lv_rawValue_1_0, 
                      		"eu.numberfour.n4js.N4JS.TEMPLATE_HEAD");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTemplateTail() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateTail = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateTailRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateTail=ruleTemplateTail();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateTail; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTemplateTail() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_rawValue_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTemplateTailAccess().getTemplateSegmentAction_0(),
                          current);
                  
            }

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTemplateTailAccess().getRawValueTemplateTailLiteralParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_rawValue_1_0=ruleTemplateTailLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTemplateTailRule());
              	        }
                     		set(
                     			current, 
                     			"rawValue",
                      		lv_rawValue_1_0, 
                      		"eu.numberfour.n4js.N4JS.TemplateTailLiteral");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTemplateMiddle() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateMiddle = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateMiddleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateMiddle=ruleTemplateMiddle();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateMiddle; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTemplateMiddle() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_rawValue_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTemplateMiddleAccess().getTemplateSegmentAction_0(),
                          current);
                  
            }

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTemplateMiddleAccess().getRawValueTemplateMiddleLiteralParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_rawValue_1_0=ruleTemplateMiddleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTemplateMiddleRule());
              	        }
                     		set(
                     			current, 
                     			"rawValue",
                      		lv_rawValue_1_0, 
                      		"eu.numberfour.n4js.N4JS.TemplateMiddleLiteral");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteral=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_NumericLiteral_0 = null;

        EObject this_BooleanLiteral_1 = null;

        EObject this_StringLiteral_2 = null;

        EObject this_NullLiteral_3 = null;

        EObject this_RegularExpressionLiteral_4 = null;


         enterRule(); 
            
        try {
            {
            int alt408=5;
            switch ( input.LA(1) ) {
            case RULE_DOUBLE:
            case RULE_HEX_INT:
            case RULE_BINARY_INT:
            case RULE_OCTAL_INT:
            case RULE_LEGACY_OCTAL_INT:
            case RULE_SCIENTIFIC_INT:
            case RULE_INT:
                {
                alt408=1;
                }
                break;
            case False:
            case True:
                {
                alt408=2;
                }
                break;
            case RULE_STRING:
                {
                alt408=3;
                }
                break;
            case Null:
                {
                alt408=4;
                }
                break;
            case SolidusEqualsSign:
            case Solidus:
                {
                alt408=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 408, 0, input);

                throw nvae;
            }

            switch (alt408) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLiteralAccess().getNumericLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_NumericLiteral_0=ruleNumericLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NumericLiteral_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BooleanLiteral_1=ruleBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BooleanLiteral_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_StringLiteral_2=ruleStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_StringLiteral_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_NullLiteral_3=ruleNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NullLiteral_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLiteralAccess().getRegularExpressionLiteralParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_RegularExpressionLiteral_4=ruleRegularExpressionLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_RegularExpressionLiteral_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNullLiteral=ruleNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleNullLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getNullLiteralAccess().getNullLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Null,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getNullLiteralAccess().getNullKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBooleanLiteral=ruleBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_true_1_0=null;
        Token otherlv_2=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0(),
                          current);
                  
            }

            }
            int alt409=2;
            int LA409_0 = input.LA(1);

            if ( (LA409_0==True) ) {
                alt409=1;
            }
            else if ( (LA409_0==False) ) {
                alt409=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 409, 0, input);

                throw nvae;
            }
            switch (alt409) {
                case 1 :
                    {
                    {
                    {
                    lv_true_1_0=(Token)match(input,True,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_true_1_0, grammarAccess.getBooleanLiteralAccess().getTrueTrueKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBooleanLiteralRule());
                      	        }
                             		setWithLastConsumed(current, "true", true, "true");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    otherlv_2=(Token)match(input,False,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStringLiteral=ruleStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getStringLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.STRING");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleNumericLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumericLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumericLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumericLiteral=ruleNumericLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumericLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleNumericLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_DoubleLiteral_0 = null;

        EObject this_IntLiteral_1 = null;

        EObject this_BinaryIntLiteral_2 = null;

        EObject this_OctalIntLiteral_3 = null;

        EObject this_LegacyOctalIntLiteral_4 = null;

        EObject this_HexIntLiteral_5 = null;

        EObject this_ScientificIntLiteral_6 = null;


         enterRule(); 
            
        try {
            {
            int alt410=7;
            switch ( input.LA(1) ) {
            case RULE_DOUBLE:
                {
                alt410=1;
                }
                break;
            case RULE_INT:
                {
                alt410=2;
                }
                break;
            case RULE_BINARY_INT:
                {
                alt410=3;
                }
                break;
            case RULE_OCTAL_INT:
                {
                alt410=4;
                }
                break;
            case RULE_LEGACY_OCTAL_INT:
                {
                alt410=5;
                }
                break;
            case RULE_HEX_INT:
                {
                alt410=6;
                }
                break;
            case RULE_SCIENTIFIC_INT:
                {
                alt410=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 410, 0, input);

                throw nvae;
            }

            switch (alt410) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getDoubleLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DoubleLiteral_0=ruleDoubleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DoubleLiteral_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getIntLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IntLiteral_1=ruleIntLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IntLiteral_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getBinaryIntLiteralParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BinaryIntLiteral_2=ruleBinaryIntLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BinaryIntLiteral_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getOctalIntLiteralParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_OctalIntLiteral_3=ruleOctalIntLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_OctalIntLiteral_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getLegacyOctalIntLiteralParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_LegacyOctalIntLiteral_4=ruleLegacyOctalIntLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LegacyOctalIntLiteral_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getHexIntLiteralParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_HexIntLiteral_5=ruleHexIntLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_HexIntLiteral_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getScientificIntLiteralParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ScientificIntLiteral_6=ruleScientificIntLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ScientificIntLiteral_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleDoubleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDoubleLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDoubleLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDoubleLiteral=ruleDoubleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDoubleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleDoubleLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_DOUBLE,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getDoubleLiteralAccess().getValueDOUBLETerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDoubleLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.DOUBLE");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleIntLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntLiteral=ruleIntLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIntLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getIntLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleOctalIntLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOctalIntLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOctalIntLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOctalIntLiteral=ruleOctalIntLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOctalIntLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleOctalIntLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_OCTAL_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getOctalIntLiteralAccess().getValueOCTAL_INTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getOctalIntLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.OCTAL_INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLegacyOctalIntLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLegacyOctalIntLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLegacyOctalIntLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLegacyOctalIntLiteral=ruleLegacyOctalIntLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLegacyOctalIntLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLegacyOctalIntLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_LEGACY_OCTAL_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getLegacyOctalIntLiteralAccess().getValueLEGACY_OCTAL_INTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getLegacyOctalIntLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.LEGACY_OCTAL_INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleHexIntLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHexIntLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHexIntLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHexIntLiteral=ruleHexIntLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHexIntLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleHexIntLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_HEX_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getHexIntLiteralAccess().getValueHEX_INTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getHexIntLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.HEX_INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBinaryIntLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBinaryIntLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBinaryIntLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBinaryIntLiteral=ruleBinaryIntLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBinaryIntLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBinaryIntLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_BINARY_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getBinaryIntLiteralAccess().getValueBINARY_INTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getBinaryIntLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.BINARY_INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleScientificIntLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScientificIntLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScientificIntLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleScientificIntLiteral=ruleScientificIntLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScientificIntLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleScientificIntLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_SCIENTIFIC_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getScientificIntLiteralAccess().getValueSCIENTIFIC_INTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getScientificIntLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.SCIENTIFIC_INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleRegularExpressionLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRegularExpressionLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRegularExpressionLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRegularExpressionLiteral=ruleRegularExpressionLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRegularExpressionLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleRegularExpressionLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRegularExpressionLiteralAccess().getValueREGEX_LITERALParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_value_0_0=ruleREGEX_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRegularExpressionLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.REGEX_LITERAL");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleNumericLiteralAsString() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumericLiteralAsString = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumericLiteralAsStringRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumericLiteralAsString=ruleNumericLiteralAsString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumericLiteralAsString.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleNumericLiteralAsString() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_DOUBLE_0=null;
        Token this_INT_1=null;
        Token this_OCTAL_INT_2=null;
        Token this_HEX_INT_3=null;
        Token this_SCIENTIFIC_INT_4=null;

         enterRule(); 
            
        try {
            {
            int alt411=5;
            switch ( input.LA(1) ) {
            case RULE_DOUBLE:
                {
                alt411=1;
                }
                break;
            case RULE_INT:
                {
                alt411=2;
                }
                break;
            case RULE_OCTAL_INT:
                {
                alt411=3;
                }
                break;
            case RULE_HEX_INT:
                {
                alt411=4;
                }
                break;
            case RULE_SCIENTIFIC_INT:
                {
                alt411=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 411, 0, input);

                throw nvae;
            }

            switch (alt411) {
                case 1 :
                    {
                    this_DOUBLE_0=(Token)match(input,RULE_DOUBLE,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_DOUBLE_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_DOUBLE_0, grammarAccess.getNumericLiteralAsStringAccess().getDOUBLETerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    this_INT_1=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_INT_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_INT_1, grammarAccess.getNumericLiteralAsStringAccess().getINTTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    this_OCTAL_INT_2=(Token)match(input,RULE_OCTAL_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OCTAL_INT_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_OCTAL_INT_2, grammarAccess.getNumericLiteralAsStringAccess().getOCTAL_INTTerminalRuleCall_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    this_HEX_INT_3=(Token)match(input,RULE_HEX_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_HEX_INT_3);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_HEX_INT_3, grammarAccess.getNumericLiteralAsStringAccess().getHEX_INTTerminalRuleCall_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    this_SCIENTIFIC_INT_4=(Token)match(input,RULE_SCIENTIFIC_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_SCIENTIFIC_INT_4);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_SCIENTIFIC_INT_4, grammarAccess.getNumericLiteralAsStringAccess().getSCIENTIFIC_INTTerminalRuleCall_4()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleIdentifierOrThis() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdentifierOrThis = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierOrThisRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentifierOrThis=ruleIdentifierOrThis();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifierOrThis.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleIdentifierOrThis() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENTIFIER_0=null;
        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt412=4;
            switch ( input.LA(1) ) {
            case RULE_IDENTIFIER:
                {
                alt412=1;
                }
                break;
            case This:
                {
                alt412=2;
                }
                break;
            case Promisify:
                {
                alt412=3;
                }
                break;
            case Target:
                {
                alt412=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 412, 0, input);

                throw nvae;
            }

            switch (alt412) {
                case 1 :
                    {
                    this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENTIFIER_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENTIFIER_0, grammarAccess.getIdentifierOrThisAccess().getIDENTIFIERTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,This,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIdentifierOrThisAccess().getThisKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,Promisify,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIdentifierOrThisAccess().getPromisifyKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,Target,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIdentifierOrThisAccess().getTargetKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleAnnotationName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAnnotationName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotationName=ruleAnnotationName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleAnnotationName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENTIFIER_0=null;
        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt413=3;
            switch ( input.LA(1) ) {
            case RULE_IDENTIFIER:
                {
                alt413=1;
                }
                break;
            case This:
                {
                alt413=2;
                }
                break;
            case Target:
                {
                alt413=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 413, 0, input);

                throw nvae;
            }

            switch (alt413) {
                case 1 :
                    {
                    this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENTIFIER_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENTIFIER_0, grammarAccess.getAnnotationNameAccess().getIDENTIFIERTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,This,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAnnotationNameAccess().getThisKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,Target,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAnnotationNameAccess().getTargetKeyword_2()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleREGEX_LITERAL() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleREGEX_LITERAL = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getREGEX_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleREGEX_LITERAL=ruleREGEX_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleREGEX_LITERAL.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleREGEX_LITERAL() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_REGEX_TAIL_2=null;

         enterRule(); setInRegularExpression();
            
        try {
            {
            {
            int alt414=2;
            int LA414_0 = input.LA(1);

            if ( (LA414_0==Solidus) ) {
                alt414=1;
            }
            else if ( (LA414_0==SolidusEqualsSign) ) {
                alt414=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 414, 0, input);

                throw nvae;
            }
            switch (alt414) {
                case 1 :
                    {
                    kw=(Token)match(input,Solidus,FOLLOW_129); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getREGEX_LITERALAccess().getSolidusKeyword_0_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,SolidusEqualsSign,FOLLOW_129); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getREGEX_LITERALAccess().getSolidusEqualsSignKeyword_0_1()); 
                          
                    }

                    }
                    break;

            }
            int alt415=2;
            int LA415_0 = input.LA(1);

            if ( (LA415_0==RULE_REGEX_TAIL) ) {
                alt415=1;
            }
            switch (alt415) {
                case 1 :
                    {
                    this_REGEX_TAIL_2=(Token)match(input,RULE_REGEX_TAIL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_REGEX_TAIL_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_REGEX_TAIL_2, grammarAccess.getREGEX_LITERALAccess().getREGEX_TAILTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleTemplateTailLiteral() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTemplateTailLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateTailLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateTailLiteral=ruleTemplateTailLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateTailLiteral.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleTemplateTailLiteral() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_TEMPLATE_END_0=null;

         enterRule(); 
            
        try {
            {
            int alt416=2;
            int LA416_0 = input.LA(1);

            if ( (LA416_0==RULE_TEMPLATE_END) ) {
                alt416=1;
            }
            switch (alt416) {
                case 1 :
                    {
                    this_TEMPLATE_END_0=(Token)match(input,RULE_TEMPLATE_END,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_TEMPLATE_END_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_TEMPLATE_END_0, grammarAccess.getTemplateTailLiteralAccess().getTEMPLATE_ENDTerminalRuleCall()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleTemplateMiddleLiteral() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTemplateMiddleLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateMiddleLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateMiddleLiteral=ruleTemplateMiddleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateMiddleLiteral.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleTemplateMiddleLiteral() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_TEMPLATE_MIDDLE_0=null;

         enterRule(); 
            
        try {
            {
            this_TEMPLATE_MIDDLE_0=(Token)match(input,RULE_TEMPLATE_MIDDLE,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_TEMPLATE_MIDDLE_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_TEMPLATE_MIDDLE_0, grammarAccess.getTemplateMiddleLiteralAccess().getTEMPLATE_MIDDLETerminalRuleCall()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleSemi() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSemi = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSemiRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSemi=ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSemi.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleSemi() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
        		int marker = input.mark();
        		promoteEOL();    
        try {
            int alt417=3;
            switch ( input.LA(1) ) {
            case Semicolon:
                {
                alt417=1;
                }
                break;
            case EOF:
            case RULE_ML_COMMENT:
            case RULE_EOL:
                {
                alt417=2;
                }
                break;
            case RightCurlyBracket:
                {
                alt417=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 417, 0, input);

                throw nvae;
            }

            switch (alt417) {
                case 1 :
                    {
                    kw=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getSemiAccess().getSemicolonKeyword()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)input.LT(1);
                    if ( input.LA(1)==EOF||input.LA(1)==RULE_ML_COMMENT||input.LA(1)==RULE_EOL ) {
                        input.consume();
                        state.errorRecovery=false;state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }

                    if ( state.backtracking==0 ) {

                              addASIMessage();
                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getSemiAccess().getSemicolonKeyword()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( !(( forcedRewind(marker) )) ) {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        throw new FailedPredicateException(input, "ruleSemi", " forcedRewind(marker) ");
                    }

                    }
                    break;

            }
            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
   // REPLACEMENT ruleNoLineTerminator.java.replacement START
 public final EObject ruleNoLineTerminator(EObject in_current) throws RecognitionException {
    	EObject current = in_current;
    	if (state.backtracking==0) {
    		promoteEOL();
    	}
    	if (hasDisallowedEOL()) { 
        	if (state.backtracking==0) {
        		NoViableAltException nvae = new NoViableAltException("", 0, 0, input);
                reportError(nvae);
                throw nvae;
        	}
        	state.failed=true; 
        	return current;
        }
        return current;
    }
// REPLACEMENT ruleNoLineTerminator.java.replacement END
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_AnnotationNoAtSign_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,CommercialAt,FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotationAccess().getAnnotationNoAtSignParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_AnnotationNoAtSign_1=ruleAnnotationNoAtSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AnnotationNoAtSign_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleScriptAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScriptAnnotation = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScriptAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleScriptAnnotation=ruleScriptAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScriptAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleScriptAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_AnnotationNoAtSign_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,CommercialAtCommercialAt,FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getScriptAnnotationAccess().getCommercialAtCommercialAtKeyword_0());
                  
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getScriptAnnotationAccess().getAnnotationNoAtSignParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_AnnotationNoAtSign_1=ruleAnnotationNoAtSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AnnotationNoAtSign_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotationNoAtSign() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotationNoAtSign = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationNoAtSignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotationNoAtSign=ruleAnnotationNoAtSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationNoAtSign; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotationNoAtSign() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_args_2_0 = null;

        EObject lv_args_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAnnotationNoAtSignAccess().getNameAnnotationNameParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_96);
            lv_name_0_0=ruleAnnotationName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAnnotationNoAtSignRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.N4JS.AnnotationName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt421=2;
            alt421 = dfa421.predict(input);
            switch (alt421) {
                case 1 :
                    {
                    {
                    otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getAnnotationNoAtSignAccess().getLeftParenthesisKeyword_1_0());
                          
                    }

                    }
                    int alt420=2;
                    int LA420_0 = input.LA(1);

                    if ( ((LA420_0>=Intersection && LA420_0<=Constructor)||LA420_0==Promisify||LA420_0==Target||LA420_0==Await||LA420_0==False||LA420_0==Union||LA420_0==This||(LA420_0>=Null && LA420_0<=Void)||LA420_0==SolidusEqualsSign||LA420_0==LeftParenthesis||LA420_0==Solidus||LA420_0==QuestionMark||LA420_0==LeftSquareBracket||LA420_0==LeftCurlyBracket||LA420_0==Tilde||LA420_0==RULE_DOUBLE||(LA420_0>=RULE_HEX_INT && LA420_0<=RULE_LEGACY_OCTAL_INT)||LA420_0==RULE_SCIENTIFIC_INT||LA420_0==RULE_IDENTIFIER||LA420_0==RULE_STRING||LA420_0==RULE_INT) ) {
                        alt420=1;
                    }
                    switch (alt420) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotationNoAtSignAccess().getArgsAnnotationArgumentParserRuleCall_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_48);
                            lv_args_2_0=ruleAnnotationArgument();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotationNoAtSignRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"args",
                                      		lv_args_2_0, 
                                      		"eu.numberfour.n4js.N4JS.AnnotationArgument");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop419:
                            do {
                                int alt419=2;
                                int LA419_0 = input.LA(1);

                                if ( (LA419_0==Comma) ) {
                                    alt419=1;
                                }


                                switch (alt419) {
                            	case 1 :
                            	    {
                            	    otherlv_3=(Token)match(input,Comma,FOLLOW_132); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_3, grammarAccess.getAnnotationNoAtSignAccess().getCommaKeyword_1_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotationNoAtSignAccess().getArgsAnnotationArgumentParserRuleCall_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_48);
                            	    lv_args_4_0=ruleAnnotationArgument();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotationNoAtSignRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"args",
                            	              		lv_args_4_0, 
                            	              		"eu.numberfour.n4js.N4JS.AnnotationArgument");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop419;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getAnnotationNoAtSignAccess().getRightParenthesisKeyword_1_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotationArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotationArgument = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotationArgument=ruleAnnotationArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotationArgument() throws RecognitionException {
        EObject current = null;

        EObject this_LiteralAnnotationArgument_0 = null;

        EObject this_TypeRefAnnotationArgument_1 = null;


         enterRule(); 
            
        try {
            {
            int alt422=2;
            int LA422_0 = input.LA(1);

            if ( (LA422_0==False||LA422_0==Null||LA422_0==True||LA422_0==SolidusEqualsSign||LA422_0==Solidus||LA422_0==RULE_DOUBLE||(LA422_0>=RULE_HEX_INT && LA422_0<=RULE_LEGACY_OCTAL_INT)||LA422_0==RULE_SCIENTIFIC_INT||LA422_0==RULE_STRING||LA422_0==RULE_INT) ) {
                alt422=1;
            }
            else if ( ((LA422_0>=Intersection && LA422_0<=Constructor)||LA422_0==Promisify||LA422_0==Target||LA422_0==Await||LA422_0==Union||LA422_0==This||LA422_0==This_1||(LA422_0>=Type && LA422_0<=Void)||LA422_0==LeftParenthesis||LA422_0==QuestionMark||LA422_0==LeftSquareBracket||LA422_0==LeftCurlyBracket||LA422_0==Tilde||LA422_0==RULE_IDENTIFIER) ) {
                alt422=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 422, 0, input);

                throw nvae;
            }
            switch (alt422) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotationArgumentAccess().getLiteralAnnotationArgumentParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralAnnotationArgument_0=ruleLiteralAnnotationArgument();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LiteralAnnotationArgument_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotationArgumentAccess().getTypeRefAnnotationArgumentParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeRefAnnotationArgument_1=ruleTypeRefAnnotationArgument();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeRefAnnotationArgument_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLiteralAnnotationArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralAnnotationArgument = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralAnnotationArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralAnnotationArgument=ruleLiteralAnnotationArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralAnnotationArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLiteralAnnotationArgument() throws RecognitionException {
        EObject current = null;

        EObject lv_literal_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLiteralAnnotationArgumentAccess().getLiteralLiteralParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_literal_0_0=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLiteralAnnotationArgumentRule());
              	        }
                     		set(
                     			current, 
                     			"literal",
                      		lv_literal_0_0, 
                      		"eu.numberfour.n4js.N4JS.Literal");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeRefAnnotationArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRefAnnotationArgument = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefAnnotationArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeRefAnnotationArgument=ruleTypeRefAnnotationArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRefAnnotationArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeRefAnnotationArgument() throws RecognitionException {
        EObject current = null;

        EObject lv_typeRef_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypeRefAnnotationArgumentAccess().getTypeRefTypeRefParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_typeRef_0_0=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeRefAnnotationArgumentRule());
              	        }
                     		set(
                     			current, 
                     			"typeRef",
                      		lv_typeRef_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotationList = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotationList=ruleAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotationList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_2_0 = null;

        EObject lv_annotations_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAnnotationListAccess().getAnnotationListAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,CommercialAt,FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAnnotationListAccess().getCommercialAtKeyword_0_0_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAnnotationListAccess().getAnnotationsAnnotationNoAtSignParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_133);
            lv_annotations_2_0=ruleAnnotationNoAtSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAnnotationListRule());
              	        }
                     		add(
                     			current, 
                     			"annotations",
                      		lv_annotations_2_0, 
                      		"eu.numberfour.n4js.N4JS.AnnotationNoAtSign");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }
            loop423:
            do {
                int alt423=2;
                int LA423_0 = input.LA(1);

                if ( (LA423_0==CommercialAt) ) {
                    alt423=1;
                }


                switch (alt423) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAnnotationListAccess().getAnnotationsAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_133);
            	    lv_annotations_3_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAnnotationListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_3_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop423;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExpressionAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionAnnotationList = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionAnnotationListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionAnnotationList=ruleExpressionAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionAnnotationList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExpressionAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExpressionAnnotationListAccess().getExpressionAnnotationListAction_0(),
                          current);
                  
            }

            }
            int cnt424=0;
            loop424:
            do {
                int alt424=2;
                int LA424_0 = input.LA(1);

                if ( (LA424_0==CommercialAt) ) {
                    alt424=1;
                }


                switch (alt424) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getExpressionAnnotationListAccess().getAnnotationsAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_133);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getExpressionAnnotationListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt424 >= 1 ) break loop424;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(424, input);
                        throw eee;
                }
                cnt424++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertyAssignmentAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyAssignmentAnnotationList = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyAssignmentAnnotationListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyAssignmentAnnotationList=rulePropertyAssignmentAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyAssignmentAnnotationList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertyAssignmentAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyAssignmentAnnotationListAccess().getPropertyAssignmentAnnotationListAction_0(),
                          current);
                  
            }

            }
            int cnt425=0;
            loop425:
            do {
                int alt425=2;
                int LA425_0 = input.LA(1);

                if ( (LA425_0==CommercialAt) ) {
                    alt425=1;
                }


                switch (alt425) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPropertyAssignmentAnnotationListAccess().getAnnotationsAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_133);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPropertyAssignmentAnnotationListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt425 >= 1 ) break loop425;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(425, input);
                        throw eee;
                }
                cnt425++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4MemberAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4MemberAnnotationList = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4MemberAnnotationListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4MemberAnnotationList=ruleN4MemberAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4MemberAnnotationList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4MemberAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4MemberAnnotationListAccess().getN4MemberAnnotationListAction_0(),
                          current);
                  
            }

            }
            int cnt426=0;
            loop426:
            do {
                int alt426=2;
                int LA426_0 = input.LA(1);

                if ( (LA426_0==CommercialAt) ) {
                    alt426=1;
                }


                switch (alt426) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4MemberAnnotationListAccess().getAnnotationsAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_133);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4MemberAnnotationListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt426 >= 1 ) break loop426;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(426, input);
                        throw eee;
                }
                cnt426++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleTypeReferenceName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTypeReferenceName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeReferenceNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeReferenceName=ruleTypeReferenceName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeReferenceName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleTypeReferenceName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedTypeReferenceName_5 = null;


         enterRule(); 
            
        try {
            {
            int alt427=6;
            switch ( input.LA(1) ) {
            case Void:
                {
                alt427=1;
                }
                break;
            case This:
                {
                alt427=2;
                }
                break;
            case Await:
                {
                alt427=3;
                }
                break;
            case Promisify:
                {
                alt427=4;
                }
                break;
            case Target:
                {
                alt427=5;
                }
                break;
            case RULE_IDENTIFIER:
                {
                alt427=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 427, 0, input);

                throw nvae;
            }

            switch (alt427) {
                case 1 :
                    {
                    kw=(Token)match(input,Void,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeReferenceNameAccess().getVoidKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,This,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeReferenceNameAccess().getThisKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,Await,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeReferenceNameAccess().getAwaitKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,Promisify,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeReferenceNameAccess().getPromisifyKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    kw=(Token)match(input,Target,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeReferenceNameAccess().getTargetKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeReferenceNameAccess().getQualifiedTypeReferenceNameParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_QualifiedTypeReferenceName_5=ruleQualifiedTypeReferenceName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_QualifiedTypeReferenceName_5);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleQualifiedTypeReferenceName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedTypeReferenceName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedTypeReferenceNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedTypeReferenceName=ruleQualifiedTypeReferenceName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedTypeReferenceName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleQualifiedTypeReferenceName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENTIFIER_0=null;
        Token kw=null;
        Token this_IDENTIFIER_2=null;

         enterRule(); 
            
        try {
            {
            {
            this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_134); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_IDENTIFIER_0, grammarAccess.getQualifiedTypeReferenceNameAccess().getIDENTIFIERTerminalRuleCall_0()); 
                  
            }
            int alt428=2;
            int LA428_0 = input.LA(1);

            if ( (LA428_0==FullStop) ) {
                alt428=1;
            }
            switch (alt428) {
                case 1 :
                    {
                    kw=(Token)match(input,FullStop,FOLLOW_135); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQualifiedTypeReferenceNameAccess().getFullStopKeyword_1_0()); 
                          
                    }
                    this_IDENTIFIER_2=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENTIFIER_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENTIFIER_2, grammarAccess.getQualifiedTypeReferenceNameAccess().getIDENTIFIERTerminalRuleCall_1_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4ClassDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4ClassDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4ClassDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4ClassDeclaration=ruleN4ClassDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4ClassDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4ClassDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        AntlrDatatypeRuleToken lv_typingStrategy_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        EObject this_TypeVariables_5 = null;

        EObject this_ClassExtendsClause_6 = null;

        EObject this_Members_7 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4ClassDeclarationAccess().getN4ClassDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop429:
            do {
                int alt429=2;
                int LA429_0 = input.LA(1);

                if ( ((LA429_0>=Protected && LA429_0<=Abstract)||LA429_0==External||(LA429_0>=Private && LA429_0<=Project)||LA429_0==Public||LA429_0==Static||LA429_0==Const) ) {
                    alt429=1;
                }


                switch (alt429) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4ClassDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_7);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4ClassDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop429;
                }
            } while (true);

            otherlv_2=(Token)match(input,Class,FOLLOW_136); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getN4ClassDeclarationAccess().getClassKeyword_0_0_2());
                  
            }
            int alt430=2;
            int LA430_0 = input.LA(1);

            if ( (LA430_0==Tilde) ) {
                alt430=1;
            }
            switch (alt430) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4ClassDeclarationAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_57);
                    lv_typingStrategy_3_0=ruleTypingStrategyDefSiteOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4ClassDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"typingStrategy",
                              		lv_typingStrategy_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyDefSiteOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt431=2;
            int LA431_0 = input.LA(1);

            if ( ((LA431_0>=Intersection && LA431_0<=Constructor)||(LA431_0>=Promisify && LA431_0<=Abstract)||LA431_0==External||(LA431_0>=Private && LA431_0<=Project)||LA431_0==Public||LA431_0==Static||LA431_0==Target||(LA431_0>=Async && LA431_0<=Await)||LA431_0==Union||(LA431_0>=Yield && LA431_0<=This)||LA431_0==From||LA431_0==Type||(LA431_0>=Get && LA431_0<=Let)||(LA431_0>=Out && LA431_0<=Set)||LA431_0==As||LA431_0==Of||LA431_0==RULE_IDENTIFIER) ) {
                alt431=1;
            }
            else if ( (LA431_0==Implements) ) {
                int LA431_2 = input.LA(2);

                if ( (LA431_2==Implements||LA431_2==Extends||LA431_2==LessThanSign||LA431_2==LeftCurlyBracket) ) {
                    alt431=1;
                }
            }
            switch (alt431) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4ClassDeclarationAccess().getNameBindingIdentifierParserRuleCall_0_0_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_10);
                    lv_name_4_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4ClassDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }
            int alt432=2;
            int LA432_0 = input.LA(1);

            if ( (LA432_0==LessThanSign) ) {
                alt432=1;
            }
            switch (alt432) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4ClassDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4ClassDeclarationAccess().getTypeVariablesParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_10);
                    this_TypeVariables_5=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt433=2;
            int LA433_0 = input.LA(1);

            if ( (LA433_0==Implements||LA433_0==Extends) ) {
                alt433=1;
            }
            switch (alt433) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4ClassDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4ClassDeclarationAccess().getClassExtendsClauseParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_10);
                    this_ClassExtendsClause_6=ruleClassExtendsClause(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ClassExtendsClause_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4ClassDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4ClassDeclarationAccess().getMembersParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_Members_7=ruleMembers(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_Members_7;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleMembers(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedMembersRaw_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftCurlyBracket,FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getMembersAccess().getLeftCurlyBracketKeyword_0());
                  
            }
            loop434:
            do {
                int alt434=2;
                int LA434_0 = input.LA(1);

                if ( ((LA434_0>=Intersection && LA434_0<=With)||(LA434_0>=For && LA434_0<=Var)||(LA434_0>=As && LA434_0<=Of)||LA434_0==LeftParenthesis||LA434_0==Asterisk||LA434_0==LessThanSign||(LA434_0>=QuestionMark && LA434_0<=LeftSquareBracket)||LA434_0==LeftCurlyBracket||LA434_0==Tilde||LA434_0==RULE_DOUBLE||LA434_0==RULE_HEX_INT||LA434_0==RULE_OCTAL_INT||LA434_0==RULE_SCIENTIFIC_INT||LA434_0==RULE_IDENTIFIER||LA434_0==RULE_STRING||LA434_0==RULE_INT) ) {
                    alt434=1;
                }


                switch (alt434) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMembersAccess().getOwnedMembersRawN4MemberDeclarationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_ownedMembersRaw_1_0=ruleN4MemberDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMembersRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"ownedMembersRaw",
            	              		lv_ownedMembersRaw_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4MemberDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop434;
                }
            } while (true);

            otherlv_2=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getMembersAccess().getRightCurlyBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_Members(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedMembersRaw_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftCurlyBracket,FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getMembersAccess().getLeftCurlyBracketKeyword_0());
                  
            }
            loop435:
            do {
                int alt435=2;
                int LA435_0 = input.LA(1);

                if ( ((LA435_0>=Intersection && LA435_0<=With)||(LA435_0>=For && LA435_0<=Var)||(LA435_0>=As && LA435_0<=Of)||LA435_0==LeftParenthesis||LA435_0==Asterisk||LA435_0==LessThanSign||(LA435_0>=QuestionMark && LA435_0<=LeftSquareBracket)||LA435_0==LeftCurlyBracket||LA435_0==Tilde||LA435_0==RULE_DOUBLE||LA435_0==RULE_HEX_INT||LA435_0==RULE_OCTAL_INT||LA435_0==RULE_SCIENTIFIC_INT||LA435_0==RULE_IDENTIFIER||LA435_0==RULE_STRING||LA435_0==RULE_INT) ) {
                    alt435=1;
                }


                switch (alt435) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMembersAccess().getOwnedMembersRawN4MemberDeclarationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_ownedMembersRaw_1_0=norm1_N4MemberDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMembersRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"ownedMembersRaw",
            	              		lv_ownedMembersRaw_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4MemberDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop435;
                }
            } while (true);

            otherlv_2=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getMembersAccess().getRightCurlyBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleClassExtendsClause(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        EObject lv_superClassRef_1_0 = null;

        EObject this_ClassImplementsList_4 = null;

        EObject lv_superClassExpression_5_0 = null;

        EObject this_ClassImplementsList_7 = null;


         enterRule(); 
            
        try {
            {
            int alt439=2;
            int LA439_0 = input.LA(1);

            if ( (LA439_0==Extends) ) {
                alt439=1;
            }
            else if ( (LA439_0==Implements) ) {
                alt439=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 439, 0, input);

                throw nvae;
            }
            switch (alt439) {
                case 1 :
                    {
                    {
                    otherlv_0=(Token)match(input,Extends,FOLLOW_137); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getClassExtendsClauseAccess().getExtendsKeyword_0_0());
                          
                    }
                    int alt438=2;
                    int LA438_0 = input.LA(1);

                    if ( (LA438_0==Void) && (synpred279_InternalN4JSParser())) {
                        alt438=1;
                    }
                    else if ( (LA438_0==This) ) {
                        int LA438_2 = input.LA(2);

                        if ( (synpred279_InternalN4JSParser()) ) {
                            alt438=1;
                        }
                        else if ( (true) ) {
                            alt438=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 438, 2, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA438_0==Await) ) {
                        int LA438_3 = input.LA(2);

                        if ( (synpred279_InternalN4JSParser()) ) {
                            alt438=1;
                        }
                        else if ( (true) ) {
                            alt438=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 438, 3, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA438_0==Promisify) ) {
                        int LA438_4 = input.LA(2);

                        if ( (synpred279_InternalN4JSParser()) ) {
                            alt438=1;
                        }
                        else if ( (true) ) {
                            alt438=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 438, 4, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA438_0==Target) ) {
                        int LA438_5 = input.LA(2);

                        if ( (synpred279_InternalN4JSParser()) ) {
                            alt438=1;
                        }
                        else if ( (true) ) {
                            alt438=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 438, 5, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA438_0==RULE_IDENTIFIER) ) {
                        int LA438_6 = input.LA(2);

                        if ( (synpred279_InternalN4JSParser()) ) {
                            alt438=1;
                        }
                        else if ( (true) ) {
                            alt438=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 438, 6, input);

                            throw nvae;
                        }
                    }
                    else if ( ((LA438_0>=Intersection && LA438_0<=Implements)||(LA438_0>=Interface && LA438_0<=Abstract)||(LA438_0>=External && LA438_0<=Function)||(LA438_0>=Private && LA438_0<=Project)||LA438_0==Public||LA438_0==Static||LA438_0==Async||LA438_0==Class||(LA438_0>=False && LA438_0<=Super)||LA438_0==Union||LA438_0==Yield||(LA438_0>=From && LA438_0<=Type)||(LA438_0>=Get && LA438_0<=Set)||LA438_0==SolidusEqualsSign||LA438_0==As||LA438_0==Of||LA438_0==LeftParenthesis||LA438_0==Solidus||LA438_0==LessThanSign||(LA438_0>=CommercialAt && LA438_0<=LeftSquareBracket)||LA438_0==LeftCurlyBracket||LA438_0==RULE_DOUBLE||(LA438_0>=RULE_HEX_INT && LA438_0<=RULE_LEGACY_OCTAL_INT)||LA438_0==RULE_SCIENTIFIC_INT||LA438_0==RULE_STRING||(LA438_0>=RULE_TEMPLATE_HEAD && LA438_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA438_0==RULE_INT) ) {
                        alt438=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 438, 0, input);

                        throw nvae;
                    }
                    switch (alt438) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getSuperClassRefParameterizedTypeRefNominalParserRuleCall_0_1_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_138);
                            lv_superClassRef_1_0=ruleParameterizedTypeRefNominal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getClassExtendsClauseRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"superClassRef",
                                      		lv_superClassRef_1_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.ParameterizedTypeRefNominal");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt437=2;
                            int LA437_0 = input.LA(1);

                            if ( (LA437_0==Implements||LA437_0==Extends) ) {
                                alt437=1;
                            }
                            switch (alt437) {
                                case 1 :
                                    {
                                    int alt436=2;
                                    int LA436_0 = input.LA(1);

                                    if ( (LA436_0==Implements) ) {
                                        alt436=1;
                                    }
                                    else if ( (LA436_0==Extends) ) {
                                        alt436=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 436, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt436) {
                                        case 1 :
                                            {
                                            otherlv_2=(Token)match(input,Implements,FOLLOW_139); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_2, grammarAccess.getClassExtendsClauseAccess().getImplementsKeyword_0_1_0_1_0_0());
                                                  
                                            }

                                            }
                                            break;
                                        case 2 :
                                            {
                                            otherlv_3=(Token)match(input,Extends,FOLLOW_139); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_3, grammarAccess.getClassExtendsClauseAccess().getExtendsKeyword_0_1_0_1_0_1());
                                                  
                                            }

                                            }
                                            break;

                                    }

                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getClassExtendsClauseRule());
                                      		}
                                              newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getClassImplementsListParserRuleCall_0_1_0_1_1()); 
                                          
                                    }
                                    pushFollow(FOLLOW_2);
                                    this_ClassImplementsList_4=ruleClassImplementsList(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_ClassImplementsList_4;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getSuperClassExpressionLeftHandSideExpressionParserRuleCall_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_superClassExpression_5_0=ruleLeftHandSideExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getClassExtendsClauseRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"superClassExpression",
                                      		lv_superClassExpression_5_0, 
                                      		"eu.numberfour.n4js.N4JS.LeftHandSideExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    otherlv_6=(Token)match(input,Implements,FOLLOW_139); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getClassExtendsClauseAccess().getImplementsKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getClassExtendsClauseRule());
                      		}
                              newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getClassImplementsListParserRuleCall_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ClassImplementsList_7=ruleClassImplementsList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ClassImplementsList_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ClassExtendsClause(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        EObject lv_superClassRef_1_0 = null;

        EObject this_ClassImplementsList_4 = null;

        EObject lv_superClassExpression_5_0 = null;

        EObject this_ClassImplementsList_7 = null;


         enterRule(); 
            
        try {
            {
            int alt443=2;
            int LA443_0 = input.LA(1);

            if ( (LA443_0==Extends) ) {
                alt443=1;
            }
            else if ( (LA443_0==Implements) ) {
                alt443=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 443, 0, input);

                throw nvae;
            }
            switch (alt443) {
                case 1 :
                    {
                    {
                    otherlv_0=(Token)match(input,Extends,FOLLOW_137); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getClassExtendsClauseAccess().getExtendsKeyword_0_0());
                          
                    }
                    int alt442=2;
                    int LA442_0 = input.LA(1);

                    if ( (LA442_0==Void) && (synpred280_InternalN4JSParser())) {
                        alt442=1;
                    }
                    else if ( (LA442_0==This) ) {
                        int LA442_2 = input.LA(2);

                        if ( (synpred280_InternalN4JSParser()) ) {
                            alt442=1;
                        }
                        else if ( (true) ) {
                            alt442=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 442, 2, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA442_0==Await) ) {
                        int LA442_3 = input.LA(2);

                        if ( (synpred280_InternalN4JSParser()) ) {
                            alt442=1;
                        }
                        else if ( (true) ) {
                            alt442=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 442, 3, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA442_0==Promisify) ) {
                        int LA442_4 = input.LA(2);

                        if ( (synpred280_InternalN4JSParser()) ) {
                            alt442=1;
                        }
                        else if ( (true) ) {
                            alt442=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 442, 4, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA442_0==Target) ) {
                        int LA442_5 = input.LA(2);

                        if ( (synpred280_InternalN4JSParser()) ) {
                            alt442=1;
                        }
                        else if ( (true) ) {
                            alt442=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 442, 5, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA442_0==RULE_IDENTIFIER) ) {
                        int LA442_6 = input.LA(2);

                        if ( (synpred280_InternalN4JSParser()) ) {
                            alt442=1;
                        }
                        else if ( (true) ) {
                            alt442=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 442, 6, input);

                            throw nvae;
                        }
                    }
                    else if ( ((LA442_0>=Intersection && LA442_0<=Implements)||(LA442_0>=Interface && LA442_0<=Abstract)||(LA442_0>=External && LA442_0<=Function)||(LA442_0>=Private && LA442_0<=Project)||LA442_0==Public||LA442_0==Static||LA442_0==Async||LA442_0==Class||(LA442_0>=False && LA442_0<=Super)||LA442_0==Union||(LA442_0>=From && LA442_0<=Type)||(LA442_0>=Get && LA442_0<=Set)||LA442_0==SolidusEqualsSign||LA442_0==As||LA442_0==Of||LA442_0==LeftParenthesis||LA442_0==Solidus||LA442_0==LessThanSign||(LA442_0>=CommercialAt && LA442_0<=LeftSquareBracket)||LA442_0==LeftCurlyBracket||LA442_0==RULE_DOUBLE||(LA442_0>=RULE_HEX_INT && LA442_0<=RULE_LEGACY_OCTAL_INT)||LA442_0==RULE_SCIENTIFIC_INT||LA442_0==RULE_STRING||(LA442_0>=RULE_TEMPLATE_HEAD && LA442_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA442_0==RULE_INT) ) {
                        alt442=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 442, 0, input);

                        throw nvae;
                    }
                    switch (alt442) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getSuperClassRefParameterizedTypeRefNominalParserRuleCall_0_1_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_138);
                            lv_superClassRef_1_0=ruleParameterizedTypeRefNominal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getClassExtendsClauseRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"superClassRef",
                                      		lv_superClassRef_1_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.ParameterizedTypeRefNominal");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt441=2;
                            int LA441_0 = input.LA(1);

                            if ( (LA441_0==Implements||LA441_0==Extends) ) {
                                alt441=1;
                            }
                            switch (alt441) {
                                case 1 :
                                    {
                                    int alt440=2;
                                    int LA440_0 = input.LA(1);

                                    if ( (LA440_0==Implements) ) {
                                        alt440=1;
                                    }
                                    else if ( (LA440_0==Extends) ) {
                                        alt440=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 440, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt440) {
                                        case 1 :
                                            {
                                            otherlv_2=(Token)match(input,Implements,FOLLOW_139); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_2, grammarAccess.getClassExtendsClauseAccess().getImplementsKeyword_0_1_0_1_0_0());
                                                  
                                            }

                                            }
                                            break;
                                        case 2 :
                                            {
                                            otherlv_3=(Token)match(input,Extends,FOLLOW_139); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_3, grammarAccess.getClassExtendsClauseAccess().getExtendsKeyword_0_1_0_1_0_1());
                                                  
                                            }

                                            }
                                            break;

                                    }

                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getClassExtendsClauseRule());
                                      		}
                                              newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getClassImplementsListParserRuleCall_0_1_0_1_1()); 
                                          
                                    }
                                    pushFollow(FOLLOW_2);
                                    this_ClassImplementsList_4=ruleClassImplementsList(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_ClassImplementsList_4;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getSuperClassExpressionLeftHandSideExpressionParserRuleCall_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_superClassExpression_5_0=norm1_LeftHandSideExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getClassExtendsClauseRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"superClassExpression",
                                      		lv_superClassExpression_5_0, 
                                      		"eu.numberfour.n4js.N4JS.LeftHandSideExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    otherlv_6=(Token)match(input,Implements,FOLLOW_139); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getClassExtendsClauseAccess().getImplementsKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getClassExtendsClauseRule());
                      		}
                              newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getClassImplementsListParserRuleCall_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ClassImplementsList_7=ruleClassImplementsList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ClassImplementsList_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleClassImplementsList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        EObject lv_implementedInterfaceRefs_0_0 = null;

        EObject lv_implementedInterfaceRefs_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getClassImplementsListAccess().getImplementedInterfaceRefsParameterizedTypeRefNominalParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_140);
            lv_implementedInterfaceRefs_0_0=ruleParameterizedTypeRefNominal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getClassImplementsListRule());
              	        }
                     		add(
                     			current, 
                     			"implementedInterfaceRefs",
                      		lv_implementedInterfaceRefs_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.ParameterizedTypeRefNominal");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop445:
            do {
                int alt445=2;
                int LA445_0 = input.LA(1);

                if ( (LA445_0==Implements||LA445_0==Extends||LA445_0==Comma) ) {
                    alt445=1;
                }


                switch (alt445) {
            	case 1 :
            	    {
            	    int alt444=3;
            	    switch ( input.LA(1) ) {
            	    case Comma:
            	        {
            	        alt444=1;
            	        }
            	        break;
            	    case Implements:
            	        {
            	        alt444=2;
            	        }
            	        break;
            	    case Extends:
            	        {
            	        alt444=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 444, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt444) {
            	        case 1 :
            	            {
            	            otherlv_1=(Token)match(input,Comma,FOLLOW_139); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_1, grammarAccess.getClassImplementsListAccess().getCommaKeyword_1_0_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            {
            	            otherlv_2=(Token)match(input,Implements,FOLLOW_139); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_2, grammarAccess.getClassImplementsListAccess().getImplementsKeyword_1_0_1());
            	                  
            	            }

            	            }
            	            break;
            	        case 3 :
            	            {
            	            otherlv_3=(Token)match(input,Extends,FOLLOW_139); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_3, grammarAccess.getClassImplementsListAccess().getExtendsKeyword_1_0_2());
            	                  
            	            }

            	            }
            	            break;

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getClassImplementsListAccess().getImplementedInterfaceRefsParameterizedTypeRefNominalParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_140);
            	    lv_implementedInterfaceRefs_4_0=ruleParameterizedTypeRefNominal();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getClassImplementsListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"implementedInterfaceRefs",
            	              		lv_implementedInterfaceRefs_4_0, 
            	              		"eu.numberfour.n4js.ts.TypeExpressions.ParameterizedTypeRefNominal");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop445;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4ClassExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4ClassExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4ClassExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4ClassExpression=ruleN4ClassExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4ClassExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4ClassExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject this_ClassExtendsClause_3 = null;

        EObject this_Members_4 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4ClassExpressionAccess().getN4ClassExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Class,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getN4ClassExpressionAccess().getClassKeyword_1());
                  
            }
            int alt446=2;
            int LA446_0 = input.LA(1);

            if ( ((LA446_0>=Intersection && LA446_0<=Constructor)||(LA446_0>=Promisify && LA446_0<=Abstract)||LA446_0==External||(LA446_0>=Private && LA446_0<=Project)||LA446_0==Public||LA446_0==Static||LA446_0==Target||(LA446_0>=Async && LA446_0<=Await)||LA446_0==Union||(LA446_0>=Yield && LA446_0<=This)||LA446_0==From||LA446_0==Type||(LA446_0>=Get && LA446_0<=Let)||(LA446_0>=Out && LA446_0<=Set)||LA446_0==As||LA446_0==Of||LA446_0==RULE_IDENTIFIER) ) {
                alt446=1;
            }
            else if ( (LA446_0==Implements) ) {
                int LA446_2 = input.LA(2);

                if ( (LA446_2==Implements||LA446_2==Extends||LA446_2==LeftCurlyBracket) ) {
                    alt446=1;
                }
            }
            switch (alt446) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4ClassExpressionAccess().getNameBindingIdentifierParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_10);
                    lv_name_2_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4ClassExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt447=2;
            int LA447_0 = input.LA(1);

            if ( (LA447_0==Implements||LA447_0==Extends) ) {
                alt447=1;
            }
            switch (alt447) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4ClassExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getN4ClassExpressionAccess().getClassExtendsClauseParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_10);
                    this_ClassExtendsClause_3=ruleClassExtendsClause(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ClassExtendsClause_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4ClassExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getN4ClassExpressionAccess().getMembersParserRuleCall_4()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_Members_4=ruleMembers(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_Members_4;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4ClassExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject this_ClassExtendsClause_3 = null;

        EObject this_Members_4 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4ClassExpressionAccess().getN4ClassExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Class,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getN4ClassExpressionAccess().getClassKeyword_1());
                  
            }
            int alt448=2;
            int LA448_0 = input.LA(1);

            if ( ((LA448_0>=Intersection && LA448_0<=Constructor)||(LA448_0>=Promisify && LA448_0<=Abstract)||LA448_0==External||(LA448_0>=Private && LA448_0<=Project)||LA448_0==Public||LA448_0==Static||LA448_0==Target||(LA448_0>=Async && LA448_0<=Await)||LA448_0==Union||LA448_0==This||LA448_0==From||LA448_0==Type||(LA448_0>=Get && LA448_0<=Let)||(LA448_0>=Out && LA448_0<=Set)||LA448_0==As||LA448_0==Of||LA448_0==RULE_IDENTIFIER) ) {
                alt448=1;
            }
            else if ( (LA448_0==Implements) ) {
                int LA448_2 = input.LA(2);

                if ( (LA448_2==Implements||LA448_2==Extends||LA448_2==LeftCurlyBracket) ) {
                    alt448=1;
                }
            }
            switch (alt448) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4ClassExpressionAccess().getNameBindingIdentifierParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_58);
                    lv_name_2_0=norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4ClassExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt449=2;
            int LA449_0 = input.LA(1);

            if ( (LA449_0==Implements||LA449_0==Extends) ) {
                alt449=1;
            }
            switch (alt449) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4ClassExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getN4ClassExpressionAccess().getClassExtendsClauseParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_58);
                    this_ClassExtendsClause_3=norm1_ClassExtendsClause(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ClassExtendsClause_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4ClassExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getN4ClassExpressionAccess().getMembersParserRuleCall_4()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_Members_4=norm1_Members(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_Members_4;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4InterfaceDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4InterfaceDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4InterfaceDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4InterfaceDeclaration=ruleN4InterfaceDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4InterfaceDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4InterfaceDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        AntlrDatatypeRuleToken lv_typingStrategy_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        EObject this_TypeVariables_5 = null;

        EObject this_InterfaceImplementsList_6 = null;

        EObject this_Members_7 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4InterfaceDeclarationAccess().getN4InterfaceDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop450:
            do {
                int alt450=2;
                int LA450_0 = input.LA(1);

                if ( ((LA450_0>=Protected && LA450_0<=Abstract)||LA450_0==External||(LA450_0>=Private && LA450_0<=Project)||LA450_0==Public||LA450_0==Static||LA450_0==Const) ) {
                    alt450=1;
                }


                switch (alt450) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4InterfaceDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4InterfaceDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop450;
                }
            } while (true);

            otherlv_2=(Token)match(input,Interface,FOLLOW_136); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getN4InterfaceDeclarationAccess().getInterfaceKeyword_0_0_2());
                  
            }
            int alt451=2;
            int LA451_0 = input.LA(1);

            if ( (LA451_0==Tilde) ) {
                alt451=1;
            }
            switch (alt451) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4InterfaceDeclarationAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_57);
                    lv_typingStrategy_3_0=ruleTypingStrategyDefSiteOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4InterfaceDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"typingStrategy",
                              		lv_typingStrategy_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyDefSiteOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt452=2;
            int LA452_0 = input.LA(1);

            if ( ((LA452_0>=Intersection && LA452_0<=Constructor)||(LA452_0>=Promisify && LA452_0<=Abstract)||LA452_0==External||(LA452_0>=Private && LA452_0<=Project)||LA452_0==Public||LA452_0==Static||LA452_0==Target||(LA452_0>=Async && LA452_0<=Await)||LA452_0==Union||(LA452_0>=Yield && LA452_0<=This)||LA452_0==From||LA452_0==Type||(LA452_0>=Get && LA452_0<=Let)||(LA452_0>=Out && LA452_0<=Set)||LA452_0==As||LA452_0==Of||LA452_0==RULE_IDENTIFIER) ) {
                alt452=1;
            }
            else if ( (LA452_0==Implements) ) {
                int LA452_2 = input.LA(2);

                if ( (LA452_2==Implements||LA452_2==Extends||LA452_2==LessThanSign||LA452_2==LeftCurlyBracket) ) {
                    alt452=1;
                }
            }
            switch (alt452) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4InterfaceDeclarationAccess().getNameBindingIdentifierParserRuleCall_0_0_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_10);
                    lv_name_4_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4InterfaceDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }
            int alt453=2;
            int LA453_0 = input.LA(1);

            if ( (LA453_0==LessThanSign) ) {
                alt453=1;
            }
            switch (alt453) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4InterfaceDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4InterfaceDeclarationAccess().getTypeVariablesParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_10);
                    this_TypeVariables_5=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt454=2;
            int LA454_0 = input.LA(1);

            if ( (LA454_0==Implements||LA454_0==Extends) ) {
                alt454=1;
            }
            switch (alt454) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4InterfaceDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4InterfaceDeclarationAccess().getInterfaceImplementsListParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_10);
                    this_InterfaceImplementsList_6=ruleInterfaceImplementsList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_InterfaceImplementsList_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4InterfaceDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4InterfaceDeclarationAccess().getMembersParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_Members_7=ruleMembers(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_Members_7;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleInterfaceImplementsList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_superInterfaceRefs_2_0 = null;

        EObject lv_superInterfaceRefs_6_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt455=2;
            int LA455_0 = input.LA(1);

            if ( (LA455_0==Extends) ) {
                alt455=1;
            }
            else if ( (LA455_0==Implements) ) {
                alt455=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 455, 0, input);

                throw nvae;
            }
            switch (alt455) {
                case 1 :
                    {
                    otherlv_0=(Token)match(input,Extends,FOLLOW_139); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getInterfaceImplementsListAccess().getExtendsKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    otherlv_1=(Token)match(input,Implements,FOLLOW_139); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getInterfaceImplementsListAccess().getImplementsKeyword_0_1());
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInterfaceImplementsListAccess().getSuperInterfaceRefsParameterizedTypeRefNominalParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_140);
            lv_superInterfaceRefs_2_0=ruleParameterizedTypeRefNominal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInterfaceImplementsListRule());
              	        }
                     		add(
                     			current, 
                     			"superInterfaceRefs",
                      		lv_superInterfaceRefs_2_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.ParameterizedTypeRefNominal");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop457:
            do {
                int alt457=2;
                int LA457_0 = input.LA(1);

                if ( (LA457_0==Implements||LA457_0==Extends||LA457_0==Comma) ) {
                    alt457=1;
                }


                switch (alt457) {
            	case 1 :
            	    {
            	    int alt456=3;
            	    switch ( input.LA(1) ) {
            	    case Comma:
            	        {
            	        alt456=1;
            	        }
            	        break;
            	    case Implements:
            	        {
            	        alt456=2;
            	        }
            	        break;
            	    case Extends:
            	        {
            	        alt456=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 456, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt456) {
            	        case 1 :
            	            {
            	            otherlv_3=(Token)match(input,Comma,FOLLOW_139); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_3, grammarAccess.getInterfaceImplementsListAccess().getCommaKeyword_2_0_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            {
            	            otherlv_4=(Token)match(input,Implements,FOLLOW_139); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_4, grammarAccess.getInterfaceImplementsListAccess().getImplementsKeyword_2_0_1());
            	                  
            	            }

            	            }
            	            break;
            	        case 3 :
            	            {
            	            otherlv_5=(Token)match(input,Extends,FOLLOW_139); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_5, grammarAccess.getInterfaceImplementsListAccess().getExtendsKeyword_2_0_2());
            	                  
            	            }

            	            }
            	            break;

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getInterfaceImplementsListAccess().getSuperInterfaceRefsParameterizedTypeRefNominalParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_140);
            	    lv_superInterfaceRefs_6_0=ruleParameterizedTypeRefNominal();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getInterfaceImplementsListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"superInterfaceRefs",
            	              		lv_superInterfaceRefs_6_0, 
            	              		"eu.numberfour.n4js.ts.TypeExpressions.ParameterizedTypeRefNominal");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop457;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4EnumDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4EnumDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4EnumDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4EnumDeclaration=ruleN4EnumDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4EnumDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4EnumDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_literals_5_0 = null;

        EObject lv_literals_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4EnumDeclarationAccess().getN4EnumDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop458:
            do {
                int alt458=2;
                int LA458_0 = input.LA(1);

                if ( ((LA458_0>=Protected && LA458_0<=Abstract)||LA458_0==External||(LA458_0>=Private && LA458_0<=Project)||LA458_0==Public||LA458_0==Static||LA458_0==Const) ) {
                    alt458=1;
                }


                switch (alt458) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4EnumDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_12);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4EnumDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop458;
                }
            } while (true);

            otherlv_2=(Token)match(input,Enum,FOLLOW_141); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getN4EnumDeclarationAccess().getEnumKeyword_0_0_2());
                  
            }
            int alt459=2;
            int LA459_0 = input.LA(1);

            if ( ((LA459_0>=Intersection && LA459_0<=Implements)||(LA459_0>=Promisify && LA459_0<=Abstract)||LA459_0==External||(LA459_0>=Private && LA459_0<=Project)||LA459_0==Public||LA459_0==Static||LA459_0==Target||(LA459_0>=Async && LA459_0<=Await)||LA459_0==Union||(LA459_0>=Yield && LA459_0<=This)||LA459_0==From||LA459_0==Type||(LA459_0>=Get && LA459_0<=Let)||(LA459_0>=Out && LA459_0<=Set)||LA459_0==As||LA459_0==Of||LA459_0==RULE_IDENTIFIER) ) {
                alt459=1;
            }
            switch (alt459) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4EnumDeclarationAccess().getNameBindingIdentifierParserRuleCall_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_13);
                    lv_name_3_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4EnumDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            otherlv_4=(Token)match(input,LeftCurlyBracket,FOLLOW_142); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getN4EnumDeclarationAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            int alt461=2;
            int LA461_0 = input.LA(1);

            if ( (LA461_0==Promisify||LA461_0==Target||LA461_0==This||LA461_0==RULE_IDENTIFIER) ) {
                alt461=1;
            }
            switch (alt461) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4EnumDeclarationAccess().getLiteralsN4EnumLiteralParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_15);
                    lv_literals_5_0=ruleN4EnumLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4EnumDeclarationRule());
                      	        }
                             		add(
                             			current, 
                             			"literals",
                              		lv_literals_5_0, 
                              		"eu.numberfour.n4js.N4JS.N4EnumLiteral");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop460:
                    do {
                        int alt460=2;
                        int LA460_0 = input.LA(1);

                        if ( (LA460_0==Comma) ) {
                            alt460=1;
                        }


                        switch (alt460) {
                    	case 1 :
                    	    {
                    	    otherlv_6=(Token)match(input,Comma,FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getN4EnumDeclarationAccess().getCommaKeyword_2_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getN4EnumDeclarationAccess().getLiteralsN4EnumLiteralParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_literals_7_0=ruleN4EnumLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getN4EnumDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"literals",
                    	              		lv_literals_7_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4EnumLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop460;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getN4EnumDeclarationAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4EnumLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4EnumLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4EnumLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4EnumLiteral=ruleN4EnumLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4EnumLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4EnumLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_value_2_0=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getN4EnumLiteralAccess().getNameIdentifierOrThisParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_43);
            lv_name_0_0=ruleIdentifierOrThis();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getN4EnumLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierOrThis");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt462=2;
            int LA462_0 = input.LA(1);

            if ( (LA462_0==Colon) ) {
                alt462=1;
            }
            switch (alt462) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Colon,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getN4EnumLiteralAccess().getColonKeyword_1_0());
                          
                    }
                    {
                    {
                    lv_value_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_2_0, grammarAccess.getN4EnumLiteralAccess().getValueSTRINGTerminalRuleCall_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getN4EnumLiteralRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_2_0, 
                              		"eu.numberfour.n4js.N4JS.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4MemberDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4MemberDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4MemberDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4MemberDeclaration=ruleN4MemberDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4MemberDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4MemberDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedN4MemberDeclaration_0 = null;

        EObject this_N4GetterDeclaration_1 = null;

        EObject this_N4SetterDeclaration_2 = null;

        EObject this_N4MethodDeclaration_3 = null;

        EObject this_N4FieldDeclaration_4 = null;

        EObject this_N4CallableConstructorDeclaration_5 = null;


         enterRule(); 
            
        try {
            {
            int alt463=6;
            alt463 = dfa463.predict(input);
            switch (alt463) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getAnnotatedN4MemberDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedN4MemberDeclaration_0=ruleAnnotatedN4MemberDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedN4MemberDeclaration_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4GetterDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4GetterDeclaration_1=ruleN4GetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4GetterDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4SetterDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4SetterDeclaration_2=ruleN4SetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4SetterDeclaration_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4MethodDeclarationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4MethodDeclaration_3=ruleN4MethodDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4MethodDeclaration_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4FieldDeclarationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4FieldDeclaration_4=ruleN4FieldDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4FieldDeclaration_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4CallableConstructorDeclarationParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4CallableConstructorDeclaration_5=ruleN4CallableConstructorDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4CallableConstructorDeclaration_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4MemberDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedN4MemberDeclaration_0 = null;

        EObject this_N4GetterDeclaration_1 = null;

        EObject this_N4SetterDeclaration_2 = null;

        EObject this_N4MethodDeclaration_3 = null;

        EObject this_N4FieldDeclaration_4 = null;

        EObject this_N4CallableConstructorDeclaration_5 = null;


         enterRule(); 
            
        try {
            {
            int alt464=6;
            alt464 = dfa464.predict(input);
            switch (alt464) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getAnnotatedN4MemberDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedN4MemberDeclaration_0=norm1_AnnotatedN4MemberDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedN4MemberDeclaration_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4GetterDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4GetterDeclaration_1=norm1_N4GetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4GetterDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4SetterDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4SetterDeclaration_2=norm1_N4SetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4SetterDeclaration_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4MethodDeclarationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4MethodDeclaration_3=norm1_N4MethodDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4MethodDeclaration_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4FieldDeclarationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4FieldDeclaration_4=norm1_N4FieldDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4FieldDeclaration_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4CallableConstructorDeclarationParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4CallableConstructorDeclaration_5=norm1_N4CallableConstructorDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4CallableConstructorDeclaration_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotatedN4MemberDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedN4MemberDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedN4MemberDeclaration=ruleAnnotatedN4MemberDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedN4MemberDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotatedN4MemberDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token lv_generator_19_0=null;
        Token otherlv_25=null;
        EObject this_N4MemberAnnotationList_0 = null;

        Enumerator lv_declaredModifiers_2_0 = null;

        EObject this_GetterHeader_3 = null;

        EObject lv_body_4_0 = null;

        Enumerator lv_declaredModifiers_7_0 = null;

        EObject lv_declaredName_9_0 = null;

        EObject lv_fpar_11_0 = null;

        EObject lv_body_13_0 = null;

        Enumerator lv_declaredModifiers_16_0 = null;

        EObject this_TypeVariables_17 = null;

        EObject this_BogusTypeRefFragment_18 = null;

        EObject lv_declaredName_20_0 = null;

        EObject this_MethodParamsReturnAndBody_21 = null;

        EObject this_AsyncNoTrailingLineBreak_22 = null;

        EObject lv_declaredName_23_0 = null;

        EObject this_MethodParamsReturnAndBody_24 = null;

        EObject this_FieldDeclarationImpl_27 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4MemberAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_143);
            this_N4MemberAnnotationList_0=ruleN4MemberAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_N4MemberAnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt476=4;
            alt476 = dfa476.predict(input);
            switch (alt476) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4GetterDeclarationAnnotationListAction_1_0_0_0_0(),
                                  current);
                          
                    }

                    }
                    loop465:
                    do {
                        int alt465=2;
                        int LA465_0 = input.LA(1);

                        if ( ((LA465_0>=Protected && LA465_0<=Abstract)||LA465_0==External||(LA465_0>=Private && LA465_0<=Project)||LA465_0==Public||LA465_0==Static||LA465_0==Const) ) {
                            alt465=1;
                        }


                        switch (alt465) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_0_0_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_144);
                    	    lv_declaredModifiers_2_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_2_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop465;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getGetterHeaderParserRuleCall_1_0_0_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_145);
                    this_GetterHeader_3=ruleGetterHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_GetterHeader_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    int alt466=2;
                    alt466 = dfa466.predict(input);
                    switch (alt466) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getBodyBlockParserRuleCall_1_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_95);
                            lv_body_4_0=ruleBlock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"body",
                                      		lv_body_4_0, 
                                      		"eu.numberfour.n4js.N4JS.Block");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt467=2;
                    int LA467_0 = input.LA(1);

                    if ( (LA467_0==Semicolon) ) {
                        alt467=1;
                    }
                    switch (alt467) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSemicolonKeyword_1_0_2());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4SetterDeclarationAnnotationListAction_1_1_0_0_0(),
                                  current);
                          
                    }

                    }
                    loop468:
                    do {
                        int alt468=2;
                        int LA468_0 = input.LA(1);

                        if ( ((LA468_0>=Protected && LA468_0<=Abstract)||LA468_0==External||(LA468_0>=Private && LA468_0<=Project)||LA468_0==Public||LA468_0==Static||LA468_0==Const) ) {
                            alt468=1;
                        }


                        switch (alt468) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_1_0_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_146);
                    	    lv_declaredModifiers_7_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_7_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop468;
                        }
                    } while (true);

                    otherlv_8=(Token)match(input,Set,FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSetKeyword_1_1_0_0_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_1_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_53);
                    lv_declaredName_9_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_9_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }

                    otherlv_10=(Token)match(input,LeftParenthesis,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getLeftParenthesisKeyword_1_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getFparFormalParameterParserRuleCall_1_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_66);
                    lv_fpar_11_0=ruleFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"fpar",
                              		lv_fpar_11_0, 
                              		"eu.numberfour.n4js.N4JS.FormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,RightParenthesis,FOLLOW_145); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getRightParenthesisKeyword_1_1_3());
                          
                    }
                    int alt469=2;
                    alt469 = dfa469.predict(input);
                    switch (alt469) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getBodyBlockParserRuleCall_1_1_4_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_95);
                            lv_body_13_0=ruleBlock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"body",
                                      		lv_body_13_0, 
                                      		"eu.numberfour.n4js.N4JS.Block");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt470=2;
                    int LA470_0 = input.LA(1);

                    if ( (LA470_0==Semicolon) ) {
                        alt470=1;
                    }
                    switch (alt470) {
                        case 1 :
                            {
                            otherlv_14=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSemicolonKeyword_1_1_5());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4MethodDeclarationAnnotationListAction_1_2_0_0_0(),
                                  current);
                          
                    }

                    }
                    loop471:
                    do {
                        int alt471=2;
                        alt471 = dfa471.predict(input);
                        switch (alt471) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_2_0_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_143);
                    	    lv_declaredModifiers_16_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_16_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop471;
                        }
                    } while (true);
                    int alt472=2;
                    int LA472_0 = input.LA(1);

                    if ( (LA472_0==LessThanSign) ) {
                        alt472=1;
                    }
                    switch (alt472) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getTypeVariablesParserRuleCall_1_2_0_0_2()); 
                                  
                            }
                            pushFollow(FOLLOW_94);
                            this_TypeVariables_17=ruleTypeVariables(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_TypeVariables_17;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt473=2;
                    alt473 = dfa473.predict(input);
                    switch (alt473) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getBogusTypeRefFragmentParserRuleCall_1_2_0_0_3()); 
                                  
                            }
                            pushFollow(FOLLOW_94);
                            this_BogusTypeRefFragment_18=ruleBogusTypeRefFragment(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_BogusTypeRefFragment_18;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt474=2;
                    int LA474_0 = input.LA(1);

                    if ( (LA474_0==Asterisk) ) {
                        alt474=1;
                    }
                    else if ( ((LA474_0>=Intersection && LA474_0<=With)||(LA474_0>=For && LA474_0<=Var)||(LA474_0>=As && LA474_0<=Of)||LA474_0==LeftSquareBracket||LA474_0==RULE_DOUBLE||LA474_0==RULE_HEX_INT||LA474_0==RULE_OCTAL_INT||LA474_0==RULE_SCIENTIFIC_INT||LA474_0==RULE_IDENTIFIER||LA474_0==RULE_STRING||LA474_0==RULE_INT) ) {
                        alt474=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 474, 0, input);

                        throw nvae;
                    }
                    switch (alt474) {
                        case 1 :
                            {
                            {
                            {
                            {
                            lv_generator_19_0=(Token)match(input,Asterisk,FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_generator_19_0, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getGeneratorAsteriskKeyword_1_2_0_0_4_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "generator", true, "*");
                              	    
                            }

                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_2_0_0_4_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_42);
                            lv_declaredName_20_0=ruleLiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_20_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_1_2_0_0_4_0_2()); 
                                  
                            }
                            pushFollow(FOLLOW_95);
                            this_MethodParamsReturnAndBody_21=norm1_MethodParamsReturnAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsReturnAndBody_21;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_1_2_0_0_4_1_0()); 
                                  
                            }
                            pushFollow(FOLLOW_93);
                            this_AsyncNoTrailingLineBreak_22=ruleAsyncNoTrailingLineBreak(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_AsyncNoTrailingLineBreak_22;
                                      afterParserOrEnumRuleCall();
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_2_0_0_4_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_91);
                            lv_declaredName_23_0=ruleLiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_23_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_1_2_0_0_4_1_2()); 
                                  
                            }
                            pushFollow(FOLLOW_95);
                            this_MethodParamsReturnAndBody_24=ruleMethodParamsReturnAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsReturnAndBody_24;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    int alt475=2;
                    int LA475_0 = input.LA(1);

                    if ( (LA475_0==Semicolon) ) {
                        alt475=1;
                    }
                    switch (alt475) {
                        case 1 :
                            {
                            otherlv_25=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_25, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSemicolonKeyword_1_2_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4FieldDeclarationAnnotationListAction_1_3_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getFieldDeclarationImplParserRuleCall_1_3_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FieldDeclarationImpl_27=ruleFieldDeclarationImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FieldDeclarationImpl_27;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AnnotatedN4MemberDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token lv_generator_19_0=null;
        Token otherlv_25=null;
        EObject this_N4MemberAnnotationList_0 = null;

        Enumerator lv_declaredModifiers_2_0 = null;

        EObject this_GetterHeader_3 = null;

        EObject lv_body_4_0 = null;

        Enumerator lv_declaredModifiers_7_0 = null;

        EObject lv_declaredName_9_0 = null;

        EObject lv_fpar_11_0 = null;

        EObject lv_body_13_0 = null;

        Enumerator lv_declaredModifiers_16_0 = null;

        EObject this_TypeVariables_17 = null;

        EObject this_BogusTypeRefFragment_18 = null;

        EObject lv_declaredName_20_0 = null;

        EObject this_MethodParamsReturnAndBody_21 = null;

        EObject this_AsyncNoTrailingLineBreak_22 = null;

        EObject lv_declaredName_23_0 = null;

        EObject this_MethodParamsReturnAndBody_24 = null;

        EObject this_FieldDeclarationImpl_27 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4MemberAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_143);
            this_N4MemberAnnotationList_0=ruleN4MemberAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_N4MemberAnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt488=4;
            alt488 = dfa488.predict(input);
            switch (alt488) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4GetterDeclarationAnnotationListAction_1_0_0_0_0(),
                                  current);
                          
                    }

                    }
                    loop477:
                    do {
                        int alt477=2;
                        int LA477_0 = input.LA(1);

                        if ( ((LA477_0>=Protected && LA477_0<=Abstract)||LA477_0==External||(LA477_0>=Private && LA477_0<=Project)||LA477_0==Public||LA477_0==Static||LA477_0==Const) ) {
                            alt477=1;
                        }


                        switch (alt477) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_0_0_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_144);
                    	    lv_declaredModifiers_2_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_2_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop477;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getGetterHeaderParserRuleCall_1_0_0_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_145);
                    this_GetterHeader_3=norm1_GetterHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_GetterHeader_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    int alt478=2;
                    alt478 = dfa478.predict(input);
                    switch (alt478) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getBodyBlockParserRuleCall_1_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_95);
                            lv_body_4_0=norm1_Block();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"body",
                                      		lv_body_4_0, 
                                      		"eu.numberfour.n4js.N4JS.Block");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt479=2;
                    int LA479_0 = input.LA(1);

                    if ( (LA479_0==Semicolon) ) {
                        alt479=1;
                    }
                    switch (alt479) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSemicolonKeyword_1_0_2());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4SetterDeclarationAnnotationListAction_1_1_0_0_0(),
                                  current);
                          
                    }

                    }
                    loop480:
                    do {
                        int alt480=2;
                        int LA480_0 = input.LA(1);

                        if ( ((LA480_0>=Protected && LA480_0<=Abstract)||LA480_0==External||(LA480_0>=Private && LA480_0<=Project)||LA480_0==Public||LA480_0==Static||LA480_0==Const) ) {
                            alt480=1;
                        }


                        switch (alt480) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_1_0_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_146);
                    	    lv_declaredModifiers_7_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_7_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop480;
                        }
                    } while (true);

                    otherlv_8=(Token)match(input,Set,FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSetKeyword_1_1_0_0_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_1_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_53);
                    lv_declaredName_9_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_9_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }

                    otherlv_10=(Token)match(input,LeftParenthesis,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getLeftParenthesisKeyword_1_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getFparFormalParameterParserRuleCall_1_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_66);
                    lv_fpar_11_0=norm1_FormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"fpar",
                              		lv_fpar_11_0, 
                              		"eu.numberfour.n4js.N4JS.FormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,RightParenthesis,FOLLOW_145); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getRightParenthesisKeyword_1_1_3());
                          
                    }
                    int alt481=2;
                    alt481 = dfa481.predict(input);
                    switch (alt481) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getBodyBlockParserRuleCall_1_1_4_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_95);
                            lv_body_13_0=norm1_Block();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"body",
                                      		lv_body_13_0, 
                                      		"eu.numberfour.n4js.N4JS.Block");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt482=2;
                    int LA482_0 = input.LA(1);

                    if ( (LA482_0==Semicolon) ) {
                        alt482=1;
                    }
                    switch (alt482) {
                        case 1 :
                            {
                            otherlv_14=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSemicolonKeyword_1_1_5());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4MethodDeclarationAnnotationListAction_1_2_0_0_0(),
                                  current);
                          
                    }

                    }
                    loop483:
                    do {
                        int alt483=2;
                        alt483 = dfa483.predict(input);
                        switch (alt483) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_2_0_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_143);
                    	    lv_declaredModifiers_16_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_16_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop483;
                        }
                    } while (true);
                    int alt484=2;
                    int LA484_0 = input.LA(1);

                    if ( (LA484_0==LessThanSign) ) {
                        alt484=1;
                    }
                    switch (alt484) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getTypeVariablesParserRuleCall_1_2_0_0_2()); 
                                  
                            }
                            pushFollow(FOLLOW_94);
                            this_TypeVariables_17=ruleTypeVariables(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_TypeVariables_17;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt485=2;
                    alt485 = dfa485.predict(input);
                    switch (alt485) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getBogusTypeRefFragmentParserRuleCall_1_2_0_0_3()); 
                                  
                            }
                            pushFollow(FOLLOW_94);
                            this_BogusTypeRefFragment_18=ruleBogusTypeRefFragment(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_BogusTypeRefFragment_18;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt486=2;
                    int LA486_0 = input.LA(1);

                    if ( (LA486_0==Asterisk) ) {
                        alt486=1;
                    }
                    else if ( ((LA486_0>=Intersection && LA486_0<=With)||(LA486_0>=For && LA486_0<=Var)||(LA486_0>=As && LA486_0<=Of)||LA486_0==LeftSquareBracket||LA486_0==RULE_DOUBLE||LA486_0==RULE_HEX_INT||LA486_0==RULE_OCTAL_INT||LA486_0==RULE_SCIENTIFIC_INT||LA486_0==RULE_IDENTIFIER||LA486_0==RULE_STRING||LA486_0==RULE_INT) ) {
                        alt486=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 486, 0, input);

                        throw nvae;
                    }
                    switch (alt486) {
                        case 1 :
                            {
                            {
                            {
                            {
                            lv_generator_19_0=(Token)match(input,Asterisk,FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_generator_19_0, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getGeneratorAsteriskKeyword_1_2_0_0_4_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "generator", true, "*");
                              	    
                            }

                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_2_0_0_4_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_42);
                            lv_declaredName_20_0=norm1_LiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_20_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_1_2_0_0_4_0_2()); 
                                  
                            }
                            pushFollow(FOLLOW_95);
                            this_MethodParamsReturnAndBody_21=norm1_MethodParamsReturnAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsReturnAndBody_21;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_1_2_0_0_4_1_0()); 
                                  
                            }
                            pushFollow(FOLLOW_93);
                            this_AsyncNoTrailingLineBreak_22=ruleAsyncNoTrailingLineBreak(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_AsyncNoTrailingLineBreak_22;
                                      afterParserOrEnumRuleCall();
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_2_0_0_4_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_91);
                            lv_declaredName_23_0=norm1_LiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_23_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_1_2_0_0_4_1_2()); 
                                  
                            }
                            pushFollow(FOLLOW_95);
                            this_MethodParamsReturnAndBody_24=ruleMethodParamsReturnAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsReturnAndBody_24;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    int alt487=2;
                    int LA487_0 = input.LA(1);

                    if ( (LA487_0==Semicolon) ) {
                        alt487=1;
                    }
                    switch (alt487) {
                        case 1 :
                            {
                            otherlv_25=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_25, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSemicolonKeyword_1_2_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4FieldDeclarationAnnotationListAction_1_3_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getFieldDeclarationImplParserRuleCall_1_3_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FieldDeclarationImpl_27=norm1_FieldDeclarationImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FieldDeclarationImpl_27;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFieldDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_4=null;
        Enumerator lv_declaredModifiers_0_0 = null;

        EObject this_BogusTypeRefFragment_1 = null;

        EObject lv_declaredName_2_0 = null;

        EObject this_ColonSepTypeRef_3 = null;

        EObject lv_expression_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop489:
            do {
                int alt489=2;
                alt489 = dfa489.predict(input);
                switch (alt489) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_93);
            	    lv_declaredModifiers_0_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getFieldDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_0_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop489;
                }
            } while (true);
            int alt490=2;
            alt490 = dfa490.predict(input);
            switch (alt490) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFieldDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getBogusTypeRefFragmentParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_93);
                    this_BogusTypeRefFragment_1=ruleBogusTypeRefFragment(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BogusTypeRefFragment_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_147);
            lv_declaredName_2_0=ruleLiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFieldDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt491=2;
            int LA491_0 = input.LA(1);

            if ( (LA491_0==Colon) ) {
                alt491=1;
            }
            switch (alt491) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFieldDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getColonSepTypeRefParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_148);
                    this_ColonSepTypeRef_3=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt492=2;
            int LA492_0 = input.LA(1);

            if ( (LA492_0==EqualsSign) ) {
                alt492=1;
            }
            switch (alt492) {
                case 1 :
                    {
                    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getFieldDeclarationImplAccess().getEqualsSignKeyword_4_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getExpressionExpressionParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_20);
                    lv_expression_5_0=norm1_Expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFieldDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_5_0, 
                              		"eu.numberfour.n4js.N4JS.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getSemiParserRuleCall_5()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_FieldDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_4=null;
        Enumerator lv_declaredModifiers_0_0 = null;

        EObject this_BogusTypeRefFragment_1 = null;

        EObject lv_declaredName_2_0 = null;

        EObject this_ColonSepTypeRef_3 = null;

        EObject lv_expression_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop493:
            do {
                int alt493=2;
                alt493 = dfa493.predict(input);
                switch (alt493) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_93);
            	    lv_declaredModifiers_0_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getFieldDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_0_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop493;
                }
            } while (true);
            int alt494=2;
            alt494 = dfa494.predict(input);
            switch (alt494) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFieldDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getBogusTypeRefFragmentParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_93);
                    this_BogusTypeRefFragment_1=ruleBogusTypeRefFragment(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BogusTypeRefFragment_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_147);
            lv_declaredName_2_0=norm1_LiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFieldDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt495=2;
            int LA495_0 = input.LA(1);

            if ( (LA495_0==Colon) ) {
                alt495=1;
            }
            switch (alt495) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFieldDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getColonSepTypeRefParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_148);
                    this_ColonSepTypeRef_3=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt496=2;
            int LA496_0 = input.LA(1);

            if ( (LA496_0==EqualsSign) ) {
                alt496=1;
            }
            switch (alt496) {
                case 1 :
                    {
                    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getFieldDeclarationImplAccess().getEqualsSignKeyword_4_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getExpressionExpressionParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_20);
                    lv_expression_5_0=norm3_Expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFieldDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_5_0, 
                              		"eu.numberfour.n4js.N4JS.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getSemiParserRuleCall_5()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4FieldDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4FieldDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4FieldDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4FieldDeclaration=ruleN4FieldDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4FieldDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4FieldDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_FieldDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4FieldDeclarationAccess().getN4FieldDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4FieldDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4FieldDeclarationAccess().getFieldDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FieldDeclarationImpl_1=ruleFieldDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FieldDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4FieldDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_FieldDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4FieldDeclarationAccess().getN4FieldDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4FieldDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4FieldDeclarationAccess().getFieldDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FieldDeclarationImpl_1=norm1_FieldDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FieldDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4MethodDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4MethodDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4MethodDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4MethodDeclaration=ruleN4MethodDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4MethodDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4MethodDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_generator_4_0=null;
        Token otherlv_10=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_TypeVariables_2 = null;

        EObject this_BogusTypeRefFragment_3 = null;

        EObject lv_declaredName_5_0 = null;

        EObject this_MethodParamsReturnAndBody_6 = null;

        EObject this_AsyncNoTrailingLineBreak_7 = null;

        EObject lv_declaredName_8_0 = null;

        EObject this_MethodParamsReturnAndBody_9 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4MethodDeclarationAccess().getN4MethodDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop497:
            do {
                int alt497=2;
                alt497 = dfa497.predict(input);
                switch (alt497) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_143);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4MethodDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop497;
                }
            } while (true);
            int alt498=2;
            int LA498_0 = input.LA(1);

            if ( (LA498_0==LessThanSign) ) {
                alt498=1;
            }
            switch (alt498) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getTypeVariablesParserRuleCall_0_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_94);
                    this_TypeVariables_2=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt499=2;
            alt499 = dfa499.predict(input);
            switch (alt499) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getBogusTypeRefFragmentParserRuleCall_0_0_3()); 
                          
                    }
                    pushFollow(FOLLOW_94);
                    this_BogusTypeRefFragment_3=ruleBogusTypeRefFragment(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BogusTypeRefFragment_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt500=2;
            int LA500_0 = input.LA(1);

            if ( (LA500_0==Asterisk) ) {
                alt500=1;
            }
            else if ( ((LA500_0>=Intersection && LA500_0<=With)||(LA500_0>=For && LA500_0<=Var)||(LA500_0>=As && LA500_0<=Of)||LA500_0==LeftSquareBracket||LA500_0==RULE_DOUBLE||LA500_0==RULE_HEX_INT||LA500_0==RULE_OCTAL_INT||LA500_0==RULE_SCIENTIFIC_INT||LA500_0==RULE_IDENTIFIER||LA500_0==RULE_STRING||LA500_0==RULE_INT) ) {
                alt500=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 500, 0, input);

                throw nvae;
            }
            switch (alt500) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_4_0=(Token)match(input,Asterisk,FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_4_0, grammarAccess.getN4MethodDeclarationAccess().getGeneratorAsteriskKeyword_0_0_4_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_4_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_42);
                    lv_declaredName_5_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4MethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_5_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_0_0_4_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_95);
                    this_MethodParamsReturnAndBody_6=norm1_MethodParamsReturnAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsReturnAndBody_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_0_0_4_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_93);
                    this_AsyncNoTrailingLineBreak_7=ruleAsyncNoTrailingLineBreak(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncNoTrailingLineBreak_7;
                              afterParserOrEnumRuleCall();
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_4_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_91);
                    lv_declaredName_8_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4MethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_8_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_0_0_4_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_95);
                    this_MethodParamsReturnAndBody_9=ruleMethodParamsReturnAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsReturnAndBody_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }
            int alt501=2;
            int LA501_0 = input.LA(1);

            if ( (LA501_0==Semicolon) ) {
                alt501=1;
            }
            switch (alt501) {
                case 1 :
                    {
                    otherlv_10=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getN4MethodDeclarationAccess().getSemicolonKeyword_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4MethodDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_generator_4_0=null;
        Token otherlv_10=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_TypeVariables_2 = null;

        EObject this_BogusTypeRefFragment_3 = null;

        EObject lv_declaredName_5_0 = null;

        EObject this_MethodParamsReturnAndBody_6 = null;

        EObject this_AsyncNoTrailingLineBreak_7 = null;

        EObject lv_declaredName_8_0 = null;

        EObject this_MethodParamsReturnAndBody_9 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4MethodDeclarationAccess().getN4MethodDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop502:
            do {
                int alt502=2;
                alt502 = dfa502.predict(input);
                switch (alt502) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_143);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4MethodDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop502;
                }
            } while (true);
            int alt503=2;
            int LA503_0 = input.LA(1);

            if ( (LA503_0==LessThanSign) ) {
                alt503=1;
            }
            switch (alt503) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getTypeVariablesParserRuleCall_0_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_94);
                    this_TypeVariables_2=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt504=2;
            alt504 = dfa504.predict(input);
            switch (alt504) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getBogusTypeRefFragmentParserRuleCall_0_0_3()); 
                          
                    }
                    pushFollow(FOLLOW_94);
                    this_BogusTypeRefFragment_3=ruleBogusTypeRefFragment(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BogusTypeRefFragment_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt505=2;
            int LA505_0 = input.LA(1);

            if ( (LA505_0==Asterisk) ) {
                alt505=1;
            }
            else if ( ((LA505_0>=Intersection && LA505_0<=With)||(LA505_0>=For && LA505_0<=Var)||(LA505_0>=As && LA505_0<=Of)||LA505_0==LeftSquareBracket||LA505_0==RULE_DOUBLE||LA505_0==RULE_HEX_INT||LA505_0==RULE_OCTAL_INT||LA505_0==RULE_SCIENTIFIC_INT||LA505_0==RULE_IDENTIFIER||LA505_0==RULE_STRING||LA505_0==RULE_INT) ) {
                alt505=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 505, 0, input);

                throw nvae;
            }
            switch (alt505) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_4_0=(Token)match(input,Asterisk,FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_4_0, grammarAccess.getN4MethodDeclarationAccess().getGeneratorAsteriskKeyword_0_0_4_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_4_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_42);
                    lv_declaredName_5_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4MethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_5_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_0_0_4_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_95);
                    this_MethodParamsReturnAndBody_6=norm1_MethodParamsReturnAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsReturnAndBody_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_0_0_4_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_93);
                    this_AsyncNoTrailingLineBreak_7=ruleAsyncNoTrailingLineBreak(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncNoTrailingLineBreak_7;
                              afterParserOrEnumRuleCall();
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_4_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_91);
                    lv_declaredName_8_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4MethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_8_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_0_0_4_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_95);
                    this_MethodParamsReturnAndBody_9=ruleMethodParamsReturnAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsReturnAndBody_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }
            int alt506=2;
            int LA506_0 = input.LA(1);

            if ( (LA506_0==Semicolon) ) {
                alt506=1;
            }
            switch (alt506) {
                case 1 :
                    {
                    otherlv_10=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getN4MethodDeclarationAccess().getSemicolonKeyword_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4CallableConstructorDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4CallableConstructorDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4CallableConstructorDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4CallableConstructorDeclaration=ruleN4CallableConstructorDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4CallableConstructorDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4CallableConstructorDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_MethodParamsReturnAndBody_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4CallableConstructorDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4CallableConstructorDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_95);
            this_MethodParamsReturnAndBody_0=ruleMethodParamsReturnAndBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_MethodParamsReturnAndBody_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt507=2;
            int LA507_0 = input.LA(1);

            if ( (LA507_0==Semicolon) ) {
                alt507=1;
            }
            switch (alt507) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getN4CallableConstructorDeclarationAccess().getSemicolonKeyword_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4CallableConstructorDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_MethodParamsReturnAndBody_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4CallableConstructorDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4CallableConstructorDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_95);
            this_MethodParamsReturnAndBody_0=ruleMethodParamsReturnAndBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_MethodParamsReturnAndBody_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt508=2;
            int LA508_0 = input.LA(1);

            if ( (LA508_0==Semicolon) ) {
                alt508=1;
            }
            switch (alt508) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getN4CallableConstructorDeclarationAccess().getSemicolonKeyword_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleMethodParamsAndBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_StrictFormalParameters_0 = null;

        EObject lv_body_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getMethodParamsAndBodyRule());
              		}
                      newCompositeNode(grammarAccess.getMethodParamsAndBodyAccess().getStrictFormalParametersParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_149);
            this_StrictFormalParameters_0=ruleStrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt509=2;
            int LA509_0 = input.LA(1);

            if ( (LA509_0==LeftCurlyBracket) && (synpred311_InternalN4JSParser())) {
                alt509=1;
            }
            switch (alt509) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodParamsAndBodyAccess().getBodyBlockParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_1_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodParamsAndBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_1_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_MethodParamsAndBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_StrictFormalParameters_0 = null;

        EObject lv_body_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getMethodParamsAndBodyRule());
              		}
                      newCompositeNode(grammarAccess.getMethodParamsAndBodyAccess().getStrictFormalParametersParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_149);
            this_StrictFormalParameters_0=norm1_StrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt510=2;
            int LA510_0 = input.LA(1);

            if ( (LA510_0==LeftCurlyBracket) && (synpred312_InternalN4JSParser())) {
                alt510=1;
            }
            switch (alt510) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodParamsAndBodyAccess().getBodyBlockParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_1_0=norm1_Block();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodParamsAndBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_1_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleMethodParamsReturnAndBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_StrictFormalParameters_0 = null;

        EObject lv_returnTypeRef_2_0 = null;

        EObject lv_body_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getMethodParamsReturnAndBodyRule());
              		}
                      newCompositeNode(grammarAccess.getMethodParamsReturnAndBodyAccess().getStrictFormalParametersParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_150);
            this_StrictFormalParameters_0=ruleStrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt511=2;
            int LA511_0 = input.LA(1);

            if ( (LA511_0==Colon) ) {
                alt511=1;
            }
            switch (alt511) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMethodParamsReturnAndBodyAccess().getColonKeyword_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodParamsReturnAndBodyAccess().getReturnTypeRefTypeRefParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_149);
                    lv_returnTypeRef_2_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodParamsReturnAndBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }
            int alt512=2;
            alt512 = dfa512.predict(input);
            switch (alt512) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodParamsReturnAndBodyAccess().getBodyBlockParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_3_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodParamsReturnAndBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_3_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_MethodParamsReturnAndBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_StrictFormalParameters_0 = null;

        EObject lv_returnTypeRef_2_0 = null;

        EObject lv_body_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getMethodParamsReturnAndBodyRule());
              		}
                      newCompositeNode(grammarAccess.getMethodParamsReturnAndBodyAccess().getStrictFormalParametersParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_150);
            this_StrictFormalParameters_0=norm1_StrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt513=2;
            int LA513_0 = input.LA(1);

            if ( (LA513_0==Colon) ) {
                alt513=1;
            }
            switch (alt513) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMethodParamsReturnAndBodyAccess().getColonKeyword_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodParamsReturnAndBodyAccess().getReturnTypeRefTypeRefParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_149);
                    lv_returnTypeRef_2_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodParamsReturnAndBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }
            int alt514=2;
            alt514 = dfa514.predict(input);
            switch (alt514) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodParamsReturnAndBodyAccess().getBodyBlockParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_3_0=norm1_Block();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodParamsReturnAndBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_3_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4GetterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4GetterDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4GetterDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4GetterDeclaration=ruleN4GetterDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4GetterDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4GetterDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_GetterHeader_2 = null;

        EObject lv_body_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4GetterDeclarationAccess().getN4GetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop515:
            do {
                int alt515=2;
                int LA515_0 = input.LA(1);

                if ( ((LA515_0>=Protected && LA515_0<=Abstract)||LA515_0==External||(LA515_0>=Private && LA515_0<=Project)||LA515_0==Public||LA515_0==Static||LA515_0==Const) ) {
                    alt515=1;
                }


                switch (alt515) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4GetterDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_144);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4GetterDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop515;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4GetterDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4GetterDeclarationAccess().getGetterHeaderParserRuleCall_0_0_2()); 
                  
            }
            pushFollow(FOLLOW_145);
            this_GetterHeader_2=ruleGetterHeader(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_GetterHeader_2;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }
            int alt516=2;
            alt516 = dfa516.predict(input);
            switch (alt516) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4GetterDeclarationAccess().getBodyBlockParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_95);
                    lv_body_3_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4GetterDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_3_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt517=2;
            int LA517_0 = input.LA(1);

            if ( (LA517_0==Semicolon) ) {
                alt517=1;
            }
            switch (alt517) {
                case 1 :
                    {
                    otherlv_4=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getN4GetterDeclarationAccess().getSemicolonKeyword_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4GetterDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_GetterHeader_2 = null;

        EObject lv_body_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4GetterDeclarationAccess().getN4GetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop518:
            do {
                int alt518=2;
                int LA518_0 = input.LA(1);

                if ( ((LA518_0>=Protected && LA518_0<=Abstract)||LA518_0==External||(LA518_0>=Private && LA518_0<=Project)||LA518_0==Public||LA518_0==Static||LA518_0==Const) ) {
                    alt518=1;
                }


                switch (alt518) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4GetterDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_144);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4GetterDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop518;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4GetterDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4GetterDeclarationAccess().getGetterHeaderParserRuleCall_0_0_2()); 
                  
            }
            pushFollow(FOLLOW_145);
            this_GetterHeader_2=norm1_GetterHeader(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_GetterHeader_2;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }
            int alt519=2;
            alt519 = dfa519.predict(input);
            switch (alt519) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4GetterDeclarationAccess().getBodyBlockParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_95);
                    lv_body_3_0=norm1_Block();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4GetterDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_3_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt520=2;
            int LA520_0 = input.LA(1);

            if ( (LA520_0==Semicolon) ) {
                alt520=1;
            }
            switch (alt520) {
                case 1 :
                    {
                    otherlv_4=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getN4GetterDeclarationAccess().getSemicolonKeyword_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleGetterHeader(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject this_BogusTypeRefFragment_0 = null;

        EObject lv_declaredName_2_0 = null;

        EObject this_ColonSepTypeRef_5 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt521=2;
            int LA521_0 = input.LA(1);

            if ( ((LA521_0>=Intersection && LA521_0<=Constructor)||LA521_0==Promisify||LA521_0==Target||LA521_0==Await||LA521_0==Union||LA521_0==This||LA521_0==This_1||(LA521_0>=Type && LA521_0<=Void)||LA521_0==QuestionMark||LA521_0==LeftCurlyBracket||LA521_0==Tilde||LA521_0==RULE_IDENTIFIER) ) {
                alt521=1;
            }
            switch (alt521) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getGetterHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getGetterHeaderAccess().getBogusTypeRefFragmentParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_151);
                    this_BogusTypeRefFragment_0=ruleBogusTypeRefFragment(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BogusTypeRefFragment_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,Get,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getGetterHeaderAccess().getGetKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGetterHeaderAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_53);
            lv_declaredName_2_0=ruleLiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGetterHeaderRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_66); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getGetterHeaderAccess().getLeftParenthesisKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getGetterHeaderAccess().getRightParenthesisKeyword_4());
                  
            }
            int alt522=2;
            int LA522_0 = input.LA(1);

            if ( (LA522_0==Colon) ) {
                alt522=1;
            }
            switch (alt522) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getGetterHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getGetterHeaderAccess().getColonSepTypeRefParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ColonSepTypeRef_5=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_GetterHeader(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject this_BogusTypeRefFragment_0 = null;

        EObject lv_declaredName_2_0 = null;

        EObject this_ColonSepTypeRef_5 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt523=2;
            int LA523_0 = input.LA(1);

            if ( ((LA523_0>=Intersection && LA523_0<=Constructor)||LA523_0==Promisify||LA523_0==Target||LA523_0==Await||LA523_0==Union||LA523_0==This||LA523_0==This_1||(LA523_0>=Type && LA523_0<=Void)||LA523_0==QuestionMark||LA523_0==LeftCurlyBracket||LA523_0==Tilde||LA523_0==RULE_IDENTIFIER) ) {
                alt523=1;
            }
            switch (alt523) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getGetterHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getGetterHeaderAccess().getBogusTypeRefFragmentParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_151);
                    this_BogusTypeRefFragment_0=ruleBogusTypeRefFragment(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BogusTypeRefFragment_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,Get,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getGetterHeaderAccess().getGetKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGetterHeaderAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_53);
            lv_declaredName_2_0=norm1_LiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGetterHeaderRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_66); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getGetterHeaderAccess().getLeftParenthesisKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getGetterHeaderAccess().getRightParenthesisKeyword_4());
                  
            }
            int alt524=2;
            int LA524_0 = input.LA(1);

            if ( (LA524_0==Colon) ) {
                alt524=1;
            }
            switch (alt524) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getGetterHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getGetterHeaderAccess().getColonSepTypeRefParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ColonSepTypeRef_5=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4SetterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4SetterDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4SetterDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4SetterDeclaration=ruleN4SetterDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4SetterDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4SetterDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        EObject lv_declaredName_3_0 = null;

        EObject lv_fpar_5_0 = null;

        EObject lv_body_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4SetterDeclarationAccess().getN4SetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop525:
            do {
                int alt525=2;
                int LA525_0 = input.LA(1);

                if ( ((LA525_0>=Protected && LA525_0<=Abstract)||LA525_0==External||(LA525_0>=Private && LA525_0<=Project)||LA525_0==Public||LA525_0==Static||LA525_0==Const) ) {
                    alt525=1;
                }


                switch (alt525) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_146);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop525;
                }
            } while (true);

            otherlv_2=(Token)match(input,Set,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getN4SetterDeclarationAccess().getSetKeyword_0_0_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_3_0()); 
              	    
            }
            pushFollow(FOLLOW_53);
            lv_declaredName_3_0=ruleLiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_3_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            otherlv_4=(Token)match(input,LeftParenthesis,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getN4SetterDeclarationAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getFparFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_66);
            lv_fpar_5_0=ruleFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"fpar",
                      		lv_fpar_5_0, 
                      		"eu.numberfour.n4js.N4JS.FormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getN4SetterDeclarationAccess().getRightParenthesisKeyword_3());
                  
            }
            int alt526=2;
            alt526 = dfa526.predict(input);
            switch (alt526) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getBodyBlockParserRuleCall_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_95);
                    lv_body_7_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_7_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt527=2;
            int LA527_0 = input.LA(1);

            if ( (LA527_0==Semicolon) ) {
                alt527=1;
            }
            switch (alt527) {
                case 1 :
                    {
                    otherlv_8=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getN4SetterDeclarationAccess().getSemicolonKeyword_5());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4SetterDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        EObject lv_declaredName_3_0 = null;

        EObject lv_fpar_5_0 = null;

        EObject lv_body_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4SetterDeclarationAccess().getN4SetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop528:
            do {
                int alt528=2;
                int LA528_0 = input.LA(1);

                if ( ((LA528_0>=Protected && LA528_0<=Abstract)||LA528_0==External||(LA528_0>=Private && LA528_0<=Project)||LA528_0==Public||LA528_0==Static||LA528_0==Const) ) {
                    alt528=1;
                }


                switch (alt528) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_146);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop528;
                }
            } while (true);

            otherlv_2=(Token)match(input,Set,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getN4SetterDeclarationAccess().getSetKeyword_0_0_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_3_0()); 
              	    
            }
            pushFollow(FOLLOW_53);
            lv_declaredName_3_0=norm1_LiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_3_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            otherlv_4=(Token)match(input,LeftParenthesis,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getN4SetterDeclarationAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getFparFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_66);
            lv_fpar_5_0=norm1_FormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"fpar",
                      		lv_fpar_5_0, 
                      		"eu.numberfour.n4js.N4JS.FormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getN4SetterDeclarationAccess().getRightParenthesisKeyword_3());
                  
            }
            int alt529=2;
            alt529 = dfa529.predict(input);
            switch (alt529) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getBodyBlockParserRuleCall_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_95);
                    lv_body_7_0=norm1_Block();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_7_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt530=2;
            int LA530_0 = input.LA(1);

            if ( (LA530_0==Semicolon) ) {
                alt530=1;
            }
            switch (alt530) {
                case 1 :
                    {
                    otherlv_8=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getN4SetterDeclarationAccess().getSemicolonKeyword_5());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBindingPattern() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingPattern = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingPatternRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingPattern=ruleBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingPattern; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingPattern() throws RecognitionException {
        EObject current = null;

        EObject this_ObjectBindingPattern_0 = null;

        EObject this_ArrayBindingPattern_1 = null;


         enterRule(); 
            
        try {
            {
            int alt531=2;
            int LA531_0 = input.LA(1);

            if ( (LA531_0==LeftCurlyBracket) ) {
                alt531=1;
            }
            else if ( (LA531_0==LeftSquareBracket) ) {
                alt531=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 531, 0, input);

                throw nvae;
            }
            switch (alt531) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBindingPatternAccess().getObjectBindingPatternParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ObjectBindingPattern_0=ruleObjectBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ObjectBindingPattern_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBindingPatternAccess().getArrayBindingPatternParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayBindingPattern_1=ruleArrayBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayBindingPattern_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BindingPattern() throws RecognitionException {
        EObject current = null;

        EObject this_ObjectBindingPattern_0 = null;

        EObject this_ArrayBindingPattern_1 = null;


         enterRule(); 
            
        try {
            {
            int alt532=2;
            int LA532_0 = input.LA(1);

            if ( (LA532_0==LeftCurlyBracket) ) {
                alt532=1;
            }
            else if ( (LA532_0==LeftSquareBracket) ) {
                alt532=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 532, 0, input);

                throw nvae;
            }
            switch (alt532) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBindingPatternAccess().getObjectBindingPatternParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ObjectBindingPattern_0=norm1_ObjectBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ObjectBindingPattern_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBindingPatternAccess().getArrayBindingPatternParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayBindingPattern_1=norm1_ArrayBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayBindingPattern_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleObjectBindingPattern() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObjectBindingPattern = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObjectBindingPatternRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObjectBindingPattern=ruleObjectBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObjectBindingPattern; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleObjectBindingPattern() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_properties_2_0 = null;

        EObject lv_properties_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getObjectBindingPatternAccess().getBindingPatternAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_152); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getObjectBindingPatternAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            int alt534=2;
            int LA534_0 = input.LA(1);

            if ( ((LA534_0>=Intersection && LA534_0<=With)||(LA534_0>=For && LA534_0<=Var)||(LA534_0>=As && LA534_0<=Of)||(LA534_0>=CommercialAt && LA534_0<=LeftSquareBracket)||LA534_0==RULE_DOUBLE||LA534_0==RULE_HEX_INT||LA534_0==RULE_OCTAL_INT||LA534_0==RULE_SCIENTIFIC_INT||LA534_0==RULE_IDENTIFIER||LA534_0==RULE_STRING||LA534_0==RULE_INT) ) {
                alt534=1;
            }
            switch (alt534) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getObjectBindingPatternAccess().getPropertiesBindingPropertyParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_15);
                    lv_properties_2_0=ruleBindingProperty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getObjectBindingPatternRule());
                      	        }
                             		add(
                             			current, 
                             			"properties",
                              		lv_properties_2_0, 
                              		"eu.numberfour.n4js.N4JS.BindingProperty");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop533:
                    do {
                        int alt533=2;
                        int LA533_0 = input.LA(1);

                        if ( (LA533_0==Comma) ) {
                            alt533=1;
                        }


                        switch (alt533) {
                    	case 1 :
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_153); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getObjectBindingPatternAccess().getCommaKeyword_2_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getObjectBindingPatternAccess().getPropertiesBindingPropertyParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_properties_4_0=ruleBindingProperty();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getObjectBindingPatternRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"properties",
                    	              		lv_properties_4_0, 
                    	              		"eu.numberfour.n4js.N4JS.BindingProperty");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop533;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getObjectBindingPatternAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ObjectBindingPattern() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_properties_2_0 = null;

        EObject lv_properties_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getObjectBindingPatternAccess().getBindingPatternAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_152); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getObjectBindingPatternAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            int alt536=2;
            int LA536_0 = input.LA(1);

            if ( ((LA536_0>=Intersection && LA536_0<=With)||(LA536_0>=For && LA536_0<=Var)||(LA536_0>=As && LA536_0<=Of)||(LA536_0>=CommercialAt && LA536_0<=LeftSquareBracket)||LA536_0==RULE_DOUBLE||LA536_0==RULE_HEX_INT||LA536_0==RULE_OCTAL_INT||LA536_0==RULE_SCIENTIFIC_INT||LA536_0==RULE_IDENTIFIER||LA536_0==RULE_STRING||LA536_0==RULE_INT) ) {
                alt536=1;
            }
            switch (alt536) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getObjectBindingPatternAccess().getPropertiesBindingPropertyParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_15);
                    lv_properties_2_0=norm1_BindingProperty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getObjectBindingPatternRule());
                      	        }
                             		add(
                             			current, 
                             			"properties",
                              		lv_properties_2_0, 
                              		"eu.numberfour.n4js.N4JS.BindingProperty");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop535:
                    do {
                        int alt535=2;
                        int LA535_0 = input.LA(1);

                        if ( (LA535_0==Comma) ) {
                            alt535=1;
                        }


                        switch (alt535) {
                    	case 1 :
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_153); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getObjectBindingPatternAccess().getCommaKeyword_2_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getObjectBindingPatternAccess().getPropertiesBindingPropertyParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_properties_4_0=norm1_BindingProperty();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getObjectBindingPatternRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"properties",
                    	              		lv_properties_4_0, 
                    	              		"eu.numberfour.n4js.N4JS.BindingProperty");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop535;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getObjectBindingPatternAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrayBindingPattern() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayBindingPattern = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayBindingPatternRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayBindingPattern=ruleArrayBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBindingPattern; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrayBindingPattern() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;

        EObject lv_elements_6_0 = null;

        EObject lv_elements_8_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayBindingPatternAccess().getBindingPatternAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_154); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrayBindingPatternAccess().getLeftSquareBracketKeyword_1());
                  
            }
            loop537:
            do {
                int alt537=2;
                int LA537_0 = input.LA(1);

                if ( (LA537_0==Comma) ) {
                    alt537=1;
                }


                switch (alt537) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsElisionParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_154);
            	    lv_elements_2_0=ruleElision();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"elements",
            	              		lv_elements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.Elision");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop537;
                }
            } while (true);
            int alt542=2;
            int LA542_0 = input.LA(1);

            if ( ((LA542_0>=Intersection && LA542_0<=Implements)||(LA542_0>=Promisify && LA542_0<=Abstract)||LA542_0==External||(LA542_0>=Private && LA542_0<=Project)||LA542_0==Public||LA542_0==Static||LA542_0==Target||(LA542_0>=Async && LA542_0<=Await)||LA542_0==Union||(LA542_0>=Yield && LA542_0<=This)||LA542_0==From||LA542_0==Type||LA542_0==FullStopFullStopFullStop||(LA542_0>=Get && LA542_0<=Let)||(LA542_0>=Out && LA542_0<=Set)||LA542_0==As||LA542_0==Of||(LA542_0>=CommercialAt && LA542_0<=LeftSquareBracket)||LA542_0==LeftCurlyBracket||LA542_0==RULE_IDENTIFIER) ) {
                alt542=1;
            }
            switch (alt542) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsBindingRestElementParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_88);
                    lv_elements_3_0=ruleBindingRestElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"eu.numberfour.n4js.N4JS.BindingRestElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop539:
                    do {
                        int alt539=2;
                        alt539 = dfa539.predict(input);
                        switch (alt539) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_155); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getArrayBindingPatternAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    loop538:
                    	    do {
                    	        int alt538=2;
                    	        int LA538_0 = input.LA(1);

                    	        if ( (LA538_0==Comma) ) {
                    	            alt538=1;
                    	        }


                    	        switch (alt538) {
                    	    	case 1 :
                    	    	    {
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsElisionParserRuleCall_3_1_1_0()); 
                    	    	      	    
                    	    	    }
                    	    	    pushFollow(FOLLOW_155);
                    	    	    lv_elements_5_0=ruleElision();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      	        if (current==null) {
                    	    	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                    	    	      	        }
                    	    	             		add(
                    	    	             			current, 
                    	    	             			"elements",
                    	    	              		lv_elements_5_0, 
                    	    	              		"eu.numberfour.n4js.N4JS.Elision");
                    	    	      	        afterParserOrEnumRuleCall();
                    	    	      	    
                    	    	    }

                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop538;
                    	        }
                    	    } while (true);
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsBindingRestElementParserRuleCall_3_1_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_88);
                    	    lv_elements_6_0=ruleBindingRestElement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_6_0, 
                    	              		"eu.numberfour.n4js.N4JS.BindingRestElement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop539;
                        }
                    } while (true);
                    int alt541=2;
                    int LA541_0 = input.LA(1);

                    if ( (LA541_0==Comma) ) {
                        alt541=1;
                    }
                    switch (alt541) {
                        case 1 :
                            {
                            otherlv_7=(Token)match(input,Comma,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_7, grammarAccess.getArrayBindingPatternAccess().getCommaKeyword_3_2_0());
                                  
                            }
                            loop540:
                            do {
                                int alt540=2;
                                int LA540_0 = input.LA(1);

                                if ( (LA540_0==Comma) ) {
                                    alt540=1;
                                }


                                switch (alt540) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsElisionParserRuleCall_3_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_88);
                            	    lv_elements_8_0=ruleElision();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"elements",
                            	              		lv_elements_8_0, 
                            	              		"eu.numberfour.n4js.N4JS.Elision");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop540;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getArrayBindingPatternAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ArrayBindingPattern() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;

        EObject lv_elements_6_0 = null;

        EObject lv_elements_8_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayBindingPatternAccess().getBindingPatternAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_154); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrayBindingPatternAccess().getLeftSquareBracketKeyword_1());
                  
            }
            loop543:
            do {
                int alt543=2;
                int LA543_0 = input.LA(1);

                if ( (LA543_0==Comma) ) {
                    alt543=1;
                }


                switch (alt543) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsElisionParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_154);
            	    lv_elements_2_0=ruleElision();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"elements",
            	              		lv_elements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.Elision");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop543;
                }
            } while (true);
            int alt548=2;
            int LA548_0 = input.LA(1);

            if ( ((LA548_0>=Intersection && LA548_0<=Implements)||(LA548_0>=Promisify && LA548_0<=Abstract)||LA548_0==External||(LA548_0>=Private && LA548_0<=Project)||LA548_0==Public||LA548_0==Static||LA548_0==Target||(LA548_0>=Async && LA548_0<=Await)||LA548_0==Union||LA548_0==This||LA548_0==From||LA548_0==Type||LA548_0==FullStopFullStopFullStop||(LA548_0>=Get && LA548_0<=Let)||(LA548_0>=Out && LA548_0<=Set)||LA548_0==As||LA548_0==Of||(LA548_0>=CommercialAt && LA548_0<=LeftSquareBracket)||LA548_0==LeftCurlyBracket||LA548_0==RULE_IDENTIFIER) ) {
                alt548=1;
            }
            switch (alt548) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsBindingRestElementParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_88);
                    lv_elements_3_0=norm1_BindingRestElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"eu.numberfour.n4js.N4JS.BindingRestElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop545:
                    do {
                        int alt545=2;
                        alt545 = dfa545.predict(input);
                        switch (alt545) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_155); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getArrayBindingPatternAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    loop544:
                    	    do {
                    	        int alt544=2;
                    	        int LA544_0 = input.LA(1);

                    	        if ( (LA544_0==Comma) ) {
                    	            alt544=1;
                    	        }


                    	        switch (alt544) {
                    	    	case 1 :
                    	    	    {
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsElisionParserRuleCall_3_1_1_0()); 
                    	    	      	    
                    	    	    }
                    	    	    pushFollow(FOLLOW_155);
                    	    	    lv_elements_5_0=ruleElision();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      	        if (current==null) {
                    	    	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                    	    	      	        }
                    	    	             		add(
                    	    	             			current, 
                    	    	             			"elements",
                    	    	              		lv_elements_5_0, 
                    	    	              		"eu.numberfour.n4js.N4JS.Elision");
                    	    	      	        afterParserOrEnumRuleCall();
                    	    	      	    
                    	    	    }

                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop544;
                    	        }
                    	    } while (true);
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsBindingRestElementParserRuleCall_3_1_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_88);
                    	    lv_elements_6_0=norm1_BindingRestElement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_6_0, 
                    	              		"eu.numberfour.n4js.N4JS.BindingRestElement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop545;
                        }
                    } while (true);
                    int alt547=2;
                    int LA547_0 = input.LA(1);

                    if ( (LA547_0==Comma) ) {
                        alt547=1;
                    }
                    switch (alt547) {
                        case 1 :
                            {
                            otherlv_7=(Token)match(input,Comma,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_7, grammarAccess.getArrayBindingPatternAccess().getCommaKeyword_3_2_0());
                                  
                            }
                            loop546:
                            do {
                                int alt546=2;
                                int LA546_0 = input.LA(1);

                                if ( (LA546_0==Comma) ) {
                                    alt546=1;
                                }


                                switch (alt546) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsElisionParserRuleCall_3_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_88);
                            	    lv_elements_8_0=ruleElision();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"elements",
                            	              		lv_elements_8_0, 
                            	              		"eu.numberfour.n4js.N4JS.Elision");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop546;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getArrayBindingPatternAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBindingProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingProperty = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingPropertyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingProperty=ruleBindingProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingProperty; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingProperty() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_declaredName_0_0 = null;

        EObject lv_value_2_0 = null;

        EObject lv_value_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt549=2;
            alt549 = dfa549.predict(input);
            switch (alt549) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingPropertyAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_83);
                    lv_declaredName_0_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_0_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,Colon,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getBindingPropertyAccess().getColonKeyword_0_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingPropertyAccess().getValueBindingElementParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_2_0=ruleBindingElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_2_0, 
                              		"eu.numberfour.n4js.N4JS.BindingElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingPropertyAccess().getValueSingleNameBindingParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=ruleSingleNameBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_3_0, 
                              		"eu.numberfour.n4js.N4JS.SingleNameBinding");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BindingProperty() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_declaredName_0_0 = null;

        EObject lv_value_2_0 = null;

        EObject lv_value_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt550=2;
            alt550 = dfa550.predict(input);
            switch (alt550) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingPropertyAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_83);
                    lv_declaredName_0_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_0_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,Colon,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getBindingPropertyAccess().getColonKeyword_0_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingPropertyAccess().getValueBindingElementParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_2_0=norm1_BindingElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_2_0, 
                              		"eu.numberfour.n4js.N4JS.BindingElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingPropertyAccess().getValueSingleNameBindingParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=norm1_SingleNameBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_3_0, 
                              		"eu.numberfour.n4js.N4JS.SingleNameBinding");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleSingleNameBinding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSingleNameBinding = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSingleNameBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSingleNameBinding=ruleSingleNameBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSingleNameBinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleSingleNameBinding() throws RecognitionException {
        EObject current = null;

        EObject lv_varDecl_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSingleNameBindingAccess().getVarDeclVariableDeclarationParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_varDecl_0_0=norm1_VariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSingleNameBindingRule());
              	        }
                     		set(
                     			current, 
                     			"varDecl",
                      		lv_varDecl_0_0, 
                      		"eu.numberfour.n4js.N4JS.VariableDeclaration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_SingleNameBinding() throws RecognitionException {
        EObject current = null;

        EObject lv_varDecl_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSingleNameBindingAccess().getVarDeclVariableDeclarationParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_varDecl_0_0=norm3_VariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSingleNameBindingRule());
              	        }
                     		set(
                     			current, 
                     			"varDecl",
                      		lv_varDecl_0_0, 
                      		"eu.numberfour.n4js.N4JS.VariableDeclaration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_SingleNameBinding() throws RecognitionException {
        EObject current = null;

        EObject lv_varDecl_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSingleNameBindingAccess().getVarDeclVariableDeclarationParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_varDecl_0_0=norm5_VariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSingleNameBindingRule());
              	        }
                     		set(
                     			current, 
                     			"varDecl",
                      		lv_varDecl_0_0, 
                      		"eu.numberfour.n4js.N4JS.VariableDeclaration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_SingleNameBinding() throws RecognitionException {
        EObject current = null;

        EObject lv_varDecl_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSingleNameBindingAccess().getVarDeclVariableDeclarationParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_varDecl_0_0=norm7_VariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSingleNameBindingRule());
              	        }
                     		set(
                     			current, 
                     			"varDecl",
                      		lv_varDecl_0_0, 
                      		"eu.numberfour.n4js.N4JS.VariableDeclaration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBindingElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingElement=ruleBindingElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_nestedPattern_0_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_varDecl_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt552=2;
            int LA552_0 = input.LA(1);

            if ( (LA552_0==LeftCurlyBracket) && (synpred329_InternalN4JSParser())) {
                alt552=1;
            }
            else if ( (LA552_0==LeftSquareBracket) && (synpred329_InternalN4JSParser())) {
                alt552=1;
            }
            else if ( ((LA552_0>=Intersection && LA552_0<=Implements)||(LA552_0>=Promisify && LA552_0<=Abstract)||LA552_0==External||(LA552_0>=Private && LA552_0<=Project)||LA552_0==Public||LA552_0==Static||LA552_0==Target||(LA552_0>=Async && LA552_0<=Await)||LA552_0==Union||(LA552_0>=Yield && LA552_0<=This)||LA552_0==From||LA552_0==Type||(LA552_0>=Get && LA552_0<=Let)||(LA552_0>=Out && LA552_0<=Set)||LA552_0==As||LA552_0==Of||LA552_0==CommercialAt||LA552_0==RULE_IDENTIFIER) ) {
                alt552=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 552, 0, input);

                throw nvae;
            }
            switch (alt552) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementAccess().getNestedPatternBindingPatternParserRuleCall_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_60);
                    lv_nestedPattern_0_0=ruleBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementRule());
                      	        }
                             		set(
                             			current, 
                             			"nestedPattern",
                              		lv_nestedPattern_0_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    int alt551=2;
                    int LA551_0 = input.LA(1);

                    if ( (LA551_0==EqualsSign) ) {
                        alt551=1;
                    }
                    switch (alt551) {
                        case 1 :
                            {
                            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_1, grammarAccess.getBindingElementAccess().getEqualsSignKeyword_0_1_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getBindingElementAccess().getExpressionAssignmentExpressionParserRuleCall_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_2_0=norm1_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getBindingElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_2_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementAccess().getVarDeclVariableDeclarationParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_varDecl_3_0=norm5_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementRule());
                      	        }
                             		set(
                             			current, 
                             			"varDecl",
                              		lv_varDecl_3_0, 
                              		"eu.numberfour.n4js.N4JS.VariableDeclaration");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BindingElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_nestedPattern_0_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_varDecl_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt554=2;
            int LA554_0 = input.LA(1);

            if ( (LA554_0==LeftCurlyBracket) && (synpred330_InternalN4JSParser())) {
                alt554=1;
            }
            else if ( (LA554_0==LeftSquareBracket) && (synpred330_InternalN4JSParser())) {
                alt554=1;
            }
            else if ( ((LA554_0>=Intersection && LA554_0<=Implements)||(LA554_0>=Promisify && LA554_0<=Abstract)||LA554_0==External||(LA554_0>=Private && LA554_0<=Project)||LA554_0==Public||LA554_0==Static||LA554_0==Target||(LA554_0>=Async && LA554_0<=Await)||LA554_0==Union||LA554_0==This||LA554_0==From||LA554_0==Type||(LA554_0>=Get && LA554_0<=Let)||(LA554_0>=Out && LA554_0<=Set)||LA554_0==As||LA554_0==Of||LA554_0==CommercialAt||LA554_0==RULE_IDENTIFIER) ) {
                alt554=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 554, 0, input);

                throw nvae;
            }
            switch (alt554) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementAccess().getNestedPatternBindingPatternParserRuleCall_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_60);
                    lv_nestedPattern_0_0=norm1_BindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementRule());
                      	        }
                             		set(
                             			current, 
                             			"nestedPattern",
                              		lv_nestedPattern_0_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    int alt553=2;
                    int LA553_0 = input.LA(1);

                    if ( (LA553_0==EqualsSign) ) {
                        alt553=1;
                    }
                    switch (alt553) {
                        case 1 :
                            {
                            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_1, grammarAccess.getBindingElementAccess().getEqualsSignKeyword_0_1_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getBindingElementAccess().getExpressionAssignmentExpressionParserRuleCall_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_2_0=norm3_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getBindingElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_2_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementAccess().getVarDeclVariableDeclarationParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_varDecl_3_0=norm7_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementRule());
                      	        }
                             		set(
                             			current, 
                             			"varDecl",
                              		lv_varDecl_3_0, 
                              		"eu.numberfour.n4js.N4JS.VariableDeclaration");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBindingRestElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingRestElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingRestElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingRestElement=ruleBindingRestElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingRestElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingRestElement() throws RecognitionException {
        EObject current = null;

        Token lv_rest_0_0=null;
        Token otherlv_2=null;
        EObject lv_nestedPattern_1_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_varDecl_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt555=2;
            int LA555_0 = input.LA(1);

            if ( (LA555_0==FullStopFullStopFullStop) ) {
                alt555=1;
            }
            switch (alt555) {
                case 1 :
                    {
                    {
                    lv_rest_0_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_rest_0_0, grammarAccess.getBindingRestElementAccess().getRestFullStopFullStopFullStopKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBindingRestElementRule());
                      	        }
                             		setWithLastConsumed(current, "rest", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt557=2;
            int LA557_0 = input.LA(1);

            if ( (LA557_0==LeftCurlyBracket) && (synpred331_InternalN4JSParser())) {
                alt557=1;
            }
            else if ( (LA557_0==LeftSquareBracket) && (synpred331_InternalN4JSParser())) {
                alt557=1;
            }
            else if ( ((LA557_0>=Intersection && LA557_0<=Implements)||(LA557_0>=Promisify && LA557_0<=Abstract)||LA557_0==External||(LA557_0>=Private && LA557_0<=Project)||LA557_0==Public||LA557_0==Static||LA557_0==Target||(LA557_0>=Async && LA557_0<=Await)||LA557_0==Union||(LA557_0>=Yield && LA557_0<=This)||LA557_0==From||LA557_0==Type||(LA557_0>=Get && LA557_0<=Let)||(LA557_0>=Out && LA557_0<=Set)||LA557_0==As||LA557_0==Of||LA557_0==CommercialAt||LA557_0==RULE_IDENTIFIER) ) {
                alt557=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 557, 0, input);

                throw nvae;
            }
            switch (alt557) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingRestElementAccess().getNestedPatternBindingPatternParserRuleCall_1_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_60);
                    lv_nestedPattern_1_0=ruleBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingRestElementRule());
                      	        }
                             		set(
                             			current, 
                             			"nestedPattern",
                              		lv_nestedPattern_1_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    int alt556=2;
                    int LA556_0 = input.LA(1);

                    if ( (LA556_0==EqualsSign) ) {
                        alt556=1;
                    }
                    switch (alt556) {
                        case 1 :
                            {
                            otherlv_2=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getBindingRestElementAccess().getEqualsSignKeyword_1_0_1_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getBindingRestElementAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_3_0=norm1_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getBindingRestElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_3_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingRestElementAccess().getVarDeclVariableDeclarationParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_varDecl_4_0=norm5_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingRestElementRule());
                      	        }
                             		set(
                             			current, 
                             			"varDecl",
                              		lv_varDecl_4_0, 
                              		"eu.numberfour.n4js.N4JS.VariableDeclaration");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BindingRestElement() throws RecognitionException {
        EObject current = null;

        Token lv_rest_0_0=null;
        Token otherlv_2=null;
        EObject lv_nestedPattern_1_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_varDecl_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt558=2;
            int LA558_0 = input.LA(1);

            if ( (LA558_0==FullStopFullStopFullStop) ) {
                alt558=1;
            }
            switch (alt558) {
                case 1 :
                    {
                    {
                    lv_rest_0_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_rest_0_0, grammarAccess.getBindingRestElementAccess().getRestFullStopFullStopFullStopKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBindingRestElementRule());
                      	        }
                             		setWithLastConsumed(current, "rest", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt560=2;
            int LA560_0 = input.LA(1);

            if ( (LA560_0==LeftCurlyBracket) && (synpred332_InternalN4JSParser())) {
                alt560=1;
            }
            else if ( (LA560_0==LeftSquareBracket) && (synpred332_InternalN4JSParser())) {
                alt560=1;
            }
            else if ( ((LA560_0>=Intersection && LA560_0<=Implements)||(LA560_0>=Promisify && LA560_0<=Abstract)||LA560_0==External||(LA560_0>=Private && LA560_0<=Project)||LA560_0==Public||LA560_0==Static||LA560_0==Target||(LA560_0>=Async && LA560_0<=Await)||LA560_0==Union||LA560_0==This||LA560_0==From||LA560_0==Type||(LA560_0>=Get && LA560_0<=Let)||(LA560_0>=Out && LA560_0<=Set)||LA560_0==As||LA560_0==Of||LA560_0==CommercialAt||LA560_0==RULE_IDENTIFIER) ) {
                alt560=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 560, 0, input);

                throw nvae;
            }
            switch (alt560) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingRestElementAccess().getNestedPatternBindingPatternParserRuleCall_1_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_60);
                    lv_nestedPattern_1_0=norm1_BindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingRestElementRule());
                      	        }
                             		set(
                             			current, 
                             			"nestedPattern",
                              		lv_nestedPattern_1_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    int alt559=2;
                    int LA559_0 = input.LA(1);

                    if ( (LA559_0==EqualsSign) ) {
                        alt559=1;
                    }
                    switch (alt559) {
                        case 1 :
                            {
                            otherlv_2=(Token)match(input,EqualsSign,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getBindingRestElementAccess().getEqualsSignKeyword_1_0_1_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getBindingRestElementAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_3_0=norm3_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getBindingRestElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_3_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingRestElementAccess().getVarDeclVariableDeclarationParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_varDecl_4_0=norm7_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingRestElementRule());
                      	        }
                             		set(
                             			current, 
                             			"varDecl",
                              		lv_varDecl_4_0, 
                              		"eu.numberfour.n4js.N4JS.VariableDeclaration");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleElision() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElision = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElisionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElision=ruleElision();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElision; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleElision() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getElisionAccess().getBindingElementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Comma,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getElisionAccess().getCommaKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLiteralOrComputedPropertyName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralOrComputedPropertyName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralOrComputedPropertyName=ruleLiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralOrComputedPropertyName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLiteralOrComputedPropertyName() throws RecognitionException {
        EObject current = null;

        Token lv_literalName_1_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_literalName_0_0 = null;

        AntlrDatatypeRuleToken lv_literalName_2_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            int alt561=4;
            switch ( input.LA(1) ) {
            case Intersection:
            case Constructor:
            case Implements:
            case Instanceof:
            case Promisify:
            case Interface:
            case Protected:
            case Abstract:
            case Continue:
            case Debugger:
            case External:
            case Function:
            case Default:
            case Extends:
            case Finally:
            case Private:
            case Project:
            case Delete:
            case Export:
            case Import:
            case Public:
            case Return:
            case Static:
            case Switch:
            case Target:
            case Typeof:
            case Async:
            case Await:
            case Break:
            case Catch:
            case Class:
            case Const:
            case False:
            case Super:
            case Throw:
            case Union:
            case While:
            case Yield:
            case This:
            case Case:
            case Else:
            case Enum:
            case From:
            case Null:
            case This_1:
            case True:
            case Type:
            case Void:
            case With:
            case For:
            case Get:
            case Let:
            case New:
            case Out:
            case Set:
            case Try:
            case Var:
            case As:
            case Do:
            case If:
            case In:
            case Of:
            case RULE_IDENTIFIER:
                {
                alt561=1;
                }
                break;
            case RULE_STRING:
                {
                alt561=2;
                }
                break;
            case RULE_DOUBLE:
            case RULE_HEX_INT:
            case RULE_OCTAL_INT:
            case RULE_SCIENTIFIC_INT:
            case RULE_INT:
                {
                alt561=3;
                }
                break;
            case LeftSquareBracket:
                {
                alt561=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 561, 0, input);

                throw nvae;
            }

            switch (alt561) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameAccess().getLiteralNameIdentifierNameParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_literalName_0_0=ruleIdentifierName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		set(
                             			current, 
                             			"literalName",
                              		lv_literalName_0_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    lv_literalName_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_literalName_1_0, grammarAccess.getLiteralOrComputedPropertyNameAccess().getLiteralNameSTRINGTerminalRuleCall_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"literalName",
                              		lv_literalName_1_0, 
                              		"eu.numberfour.n4js.N4JS.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameAccess().getLiteralNameNumericLiteralAsStringParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_literalName_2_0=ruleNumericLiteralAsString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		set(
                             			current, 
                             			"literalName",
                              		lv_literalName_2_0, 
                              		"eu.numberfour.n4js.N4JS.NumericLiteralAsString");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    otherlv_3=(Token)match(input,LeftSquareBracket,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getLiteralOrComputedPropertyNameAccess().getLeftSquareBracketKeyword_3_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_104);
                    lv_expression_4_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_4_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getLiteralOrComputedPropertyNameAccess().getRightSquareBracketKeyword_3_2());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_LiteralOrComputedPropertyName() throws RecognitionException {
        EObject current = null;

        Token lv_literalName_1_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_literalName_0_0 = null;

        AntlrDatatypeRuleToken lv_literalName_2_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            int alt562=4;
            switch ( input.LA(1) ) {
            case Intersection:
            case Constructor:
            case Implements:
            case Instanceof:
            case Promisify:
            case Interface:
            case Protected:
            case Abstract:
            case Continue:
            case Debugger:
            case External:
            case Function:
            case Default:
            case Extends:
            case Finally:
            case Private:
            case Project:
            case Delete:
            case Export:
            case Import:
            case Public:
            case Return:
            case Static:
            case Switch:
            case Target:
            case Typeof:
            case Async:
            case Await:
            case Break:
            case Catch:
            case Class:
            case Const:
            case False:
            case Super:
            case Throw:
            case Union:
            case While:
            case Yield:
            case This:
            case Case:
            case Else:
            case Enum:
            case From:
            case Null:
            case This_1:
            case True:
            case Type:
            case Void:
            case With:
            case For:
            case Get:
            case Let:
            case New:
            case Out:
            case Set:
            case Try:
            case Var:
            case As:
            case Do:
            case If:
            case In:
            case Of:
            case RULE_IDENTIFIER:
                {
                alt562=1;
                }
                break;
            case RULE_STRING:
                {
                alt562=2;
                }
                break;
            case RULE_DOUBLE:
            case RULE_HEX_INT:
            case RULE_OCTAL_INT:
            case RULE_SCIENTIFIC_INT:
            case RULE_INT:
                {
                alt562=3;
                }
                break;
            case LeftSquareBracket:
                {
                alt562=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 562, 0, input);

                throw nvae;
            }

            switch (alt562) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameAccess().getLiteralNameIdentifierNameParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_literalName_0_0=ruleIdentifierName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		set(
                             			current, 
                             			"literalName",
                              		lv_literalName_0_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    lv_literalName_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_literalName_1_0, grammarAccess.getLiteralOrComputedPropertyNameAccess().getLiteralNameSTRINGTerminalRuleCall_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"literalName",
                              		lv_literalName_1_0, 
                              		"eu.numberfour.n4js.N4JS.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameAccess().getLiteralNameNumericLiteralAsStringParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_literalName_2_0=ruleNumericLiteralAsString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		set(
                             			current, 
                             			"literalName",
                              		lv_literalName_2_0, 
                              		"eu.numberfour.n4js.N4JS.NumericLiteralAsString");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    otherlv_3=(Token)match(input,LeftSquareBracket,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getLiteralOrComputedPropertyNameAccess().getLeftSquareBracketKeyword_3_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_104);
                    lv_expression_4_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_4_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getLiteralOrComputedPropertyNameAccess().getRightSquareBracketKeyword_3_2());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeRef=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeRef() throws RecognitionException {
        EObject current = null;

        EObject this_UnionTypeExpression_0 = null;


         enterRule(); 
            
        try {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getTypeRefAccess().getUnionTypeExpressionParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_UnionTypeExpression_0=ruleUnionTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_UnionTypeExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleUnionTypeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnionTypeExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnionTypeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnionTypeExpression=ruleUnionTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnionTypeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleUnionTypeExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_IntersectionTypeExpression_0 = null;

        EObject lv_typeRefs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getUnionTypeExpressionAccess().getIntersectionTypeExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_118);
            this_IntersectionTypeExpression_0=ruleIntersectionTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_IntersectionTypeExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt564=2;
            int LA564_0 = input.LA(1);

            if ( (LA564_0==VerticalLine) ) {
                alt564=1;
            }
            switch (alt564) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getUnionTypeExpressionAccess().getUnionTypeExpressionTypeRefsAction_1_0(),
                                  current);
                          
                    }

                    }
                    int cnt563=0;
                    loop563:
                    do {
                        int alt563=2;
                        int LA563_0 = input.LA(1);

                        if ( (LA563_0==VerticalLine) ) {
                            alt563=1;
                        }


                        switch (alt563) {
                    	case 1 :
                    	    {
                    	    otherlv_2=(Token)match(input,VerticalLine,FOLLOW_44); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getUnionTypeExpressionAccess().getVerticalLineKeyword_1_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getUnionTypeExpressionAccess().getTypeRefsIntersectionTypeExpressionParserRuleCall_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_118);
                    	    lv_typeRefs_3_0=ruleIntersectionTypeExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getUnionTypeExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeRefs",
                    	              		lv_typeRefs_3_0, 
                    	              		"eu.numberfour.n4js.ts.TypeExpressions.IntersectionTypeExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt563 >= 1 ) break loop563;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(563, input);
                                throw eee;
                        }
                        cnt563++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleIntersectionTypeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntersectionTypeExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntersectionTypeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntersectionTypeExpression=ruleIntersectionTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntersectionTypeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIntersectionTypeExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_PrimaryTypeExpression_0 = null;

        EObject lv_typeRefs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getIntersectionTypeExpressionAccess().getPrimaryTypeExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_116);
            this_PrimaryTypeExpression_0=rulePrimaryTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_PrimaryTypeExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt566=2;
            int LA566_0 = input.LA(1);

            if ( (LA566_0==Ampersand) ) {
                alt566=1;
            }
            switch (alt566) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getIntersectionTypeExpressionAccess().getIntersectionTypeExpressionTypeRefsAction_1_0(),
                                  current);
                          
                    }

                    }
                    int cnt565=0;
                    loop565:
                    do {
                        int alt565=2;
                        int LA565_0 = input.LA(1);

                        if ( (LA565_0==Ampersand) ) {
                            alt565=1;
                        }


                        switch (alt565) {
                    	case 1 :
                    	    {
                    	    otherlv_2=(Token)match(input,Ampersand,FOLLOW_44); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getIntersectionTypeExpressionAccess().getAmpersandKeyword_1_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getIntersectionTypeExpressionAccess().getTypeRefsPrimaryTypeExpressionParserRuleCall_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_116);
                    	    lv_typeRefs_3_0=rulePrimaryTypeExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getIntersectionTypeExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeRefs",
                    	              		lv_typeRefs_3_0, 
                    	              		"eu.numberfour.n4js.ts.TypeExpressions.PrimaryTypeExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt565 >= 1 ) break loop565;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(565, input);
                                throw eee;
                        }
                        cnt565++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePrimaryTypeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryTypeExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryTypeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryTypeExpression=rulePrimaryTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryTypeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePrimaryTypeExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject this_TAnonymousFormalParameterList_2 = null;

        EObject lv_returnTypeRef_5_0 = null;

        EObject this_ArrayTypeRef_6 = null;

        EObject this_TypeRefWithModifiers_7 = null;

        EObject this_TypeRef_9 = null;


         enterRule(); 
            
        try {
            {
            int alt567=4;
            alt567 = dfa567.predict(input);
            switch (alt567) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPrimaryTypeExpressionAccess().getFunctionTypeExpressionAction_0_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getPrimaryTypeExpressionAccess().getLeftParenthesisKeyword_0_0_0_1());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPrimaryTypeExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getPrimaryTypeExpressionAccess().getTAnonymousFormalParameterListParserRuleCall_0_0_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_66);
                    this_TAnonymousFormalParameterList_2=ruleTAnonymousFormalParameterList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TAnonymousFormalParameterList_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getPrimaryTypeExpressionAccess().getRightParenthesisKeyword_0_0_0_3());
                          
                    }
                    otherlv_4=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getPrimaryTypeExpressionAccess().getEqualsSignGreaterThanSignKeyword_0_0_0_4());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPrimaryTypeExpressionAccess().getReturnTypeRefPrimaryTypeExpressionParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_returnTypeRef_5_0=rulePrimaryTypeExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrimaryTypeExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_5_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.PrimaryTypeExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryTypeExpressionAccess().getArrayTypeRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayTypeRef_6=ruleArrayTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayTypeRef_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryTypeExpressionAccess().getTypeRefWithModifiersParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeRefWithModifiers_7=ruleTypeRefWithModifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeRefWithModifiers_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    {
                    otherlv_8=(Token)match(input,LeftParenthesis,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getPrimaryTypeExpressionAccess().getLeftParenthesisKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryTypeExpressionAccess().getTypeRefParserRuleCall_3_1()); 
                          
                    }
                    pushFollow(FOLLOW_66);
                    this_TypeRef_9=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeRef_9;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getPrimaryTypeExpressionAccess().getRightParenthesisKeyword_3_2());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBogusTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBogusTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBogusTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBogusTypeRef=ruleBogusTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBogusTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBogusTypeRef() throws RecognitionException {
        EObject current = null;

        EObject this_TypeRefWithModifiers_0 = null;


         enterRule(); 
            
        try {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBogusTypeRefAccess().getTypeRefWithModifiersParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_TypeRefWithModifiers_0=ruleTypeRefWithModifiers();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypeRefWithModifiers_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeRefWithModifiers() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRefWithModifiers = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefWithModifiersRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeRefWithModifiers=ruleTypeRefWithModifiers();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRefWithModifiers; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeRefWithModifiers() throws RecognitionException {
        EObject current = null;

        EObject this_TypeRefWithoutModifiers_0 = null;

        AntlrDatatypeRuleToken lv_undefModifier_1_0 = null;

        AntlrDatatypeRuleToken lv_undefModifier_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt569=2;
            int LA569_0 = input.LA(1);

            if ( ((LA569_0>=Intersection && LA569_0<=Constructor)||LA569_0==Promisify||LA569_0==Target||LA569_0==Await||LA569_0==Union||LA569_0==This||LA569_0==This_1||(LA569_0>=Type && LA569_0<=Void)||LA569_0==LeftCurlyBracket||LA569_0==Tilde||LA569_0==RULE_IDENTIFIER) ) {
                alt569=1;
            }
            else if ( (LA569_0==QuestionMark) ) {
                alt569=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 569, 0, input);

                throw nvae;
            }
            switch (alt569) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefWithModifiersAccess().getTypeRefWithoutModifiersParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FOLLOW_157);
                    this_TypeRefWithoutModifiers_0=ruleTypeRefWithoutModifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeRefWithoutModifiers_0;
                              afterParserOrEnumRuleCall();
                          
                    }
                    int alt568=2;
                    int LA568_0 = input.LA(1);

                    if ( (LA568_0==QuestionMark) ) {
                        int LA568_1 = input.LA(2);

                        if ( (synpred334_InternalN4JSParser()) ) {
                            alt568=1;
                        }
                    }
                    switch (alt568) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTypeRefWithModifiersAccess().getUndefModifierUndefModifierTokenParserRuleCall_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_undefModifier_1_0=ruleUndefModifierToken();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTypeRefWithModifiersRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"undefModifier",
                                      		lv_undefModifier_1_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.UndefModifierToken");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getTypeRefWithModifiersAccess().getParameterizedTypeRefAction_1_0(),
                                  current);
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTypeRefWithModifiersAccess().getUndefModifierUndefModifierTokenParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_undefModifier_3_0=ruleUndefModifierToken();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeRefWithModifiersRule());
                      	        }
                             		set(
                             			current, 
                             			"undefModifier",
                              		lv_undefModifier_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.UndefModifierToken");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeRefWithoutModifiers() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRefWithoutModifiers = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefWithoutModifiersRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeRefWithoutModifiers=ruleTypeRefWithoutModifiers();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRefWithoutModifiers; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeRefWithoutModifiers() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_2_0=null;
        EObject this_ParameterizedTypeRef_0 = null;

        EObject this_ThisTypeRef_1 = null;

        EObject this_TypeTypeRef_3 = null;

        EObject this_FunctionTypeExpressionOLD_4 = null;

        EObject this_UnionTypeExpressionOLD_5 = null;

        EObject this_IntersectionTypeExpressionOLD_6 = null;


         enterRule(); 
            
        try {
            {
            int alt572=5;
            switch ( input.LA(1) ) {
            case Promisify:
            case Target:
            case Await:
            case This:
            case This_1:
            case Void:
            case Tilde:
            case RULE_IDENTIFIER:
                {
                alt572=1;
                }
                break;
            case Constructor:
            case Type:
                {
                alt572=2;
                }
                break;
            case LeftCurlyBracket:
                {
                alt572=3;
                }
                break;
            case Union:
                {
                alt572=4;
                }
                break;
            case Intersection:
                {
                alt572=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 572, 0, input);

                throw nvae;
            }

            switch (alt572) {
                case 1 :
                    {
                    {
                    int alt570=2;
                    switch ( input.LA(1) ) {
                    case Promisify:
                    case Target:
                    case Await:
                    case This:
                    case Void:
                    case RULE_IDENTIFIER:
                        {
                        alt570=1;
                        }
                        break;
                    case Tilde:
                        {
                        switch ( input.LA(2) ) {
                        case Tilde:
                            {
                            int LA570_4 = input.LA(3);

                            if ( (LA570_4==Promisify||LA570_4==Target||LA570_4==Await||LA570_4==This||LA570_4==Void||LA570_4==RULE_IDENTIFIER) ) {
                                alt570=1;
                            }
                            else if ( (LA570_4==This_1) ) {
                                alt570=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 570, 4, input);

                                throw nvae;
                            }
                            }
                            break;
                        case RULE_STRUCTMODSUFFIX:
                            {
                            int LA570_5 = input.LA(3);

                            if ( (LA570_5==Promisify||LA570_5==Target||LA570_5==Await||LA570_5==This||LA570_5==Void||LA570_5==RULE_IDENTIFIER) ) {
                                alt570=1;
                            }
                            else if ( (LA570_5==This_1) ) {
                                alt570=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 570, 5, input);

                                throw nvae;
                            }
                            }
                            break;
                        case This_1:
                            {
                            alt570=2;
                            }
                            break;
                        case Promisify:
                        case Target:
                        case Await:
                        case This:
                        case Void:
                        case RULE_IDENTIFIER:
                            {
                            alt570=1;
                            }
                            break;
                        default:
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 570, 2, input);

                            throw nvae;
                        }

                        }
                        break;
                    case This_1:
                        {
                        alt570=2;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 570, 0, input);

                        throw nvae;
                    }

                    switch (alt570) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                                      newCompositeNode(grammarAccess.getTypeRefWithoutModifiersAccess().getParameterizedTypeRefParserRuleCall_0_0_0()); 
                                  
                            }
                            pushFollow(FOLLOW_37);
                            this_ParameterizedTypeRef_0=ruleParameterizedTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ParameterizedTypeRef_0;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;
                        case 2 :
                            {
                            if ( state.backtracking==0 ) {
                               
                                      newCompositeNode(grammarAccess.getTypeRefWithoutModifiersAccess().getThisTypeRefParserRuleCall_0_0_1()); 
                                  
                            }
                            pushFollow(FOLLOW_37);
                            this_ThisTypeRef_1=ruleThisTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ThisTypeRef_1;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt571=2;
                    alt571 = dfa571.predict(input);
                    switch (alt571) {
                        case 1 :
                            {
                            {
                            lv_dynamic_2_0=(Token)match(input,PlusSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_dynamic_2_0, grammarAccess.getTypeRefWithoutModifiersAccess().getDynamicPlusSignKeyword_0_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getTypeRefWithoutModifiersRule());
                              	        }
                                     		setWithLastConsumed(current, "dynamic", true, "+");
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefWithoutModifiersAccess().getTypeTypeRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeTypeRef_3=ruleTypeTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeTypeRef_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefWithoutModifiersAccess().getFunctionTypeExpressionOLDParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionTypeExpressionOLD_4=ruleFunctionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionTypeExpressionOLD_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefWithoutModifiersAccess().getUnionTypeExpressionOLDParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_UnionTypeExpressionOLD_5=ruleUnionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_UnionTypeExpressionOLD_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefWithoutModifiersAccess().getIntersectionTypeExpressionOLDParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IntersectionTypeExpressionOLD_6=ruleIntersectionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IntersectionTypeExpressionOLD_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeRefFunctionTypeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRefFunctionTypeExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefFunctionTypeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeRefFunctionTypeExpression=ruleTypeRefFunctionTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRefFunctionTypeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeRefFunctionTypeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ParameterizedTypeRef_0 = null;

        EObject this_ArrayTypeRef_1 = null;

        EObject this_TypeTypeRef_2 = null;

        EObject this_UnionTypeExpressionOLD_3 = null;

        EObject this_IntersectionTypeExpressionOLD_4 = null;


         enterRule(); 
            
        try {
            {
            int alt573=5;
            switch ( input.LA(1) ) {
            case Promisify:
            case Target:
            case Await:
            case This:
            case Void:
            case Tilde:
            case RULE_IDENTIFIER:
                {
                alt573=1;
                }
                break;
            case LeftSquareBracket:
                {
                alt573=2;
                }
                break;
            case Constructor:
            case Type:
                {
                alt573=3;
                }
                break;
            case Union:
                {
                alt573=4;
                }
                break;
            case Intersection:
                {
                alt573=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 573, 0, input);

                throw nvae;
            }

            switch (alt573) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getParameterizedTypeRefParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedTypeRef_0=ruleParameterizedTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedTypeRef_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getArrayTypeRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayTypeRef_1=ruleArrayTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayTypeRef_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getTypeTypeRefParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeTypeRef_2=ruleTypeTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getUnionTypeExpressionOLDParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_UnionTypeExpressionOLD_3=ruleUnionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_UnionTypeExpressionOLD_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getIntersectionTypeExpressionOLDParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IntersectionTypeExpressionOLD_4=ruleIntersectionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IntersectionTypeExpressionOLD_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeRefForCast() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRefForCast = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefForCastRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeRefForCast=ruleTypeRefForCast();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRefForCast; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeRefForCast() throws RecognitionException {
        EObject current = null;

        EObject this_ParameterizedTypeRef_0 = null;

        EObject this_ArrayTypeRef_1 = null;

        EObject this_ThisTypeRef_2 = null;

        EObject this_TypeTypeRef_3 = null;

        EObject this_FunctionTypeExpressionOLD_4 = null;

        EObject this_ArrowFunctionTypeExpression_5 = null;

        EObject this_UnionTypeExpressionOLD_6 = null;

        EObject this_IntersectionTypeExpressionOLD_7 = null;


         enterRule(); 
            
        try {
            {
            int alt574=8;
            alt574 = dfa574.predict(input);
            switch (alt574) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getParameterizedTypeRefParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedTypeRef_0=ruleParameterizedTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedTypeRef_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getArrayTypeRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayTypeRef_1=ruleArrayTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayTypeRef_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getThisTypeRefParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThisTypeRef_2=ruleThisTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThisTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getTypeTypeRefParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeTypeRef_3=ruleTypeTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeTypeRef_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getFunctionTypeExpressionOLDParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionTypeExpressionOLD_4=ruleFunctionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionTypeExpressionOLD_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getArrowFunctionTypeExpressionParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrowFunctionTypeExpression_5=ruleArrowFunctionTypeExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrowFunctionTypeExpression_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getUnionTypeExpressionOLDParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_UnionTypeExpressionOLD_6=ruleUnionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_UnionTypeExpressionOLD_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getIntersectionTypeExpressionOLDParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IntersectionTypeExpressionOLD_7=ruleIntersectionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IntersectionTypeExpressionOLD_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeArgInTypeTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeArgInTypeTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeArgInTypeTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeArgInTypeTypeRef=ruleTypeArgInTypeTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeArgInTypeTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeArgInTypeTypeRef() throws RecognitionException {
        EObject current = null;

        EObject this_ParameterizedTypeRefNominal_0 = null;

        EObject this_ThisTypeRefNominal_1 = null;

        EObject this_Wildcard_2 = null;


         enterRule(); 
            
        try {
            {
            int alt575=3;
            int LA575_0 = input.LA(1);

            if ( (LA575_0==Promisify||LA575_0==Target||LA575_0==Await||LA575_0==This||LA575_0==Void||LA575_0==RULE_IDENTIFIER) ) {
                alt575=1;
            }
            else if ( (LA575_0==This_1) ) {
                alt575=2;
            }
            else if ( (LA575_0==QuestionMark) && (synpred336_InternalN4JSParser())) {
                alt575=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 575, 0, input);

                throw nvae;
            }
            switch (alt575) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeArgInTypeTypeRefAccess().getParameterizedTypeRefNominalParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedTypeRefNominal_0=ruleParameterizedTypeRefNominal();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedTypeRefNominal_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeArgInTypeTypeRefAccess().getThisTypeRefNominalParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThisTypeRefNominal_1=ruleThisTypeRefNominal();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThisTypeRefNominal_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeArgInTypeTypeRefAccess().getWildcardParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Wildcard_2=ruleWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Wildcard_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleThisTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThisTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThisTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThisTypeRef=ruleThisTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThisTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleThisTypeRef() throws RecognitionException {
        EObject current = null;

        EObject this_ThisTypeRefNominal_0 = null;

        EObject this_ThisTypeRefStructural_1 = null;


         enterRule(); 
            
        try {
            {
            int alt576=2;
            int LA576_0 = input.LA(1);

            if ( (LA576_0==This_1) ) {
                alt576=1;
            }
            else if ( (LA576_0==Tilde) ) {
                alt576=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 576, 0, input);

                throw nvae;
            }
            switch (alt576) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getThisTypeRefAccess().getThisTypeRefNominalParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThisTypeRefNominal_0=ruleThisTypeRefNominal();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThisTypeRefNominal_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getThisTypeRefAccess().getThisTypeRefStructuralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThisTypeRefStructural_1=ruleThisTypeRefStructural();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThisTypeRefStructural_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleThisTypeRefNominal() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThisTypeRefNominal = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThisTypeRefNominalRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThisTypeRefNominal=ruleThisTypeRefNominal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThisTypeRefNominal; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleThisTypeRefNominal() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getThisTypeRefNominalAccess().getThisTypeRefNominalAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,This_1,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getThisTypeRefNominalAccess().getThisKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleThisTypeRefStructural() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThisTypeRefStructural = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThisTypeRefStructuralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThisTypeRefStructural=ruleThisTypeRefStructural();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThisTypeRefStructural; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleThisTypeRefStructural() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_definedTypingStrategy_0_0 = null;

        EObject this_TStructMemberList_3 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getThisTypeRefStructuralAccess().getDefinedTypingStrategyTypingStrategyUseSiteOperatorParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_158);
            lv_definedTypingStrategy_0_0=ruleTypingStrategyUseSiteOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getThisTypeRefStructuralRule());
              	        }
                     		set(
                     			current, 
                     			"definedTypingStrategy",
                      		lv_definedTypingStrategy_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyUseSiteOperator");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,This_1,FOLLOW_159); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getThisTypeRefStructuralAccess().getThisKeyword_1());
                  
            }
            int alt577=2;
            int LA577_0 = input.LA(1);

            if ( (LA577_0==With) ) {
                int LA577_1 = input.LA(2);

                if ( (LA577_1==LeftCurlyBracket) ) {
                    alt577=1;
                }
            }
            switch (alt577) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,With,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getThisTypeRefStructuralAccess().getWithKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getThisTypeRefStructuralRule());
                      		}
                              newCompositeNode(grammarAccess.getThisTypeRefStructuralAccess().getTStructMemberListParserRuleCall_2_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TStructMemberList_3=ruleTStructMemberList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TStructMemberList_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleFunctionTypeExpressionOLD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionTypeExpressionOLD = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionTypeExpressionOLDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionTypeExpressionOLD=ruleFunctionTypeExpressionOLD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionTypeExpressionOLD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFunctionTypeExpressionOLD() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_declaredThisType_5_0 = null;

        EObject lv_ownedTypeVars_9_0 = null;

        EObject lv_ownedTypeVars_11_0 = null;

        EObject this_TAnonymousFormalParameterList_14 = null;

        EObject lv_returnTypeRef_17_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFunctionTypeExpressionOLDAccess().getFunctionTypeExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_160); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getFunctionTypeExpressionOLDAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            int alt578=2;
            int LA578_0 = input.LA(1);

            if ( (LA578_0==CommercialAt) ) {
                alt578=1;
            }
            switch (alt578) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,CommercialAt,FOLLOW_161); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getFunctionTypeExpressionOLDAccess().getCommercialAtKeyword_2_0());
                          
                    }
                    otherlv_3=(Token)match(input,This,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getFunctionTypeExpressionOLDAccess().getThisKeyword_2_1());
                          
                    }
                    otherlv_4=(Token)match(input,LeftParenthesis,FOLLOW_162); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getFunctionTypeExpressionOLDAccess().getLeftParenthesisKeyword_2_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionTypeExpressionOLDAccess().getDeclaredThisTypeTypeRefFunctionTypeExpressionParserRuleCall_2_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_66);
                    lv_declaredThisType_5_0=ruleTypeRefFunctionTypeExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionTypeExpressionOLDRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredThisType",
                              		lv_declaredThisType_5_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefFunctionTypeExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getFunctionTypeExpressionOLDAccess().getRightParenthesisKeyword_2_4());
                          
                    }

                    }
                    break;

            }

            otherlv_7=(Token)match(input,Function,FOLLOW_163); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getFunctionTypeExpressionOLDAccess().getFunctionKeyword_3());
                  
            }
            int alt580=2;
            int LA580_0 = input.LA(1);

            if ( (LA580_0==LessThanSign) ) {
                alt580=1;
            }
            switch (alt580) {
                case 1 :
                    {
                    otherlv_8=(Token)match(input,LessThanSign,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getFunctionTypeExpressionOLDAccess().getLessThanSignKeyword_4_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionTypeExpressionOLDAccess().getOwnedTypeVarsTypeVariableParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_17);
                    lv_ownedTypeVars_9_0=ruleTypeVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionTypeExpressionOLDRule());
                      	        }
                             		add(
                             			current, 
                             			"ownedTypeVars",
                              		lv_ownedTypeVars_9_0, 
                              		"eu.numberfour.n4js.N4JS.TypeVariable");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop579:
                    do {
                        int alt579=2;
                        int LA579_0 = input.LA(1);

                        if ( (LA579_0==Comma) ) {
                            alt579=1;
                        }


                        switch (alt579) {
                    	case 1 :
                    	    {
                    	    otherlv_10=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_10, grammarAccess.getFunctionTypeExpressionOLDAccess().getCommaKeyword_4_2_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getFunctionTypeExpressionOLDAccess().getOwnedTypeVarsTypeVariableParserRuleCall_4_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    lv_ownedTypeVars_11_0=ruleTypeVariable();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getFunctionTypeExpressionOLDRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"ownedTypeVars",
                    	              		lv_ownedTypeVars_11_0, 
                    	              		"eu.numberfour.n4js.N4JS.TypeVariable");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop579;
                        }
                    } while (true);

                    otherlv_12=(Token)match(input,GreaterThanSign,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getFunctionTypeExpressionOLDAccess().getGreaterThanSignKeyword_4_3());
                          
                    }

                    }
                    break;

            }

            otherlv_13=(Token)match(input,LeftParenthesis,FOLLOW_156); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_13, grammarAccess.getFunctionTypeExpressionOLDAccess().getLeftParenthesisKeyword_5());
                  
            }
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionTypeExpressionOLDRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionTypeExpressionOLDAccess().getTAnonymousFormalParameterListParserRuleCall_6()); 
                  
            }
            pushFollow(FOLLOW_66);
            this_TAnonymousFormalParameterList_14=ruleTAnonymousFormalParameterList(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TAnonymousFormalParameterList_14;
                      afterParserOrEnumRuleCall();
                  
            }
            otherlv_15=(Token)match(input,RightParenthesis,FOLLOW_164); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_15, grammarAccess.getFunctionTypeExpressionOLDAccess().getRightParenthesisKeyword_7());
                  
            }
            int alt581=2;
            int LA581_0 = input.LA(1);

            if ( (LA581_0==Colon) ) {
                alt581=1;
            }
            switch (alt581) {
                case 1 :
                    {
                    otherlv_16=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_16, grammarAccess.getFunctionTypeExpressionOLDAccess().getColonKeyword_8_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionTypeExpressionOLDAccess().getReturnTypeRefTypeRefParserRuleCall_8_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_25);
                    lv_returnTypeRef_17_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionTypeExpressionOLDRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_17_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_18=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_18, grammarAccess.getFunctionTypeExpressionOLDAccess().getRightCurlyBracketKeyword_9());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrowFunctionTypeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrowFunctionTypeExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrowFunctionTypeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrowFunctionTypeExpression=ruleArrowFunctionTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrowFunctionTypeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrowFunctionTypeExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject this_TAnonymousFormalParameterList_2 = null;

        EObject lv_returnTypeRef_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrowFunctionTypeExpressionAccess().getFunctionTypeExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_156); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrowFunctionTypeExpressionAccess().getLeftParenthesisKeyword_1());
                  
            }
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getArrowFunctionTypeExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getArrowFunctionTypeExpressionAccess().getTAnonymousFormalParameterListParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_66);
            this_TAnonymousFormalParameterList_2=ruleTAnonymousFormalParameterList(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TAnonymousFormalParameterList_2;
                      afterParserOrEnumRuleCall();
                  
            }
            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getArrowFunctionTypeExpressionAccess().getRightParenthesisKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getArrowFunctionTypeExpressionAccess().getEqualsSignGreaterThanSignKeyword_4());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArrowFunctionTypeExpressionAccess().getReturnTypeRefPrimaryTypeExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_returnTypeRef_5_0=rulePrimaryTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArrowFunctionTypeExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"returnTypeRef",
                      		lv_returnTypeRef_5_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.PrimaryTypeExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTAnonymousFormalParameterList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_fpars_0_0 = null;

        EObject lv_fpars_2_0 = null;


         enterRule(); 
            
        try {
            {
            int alt583=2;
            int LA583_0 = input.LA(1);

            if ( ((LA583_0>=Intersection && LA583_0<=Implements)||(LA583_0>=Promisify && LA583_0<=Abstract)||LA583_0==External||(LA583_0>=Private && LA583_0<=Project)||LA583_0==Public||LA583_0==Static||LA583_0==Target||(LA583_0>=Async && LA583_0<=Await)||LA583_0==Union||(LA583_0>=Yield && LA583_0<=This)||LA583_0==From||LA583_0==This_1||(LA583_0>=Type && LA583_0<=Void)||LA583_0==FullStopFullStopFullStop||(LA583_0>=Get && LA583_0<=Let)||(LA583_0>=Out && LA583_0<=Set)||LA583_0==As||LA583_0==Of||LA583_0==LeftParenthesis||LA583_0==QuestionMark||LA583_0==LeftSquareBracket||LA583_0==LeftCurlyBracket||LA583_0==Tilde||LA583_0==RULE_IDENTIFIER) ) {
                alt583=1;
            }
            switch (alt583) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTAnonymousFormalParameterListAccess().getFparsTAnonymousFormalParameterParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_33);
                    lv_fpars_0_0=ruleTAnonymousFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTAnonymousFormalParameterListRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_0_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TAnonymousFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop582:
                    do {
                        int alt582=2;
                        int LA582_0 = input.LA(1);

                        if ( (LA582_0==Comma) ) {
                            alt582=1;
                        }


                        switch (alt582) {
                    	case 1 :
                    	    {
                    	    otherlv_1=(Token)match(input,Comma,FOLLOW_165); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_1, grammarAccess.getTAnonymousFormalParameterListAccess().getCommaKeyword_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTAnonymousFormalParameterListAccess().getFparsTAnonymousFormalParameterParserRuleCall_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_33);
                    	    lv_fpars_2_0=ruleTAnonymousFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTAnonymousFormalParameterListRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"fpars",
                    	              		lv_fpars_2_0, 
                    	              		"eu.numberfour.n4js.ts.TypeExpressions.TAnonymousFormalParameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop582;
                        }
                    } while (true);


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTAnonymousFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTAnonymousFormalParameter = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTAnonymousFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTAnonymousFormalParameter=ruleTAnonymousFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTAnonymousFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTAnonymousFormalParameter() throws RecognitionException {
        EObject current = null;

        Token lv_variadic_0_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_typeRef_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt584=2;
            int LA584_0 = input.LA(1);

            if ( (LA584_0==FullStopFullStopFullStop) ) {
                alt584=1;
            }
            switch (alt584) {
                case 1 :
                    {
                    {
                    lv_variadic_0_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_166); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_variadic_0_0, grammarAccess.getTAnonymousFormalParameterAccess().getVariadicFullStopFullStopFullStopKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTAnonymousFormalParameterRule());
                      	        }
                             		setWithLastConsumed(current, "variadic", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt585=2;
            alt585 = dfa585.predict(input);
            switch (alt585) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTAnonymousFormalParameterAccess().getNameBindingIdentifierParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_83);
                    lv_name_1_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTAnonymousFormalParameterRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getTAnonymousFormalParameterAccess().getColonKeyword_1_1());
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTAnonymousFormalParameterAccess().getTypeRefTypeRefParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_typeRef_3_0=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTAnonymousFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"typeRef",
                      		lv_typeRef_3_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleUnionTypeExpressionOLD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnionTypeExpressionOLD = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnionTypeExpressionOLDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnionTypeExpressionOLD=ruleUnionTypeExpressionOLD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnionTypeExpressionOLD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleUnionTypeExpressionOLD() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_typeRefs_3_0 = null;

        EObject lv_typeRefs_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getUnionTypeExpressionOLDAccess().getUnionTypeExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Union,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getUnionTypeExpressionOLDAccess().getUnionKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_167); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getUnionTypeExpressionOLDAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getUnionTypeExpressionOLDAccess().getTypeRefsTypeRefWithoutModifiersParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_15);
            lv_typeRefs_3_0=ruleTypeRefWithoutModifiers();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getUnionTypeExpressionOLDRule());
              	        }
                     		add(
                     			current, 
                     			"typeRefs",
                      		lv_typeRefs_3_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithoutModifiers");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop586:
            do {
                int alt586=2;
                int LA586_0 = input.LA(1);

                if ( (LA586_0==Comma) ) {
                    alt586=1;
                }


                switch (alt586) {
            	case 1 :
            	    {
            	    otherlv_4=(Token)match(input,Comma,FOLLOW_167); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getUnionTypeExpressionOLDAccess().getCommaKeyword_4_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getUnionTypeExpressionOLDAccess().getTypeRefsTypeRefWithoutModifiersParserRuleCall_4_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_typeRefs_5_0=ruleTypeRefWithoutModifiers();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getUnionTypeExpressionOLDRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"typeRefs",
            	              		lv_typeRefs_5_0, 
            	              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithoutModifiers");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop586;
                }
            } while (true);

            otherlv_6=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getUnionTypeExpressionOLDAccess().getRightCurlyBracketKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleIntersectionTypeExpressionOLD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntersectionTypeExpressionOLD = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntersectionTypeExpressionOLDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntersectionTypeExpressionOLD=ruleIntersectionTypeExpressionOLD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntersectionTypeExpressionOLD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIntersectionTypeExpressionOLD() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_typeRefs_3_0 = null;

        EObject lv_typeRefs_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getIntersectionTypeExpressionOLDAccess().getIntersectionTypeExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Intersection,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getIntersectionTypeExpressionOLDAccess().getIntersectionKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_167); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getIntersectionTypeExpressionOLDAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIntersectionTypeExpressionOLDAccess().getTypeRefsTypeRefWithoutModifiersParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_15);
            lv_typeRefs_3_0=ruleTypeRefWithoutModifiers();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIntersectionTypeExpressionOLDRule());
              	        }
                     		add(
                     			current, 
                     			"typeRefs",
                      		lv_typeRefs_3_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithoutModifiers");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop587:
            do {
                int alt587=2;
                int LA587_0 = input.LA(1);

                if ( (LA587_0==Comma) ) {
                    alt587=1;
                }


                switch (alt587) {
            	case 1 :
            	    {
            	    otherlv_4=(Token)match(input,Comma,FOLLOW_167); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getIntersectionTypeExpressionOLDAccess().getCommaKeyword_4_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getIntersectionTypeExpressionOLDAccess().getTypeRefsTypeRefWithoutModifiersParserRuleCall_4_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_typeRefs_5_0=ruleTypeRefWithoutModifiers();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getIntersectionTypeExpressionOLDRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"typeRefs",
            	              		lv_typeRefs_5_0, 
            	              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithoutModifiers");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop587;
                }
            } while (true);

            otherlv_6=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getIntersectionTypeExpressionOLDAccess().getRightCurlyBracketKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleParameterizedTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterizedTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterizedTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterizedTypeRef=ruleParameterizedTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterizedTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleParameterizedTypeRef() throws RecognitionException {
        EObject current = null;

        EObject this_ParameterizedTypeRefNominal_0 = null;

        EObject this_ParameterizedTypeRefStructural_1 = null;


         enterRule(); 
            
        try {
            {
            int alt588=2;
            int LA588_0 = input.LA(1);

            if ( (LA588_0==Promisify||LA588_0==Target||LA588_0==Await||LA588_0==This||LA588_0==Void||LA588_0==RULE_IDENTIFIER) ) {
                alt588=1;
            }
            else if ( (LA588_0==Tilde) ) {
                alt588=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 588, 0, input);

                throw nvae;
            }
            switch (alt588) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getParameterizedTypeRefAccess().getParameterizedTypeRefNominalParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedTypeRefNominal_0=ruleParameterizedTypeRefNominal();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedTypeRefNominal_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getParameterizedTypeRefAccess().getParameterizedTypeRefStructuralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedTypeRefStructural_1=ruleParameterizedTypeRefStructural();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedTypeRefStructural_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleParameterizedTypeRefNominal() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterizedTypeRefNominal = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterizedTypeRefNominalRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterizedTypeRefNominal=ruleParameterizedTypeRefNominal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterizedTypeRefNominal; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleParameterizedTypeRefNominal() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_typeArgs_2_0 = null;

        EObject lv_typeArgs_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getParameterizedTypeRefNominalRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedTypeRefNominalAccess().getDeclaredTypeTypeCrossReference_0_0()); 
              	    
            }
            pushFollow(FOLLOW_168);
            ruleTypeReferenceName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt590=2;
            alt590 = dfa590.predict(input);
            switch (alt590) {
                case 1 :
                    {
                    {
                    otherlv_1=(Token)match(input,LessThanSign,FOLLOW_169); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getParameterizedTypeRefNominalAccess().getLessThanSignKeyword_1_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getParameterizedTypeRefNominalAccess().getTypeArgsTypeArgumentParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_17);
                    lv_typeArgs_2_0=ruleTypeArgument();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getParameterizedTypeRefNominalRule());
                      	        }
                             		add(
                             			current, 
                             			"typeArgs",
                              		lv_typeArgs_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeArgument");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop589:
                    do {
                        int alt589=2;
                        int LA589_0 = input.LA(1);

                        if ( (LA589_0==Comma) ) {
                            alt589=1;
                        }


                        switch (alt589) {
                    	case 1 :
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_169); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getParameterizedTypeRefNominalAccess().getCommaKeyword_1_2_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getParameterizedTypeRefNominalAccess().getTypeArgsTypeArgumentParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    lv_typeArgs_4_0=ruleTypeArgument();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getParameterizedTypeRefNominalRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeArgs",
                    	              		lv_typeArgs_4_0, 
                    	              		"eu.numberfour.n4js.ts.TypeExpressions.TypeArgument");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop589;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getParameterizedTypeRefNominalAccess().getGreaterThanSignKeyword_1_3());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrayTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayTypeRef=ruleArrayTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrayTypeRef() throws RecognitionException {
        EObject current = null;

        Token lv_arrayTypeLiteral_0_0=null;
        Token otherlv_2=null;
        EObject lv_typeArgs_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            lv_arrayTypeLiteral_0_0=(Token)match(input,LeftSquareBracket,FOLLOW_169); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_arrayTypeLiteral_0_0, grammarAccess.getArrayTypeRefAccess().getArrayTypeLiteralLeftSquareBracketKeyword_0_0());
                  
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getArrayTypeRefRule());
              	        }
                     		setWithLastConsumed(current, "arrayTypeLiteral", true, "[");
              	    
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArrayTypeRefAccess().getTypeArgsTypeArgumentParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_104);
            lv_typeArgs_1_0=ruleTypeArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArrayTypeRefRule());
              	        }
                     		add(
                     			current, 
                     			"typeArgs",
                      		lv_typeArgs_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeArgument");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getArrayTypeRefAccess().getRightSquareBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleParameterizedTypeRefStructural() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterizedTypeRefStructural = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterizedTypeRefStructuralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterizedTypeRefStructural=ruleParameterizedTypeRefStructural();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterizedTypeRefStructural; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleParameterizedTypeRefStructural() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_definedTypingStrategy_0_0 = null;

        EObject lv_typeArgs_3_0 = null;

        EObject lv_typeArgs_5_0 = null;

        EObject this_TStructMemberList_8 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedTypeRefStructuralAccess().getDefinedTypingStrategyTypingStrategyUseSiteOperatorParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_139);
            lv_definedTypingStrategy_0_0=ruleTypingStrategyUseSiteOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterizedTypeRefStructuralRule());
              	        }
                     		set(
                     			current, 
                     			"definedTypingStrategy",
                      		lv_definedTypingStrategy_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyUseSiteOperator");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getParameterizedTypeRefStructuralRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedTypeRefStructuralAccess().getDeclaredTypeTypeCrossReference_1_0()); 
              	    
            }
            pushFollow(FOLLOW_170);
            ruleTypeReferenceName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt592=2;
            alt592 = dfa592.predict(input);
            switch (alt592) {
                case 1 :
                    {
                    {
                    otherlv_2=(Token)match(input,LessThanSign,FOLLOW_169); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getParameterizedTypeRefStructuralAccess().getLessThanSignKeyword_2_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getParameterizedTypeRefStructuralAccess().getTypeArgsTypeArgumentParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_17);
                    lv_typeArgs_3_0=ruleTypeArgument();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getParameterizedTypeRefStructuralRule());
                      	        }
                             		add(
                             			current, 
                             			"typeArgs",
                              		lv_typeArgs_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeArgument");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop591:
                    do {
                        int alt591=2;
                        int LA591_0 = input.LA(1);

                        if ( (LA591_0==Comma) ) {
                            alt591=1;
                        }


                        switch (alt591) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_169); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getParameterizedTypeRefStructuralAccess().getCommaKeyword_2_2_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getParameterizedTypeRefStructuralAccess().getTypeArgsTypeArgumentParserRuleCall_2_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    lv_typeArgs_5_0=ruleTypeArgument();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getParameterizedTypeRefStructuralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeArgs",
                    	              		lv_typeArgs_5_0, 
                    	              		"eu.numberfour.n4js.ts.TypeExpressions.TypeArgument");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop591;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,GreaterThanSign,FOLLOW_159); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getParameterizedTypeRefStructuralAccess().getGreaterThanSignKeyword_2_3());
                          
                    }

                    }
                    break;

            }
            int alt593=2;
            int LA593_0 = input.LA(1);

            if ( (LA593_0==With) ) {
                int LA593_1 = input.LA(2);

                if ( (LA593_1==LeftCurlyBracket) ) {
                    alt593=1;
                }
            }
            switch (alt593) {
                case 1 :
                    {
                    otherlv_7=(Token)match(input,With,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getParameterizedTypeRefStructuralAccess().getWithKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getParameterizedTypeRefStructuralRule());
                      		}
                              newCompositeNode(grammarAccess.getParameterizedTypeRefStructuralAccess().getTStructMemberListParserRuleCall_3_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TStructMemberList_8=ruleTStructMemberList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TStructMemberList_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTStructMemberList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_astStructuralMembers_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftCurlyBracket,FOLLOW_171); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTStructMemberListAccess().getLeftCurlyBracketKeyword_0());
                  
            }
            loop595:
            do {
                int alt595=2;
                int LA595_0 = input.LA(1);

                if ( ((LA595_0>=Intersection && LA595_0<=With)||(LA595_0>=For && LA595_0<=Var)||(LA595_0>=As && LA595_0<=Of)||LA595_0==LessThanSign||LA595_0==RULE_IDENTIFIER) ) {
                    alt595=1;
                }


                switch (alt595) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTStructMemberListAccess().getAstStructuralMembersTStructMemberParserRuleCall_1_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_172);
            	    lv_astStructuralMembers_1_0=ruleTStructMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTStructMemberListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"astStructuralMembers",
            	              		lv_astStructuralMembers_1_0, 
            	              		"eu.numberfour.n4js.ts.TypeExpressions.TStructMember");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    int alt594=3;
            	    int LA594_0 = input.LA(1);

            	    if ( (LA594_0==Semicolon) ) {
            	        alt594=1;
            	    }
            	    else if ( (LA594_0==Comma) ) {
            	        alt594=2;
            	    }
            	    switch (alt594) {
            	        case 1 :
            	            {
            	            otherlv_2=(Token)match(input,Semicolon,FOLLOW_171); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_2, grammarAccess.getTStructMemberListAccess().getSemicolonKeyword_1_1_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            {
            	            otherlv_3=(Token)match(input,Comma,FOLLOW_171); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_3, grammarAccess.getTStructMemberListAccess().getCommaKeyword_1_1_1());
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop595;
                }
            } while (true);

            otherlv_4=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getTStructMemberListAccess().getRightCurlyBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTStructMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTStructMember = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTStructMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTStructMember=ruleTStructMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTStructMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTStructMember() throws RecognitionException {
        EObject current = null;

        EObject this_TStructGetter_0 = null;

        EObject this_TStructSetter_1 = null;

        EObject this_TStructMethod_2 = null;

        EObject this_TStructField_3 = null;


         enterRule(); 
            
        try {
            {
            int alt596=4;
            alt596 = dfa596.predict(input);
            switch (alt596) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTStructMemberAccess().getTStructGetterParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TStructGetter_0=ruleTStructGetter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TStructGetter_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTStructMemberAccess().getTStructSetterParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TStructSetter_1=ruleTStructSetter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TStructSetter_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTStructMemberAccess().getTStructMethodParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TStructMethod_2=ruleTStructMethod();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TStructMethod_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTStructMemberAccess().getTStructFieldParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TStructField_3=ruleTStructField();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TStructField_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTStructMethod() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTStructMethod = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTStructMethodRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTStructMethod=ruleTStructMethod();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTStructMethod; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTStructMethod() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        EObject lv_typeVars_2_0 = null;

        EObject lv_typeVars_4_0 = null;

        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject this_TAnonymousFormalParameterList_8 = null;

        EObject lv_returnTypeRef_11_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTStructMethodAccess().getTStructMethodAction_0_0_0(),
                          current);
                  
            }

            }
            int alt598=2;
            int LA598_0 = input.LA(1);

            if ( (LA598_0==LessThanSign) ) {
                alt598=1;
            }
            switch (alt598) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,LessThanSign,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTStructMethodAccess().getLessThanSignKeyword_0_0_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTStructMethodAccess().getTypeVarsTypeVariableParserRuleCall_0_0_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_17);
                    lv_typeVars_2_0=ruleTypeVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTStructMethodRule());
                      	        }
                             		add(
                             			current, 
                             			"typeVars",
                              		lv_typeVars_2_0, 
                              		"eu.numberfour.n4js.N4JS.TypeVariable");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop597:
                    do {
                        int alt597=2;
                        int LA597_0 = input.LA(1);

                        if ( (LA597_0==Comma) ) {
                            alt597=1;
                        }


                        switch (alt597) {
                    	case 1 :
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getTStructMethodAccess().getCommaKeyword_0_0_1_2_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTStructMethodAccess().getTypeVarsTypeVariableParserRuleCall_0_0_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    lv_typeVars_4_0=ruleTypeVariable();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTStructMethodRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeVars",
                    	              		lv_typeVars_4_0, 
                    	              		"eu.numberfour.n4js.N4JS.TypeVariable");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop597;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,GreaterThanSign,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getTStructMethodAccess().getGreaterThanSignKeyword_0_0_1_3());
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTStructMethodAccess().getNameIdentifierNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_53);
            lv_name_6_0=ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTStructMethodRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_6_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_7=(Token)match(input,LeftParenthesis,FOLLOW_156); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getTStructMethodAccess().getLeftParenthesisKeyword_0_0_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getTStructMethodRule());
              		}
                      newCompositeNode(grammarAccess.getTStructMethodAccess().getTAnonymousFormalParameterListParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_66);
            this_TAnonymousFormalParameterList_8=ruleTAnonymousFormalParameterList(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TAnonymousFormalParameterList_8;
                      afterParserOrEnumRuleCall();
                  
            }
            otherlv_9=(Token)match(input,RightParenthesis,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getTStructMethodAccess().getRightParenthesisKeyword_2());
                  
            }
            int alt599=2;
            int LA599_0 = input.LA(1);

            if ( (LA599_0==Colon) ) {
                alt599=1;
            }
            switch (alt599) {
                case 1 :
                    {
                    otherlv_10=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getTStructMethodAccess().getColonKeyword_3_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTStructMethodAccess().getReturnTypeRefTypeRefParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_returnTypeRef_11_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTStructMethodRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_11_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTStructField() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTStructField = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTStructFieldRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTStructField=ruleTStructField();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTStructField; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTStructField() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_typeRef_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTStructFieldAccess().getNameIdentifierNameParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_43);
            lv_name_0_0=ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTStructFieldRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt600=2;
            int LA600_0 = input.LA(1);

            if ( (LA600_0==Colon) ) {
                alt600=1;
            }
            switch (alt600) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTStructFieldAccess().getColonKeyword_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTStructFieldAccess().getTypeRefTypeRefParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeRef_2_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTStructFieldRule());
                      	        }
                             		set(
                             			current, 
                             			"typeRef",
                              		lv_typeRef_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTStructGetter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTStructGetter = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTStructGetterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTStructGetter=ruleTStructGetter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTStructGetter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTStructGetter() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_declaredTypeRef_6_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTStructGetterAccess().getTStructGetterAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Get,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTStructGetterAccess().getGetKeyword_0_0_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTStructGetterAccess().getNameIdentifierNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_53);
            lv_name_2_0=ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTStructGetterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_66); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getTStructGetterAccess().getLeftParenthesisKeyword_1());
                  
            }
            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getTStructGetterAccess().getRightParenthesisKeyword_2());
                  
            }
            int alt601=2;
            int LA601_0 = input.LA(1);

            if ( (LA601_0==Colon) ) {
                alt601=1;
            }
            switch (alt601) {
                case 1 :
                    {
                    otherlv_5=(Token)match(input,Colon,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getTStructGetterAccess().getColonKeyword_3_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTStructGetterAccess().getDeclaredTypeRefTypeRefParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaredTypeRef_6_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTStructGetterRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredTypeRef",
                              		lv_declaredTypeRef_6_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTStructSetter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTStructSetter = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTStructSetterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTStructSetter=ruleTStructSetter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTStructSetter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTStructSetter() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_fpar_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTStructSetterAccess().getTStructSetterAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Set,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTStructSetterAccess().getSetKeyword_0_0_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTStructSetterAccess().getNameIdentifierNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_53);
            lv_name_2_0=ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTStructSetterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_165); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getTStructSetterAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTStructSetterAccess().getFparTAnonymousFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_66);
            lv_fpar_4_0=ruleTAnonymousFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTStructSetterRule());
              	        }
                     		set(
                     			current, 
                     			"fpar",
                      		lv_fpar_4_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TAnonymousFormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getTStructSetterAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleTypingStrategyUseSiteOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTypingStrategyUseSiteOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypingStrategyUseSiteOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypingStrategyUseSiteOperator=ruleTypingStrategyUseSiteOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypingStrategyUseSiteOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleTypingStrategyUseSiteOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_STRUCTMODSUFFIX_2=null;

         enterRule(); 
            
        try {
            {
            {
            kw=(Token)match(input,Tilde,FOLLOW_173); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getTypingStrategyUseSiteOperatorAccess().getTildeKeyword_0()); 
                  
            }
            int alt602=3;
            int LA602_0 = input.LA(1);

            if ( (LA602_0==Tilde) ) {
                alt602=1;
            }
            else if ( (LA602_0==RULE_STRUCTMODSUFFIX) ) {
                alt602=2;
            }
            switch (alt602) {
                case 1 :
                    {
                    kw=(Token)match(input,Tilde,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypingStrategyUseSiteOperatorAccess().getTildeKeyword_1_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    this_STRUCTMODSUFFIX_2=(Token)match(input,RULE_STRUCTMODSUFFIX,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_STRUCTMODSUFFIX_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRUCTMODSUFFIX_2, grammarAccess.getTypingStrategyUseSiteOperatorAccess().getSTRUCTMODSUFFIXTerminalRuleCall_1_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleTypingStrategyDefSiteOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTypingStrategyDefSiteOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypingStrategyDefSiteOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypingStrategyDefSiteOperator=ruleTypingStrategyDefSiteOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypingStrategyDefSiteOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleTypingStrategyDefSiteOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,Tilde,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getTypingStrategyDefSiteOperatorAccess().getTildeKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeTypeRef=ruleTypeTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeTypeRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_constructorRef_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_typeArg_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTypeTypeRefAccess().getTypeTypeRefAction_0(),
                          current);
                  
            }

            }
            int alt603=2;
            int LA603_0 = input.LA(1);

            if ( (LA603_0==Type) ) {
                alt603=1;
            }
            else if ( (LA603_0==Constructor) ) {
                alt603=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 603, 0, input);

                throw nvae;
            }
            switch (alt603) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Type,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTypeTypeRefAccess().getTypeKeyword_1_0());
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    lv_constructorRef_2_0=(Token)match(input,Constructor,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_constructorRef_2_0, grammarAccess.getTypeTypeRefAccess().getConstructorRefConstructorKeyword_1_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTypeTypeRefRule());
                      	        }
                             		setWithLastConsumed(current, "constructorRef", true, "constructor");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_174); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getTypeTypeRefAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypeTypeRefAccess().getTypeArgTypeArgInTypeTypeRefParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_25);
            lv_typeArg_4_0=ruleTypeArgInTypeTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeTypeRefRule());
              	        }
                     		set(
                     			current, 
                     			"typeArg",
                      		lv_typeArg_4_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeArgInTypeTypeRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getTypeTypeRefAccess().getRightCurlyBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeArgument = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeArgument=ruleTypeArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeArgument() throws RecognitionException {
        EObject current = null;

        EObject this_Wildcard_0 = null;

        EObject this_WildcardNewNotation_1 = null;

        EObject this_TypeRef_2 = null;


         enterRule(); 
            
        try {
            {
            int alt604=3;
            switch ( input.LA(1) ) {
            case QuestionMark:
                {
                int LA604_1 = input.LA(2);

                if ( (synpred346_InternalN4JSParser()) ) {
                    alt604=1;
                }
                else if ( (true) ) {
                    alt604=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 604, 1, input);

                    throw nvae;
                }
                }
                break;
            case Out:
            case In:
                {
                alt604=2;
                }
                break;
            case Intersection:
            case Constructor:
            case Promisify:
            case Target:
            case Await:
            case Union:
            case This:
            case This_1:
            case Type:
            case Void:
            case LeftParenthesis:
            case LeftSquareBracket:
            case LeftCurlyBracket:
            case Tilde:
            case RULE_IDENTIFIER:
                {
                alt604=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 604, 0, input);

                throw nvae;
            }

            switch (alt604) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeArgumentAccess().getWildcardParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Wildcard_0=ruleWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Wildcard_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeArgumentAccess().getWildcardNewNotationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WildcardNewNotation_1=ruleWildcardNewNotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_WildcardNewNotation_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeArgumentAccess().getTypeRefParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeRef_2=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleWildcard() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcard = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWildcard=ruleWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcard; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleWildcard() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_declaredUpperBound_3_0 = null;

        EObject lv_declaredLowerBound_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getWildcardAccess().getWildcardAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,QuestionMark,FOLLOW_175); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWildcardAccess().getQuestionMarkKeyword_0_0_1());
                  
            }

            }


            }
            int alt605=3;
            int LA605_0 = input.LA(1);

            if ( (LA605_0==Extends) ) {
                alt605=1;
            }
            else if ( (LA605_0==Super) ) {
                alt605=2;
            }
            switch (alt605) {
                case 1 :
                    {
                    {
                    otherlv_2=(Token)match(input,Extends,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getWildcardAccess().getExtendsKeyword_1_0_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWildcardAccess().getDeclaredUpperBoundTypeRefParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaredUpperBound_3_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredUpperBound",
                              		lv_declaredUpperBound_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    otherlv_4=(Token)match(input,Super,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getWildcardAccess().getSuperKeyword_1_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWildcardAccess().getDeclaredLowerBoundTypeRefParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaredLowerBound_5_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredLowerBound",
                              		lv_declaredLowerBound_5_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleWildcardNewNotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardNewNotation = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardNewNotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWildcardNewNotation=ruleWildcardNewNotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardNewNotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleWildcardNewNotation() throws RecognitionException {
        EObject current = null;

        Token lv_usingInOutNotation_0_0=null;
        Token lv_usingInOutNotation_2_0=null;
        EObject lv_declaredUpperBound_1_0 = null;

        EObject lv_declaredLowerBound_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt606=2;
            int LA606_0 = input.LA(1);

            if ( (LA606_0==Out) ) {
                alt606=1;
            }
            else if ( (LA606_0==In) ) {
                alt606=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 606, 0, input);

                throw nvae;
            }
            switch (alt606) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_usingInOutNotation_0_0=(Token)match(input,Out,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_usingInOutNotation_0_0, grammarAccess.getWildcardNewNotationAccess().getUsingInOutNotationOutKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getWildcardNewNotationRule());
                      	        }
                             		setWithLastConsumed(current, "usingInOutNotation", true, "out");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWildcardNewNotationAccess().getDeclaredUpperBoundTypeRefParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaredUpperBound_1_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardNewNotationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredUpperBound",
                              		lv_declaredUpperBound_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    lv_usingInOutNotation_2_0=(Token)match(input,In,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_usingInOutNotation_2_0, grammarAccess.getWildcardNewNotationAccess().getUsingInOutNotationInKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getWildcardNewNotationRule());
                      	        }
                             		setWithLastConsumed(current, "usingInOutNotation", true, "in");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWildcardNewNotationAccess().getDeclaredLowerBoundTypeRefParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaredLowerBound_3_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardNewNotationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredLowerBound",
                              		lv_declaredLowerBound_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleUndefModifierToken() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUndefModifierToken = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUndefModifierTokenRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUndefModifierToken=ruleUndefModifierToken();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUndefModifierToken.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleUndefModifierToken() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,QuestionMark,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getUndefModifierTokenAccess().getQuestionMarkKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleBindingIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBindingIdentifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingIdentifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingIdentifier=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingIdentifier.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleBindingIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENTIFIER_0=null;
        Token kw=null;
        AntlrDatatypeRuleToken this_N4Keyword_2 = null;


         enterRule(); 
            
        try {
            {
            int alt607=3;
            switch ( input.LA(1) ) {
            case RULE_IDENTIFIER:
                {
                alt607=1;
                }
                break;
            case Yield:
                {
                alt607=2;
                }
                break;
            case Intersection:
            case Constructor:
            case Implements:
            case Promisify:
            case Interface:
            case Protected:
            case Abstract:
            case External:
            case Private:
            case Project:
            case Public:
            case Static:
            case Target:
            case Async:
            case Await:
            case Union:
            case This:
            case From:
            case Type:
            case Get:
            case Let:
            case Out:
            case Set:
            case As:
            case Of:
                {
                alt607=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 607, 0, input);

                throw nvae;
            }

            switch (alt607) {
                case 1 :
                    {
                    this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENTIFIER_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENTIFIER_0, grammarAccess.getBindingIdentifierAccess().getIDENTIFIERTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,Yield,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getBindingIdentifierAccess().getYieldKeyword_1_0()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBindingIdentifierAccess().getN4KeywordParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4Keyword_2=ruleN4Keyword();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_N4Keyword_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken norm1_BindingIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENTIFIER_0=null;
        AntlrDatatypeRuleToken this_N4Keyword_1 = null;


         enterRule(); 
            
        try {
            {
            int alt608=2;
            int LA608_0 = input.LA(1);

            if ( (LA608_0==RULE_IDENTIFIER) ) {
                alt608=1;
            }
            else if ( ((LA608_0>=Intersection && LA608_0<=Implements)||(LA608_0>=Promisify && LA608_0<=Abstract)||LA608_0==External||(LA608_0>=Private && LA608_0<=Project)||LA608_0==Public||LA608_0==Static||LA608_0==Target||(LA608_0>=Async && LA608_0<=Await)||LA608_0==Union||LA608_0==This||LA608_0==From||LA608_0==Type||(LA608_0>=Get && LA608_0<=Let)||(LA608_0>=Out && LA608_0<=Set)||LA608_0==As||LA608_0==Of) ) {
                alt608=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 608, 0, input);

                throw nvae;
            }
            switch (alt608) {
                case 1 :
                    {
                    this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENTIFIER_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENTIFIER_0, grammarAccess.getBindingIdentifierAccess().getIDENTIFIERTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBindingIdentifierAccess().getN4KeywordParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4Keyword_1=ruleN4Keyword();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_N4Keyword_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleIdentifierName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdentifierName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentifierName=ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifierName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleIdentifierName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENTIFIER_0=null;
        AntlrDatatypeRuleToken this_ReservedWord_1 = null;

        AntlrDatatypeRuleToken this_N4Keyword_2 = null;


         enterRule(); 
            
        try {
            {
            int alt609=3;
            switch ( input.LA(1) ) {
            case RULE_IDENTIFIER:
                {
                alt609=1;
                }
                break;
            case Instanceof:
            case Continue:
            case Debugger:
            case Function:
            case Default:
            case Extends:
            case Finally:
            case Delete:
            case Export:
            case Import:
            case Return:
            case Switch:
            case Typeof:
            case Break:
            case Catch:
            case Class:
            case Const:
            case False:
            case Super:
            case Throw:
            case While:
            case Yield:
            case Case:
            case Else:
            case Enum:
            case Null:
            case This_1:
            case True:
            case Void:
            case With:
            case For:
            case New:
            case Try:
            case Var:
            case Do:
            case If:
            case In:
                {
                alt609=2;
                }
                break;
            case Intersection:
            case Constructor:
            case Implements:
            case Promisify:
            case Interface:
            case Protected:
            case Abstract:
            case External:
            case Private:
            case Project:
            case Public:
            case Static:
            case Target:
            case Async:
            case Await:
            case Union:
            case This:
            case From:
            case Type:
            case Get:
            case Let:
            case Out:
            case Set:
            case As:
            case Of:
                {
                alt609=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 609, 0, input);

                throw nvae;
            }

            switch (alt609) {
                case 1 :
                    {
                    this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENTIFIER_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENTIFIER_0, grammarAccess.getIdentifierNameAccess().getIDENTIFIERTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIdentifierNameAccess().getReservedWordParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ReservedWord_1=ruleReservedWord();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ReservedWord_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIdentifierNameAccess().getN4KeywordParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4Keyword_2=ruleN4Keyword();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_N4Keyword_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleReservedWord() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleReservedWord = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReservedWordRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReservedWord=ruleReservedWord();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReservedWord.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleReservedWord() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt610=37;
            switch ( input.LA(1) ) {
            case Break:
                {
                alt610=1;
                }
                break;
            case Case:
                {
                alt610=2;
                }
                break;
            case Catch:
                {
                alt610=3;
                }
                break;
            case Class:
                {
                alt610=4;
                }
                break;
            case Const:
                {
                alt610=5;
                }
                break;
            case Continue:
                {
                alt610=6;
                }
                break;
            case Debugger:
                {
                alt610=7;
                }
                break;
            case Default:
                {
                alt610=8;
                }
                break;
            case Delete:
                {
                alt610=9;
                }
                break;
            case Do:
                {
                alt610=10;
                }
                break;
            case Else:
                {
                alt610=11;
                }
                break;
            case Export:
                {
                alt610=12;
                }
                break;
            case Extends:
                {
                alt610=13;
                }
                break;
            case Finally:
                {
                alt610=14;
                }
                break;
            case For:
                {
                alt610=15;
                }
                break;
            case Function:
                {
                alt610=16;
                }
                break;
            case If:
                {
                alt610=17;
                }
                break;
            case Import:
                {
                alt610=18;
                }
                break;
            case In:
                {
                alt610=19;
                }
                break;
            case Instanceof:
                {
                alt610=20;
                }
                break;
            case New:
                {
                alt610=21;
                }
                break;
            case Return:
                {
                alt610=22;
                }
                break;
            case Super:
                {
                alt610=23;
                }
                break;
            case Switch:
                {
                alt610=24;
                }
                break;
            case This_1:
                {
                alt610=25;
                }
                break;
            case Throw:
                {
                alt610=26;
                }
                break;
            case Try:
                {
                alt610=27;
                }
                break;
            case Typeof:
                {
                alt610=28;
                }
                break;
            case Var:
                {
                alt610=29;
                }
                break;
            case Void:
                {
                alt610=30;
                }
                break;
            case While:
                {
                alt610=31;
                }
                break;
            case With:
                {
                alt610=32;
                }
                break;
            case Yield:
                {
                alt610=33;
                }
                break;
            case Null:
                {
                alt610=34;
                }
                break;
            case True:
                {
                alt610=35;
                }
                break;
            case False:
                {
                alt610=36;
                }
                break;
            case Enum:
                {
                alt610=37;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 610, 0, input);

                throw nvae;
            }

            switch (alt610) {
                case 1 :
                    {
                    kw=(Token)match(input,Break,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getBreakKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,Case,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getCaseKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,Catch,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getCatchKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,Class,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getClassKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    kw=(Token)match(input,Const,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getConstKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    kw=(Token)match(input,Continue,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getContinueKeyword_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    kw=(Token)match(input,Debugger,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getDebuggerKeyword_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    kw=(Token)match(input,Default,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getDefaultKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    {
                    kw=(Token)match(input,Delete,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getDeleteKeyword_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    kw=(Token)match(input,Do,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getDoKeyword_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    kw=(Token)match(input,Else,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getElseKeyword_10()); 
                          
                    }

                    }
                    break;
                case 12 :
                    {
                    kw=(Token)match(input,Export,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getExportKeyword_11()); 
                          
                    }

                    }
                    break;
                case 13 :
                    {
                    kw=(Token)match(input,Extends,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getExtendsKeyword_12()); 
                          
                    }

                    }
                    break;
                case 14 :
                    {
                    kw=(Token)match(input,Finally,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getFinallyKeyword_13()); 
                          
                    }

                    }
                    break;
                case 15 :
                    {
                    kw=(Token)match(input,For,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getForKeyword_14()); 
                          
                    }

                    }
                    break;
                case 16 :
                    {
                    kw=(Token)match(input,Function,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getFunctionKeyword_15()); 
                          
                    }

                    }
                    break;
                case 17 :
                    {
                    kw=(Token)match(input,If,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getIfKeyword_16()); 
                          
                    }

                    }
                    break;
                case 18 :
                    {
                    kw=(Token)match(input,Import,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getImportKeyword_17()); 
                          
                    }

                    }
                    break;
                case 19 :
                    {
                    kw=(Token)match(input,In,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getInKeyword_18()); 
                          
                    }

                    }
                    break;
                case 20 :
                    {
                    kw=(Token)match(input,Instanceof,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getInstanceofKeyword_19()); 
                          
                    }

                    }
                    break;
                case 21 :
                    {
                    kw=(Token)match(input,New,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getNewKeyword_20()); 
                          
                    }

                    }
                    break;
                case 22 :
                    {
                    kw=(Token)match(input,Return,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getReturnKeyword_21()); 
                          
                    }

                    }
                    break;
                case 23 :
                    {
                    kw=(Token)match(input,Super,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getSuperKeyword_22()); 
                          
                    }

                    }
                    break;
                case 24 :
                    {
                    kw=(Token)match(input,Switch,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getSwitchKeyword_23()); 
                          
                    }

                    }
                    break;
                case 25 :
                    {
                    kw=(Token)match(input,This_1,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getThisKeyword_24()); 
                          
                    }

                    }
                    break;
                case 26 :
                    {
                    kw=(Token)match(input,Throw,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getThrowKeyword_25()); 
                          
                    }

                    }
                    break;
                case 27 :
                    {
                    kw=(Token)match(input,Try,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getTryKeyword_26()); 
                          
                    }

                    }
                    break;
                case 28 :
                    {
                    kw=(Token)match(input,Typeof,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getTypeofKeyword_27()); 
                          
                    }

                    }
                    break;
                case 29 :
                    {
                    kw=(Token)match(input,Var,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getVarKeyword_28()); 
                          
                    }

                    }
                    break;
                case 30 :
                    {
                    kw=(Token)match(input,Void,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getVoidKeyword_29()); 
                          
                    }

                    }
                    break;
                case 31 :
                    {
                    kw=(Token)match(input,While,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getWhileKeyword_30()); 
                          
                    }

                    }
                    break;
                case 32 :
                    {
                    kw=(Token)match(input,With,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getWithKeyword_31()); 
                          
                    }

                    }
                    break;
                case 33 :
                    {
                    kw=(Token)match(input,Yield,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getYieldKeyword_32()); 
                          
                    }

                    }
                    break;
                case 34 :
                    {
                    kw=(Token)match(input,Null,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getNullKeyword_33()); 
                          
                    }

                    }
                    break;
                case 35 :
                    {
                    kw=(Token)match(input,True,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getTrueKeyword_34()); 
                          
                    }

                    }
                    break;
                case 36 :
                    {
                    kw=(Token)match(input,False,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getFalseKeyword_35()); 
                          
                    }

                    }
                    break;
                case 37 :
                    {
                    kw=(Token)match(input,Enum,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getEnumKeyword_36()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleN4Keyword() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleN4Keyword = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4KeywordRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4Keyword=ruleN4Keyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4Keyword.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleN4Keyword() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt611=25;
            switch ( input.LA(1) ) {
            case Get:
                {
                alt611=1;
                }
                break;
            case Set:
                {
                alt611=2;
                }
                break;
            case Let:
                {
                alt611=3;
                }
                break;
            case Project:
                {
                alt611=4;
                }
                break;
            case External:
                {
                alt611=5;
                }
                break;
            case Abstract:
                {
                alt611=6;
                }
                break;
            case Static:
                {
                alt611=7;
                }
                break;
            case As:
                {
                alt611=8;
                }
                break;
            case From:
                {
                alt611=9;
                }
                break;
            case Constructor:
                {
                alt611=10;
                }
                break;
            case Of:
                {
                alt611=11;
                }
                break;
            case Target:
                {
                alt611=12;
                }
                break;
            case Type:
                {
                alt611=13;
                }
                break;
            case Union:
                {
                alt611=14;
                }
                break;
            case Intersection:
                {
                alt611=15;
                }
                break;
            case This:
                {
                alt611=16;
                }
                break;
            case Promisify:
                {
                alt611=17;
                }
                break;
            case Await:
                {
                alt611=18;
                }
                break;
            case Async:
                {
                alt611=19;
                }
                break;
            case Implements:
                {
                alt611=20;
                }
                break;
            case Interface:
                {
                alt611=21;
                }
                break;
            case Private:
                {
                alt611=22;
                }
                break;
            case Protected:
                {
                alt611=23;
                }
                break;
            case Public:
                {
                alt611=24;
                }
                break;
            case Out:
                {
                alt611=25;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 611, 0, input);

                throw nvae;
            }

            switch (alt611) {
                case 1 :
                    {
                    kw=(Token)match(input,Get,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getGetKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,Set,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getSetKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,Let,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getLetKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,Project,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getProjectKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    kw=(Token)match(input,External,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getExternalKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    kw=(Token)match(input,Abstract,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getAbstractKeyword_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    kw=(Token)match(input,Static,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getStaticKeyword_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    kw=(Token)match(input,As,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getAsKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    {
                    kw=(Token)match(input,From,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getFromKeyword_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    kw=(Token)match(input,Constructor,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getConstructorKeyword_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    kw=(Token)match(input,Of,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getOfKeyword_10()); 
                          
                    }

                    }
                    break;
                case 12 :
                    {
                    kw=(Token)match(input,Target,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getTargetKeyword_11()); 
                          
                    }

                    }
                    break;
                case 13 :
                    {
                    kw=(Token)match(input,Type,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getTypeKeyword_12()); 
                          
                    }

                    }
                    break;
                case 14 :
                    {
                    kw=(Token)match(input,Union,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getUnionKeyword_13()); 
                          
                    }

                    }
                    break;
                case 15 :
                    {
                    kw=(Token)match(input,Intersection,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getIntersectionKeyword_14()); 
                          
                    }

                    }
                    break;
                case 16 :
                    {
                    kw=(Token)match(input,This,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getThisKeyword_15()); 
                          
                    }

                    }
                    break;
                case 17 :
                    {
                    kw=(Token)match(input,Promisify,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getPromisifyKeyword_16()); 
                          
                    }

                    }
                    break;
                case 18 :
                    {
                    kw=(Token)match(input,Await,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getAwaitKeyword_17()); 
                          
                    }

                    }
                    break;
                case 19 :
                    {
                    kw=(Token)match(input,Async,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getAsyncKeyword_18()); 
                          
                    }

                    }
                    break;
                case 20 :
                    {
                    kw=(Token)match(input,Implements,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getImplementsKeyword_19()); 
                          
                    }

                    }
                    break;
                case 21 :
                    {
                    kw=(Token)match(input,Interface,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getInterfaceKeyword_20()); 
                          
                    }

                    }
                    break;
                case 22 :
                    {
                    kw=(Token)match(input,Private,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getPrivateKeyword_21()); 
                          
                    }

                    }
                    break;
                case 23 :
                    {
                    kw=(Token)match(input,Protected,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getProtectedKeyword_22()); 
                          
                    }

                    }
                    break;
                case 24 :
                    {
                    kw=(Token)match(input,Public,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getPublicKeyword_23()); 
                          
                    }

                    }
                    break;
                case 25 :
                    {
                    kw=(Token)match(input,Out,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getOutKeyword_24()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator ruleVariableStatementKeyword() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;

         enterRule(); 
        try {
            {
            int alt612=3;
            switch ( input.LA(1) ) {
            case Var:
                {
                alt612=1;
                }
                break;
            case Const:
                {
                alt612=2;
                }
                break;
            case Let:
                {
                alt612=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 612, 0, input);

                throw nvae;
            }

            switch (alt612) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,Var,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getVariableStatementKeywordAccess().getVarEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getVariableStatementKeywordAccess().getVarEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,Const,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getVariableStatementKeywordAccess().getConstEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getVariableStatementKeywordAccess().getConstEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    enumLiteral_2=(Token)match(input,Let,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getVariableStatementKeywordAccess().getLetEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getVariableStatementKeywordAccess().getLetEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator rulePostfixOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;

         enterRule(); 
        try {
            {
            int alt613=2;
            int LA613_0 = input.LA(1);

            if ( (LA613_0==PlusSignPlusSign) ) {
                alt613=1;
            }
            else if ( (LA613_0==HyphenMinusHyphenMinus) ) {
                alt613=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 613, 0, input);

                throw nvae;
            }
            switch (alt613) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,PlusSignPlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPostfixOperatorAccess().getIncEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getPostfixOperatorAccess().getIncEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPostfixOperatorAccess().getDecEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getPostfixOperatorAccess().getDecEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator ruleUnaryOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;

         enterRule(); 
        try {
            {
            int alt614=9;
            switch ( input.LA(1) ) {
            case Delete:
                {
                alt614=1;
                }
                break;
            case Void:
                {
                alt614=2;
                }
                break;
            case Typeof:
                {
                alt614=3;
                }
                break;
            case PlusSignPlusSign:
                {
                alt614=4;
                }
                break;
            case HyphenMinusHyphenMinus:
                {
                alt614=5;
                }
                break;
            case PlusSign:
                {
                alt614=6;
                }
                break;
            case HyphenMinus:
                {
                alt614=7;
                }
                break;
            case Tilde:
                {
                alt614=8;
                }
                break;
            case ExclamationMark:
                {
                alt614=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 614, 0, input);

                throw nvae;
            }

            switch (alt614) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,Delete,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getDeleteEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getUnaryOperatorAccess().getDeleteEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,Void,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getVoidEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getUnaryOperatorAccess().getVoidEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    enumLiteral_2=(Token)match(input,Typeof,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getTypeofEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getUnaryOperatorAccess().getTypeofEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    enumLiteral_3=(Token)match(input,PlusSignPlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getIncEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getUnaryOperatorAccess().getIncEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    enumLiteral_4=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getDecEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_4, grammarAccess.getUnaryOperatorAccess().getDecEnumLiteralDeclaration_4()); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    {
                    {
                    enumLiteral_5=(Token)match(input,PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getPosEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_5, grammarAccess.getUnaryOperatorAccess().getPosEnumLiteralDeclaration_5()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    {
                    {
                    enumLiteral_6=(Token)match(input,HyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getNegEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_6, grammarAccess.getUnaryOperatorAccess().getNegEnumLiteralDeclaration_6()); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    {
                    {
                    enumLiteral_7=(Token)match(input,Tilde,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getInvEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_7, grammarAccess.getUnaryOperatorAccess().getInvEnumLiteralDeclaration_7()); 
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    {
                    {
                    enumLiteral_8=(Token)match(input,ExclamationMark,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getNotEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_8, grammarAccess.getUnaryOperatorAccess().getNotEnumLiteralDeclaration_8()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator ruleMultiplicativeOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;

         enterRule(); 
        try {
            {
            int alt615=3;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt615=1;
                }
                break;
            case Solidus:
                {
                alt615=2;
                }
                break;
            case PercentSign:
                {
                alt615=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 615, 0, input);

                throw nvae;
            }

            switch (alt615) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getMultiplicativeOperatorAccess().getTimesEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getMultiplicativeOperatorAccess().getTimesEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,Solidus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getMultiplicativeOperatorAccess().getDivEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getMultiplicativeOperatorAccess().getDivEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    enumLiteral_2=(Token)match(input,PercentSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getMultiplicativeOperatorAccess().getModEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getMultiplicativeOperatorAccess().getModEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator ruleAdditiveOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;

         enterRule(); 
        try {
            {
            int alt616=2;
            int LA616_0 = input.LA(1);

            if ( (LA616_0==PlusSign) ) {
                alt616=1;
            }
            else if ( (LA616_0==HyphenMinus) ) {
                alt616=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 616, 0, input);

                throw nvae;
            }
            switch (alt616) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAdditiveOperatorAccess().getAddEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getAdditiveOperatorAccess().getAddEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,HyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAdditiveOperatorAccess().getSubEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getAdditiveOperatorAccess().getSubEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator ruleEqualityOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;

         enterRule(); 
        try {
            {
            int alt617=4;
            switch ( input.LA(1) ) {
            case EqualsSignEqualsSignEqualsSign:
                {
                alt617=1;
                }
                break;
            case ExclamationMarkEqualsSignEqualsSign:
                {
                alt617=2;
                }
                break;
            case EqualsSignEqualsSign:
                {
                alt617=3;
                }
                break;
            case ExclamationMarkEqualsSign:
                {
                alt617=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 617, 0, input);

                throw nvae;
            }

            switch (alt617) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,EqualsSignEqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getEqualityOperatorAccess().getSameEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getEqualityOperatorAccess().getSameEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,ExclamationMarkEqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getEqualityOperatorAccess().getNsameEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getEqualityOperatorAccess().getNsameEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    enumLiteral_2=(Token)match(input,EqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getEqualityOperatorAccess().getEqEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getEqualityOperatorAccess().getEqEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    enumLiteral_3=(Token)match(input,ExclamationMarkEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getEqualityOperatorAccess().getNeqEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getEqualityOperatorAccess().getNeqEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator ruleN4Modifier() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;

         enterRule(); 
        try {
            {
            int alt618=8;
            switch ( input.LA(1) ) {
            case Private:
                {
                alt618=1;
                }
                break;
            case Project:
                {
                alt618=2;
                }
                break;
            case Protected:
                {
                alt618=3;
                }
                break;
            case Public:
                {
                alt618=4;
                }
                break;
            case External:
                {
                alt618=5;
                }
                break;
            case Abstract:
                {
                alt618=6;
                }
                break;
            case Static:
                {
                alt618=7;
                }
                break;
            case Const:
                {
                alt618=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 618, 0, input);

                throw nvae;
            }

            switch (alt618) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,Private,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getPrivateEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getN4ModifierAccess().getPrivateEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,Project,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getProjectEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getN4ModifierAccess().getProjectEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    enumLiteral_2=(Token)match(input,Protected,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getProtectedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getN4ModifierAccess().getProtectedEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    enumLiteral_3=(Token)match(input,Public,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getPublicEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getN4ModifierAccess().getPublicEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    enumLiteral_4=(Token)match(input,External,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getExternalEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_4, grammarAccess.getN4ModifierAccess().getExternalEnumLiteralDeclaration_4()); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    {
                    {
                    enumLiteral_5=(Token)match(input,Abstract,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getAbstractEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_5, grammarAccess.getN4ModifierAccess().getAbstractEnumLiteralDeclaration_5()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    {
                    {
                    enumLiteral_6=(Token)match(input,Static,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getStaticEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_6, grammarAccess.getN4ModifierAccess().getStaticEnumLiteralDeclaration_6()); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    {
                    {
                    enumLiteral_7=(Token)match(input,Const,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getConstEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_7, grammarAccess.getN4ModifierAccess().getConstEnumLiteralDeclaration_7()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final void synpred1_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_130); if (state.failed) return ;
        if ( input.LA(1)==Target||input.LA(1)==This||input.LA(1)==RULE_IDENTIFIER ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred2_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop619:
        do {
            int alt619=2;
            int LA619_0 = input.LA(1);

            if ( ((LA619_0>=Protected && LA619_0<=Abstract)||LA619_0==External||(LA619_0>=Private && LA619_0<=Project)||LA619_0==Public||LA619_0==Static||LA619_0==Const) ) {
                alt619=1;
            }


            switch (alt619) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_7);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop619;
            }
        } while (true);

        match(input,Class,FOLLOW_176); if (state.failed) return ;
        int alt620=2;
        int LA620_0 = input.LA(1);

        if ( (LA620_0==Tilde) ) {
            alt620=1;
        }
        switch (alt620) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_177);
                ruleTypingStrategyDefSiteOperator();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt621=2;
        int LA621_0 = input.LA(1);

        if ( ((LA621_0>=Intersection && LA621_0<=Implements)||(LA621_0>=Promisify && LA621_0<=Abstract)||LA621_0==External||(LA621_0>=Private && LA621_0<=Project)||LA621_0==Public||LA621_0==Static||LA621_0==Target||(LA621_0>=Async && LA621_0<=Await)||LA621_0==Union||(LA621_0>=Yield && LA621_0<=This)||LA621_0==From||LA621_0==Type||(LA621_0>=Get && LA621_0<=Let)||(LA621_0>=Out && LA621_0<=Set)||LA621_0==As||LA621_0==Of||LA621_0==RULE_IDENTIFIER) ) {
            alt621=1;
        }
        switch (alt621) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_2);
                ruleBindingIdentifier();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred3_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop622:
        do {
            int alt622=2;
            int LA622_0 = input.LA(1);

            if ( ((LA622_0>=Protected && LA622_0<=Abstract)||LA622_0==External||(LA622_0>=Private && LA622_0<=Project)||LA622_0==Public||LA622_0==Static||LA622_0==Const) ) {
                alt622=1;
            }


            switch (alt622) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_11);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop622;
            }
        } while (true);

        match(input,Interface,FOLLOW_176); if (state.failed) return ;
        int alt623=2;
        int LA623_0 = input.LA(1);

        if ( (LA623_0==Tilde) ) {
            alt623=1;
        }
        switch (alt623) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_177);
                ruleTypingStrategyDefSiteOperator();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt624=2;
        int LA624_0 = input.LA(1);

        if ( ((LA624_0>=Intersection && LA624_0<=Implements)||(LA624_0>=Promisify && LA624_0<=Abstract)||LA624_0==External||(LA624_0>=Private && LA624_0<=Project)||LA624_0==Public||LA624_0==Static||LA624_0==Target||(LA624_0>=Async && LA624_0<=Await)||LA624_0==Union||(LA624_0>=Yield && LA624_0<=This)||LA624_0==From||LA624_0==Type||(LA624_0>=Get && LA624_0<=Let)||(LA624_0>=Out && LA624_0<=Set)||LA624_0==As||LA624_0==Of||LA624_0==RULE_IDENTIFIER) ) {
            alt624=1;
        }
        switch (alt624) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_2);
                ruleBindingIdentifier();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred4_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop625:
        do {
            int alt625=2;
            int LA625_0 = input.LA(1);

            if ( ((LA625_0>=Protected && LA625_0<=Abstract)||LA625_0==External||(LA625_0>=Private && LA625_0<=Project)||LA625_0==Public||LA625_0==Static||LA625_0==Const) ) {
                alt625=1;
            }


            switch (alt625) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_12);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop625;
            }
        } while (true);

        match(input,Enum,FOLLOW_177); if (state.failed) return ;
        int alt626=2;
        int LA626_0 = input.LA(1);

        if ( ((LA626_0>=Intersection && LA626_0<=Implements)||(LA626_0>=Promisify && LA626_0<=Abstract)||LA626_0==External||(LA626_0>=Private && LA626_0<=Project)||LA626_0==Public||LA626_0==Static||LA626_0==Target||(LA626_0>=Async && LA626_0<=Await)||LA626_0==Union||(LA626_0>=Yield && LA626_0<=This)||LA626_0==From||LA626_0==Type||(LA626_0>=Get && LA626_0<=Let)||(LA626_0>=Out && LA626_0<=Set)||LA626_0==As||LA626_0==Of||LA626_0==RULE_IDENTIFIER) ) {
            alt626=1;
        }
        switch (alt626) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_2);
                ruleBindingIdentifier();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred8_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,From,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred9_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=Interface && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Project)||input.LA(1)==Public||input.LA(1)==Static||input.LA(1)==Async||(input.LA(1)>=Class && input.LA(1)<=Const)||input.LA(1)==Enum||input.LA(1)==Let||input.LA(1)==Var||input.LA(1)==CommercialAt ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred10_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_130); if (state.failed) return ;
        if ( input.LA(1)==Target||input.LA(1)==This||input.LA(1)==RULE_IDENTIFIER ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred11_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop628:
        do {
            int alt628=2;
            int LA628_0 = input.LA(1);

            if ( ((LA628_0>=Protected && LA628_0<=Abstract)||LA628_0==External||(LA628_0>=Private && LA628_0<=Project)||LA628_0==Public||LA628_0==Static||LA628_0==Const) ) {
                alt628=1;
            }


            switch (alt628) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_7);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop628;
            }
        } while (true);

        match(input,Class,FOLLOW_176); if (state.failed) return ;
        int alt629=2;
        int LA629_0 = input.LA(1);

        if ( (LA629_0==Tilde) ) {
            alt629=1;
        }
        switch (alt629) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_177);
                ruleTypingStrategyDefSiteOperator();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt630=2;
        int LA630_0 = input.LA(1);

        if ( ((LA630_0>=Intersection && LA630_0<=Implements)||(LA630_0>=Promisify && LA630_0<=Abstract)||LA630_0==External||(LA630_0>=Private && LA630_0<=Project)||LA630_0==Public||LA630_0==Static||LA630_0==Target||(LA630_0>=Async && LA630_0<=Await)||LA630_0==Union||(LA630_0>=Yield && LA630_0<=This)||LA630_0==From||LA630_0==Type||(LA630_0>=Get && LA630_0<=Let)||(LA630_0>=Out && LA630_0<=Set)||LA630_0==As||LA630_0==Of||LA630_0==RULE_IDENTIFIER) ) {
            alt630=1;
        }
        switch (alt630) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_2);
                ruleBindingIdentifier();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred12_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop631:
        do {
            int alt631=2;
            int LA631_0 = input.LA(1);

            if ( ((LA631_0>=Protected && LA631_0<=Abstract)||LA631_0==External||(LA631_0>=Private && LA631_0<=Project)||LA631_0==Public||LA631_0==Static||LA631_0==Const) ) {
                alt631=1;
            }


            switch (alt631) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_11);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop631;
            }
        } while (true);

        match(input,Interface,FOLLOW_176); if (state.failed) return ;
        int alt632=2;
        int LA632_0 = input.LA(1);

        if ( (LA632_0==Tilde) ) {
            alt632=1;
        }
        switch (alt632) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_177);
                ruleTypingStrategyDefSiteOperator();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt633=2;
        int LA633_0 = input.LA(1);

        if ( ((LA633_0>=Intersection && LA633_0<=Implements)||(LA633_0>=Promisify && LA633_0<=Abstract)||LA633_0==External||(LA633_0>=Private && LA633_0<=Project)||LA633_0==Public||LA633_0==Static||LA633_0==Target||(LA633_0>=Async && LA633_0<=Await)||LA633_0==Union||(LA633_0>=Yield && LA633_0<=This)||LA633_0==From||LA633_0==Type||(LA633_0>=Get && LA633_0<=Let)||(LA633_0>=Out && LA633_0<=Set)||LA633_0==As||LA633_0==Of||LA633_0==RULE_IDENTIFIER) ) {
            alt633=1;
        }
        switch (alt633) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_2);
                ruleBindingIdentifier();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred13_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop634:
        do {
            int alt634=2;
            int LA634_0 = input.LA(1);

            if ( ((LA634_0>=Protected && LA634_0<=Abstract)||LA634_0==External||(LA634_0>=Private && LA634_0<=Project)||LA634_0==Public||LA634_0==Static||LA634_0==Const) ) {
                alt634=1;
            }


            switch (alt634) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_12);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop634;
            }
        } while (true);

        match(input,Enum,FOLLOW_177); if (state.failed) return ;
        int alt635=2;
        int LA635_0 = input.LA(1);

        if ( ((LA635_0>=Intersection && LA635_0<=Implements)||(LA635_0>=Promisify && LA635_0<=Abstract)||LA635_0==External||(LA635_0>=Private && LA635_0<=Project)||LA635_0==Public||LA635_0==Static||LA635_0==Target||(LA635_0>=Async && LA635_0<=Await)||LA635_0==Union||(LA635_0>=Yield && LA635_0<=This)||LA635_0==From||LA635_0==Type||(LA635_0>=Get && LA635_0<=Let)||(LA635_0>=Out && LA635_0<=Set)||LA635_0==As||LA635_0==Of||LA635_0==RULE_IDENTIFIER) ) {
            alt635=1;
        }
        switch (alt635) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_2);
                ruleBindingIdentifier();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred17_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        pushFollow(FOLLOW_2);
        ruleSemi();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    public final void synpred20_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        pushFollow(FOLLOW_2);
        ruleSemi();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    public final void synpred21_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred22_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred23_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred24_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred25_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred26_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred37_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred38_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Async,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred39_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred40_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred45_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred46_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Async,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred47_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred48_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred53_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred54_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Async,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred55_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred56_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred61_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred62_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Async,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred63_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred64_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred65_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred66_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred69_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred70_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop679:
        do {
            int alt679=2;
            int LA679_0 = input.LA(1);

            if ( ((LA679_0>=Protected && LA679_0<=Abstract)||LA679_0==External||(LA679_0>=Private && LA679_0<=Project)||LA679_0==Public||LA679_0==Static||LA679_0==Const) ) {
                alt679=1;
            }


            switch (alt679) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_6);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop679;
            }
        } while (true);

        pushFollow(FOLLOW_46);
        ruleAsyncNoTrailingLineBreak(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,Function,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred71_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleVariableStatementKeyword();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred72_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_83);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred73_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred74_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop680:
        do {
            int alt680=2;
            int LA680_0 = input.LA(1);

            if ( ((LA680_0>=Protected && LA680_0<=Abstract)||LA680_0==External||(LA680_0>=Private && LA680_0<=Project)||LA680_0==Public||LA680_0==Static||LA680_0==Const) ) {
                alt680=1;
            }


            switch (alt680) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_6);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop680;
            }
        } while (true);

        pushFollow(FOLLOW_46);
        ruleAsyncNoTrailingLineBreak(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,Function,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred75_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleVariableStatementKeyword();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred76_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_83);
        norm1_BindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred77_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_130); if (state.failed) return ;
        if ( input.LA(1)==Target||input.LA(1)==This||input.LA(1)==RULE_IDENTIFIER ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred78_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_130); if (state.failed) return ;
        if ( input.LA(1)==Target||input.LA(1)==This||input.LA(1)==RULE_IDENTIFIER ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred81_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred82_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred83_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred84_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred85_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred86_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred95_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred96_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred97_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred98_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred99_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_43);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        int alt681=2;
        int LA681_0 = input.LA(1);

        if ( (LA681_0==Colon) ) {
            alt681=1;
        }
        switch (alt681) {
            case 1 :
                {
                pushFollow(FOLLOW_2);
                ruleColonSepTypeRef(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    public final void synpred100_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_43);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        int alt682=2;
        int LA682_0 = input.LA(1);

        if ( (LA682_0==Colon) ) {
            alt682=1;
        }
        switch (alt682) {
            case 1 :
                {
                pushFollow(FOLLOW_2);
                ruleColonSepTypeRef(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    public final void synpred101_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_43);
        norm1_BindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        int alt683=2;
        int LA683_0 = input.LA(1);

        if ( (LA683_0==Colon) ) {
            alt683=1;
        }
        switch (alt683) {
            case 1 :
                {
                pushFollow(FOLLOW_2);
                ruleColonSepTypeRef(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    public final void synpred102_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_43);
        norm1_BindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        int alt684=2;
        int LA684_0 = input.LA(1);

        if ( (LA684_0==Colon) ) {
            alt684=1;
        }
        switch (alt684) {
            case 1 :
                {
                pushFollow(FOLLOW_2);
                ruleColonSepTypeRef(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    public final void synpred103_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred104_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred107_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Else,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred108_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Else,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred109_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        pushFollow(FOLLOW_2);
        ruleSemi();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    public final void synpred110_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        pushFollow(FOLLOW_2);
        ruleSemi();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    public final void synpred111_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_71);
        ruleLetIdentifierRef();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        {
        {
        match(input,In,FOLLOW_54); if (state.failed) return ;

        }


        }
        {
        {
        pushFollow(FOLLOW_66);
        norm1_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred112_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        if ( input.LA(1)==Const||input.LA(1)==Let||input.LA(1)==Var ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred113_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_72);
        ruleBindingIdentifierAsVariableDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        int alt685=2;
        int LA685_0 = input.LA(1);

        if ( (LA685_0==In) ) {
            alt685=1;
        }
        else if ( (LA685_0==Of) ) {
            alt685=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 685, 0, input);

            throw nvae;
        }
        switch (alt685) {
            case 1 :
                {
                {
                {
                match(input,In,FOLLOW_123); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                {
                {
                {
                match(input,Of,FOLLOW_123); if (state.failed) return ;

                }


                }


                }
                break;

        }
        int alt686=2;
        int LA686_0 = input.LA(1);

        if ( ((LA686_0>=Intersection && LA686_0<=Implements)||(LA686_0>=Promisify && LA686_0<=Abstract)||(LA686_0>=External && LA686_0<=Function)||(LA686_0>=Private && LA686_0<=Delete)||LA686_0==Public||LA686_0==Static||(LA686_0>=Target && LA686_0<=Await)||LA686_0==Class||(LA686_0>=False && LA686_0<=Super)||LA686_0==Union||(LA686_0>=Yield && LA686_0<=This)||(LA686_0>=From && LA686_0<=Void)||(LA686_0>=Get && LA686_0<=Set)||LA686_0==PlusSignPlusSign||LA686_0==HyphenMinusHyphenMinus||LA686_0==SolidusEqualsSign||LA686_0==As||LA686_0==Of||LA686_0==ExclamationMark||LA686_0==LeftParenthesis||(LA686_0>=Asterisk && LA686_0<=PlusSign)||LA686_0==HyphenMinus||LA686_0==Solidus||LA686_0==LessThanSign||(LA686_0>=CommercialAt && LA686_0<=LeftSquareBracket)||LA686_0==LeftCurlyBracket||LA686_0==Tilde||LA686_0==RULE_DOUBLE||(LA686_0>=RULE_HEX_INT && LA686_0<=RULE_LEGACY_OCTAL_INT)||LA686_0==RULE_SCIENTIFIC_INT||LA686_0==RULE_IDENTIFIER||LA686_0==RULE_STRING||(LA686_0>=RULE_TEMPLATE_HEAD && LA686_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA686_0==RULE_INT) ) {
            alt686=1;
        }
        switch (alt686) {
            case 1 :
                {
                if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||(input.LA(1)>=Asterisk && input.LA(1)<=PlusSign)||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
                    input.consume();
                    state.errorRecovery=false;state.failed=false;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    MismatchedSetException mse = new MismatchedSetException(null,input);
                    throw mse;
                }


                }
                break;

        }


        }


        }
    }
    public final void synpred114_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||(input.LA(1)>=Asterisk && input.LA(1)<=PlusSign)||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred115_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_71);
        ruleLetIdentifierRef();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        {
        {
        match(input,In,FOLLOW_54); if (state.failed) return ;

        }


        }
        {
        {
        pushFollow(FOLLOW_66);
        norm3_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred116_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        if ( input.LA(1)==Const||input.LA(1)==Let||input.LA(1)==Var ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred117_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_72);
        norm2_BindingIdentifierAsVariableDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        int alt687=2;
        int LA687_0 = input.LA(1);

        if ( (LA687_0==In) ) {
            alt687=1;
        }
        else if ( (LA687_0==Of) ) {
            alt687=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 687, 0, input);

            throw nvae;
        }
        switch (alt687) {
            case 1 :
                {
                {
                {
                match(input,In,FOLLOW_123); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                {
                {
                {
                match(input,Of,FOLLOW_123); if (state.failed) return ;

                }


                }


                }
                break;

        }
        int alt688=2;
        int LA688_0 = input.LA(1);

        if ( ((LA688_0>=Intersection && LA688_0<=Implements)||(LA688_0>=Promisify && LA688_0<=Abstract)||(LA688_0>=External && LA688_0<=Function)||(LA688_0>=Private && LA688_0<=Delete)||LA688_0==Public||LA688_0==Static||(LA688_0>=Target && LA688_0<=Await)||LA688_0==Class||(LA688_0>=False && LA688_0<=Super)||LA688_0==Union||(LA688_0>=Yield && LA688_0<=This)||(LA688_0>=From && LA688_0<=Void)||(LA688_0>=Get && LA688_0<=Set)||LA688_0==PlusSignPlusSign||LA688_0==HyphenMinusHyphenMinus||LA688_0==SolidusEqualsSign||LA688_0==As||LA688_0==Of||LA688_0==ExclamationMark||LA688_0==LeftParenthesis||(LA688_0>=Asterisk && LA688_0<=PlusSign)||LA688_0==HyphenMinus||LA688_0==Solidus||LA688_0==LessThanSign||(LA688_0>=CommercialAt && LA688_0<=LeftSquareBracket)||LA688_0==LeftCurlyBracket||LA688_0==Tilde||LA688_0==RULE_DOUBLE||(LA688_0>=RULE_HEX_INT && LA688_0<=RULE_LEGACY_OCTAL_INT)||LA688_0==RULE_SCIENTIFIC_INT||LA688_0==RULE_IDENTIFIER||LA688_0==RULE_STRING||(LA688_0>=RULE_TEMPLATE_HEAD && LA688_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA688_0==RULE_INT) ) {
            alt688=1;
        }
        switch (alt688) {
            case 1 :
                {
                if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||(input.LA(1)>=Asterisk && input.LA(1)<=PlusSign)||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
                    input.consume();
                    state.errorRecovery=false;state.failed=false;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    MismatchedSetException mse = new MismatchedSetException(null,input);
                    throw mse;
                }


                }
                break;

        }


        }


        }
    }
    public final void synpred118_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||(input.LA(1)>=Asterisk && input.LA(1)<=PlusSign)||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred125_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred126_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_83);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred128_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred129_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_83);
        norm1_BindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred133_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        match(input,Async,FOLLOW_45); if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_46);
        ruleNoLineTerminator(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,Function,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred134_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        match(input,Async,FOLLOW_45); if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_46);
        ruleNoLineTerminator(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,Function,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred135_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt689=2;
        alt689 = dfa689.predict(input);
        switch (alt689) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_93);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        {
        {
        pushFollow(FOLLOW_83);
        ruleLiteralOrComputedPropertyName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred136_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        pushFollow(FOLLOW_2);
        ruleGetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred137_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Set,FOLLOW_178); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred138_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt690=2;
        int LA690_0 = input.LA(1);

        if ( (LA690_0==LessThanSign) ) {
            alt690=1;
        }
        switch (alt690) {
            case 1 :
                {
                pushFollow(FOLLOW_94);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt691=2;
        alt691 = dfa691.predict(input);
        switch (alt691) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_94);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt692=2;
        int LA692_0 = input.LA(1);

        if ( (LA692_0==Asterisk) ) {
            alt692=1;
        }
        else if ( ((LA692_0>=Intersection && LA692_0<=With)||(LA692_0>=For && LA692_0<=Var)||(LA692_0>=As && LA692_0<=Of)||LA692_0==LeftSquareBracket||LA692_0==RULE_DOUBLE||LA692_0==RULE_HEX_INT||LA692_0==RULE_OCTAL_INT||LA692_0==RULE_SCIENTIFIC_INT||LA692_0==RULE_IDENTIFIER||LA692_0==RULE_STRING||LA692_0==RULE_INT) ) {
            alt692=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 692, 0, input);

            throw nvae;
        }
        switch (alt692) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_93); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_53);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                pushFollow(FOLLOW_53);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred139_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt693=2;
        alt693 = dfa693.predict(input);
        switch (alt693) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_93);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        {
        {
        pushFollow(FOLLOW_83);
        norm1_LiteralOrComputedPropertyName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred140_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        pushFollow(FOLLOW_2);
        norm1_GetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred141_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Set,FOLLOW_178); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred142_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt694=2;
        int LA694_0 = input.LA(1);

        if ( (LA694_0==LessThanSign) ) {
            alt694=1;
        }
        switch (alt694) {
            case 1 :
                {
                pushFollow(FOLLOW_94);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt695=2;
        alt695 = dfa695.predict(input);
        switch (alt695) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_94);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt696=2;
        int LA696_0 = input.LA(1);

        if ( (LA696_0==Asterisk) ) {
            alt696=1;
        }
        else if ( ((LA696_0>=Intersection && LA696_0<=With)||(LA696_0>=For && LA696_0<=Var)||(LA696_0>=As && LA696_0<=Of)||LA696_0==LeftSquareBracket||LA696_0==RULE_DOUBLE||LA696_0==RULE_HEX_INT||LA696_0==RULE_OCTAL_INT||LA696_0==RULE_SCIENTIFIC_INT||LA696_0==RULE_IDENTIFIER||LA696_0==RULE_STRING||LA696_0==RULE_INT) ) {
            alt696=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 696, 0, input);

            throw nvae;
        }
        switch (alt696) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_93); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_53);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                pushFollow(FOLLOW_53);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred143_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt697=2;
        alt697 = dfa697.predict(input);
        switch (alt697) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_93);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        {
        {
        pushFollow(FOLLOW_83);
        ruleLiteralOrComputedPropertyName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred144_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        pushFollow(FOLLOW_2);
        ruleGetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred146_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Set,FOLLOW_178); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred149_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt698=2;
        int LA698_0 = input.LA(1);

        if ( (LA698_0==LessThanSign) ) {
            alt698=1;
        }
        switch (alt698) {
            case 1 :
                {
                pushFollow(FOLLOW_94);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt699=2;
        alt699 = dfa699.predict(input);
        switch (alt699) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_94);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt700=2;
        int LA700_0 = input.LA(1);

        if ( (LA700_0==Asterisk) ) {
            alt700=1;
        }
        else if ( ((LA700_0>=Intersection && LA700_0<=With)||(LA700_0>=For && LA700_0<=Var)||(LA700_0>=As && LA700_0<=Of)||LA700_0==LeftSquareBracket||LA700_0==RULE_DOUBLE||LA700_0==RULE_HEX_INT||LA700_0==RULE_OCTAL_INT||LA700_0==RULE_SCIENTIFIC_INT||LA700_0==RULE_IDENTIFIER||LA700_0==RULE_STRING||LA700_0==RULE_INT) ) {
            alt700=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 700, 0, input);

            throw nvae;
        }
        switch (alt700) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_93); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_53);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                pushFollow(FOLLOW_53);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred152_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt701=2;
        alt701 = dfa701.predict(input);
        switch (alt701) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_93);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        {
        {
        pushFollow(FOLLOW_83);
        norm1_LiteralOrComputedPropertyName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred153_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        pushFollow(FOLLOW_2);
        norm1_GetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred155_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Set,FOLLOW_178); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred158_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt702=2;
        int LA702_0 = input.LA(1);

        if ( (LA702_0==LessThanSign) ) {
            alt702=1;
        }
        switch (alt702) {
            case 1 :
                {
                pushFollow(FOLLOW_94);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt703=2;
        alt703 = dfa703.predict(input);
        switch (alt703) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_94);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt704=2;
        int LA704_0 = input.LA(1);

        if ( (LA704_0==Asterisk) ) {
            alt704=1;
        }
        else if ( ((LA704_0>=Intersection && LA704_0<=With)||(LA704_0>=For && LA704_0<=Var)||(LA704_0>=As && LA704_0<=Of)||LA704_0==LeftSquareBracket||LA704_0==RULE_DOUBLE||LA704_0==RULE_HEX_INT||LA704_0==RULE_OCTAL_INT||LA704_0==RULE_SCIENTIFIC_INT||LA704_0==RULE_IDENTIFIER||LA704_0==RULE_STRING||LA704_0==RULE_INT) ) {
            alt704=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 704, 0, input);

            throw nvae;
        }
        switch (alt704) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_93); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_53);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                pushFollow(FOLLOW_53);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred179_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred180_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred181_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,New,FOLLOW_100); if (state.failed) return ;
        match(input,FullStop,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred182_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,New,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred183_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred184_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred185_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,New,FOLLOW_100); if (state.failed) return ;
        match(input,FullStop,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred186_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,New,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred187_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred188_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred189_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        rulePostfixOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred190_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        rulePostfixOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred191_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,As,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred192_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,As,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred193_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleMultiplicativeOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred194_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleMultiplicativeOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred195_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAdditiveOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred196_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAdditiveOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred197_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_54);
        ruleShiftOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred198_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_54);
        ruleShiftOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        {
        {
        pushFollow(FOLLOW_2);
        norm1_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred199_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_179);
        ruleRelationalOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred201_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_179);
        norm1_RelationalOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred203_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_180);
        ruleRelationalOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||input.LA(1)==This||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred205_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_180);
        norm1_RelationalOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||input.LA(1)==This||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred207_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleEqualityOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred208_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleEqualityOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred209_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleEqualityOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred210_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleEqualityOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred211_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred212_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred213_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred214_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred215_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseXOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred216_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseXOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred217_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseXOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred218_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseXOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred219_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred220_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred221_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred222_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred223_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred224_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred225_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred226_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred227_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred228_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred229_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred230_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred231_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred232_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred233_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred234_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred235_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Await,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred236_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_126); if (state.failed) return ;
        match(input,Promisify,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred237_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred238_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Async,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred239_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred240_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        int alt722=4;
        int LA722_0 = input.LA(1);

        if ( (LA722_0==LeftParenthesis) && (synpred237_InternalN4JSParser())) {
            alt722=1;
        }
        else if ( (LA722_0==Async) ) {
            int LA722_2 = input.LA(2);

            if ( (LA722_2==EqualsSignGreaterThanSign) ) {
                alt722=4;
            }
            else if ( (LA722_2==RULE_NO_LINE_TERMINATOR) && (synpred238_InternalN4JSParser())) {
                alt722=2;
            }
            else if ( (LA722_2==LeftParenthesis) && (synpred238_InternalN4JSParser())) {
                alt722=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 722, 2, input);

                throw nvae;
            }
        }
        else if ( (LA722_0==Asterisk) && (synpred239_InternalN4JSParser())) {
            alt722=3;
        }
        else if ( ((LA722_0>=Intersection && LA722_0<=Implements)||(LA722_0>=Promisify && LA722_0<=Abstract)||LA722_0==External||(LA722_0>=Private && LA722_0<=Project)||LA722_0==Public||LA722_0==Static||LA722_0==Target||LA722_0==Await||LA722_0==Union||(LA722_0>=Yield && LA722_0<=This)||LA722_0==From||LA722_0==Type||(LA722_0>=Get && LA722_0<=Let)||(LA722_0>=Out && LA722_0<=Set)||LA722_0==As||LA722_0==Of||LA722_0==RULE_IDENTIFIER) ) {
            alt722=4;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 722, 0, input);

            throw nvae;
        }
        switch (alt722) {
            case 1 :
                {
                {
                {
                match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return ;

                }
                int alt714=2;
                int LA714_0 = input.LA(1);

                if ( ((LA714_0>=Intersection && LA714_0<=Implements)||(LA714_0>=Promisify && LA714_0<=Abstract)||LA714_0==External||(LA714_0>=Private && LA714_0<=Project)||LA714_0==Public||LA714_0==Static||LA714_0==Target||(LA714_0>=Async && LA714_0<=Await)||LA714_0==Union||(LA714_0>=Yield && LA714_0<=This)||LA714_0==From||LA714_0==This_1||(LA714_0>=Type && LA714_0<=Void)||LA714_0==FullStopFullStopFullStop||(LA714_0>=Get && LA714_0<=Let)||(LA714_0>=Out && LA714_0<=Set)||LA714_0==As||LA714_0==Of||(LA714_0>=QuestionMark && LA714_0<=LeftSquareBracket)||LA714_0==LeftCurlyBracket||LA714_0==Tilde||LA714_0==RULE_IDENTIFIER) ) {
                    alt714=1;
                }
                switch (alt714) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_48);
                        ruleFormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop713:
                        do {
                            int alt713=2;
                            int LA713_0 = input.LA(1);

                            if ( (LA713_0==Comma) ) {
                                alt713=1;
                            }


                            switch (alt713) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_49); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_48);
                        	    ruleFormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop713;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_50); if (state.failed) return ;
                int alt715=2;
                int LA715_0 = input.LA(1);

                if ( (LA715_0==Colon) ) {
                    alt715=1;
                }
                switch (alt715) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_44); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_51);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                {
                {
                match(input,Async,FOLLOW_52); if (state.failed) return ;

                }


                }

                pushFollow(FOLLOW_53);
                ruleNoLineTerminator(null);

                state._fsp--;
                if (state.failed) return ;
                match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return ;

                }


                }
                int alt717=2;
                int LA717_0 = input.LA(1);

                if ( ((LA717_0>=Intersection && LA717_0<=Implements)||(LA717_0>=Promisify && LA717_0<=Abstract)||LA717_0==External||(LA717_0>=Private && LA717_0<=Project)||LA717_0==Public||LA717_0==Static||LA717_0==Target||(LA717_0>=Async && LA717_0<=Await)||LA717_0==Union||(LA717_0>=Yield && LA717_0<=This)||LA717_0==From||LA717_0==This_1||(LA717_0>=Type && LA717_0<=Void)||LA717_0==FullStopFullStopFullStop||(LA717_0>=Get && LA717_0<=Let)||(LA717_0>=Out && LA717_0<=Set)||LA717_0==As||LA717_0==Of||(LA717_0>=QuestionMark && LA717_0<=LeftSquareBracket)||LA717_0==LeftCurlyBracket||LA717_0==Tilde||LA717_0==RULE_IDENTIFIER) ) {
                    alt717=1;
                }
                switch (alt717) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_48);
                        ruleFormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop716:
                        do {
                            int alt716=2;
                            int LA716_0 = input.LA(1);

                            if ( (LA716_0==Comma) ) {
                                alt716=1;
                            }


                            switch (alt716) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_49); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_48);
                        	    ruleFormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop716;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_50); if (state.failed) return ;
                int alt718=2;
                int LA718_0 = input.LA(1);

                if ( (LA718_0==Colon) ) {
                    alt718=1;
                }
                switch (alt718) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_44); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_51);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 3 :
                {
                {
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_52); if (state.failed) return ;

                }


                }

                pushFollow(FOLLOW_53);
                ruleNoLineTerminator(null);

                state._fsp--;
                if (state.failed) return ;
                match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return ;

                }


                }
                int alt720=2;
                int LA720_0 = input.LA(1);

                if ( ((LA720_0>=Intersection && LA720_0<=Implements)||(LA720_0>=Promisify && LA720_0<=Abstract)||LA720_0==External||(LA720_0>=Private && LA720_0<=Project)||LA720_0==Public||LA720_0==Static||LA720_0==Target||(LA720_0>=Async && LA720_0<=Await)||LA720_0==Union||(LA720_0>=Yield && LA720_0<=This)||LA720_0==From||LA720_0==This_1||(LA720_0>=Type && LA720_0<=Void)||LA720_0==FullStopFullStopFullStop||(LA720_0>=Get && LA720_0<=Let)||(LA720_0>=Out && LA720_0<=Set)||LA720_0==As||LA720_0==Of||(LA720_0>=QuestionMark && LA720_0<=LeftSquareBracket)||LA720_0==LeftCurlyBracket||LA720_0==Tilde||LA720_0==RULE_IDENTIFIER) ) {
                    alt720=1;
                }
                switch (alt720) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_48);
                        ruleFormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop719:
                        do {
                            int alt719=2;
                            int LA719_0 = input.LA(1);

                            if ( (LA719_0==Comma) ) {
                                alt719=1;
                            }


                            switch (alt719) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_49); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_48);
                        	    ruleFormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop719;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_50); if (state.failed) return ;
                int alt721=2;
                int LA721_0 = input.LA(1);

                if ( (LA721_0==Colon) ) {
                    alt721=1;
                }
                switch (alt721) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_44); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_51);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 4 :
                {
                {
                {
                pushFollow(FOLLOW_51);
                ruleBindingIdentifierAsFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred241_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAssignmentOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred242_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Await,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred243_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_126); if (state.failed) return ;
        match(input,Promisify,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred244_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred245_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Async,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred246_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred247_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        int alt732=4;
        int LA732_0 = input.LA(1);

        if ( (LA732_0==LeftParenthesis) && (synpred244_InternalN4JSParser())) {
            alt732=1;
        }
        else if ( (LA732_0==Async) ) {
            int LA732_2 = input.LA(2);

            if ( (LA732_2==EqualsSignGreaterThanSign) ) {
                alt732=4;
            }
            else if ( (LA732_2==RULE_NO_LINE_TERMINATOR) && (synpred245_InternalN4JSParser())) {
                alt732=2;
            }
            else if ( (LA732_2==LeftParenthesis) && (synpred245_InternalN4JSParser())) {
                alt732=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 732, 2, input);

                throw nvae;
            }
        }
        else if ( (LA732_0==Asterisk) && (synpred246_InternalN4JSParser())) {
            alt732=3;
        }
        else if ( ((LA732_0>=Intersection && LA732_0<=Implements)||(LA732_0>=Promisify && LA732_0<=Abstract)||LA732_0==External||(LA732_0>=Private && LA732_0<=Project)||LA732_0==Public||LA732_0==Static||LA732_0==Target||LA732_0==Await||LA732_0==Union||(LA732_0>=Yield && LA732_0<=This)||LA732_0==From||LA732_0==Type||(LA732_0>=Get && LA732_0<=Let)||(LA732_0>=Out && LA732_0<=Set)||LA732_0==As||LA732_0==Of||LA732_0==RULE_IDENTIFIER) ) {
            alt732=4;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 732, 0, input);

            throw nvae;
        }
        switch (alt732) {
            case 1 :
                {
                {
                {
                match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return ;

                }
                int alt724=2;
                int LA724_0 = input.LA(1);

                if ( ((LA724_0>=Intersection && LA724_0<=Implements)||(LA724_0>=Promisify && LA724_0<=Abstract)||LA724_0==External||(LA724_0>=Private && LA724_0<=Project)||LA724_0==Public||LA724_0==Static||LA724_0==Target||(LA724_0>=Async && LA724_0<=Await)||LA724_0==Union||(LA724_0>=Yield && LA724_0<=This)||LA724_0==From||LA724_0==This_1||(LA724_0>=Type && LA724_0<=Void)||LA724_0==FullStopFullStopFullStop||(LA724_0>=Get && LA724_0<=Let)||(LA724_0>=Out && LA724_0<=Set)||LA724_0==As||LA724_0==Of||(LA724_0>=QuestionMark && LA724_0<=LeftSquareBracket)||LA724_0==LeftCurlyBracket||LA724_0==Tilde||LA724_0==RULE_IDENTIFIER) ) {
                    alt724=1;
                }
                switch (alt724) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_48);
                        ruleFormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop723:
                        do {
                            int alt723=2;
                            int LA723_0 = input.LA(1);

                            if ( (LA723_0==Comma) ) {
                                alt723=1;
                            }


                            switch (alt723) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_49); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_48);
                        	    ruleFormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop723;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_50); if (state.failed) return ;
                int alt725=2;
                int LA725_0 = input.LA(1);

                if ( (LA725_0==Colon) ) {
                    alt725=1;
                }
                switch (alt725) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_44); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_51);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                {
                {
                match(input,Async,FOLLOW_52); if (state.failed) return ;

                }


                }

                pushFollow(FOLLOW_53);
                ruleNoLineTerminator(null);

                state._fsp--;
                if (state.failed) return ;
                match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return ;

                }


                }
                int alt727=2;
                int LA727_0 = input.LA(1);

                if ( ((LA727_0>=Intersection && LA727_0<=Implements)||(LA727_0>=Promisify && LA727_0<=Abstract)||LA727_0==External||(LA727_0>=Private && LA727_0<=Project)||LA727_0==Public||LA727_0==Static||LA727_0==Target||(LA727_0>=Async && LA727_0<=Await)||LA727_0==Union||(LA727_0>=Yield && LA727_0<=This)||LA727_0==From||LA727_0==This_1||(LA727_0>=Type && LA727_0<=Void)||LA727_0==FullStopFullStopFullStop||(LA727_0>=Get && LA727_0<=Let)||(LA727_0>=Out && LA727_0<=Set)||LA727_0==As||LA727_0==Of||(LA727_0>=QuestionMark && LA727_0<=LeftSquareBracket)||LA727_0==LeftCurlyBracket||LA727_0==Tilde||LA727_0==RULE_IDENTIFIER) ) {
                    alt727=1;
                }
                switch (alt727) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_48);
                        ruleFormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop726:
                        do {
                            int alt726=2;
                            int LA726_0 = input.LA(1);

                            if ( (LA726_0==Comma) ) {
                                alt726=1;
                            }


                            switch (alt726) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_49); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_48);
                        	    ruleFormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop726;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_50); if (state.failed) return ;
                int alt728=2;
                int LA728_0 = input.LA(1);

                if ( (LA728_0==Colon) ) {
                    alt728=1;
                }
                switch (alt728) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_44); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_51);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 3 :
                {
                {
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_52); if (state.failed) return ;

                }


                }

                pushFollow(FOLLOW_53);
                ruleNoLineTerminator(null);

                state._fsp--;
                if (state.failed) return ;
                match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return ;

                }


                }
                int alt730=2;
                int LA730_0 = input.LA(1);

                if ( ((LA730_0>=Intersection && LA730_0<=Implements)||(LA730_0>=Promisify && LA730_0<=Abstract)||LA730_0==External||(LA730_0>=Private && LA730_0<=Project)||LA730_0==Public||LA730_0==Static||LA730_0==Target||(LA730_0>=Async && LA730_0<=Await)||LA730_0==Union||(LA730_0>=Yield && LA730_0<=This)||LA730_0==From||LA730_0==This_1||(LA730_0>=Type && LA730_0<=Void)||LA730_0==FullStopFullStopFullStop||(LA730_0>=Get && LA730_0<=Let)||(LA730_0>=Out && LA730_0<=Set)||LA730_0==As||LA730_0==Of||(LA730_0>=QuestionMark && LA730_0<=LeftSquareBracket)||LA730_0==LeftCurlyBracket||LA730_0==Tilde||LA730_0==RULE_IDENTIFIER) ) {
                    alt730=1;
                }
                switch (alt730) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_48);
                        ruleFormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop729:
                        do {
                            int alt729=2;
                            int LA729_0 = input.LA(1);

                            if ( (LA729_0==Comma) ) {
                                alt729=1;
                            }


                            switch (alt729) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_49); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_48);
                        	    ruleFormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop729;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_50); if (state.failed) return ;
                int alt731=2;
                int LA731_0 = input.LA(1);

                if ( (LA731_0==Colon) ) {
                    alt731=1;
                }
                switch (alt731) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_44); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_51);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 4 :
                {
                {
                {
                pushFollow(FOLLOW_51);
                ruleBindingIdentifierAsFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred248_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAssignmentOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred249_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Await,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred250_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_126); if (state.failed) return ;
        match(input,Promisify,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred251_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred252_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Async,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred253_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred254_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        int alt742=4;
        int LA742_0 = input.LA(1);

        if ( (LA742_0==LeftParenthesis) && (synpred251_InternalN4JSParser())) {
            alt742=1;
        }
        else if ( (LA742_0==Async) ) {
            int LA742_2 = input.LA(2);

            if ( (LA742_2==EqualsSignGreaterThanSign) ) {
                alt742=4;
            }
            else if ( (LA742_2==RULE_NO_LINE_TERMINATOR) && (synpred252_InternalN4JSParser())) {
                alt742=2;
            }
            else if ( (LA742_2==LeftParenthesis) && (synpred252_InternalN4JSParser())) {
                alt742=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 742, 2, input);

                throw nvae;
            }
        }
        else if ( (LA742_0==Asterisk) && (synpred253_InternalN4JSParser())) {
            alt742=3;
        }
        else if ( ((LA742_0>=Intersection && LA742_0<=Implements)||(LA742_0>=Promisify && LA742_0<=Abstract)||LA742_0==External||(LA742_0>=Private && LA742_0<=Project)||LA742_0==Public||LA742_0==Static||LA742_0==Target||LA742_0==Await||LA742_0==Union||LA742_0==This||LA742_0==From||LA742_0==Type||(LA742_0>=Get && LA742_0<=Let)||(LA742_0>=Out && LA742_0<=Set)||LA742_0==As||LA742_0==Of||LA742_0==RULE_IDENTIFIER) ) {
            alt742=4;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 742, 0, input);

            throw nvae;
        }
        switch (alt742) {
            case 1 :
                {
                {
                {
                match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return ;

                }
                int alt734=2;
                int LA734_0 = input.LA(1);

                if ( ((LA734_0>=Intersection && LA734_0<=Implements)||(LA734_0>=Promisify && LA734_0<=Abstract)||LA734_0==External||(LA734_0>=Private && LA734_0<=Project)||LA734_0==Public||LA734_0==Static||LA734_0==Target||(LA734_0>=Async && LA734_0<=Await)||LA734_0==Union||LA734_0==This||LA734_0==From||LA734_0==This_1||(LA734_0>=Type && LA734_0<=Void)||LA734_0==FullStopFullStopFullStop||(LA734_0>=Get && LA734_0<=Let)||(LA734_0>=Out && LA734_0<=Set)||LA734_0==As||LA734_0==Of||(LA734_0>=QuestionMark && LA734_0<=LeftSquareBracket)||LA734_0==LeftCurlyBracket||LA734_0==Tilde||LA734_0==RULE_IDENTIFIER) ) {
                    alt734=1;
                }
                switch (alt734) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_48);
                        norm1_FormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop733:
                        do {
                            int alt733=2;
                            int LA733_0 = input.LA(1);

                            if ( (LA733_0==Comma) ) {
                                alt733=1;
                            }


                            switch (alt733) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_49); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_48);
                        	    norm1_FormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop733;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_50); if (state.failed) return ;
                int alt735=2;
                int LA735_0 = input.LA(1);

                if ( (LA735_0==Colon) ) {
                    alt735=1;
                }
                switch (alt735) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_44); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_51);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                {
                {
                match(input,Async,FOLLOW_52); if (state.failed) return ;

                }


                }

                pushFollow(FOLLOW_53);
                ruleNoLineTerminator(null);

                state._fsp--;
                if (state.failed) return ;
                match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return ;

                }


                }
                int alt737=2;
                int LA737_0 = input.LA(1);

                if ( ((LA737_0>=Intersection && LA737_0<=Implements)||(LA737_0>=Promisify && LA737_0<=Abstract)||LA737_0==External||(LA737_0>=Private && LA737_0<=Project)||LA737_0==Public||LA737_0==Static||LA737_0==Target||(LA737_0>=Async && LA737_0<=Await)||LA737_0==Union||LA737_0==This||LA737_0==From||LA737_0==This_1||(LA737_0>=Type && LA737_0<=Void)||LA737_0==FullStopFullStopFullStop||(LA737_0>=Get && LA737_0<=Let)||(LA737_0>=Out && LA737_0<=Set)||LA737_0==As||LA737_0==Of||(LA737_0>=QuestionMark && LA737_0<=LeftSquareBracket)||LA737_0==LeftCurlyBracket||LA737_0==Tilde||LA737_0==RULE_IDENTIFIER) ) {
                    alt737=1;
                }
                switch (alt737) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_48);
                        norm1_FormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop736:
                        do {
                            int alt736=2;
                            int LA736_0 = input.LA(1);

                            if ( (LA736_0==Comma) ) {
                                alt736=1;
                            }


                            switch (alt736) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_49); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_48);
                        	    norm1_FormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop736;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_50); if (state.failed) return ;
                int alt738=2;
                int LA738_0 = input.LA(1);

                if ( (LA738_0==Colon) ) {
                    alt738=1;
                }
                switch (alt738) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_44); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_51);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 3 :
                {
                {
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_52); if (state.failed) return ;

                }


                }

                pushFollow(FOLLOW_53);
                ruleNoLineTerminator(null);

                state._fsp--;
                if (state.failed) return ;
                match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return ;

                }


                }
                int alt740=2;
                int LA740_0 = input.LA(1);

                if ( ((LA740_0>=Intersection && LA740_0<=Implements)||(LA740_0>=Promisify && LA740_0<=Abstract)||LA740_0==External||(LA740_0>=Private && LA740_0<=Project)||LA740_0==Public||LA740_0==Static||LA740_0==Target||(LA740_0>=Async && LA740_0<=Await)||LA740_0==Union||LA740_0==This||LA740_0==From||LA740_0==This_1||(LA740_0>=Type && LA740_0<=Void)||LA740_0==FullStopFullStopFullStop||(LA740_0>=Get && LA740_0<=Let)||(LA740_0>=Out && LA740_0<=Set)||LA740_0==As||LA740_0==Of||(LA740_0>=QuestionMark && LA740_0<=LeftSquareBracket)||LA740_0==LeftCurlyBracket||LA740_0==Tilde||LA740_0==RULE_IDENTIFIER) ) {
                    alt740=1;
                }
                switch (alt740) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_48);
                        norm1_FormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop739:
                        do {
                            int alt739=2;
                            int LA739_0 = input.LA(1);

                            if ( (LA739_0==Comma) ) {
                                alt739=1;
                            }


                            switch (alt739) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_49); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_48);
                        	    norm1_FormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop739;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_50); if (state.failed) return ;
                int alt741=2;
                int LA741_0 = input.LA(1);

                if ( (LA741_0==Colon) ) {
                    alt741=1;
                }
                switch (alt741) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_44); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_51);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 4 :
                {
                {
                {
                pushFollow(FOLLOW_51);
                norm1_BindingIdentifierAsFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred255_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAssignmentOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred256_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Await,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred257_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_126); if (state.failed) return ;
        match(input,Promisify,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred258_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred259_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Async,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred260_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred261_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        int alt752=4;
        int LA752_0 = input.LA(1);

        if ( (LA752_0==LeftParenthesis) && (synpred258_InternalN4JSParser())) {
            alt752=1;
        }
        else if ( (LA752_0==Async) ) {
            int LA752_2 = input.LA(2);

            if ( (LA752_2==EqualsSignGreaterThanSign) ) {
                alt752=4;
            }
            else if ( (LA752_2==RULE_NO_LINE_TERMINATOR) && (synpred259_InternalN4JSParser())) {
                alt752=2;
            }
            else if ( (LA752_2==LeftParenthesis) && (synpred259_InternalN4JSParser())) {
                alt752=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 752, 2, input);

                throw nvae;
            }
        }
        else if ( (LA752_0==Asterisk) && (synpred260_InternalN4JSParser())) {
            alt752=3;
        }
        else if ( ((LA752_0>=Intersection && LA752_0<=Implements)||(LA752_0>=Promisify && LA752_0<=Abstract)||LA752_0==External||(LA752_0>=Private && LA752_0<=Project)||LA752_0==Public||LA752_0==Static||LA752_0==Target||LA752_0==Await||LA752_0==Union||LA752_0==This||LA752_0==From||LA752_0==Type||(LA752_0>=Get && LA752_0<=Let)||(LA752_0>=Out && LA752_0<=Set)||LA752_0==As||LA752_0==Of||LA752_0==RULE_IDENTIFIER) ) {
            alt752=4;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 752, 0, input);

            throw nvae;
        }
        switch (alt752) {
            case 1 :
                {
                {
                {
                match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return ;

                }
                int alt744=2;
                int LA744_0 = input.LA(1);

                if ( ((LA744_0>=Intersection && LA744_0<=Implements)||(LA744_0>=Promisify && LA744_0<=Abstract)||LA744_0==External||(LA744_0>=Private && LA744_0<=Project)||LA744_0==Public||LA744_0==Static||LA744_0==Target||(LA744_0>=Async && LA744_0<=Await)||LA744_0==Union||LA744_0==This||LA744_0==From||LA744_0==This_1||(LA744_0>=Type && LA744_0<=Void)||LA744_0==FullStopFullStopFullStop||(LA744_0>=Get && LA744_0<=Let)||(LA744_0>=Out && LA744_0<=Set)||LA744_0==As||LA744_0==Of||(LA744_0>=QuestionMark && LA744_0<=LeftSquareBracket)||LA744_0==LeftCurlyBracket||LA744_0==Tilde||LA744_0==RULE_IDENTIFIER) ) {
                    alt744=1;
                }
                switch (alt744) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_48);
                        norm1_FormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop743:
                        do {
                            int alt743=2;
                            int LA743_0 = input.LA(1);

                            if ( (LA743_0==Comma) ) {
                                alt743=1;
                            }


                            switch (alt743) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_49); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_48);
                        	    norm1_FormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop743;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_50); if (state.failed) return ;
                int alt745=2;
                int LA745_0 = input.LA(1);

                if ( (LA745_0==Colon) ) {
                    alt745=1;
                }
                switch (alt745) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_44); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_51);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                {
                {
                match(input,Async,FOLLOW_52); if (state.failed) return ;

                }


                }

                pushFollow(FOLLOW_53);
                ruleNoLineTerminator(null);

                state._fsp--;
                if (state.failed) return ;
                match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return ;

                }


                }
                int alt747=2;
                int LA747_0 = input.LA(1);

                if ( ((LA747_0>=Intersection && LA747_0<=Implements)||(LA747_0>=Promisify && LA747_0<=Abstract)||LA747_0==External||(LA747_0>=Private && LA747_0<=Project)||LA747_0==Public||LA747_0==Static||LA747_0==Target||(LA747_0>=Async && LA747_0<=Await)||LA747_0==Union||LA747_0==This||LA747_0==From||LA747_0==This_1||(LA747_0>=Type && LA747_0<=Void)||LA747_0==FullStopFullStopFullStop||(LA747_0>=Get && LA747_0<=Let)||(LA747_0>=Out && LA747_0<=Set)||LA747_0==As||LA747_0==Of||(LA747_0>=QuestionMark && LA747_0<=LeftSquareBracket)||LA747_0==LeftCurlyBracket||LA747_0==Tilde||LA747_0==RULE_IDENTIFIER) ) {
                    alt747=1;
                }
                switch (alt747) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_48);
                        norm1_FormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop746:
                        do {
                            int alt746=2;
                            int LA746_0 = input.LA(1);

                            if ( (LA746_0==Comma) ) {
                                alt746=1;
                            }


                            switch (alt746) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_49); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_48);
                        	    norm1_FormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop746;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_50); if (state.failed) return ;
                int alt748=2;
                int LA748_0 = input.LA(1);

                if ( (LA748_0==Colon) ) {
                    alt748=1;
                }
                switch (alt748) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_44); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_51);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 3 :
                {
                {
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_52); if (state.failed) return ;

                }


                }

                pushFollow(FOLLOW_53);
                ruleNoLineTerminator(null);

                state._fsp--;
                if (state.failed) return ;
                match(input,LeftParenthesis,FOLLOW_47); if (state.failed) return ;

                }


                }
                int alt750=2;
                int LA750_0 = input.LA(1);

                if ( ((LA750_0>=Intersection && LA750_0<=Implements)||(LA750_0>=Promisify && LA750_0<=Abstract)||LA750_0==External||(LA750_0>=Private && LA750_0<=Project)||LA750_0==Public||LA750_0==Static||LA750_0==Target||(LA750_0>=Async && LA750_0<=Await)||LA750_0==Union||LA750_0==This||LA750_0==From||LA750_0==This_1||(LA750_0>=Type && LA750_0<=Void)||LA750_0==FullStopFullStopFullStop||(LA750_0>=Get && LA750_0<=Let)||(LA750_0>=Out && LA750_0<=Set)||LA750_0==As||LA750_0==Of||(LA750_0>=QuestionMark && LA750_0<=LeftSquareBracket)||LA750_0==LeftCurlyBracket||LA750_0==Tilde||LA750_0==RULE_IDENTIFIER) ) {
                    alt750=1;
                }
                switch (alt750) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_48);
                        norm1_FormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop749:
                        do {
                            int alt749=2;
                            int LA749_0 = input.LA(1);

                            if ( (LA749_0==Comma) ) {
                                alt749=1;
                            }


                            switch (alt749) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_49); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_48);
                        	    norm1_FormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop749;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_50); if (state.failed) return ;
                int alt751=2;
                int LA751_0 = input.LA(1);

                if ( (LA751_0==Colon) ) {
                    alt751=1;
                }
                switch (alt751) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_44); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_51);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 4 :
                {
                {
                {
                pushFollow(FOLLOW_51);
                norm1_BindingIdentifierAsFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred262_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAssignmentOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred263_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred264_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||(input.LA(1)>=Asterisk && input.LA(1)<=PlusSign)||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred265_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred266_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||(input.LA(1)>=Asterisk && input.LA(1)<=PlusSign)||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred275_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred279_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleParameterizedTypeRefNominal();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred280_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleParameterizedTypeRefNominal();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred283_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop761:
        do {
            int alt761=2;
            int LA761_0 = input.LA(1);

            if ( ((LA761_0>=Protected && LA761_0<=Abstract)||LA761_0==External||(LA761_0>=Private && LA761_0<=Project)||LA761_0==Public||LA761_0==Static||LA761_0==Const) ) {
                alt761=1;
            }


            switch (alt761) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_144);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop761;
            }
        } while (true);

        pushFollow(FOLLOW_2);
        ruleGetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred284_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop762:
        do {
            int alt762=2;
            int LA762_0 = input.LA(1);

            if ( ((LA762_0>=Protected && LA762_0<=Abstract)||LA762_0==External||(LA762_0>=Private && LA762_0<=Project)||LA762_0==Public||LA762_0==Static||LA762_0==Const) ) {
                alt762=1;
            }


            switch (alt762) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_146);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop762;
            }
        } while (true);

        match(input,Set,FOLLOW_178); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred285_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop763:
        do {
            int alt763=2;
            alt763 = dfa763.predict(input);
            switch (alt763) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_143);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop763;
            }
        } while (true);
        int alt764=2;
        int LA764_0 = input.LA(1);

        if ( (LA764_0==LessThanSign) ) {
            alt764=1;
        }
        switch (alt764) {
            case 1 :
                {
                pushFollow(FOLLOW_94);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt765=2;
        alt765 = dfa765.predict(input);
        switch (alt765) {
            case 1 :
                {
                pushFollow(FOLLOW_94);
                ruleBogusTypeRefFragment(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt766=2;
        int LA766_0 = input.LA(1);

        if ( (LA766_0==Asterisk) ) {
            alt766=1;
        }
        else if ( ((LA766_0>=Intersection && LA766_0<=With)||(LA766_0>=For && LA766_0<=Var)||(LA766_0>=As && LA766_0<=Of)||LA766_0==LeftSquareBracket||LA766_0==RULE_DOUBLE||LA766_0==RULE_HEX_INT||LA766_0==RULE_OCTAL_INT||LA766_0==RULE_SCIENTIFIC_INT||LA766_0==RULE_IDENTIFIER||LA766_0==RULE_STRING||LA766_0==RULE_INT) ) {
            alt766=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 766, 0, input);

            throw nvae;
        }
        switch (alt766) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_93); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_53);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                pushFollow(FOLLOW_93);
                ruleAsyncNoTrailingLineBreak(null);

                state._fsp--;
                if (state.failed) return ;
                {
                {
                pushFollow(FOLLOW_53);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred286_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop767:
        do {
            int alt767=2;
            int LA767_0 = input.LA(1);

            if ( ((LA767_0>=Protected && LA767_0<=Abstract)||LA767_0==External||(LA767_0>=Private && LA767_0<=Project)||LA767_0==Public||LA767_0==Static||LA767_0==Const) ) {
                alt767=1;
            }


            switch (alt767) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_144);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop767;
            }
        } while (true);

        pushFollow(FOLLOW_2);
        norm1_GetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred287_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop768:
        do {
            int alt768=2;
            int LA768_0 = input.LA(1);

            if ( ((LA768_0>=Protected && LA768_0<=Abstract)||LA768_0==External||(LA768_0>=Private && LA768_0<=Project)||LA768_0==Public||LA768_0==Static||LA768_0==Const) ) {
                alt768=1;
            }


            switch (alt768) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_146);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop768;
            }
        } while (true);

        match(input,Set,FOLLOW_178); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred288_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop769:
        do {
            int alt769=2;
            alt769 = dfa769.predict(input);
            switch (alt769) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_143);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop769;
            }
        } while (true);
        int alt770=2;
        int LA770_0 = input.LA(1);

        if ( (LA770_0==LessThanSign) ) {
            alt770=1;
        }
        switch (alt770) {
            case 1 :
                {
                pushFollow(FOLLOW_94);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt771=2;
        alt771 = dfa771.predict(input);
        switch (alt771) {
            case 1 :
                {
                pushFollow(FOLLOW_94);
                ruleBogusTypeRefFragment(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt772=2;
        int LA772_0 = input.LA(1);

        if ( (LA772_0==Asterisk) ) {
            alt772=1;
        }
        else if ( ((LA772_0>=Intersection && LA772_0<=With)||(LA772_0>=For && LA772_0<=Var)||(LA772_0>=As && LA772_0<=Of)||LA772_0==LeftSquareBracket||LA772_0==RULE_DOUBLE||LA772_0==RULE_HEX_INT||LA772_0==RULE_OCTAL_INT||LA772_0==RULE_SCIENTIFIC_INT||LA772_0==RULE_IDENTIFIER||LA772_0==RULE_STRING||LA772_0==RULE_INT) ) {
            alt772=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 772, 0, input);

            throw nvae;
        }
        switch (alt772) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_93); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_53);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                pushFollow(FOLLOW_93);
                ruleAsyncNoTrailingLineBreak(null);

                state._fsp--;
                if (state.failed) return ;
                {
                {
                pushFollow(FOLLOW_53);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred289_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop773:
        do {
            int alt773=2;
            int LA773_0 = input.LA(1);

            if ( ((LA773_0>=Protected && LA773_0<=Abstract)||LA773_0==External||(LA773_0>=Private && LA773_0<=Project)||LA773_0==Public||LA773_0==Static||LA773_0==Const) ) {
                alt773=1;
            }


            switch (alt773) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_144);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop773;
            }
        } while (true);

        pushFollow(FOLLOW_2);
        ruleGetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred290_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred291_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop774:
        do {
            int alt774=2;
            int LA774_0 = input.LA(1);

            if ( ((LA774_0>=Protected && LA774_0<=Abstract)||LA774_0==External||(LA774_0>=Private && LA774_0<=Project)||LA774_0==Public||LA774_0==Static||LA774_0==Const) ) {
                alt774=1;
            }


            switch (alt774) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_146);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop774;
            }
        } while (true);

        match(input,Set,FOLLOW_178); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred293_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred294_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop775:
        do {
            int alt775=2;
            alt775 = dfa775.predict(input);
            switch (alt775) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_143);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop775;
            }
        } while (true);
        int alt776=2;
        int LA776_0 = input.LA(1);

        if ( (LA776_0==LessThanSign) ) {
            alt776=1;
        }
        switch (alt776) {
            case 1 :
                {
                pushFollow(FOLLOW_94);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt777=2;
        alt777 = dfa777.predict(input);
        switch (alt777) {
            case 1 :
                {
                pushFollow(FOLLOW_94);
                ruleBogusTypeRefFragment(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt778=2;
        int LA778_0 = input.LA(1);

        if ( (LA778_0==Asterisk) ) {
            alt778=1;
        }
        else if ( ((LA778_0>=Intersection && LA778_0<=With)||(LA778_0>=For && LA778_0<=Var)||(LA778_0>=As && LA778_0<=Of)||LA778_0==LeftSquareBracket||LA778_0==RULE_DOUBLE||LA778_0==RULE_HEX_INT||LA778_0==RULE_OCTAL_INT||LA778_0==RULE_SCIENTIFIC_INT||LA778_0==RULE_IDENTIFIER||LA778_0==RULE_STRING||LA778_0==RULE_INT) ) {
            alt778=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 778, 0, input);

            throw nvae;
        }
        switch (alt778) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_93); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_53);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                pushFollow(FOLLOW_93);
                ruleAsyncNoTrailingLineBreak(null);

                state._fsp--;
                if (state.failed) return ;
                {
                {
                pushFollow(FOLLOW_53);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred297_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop779:
        do {
            int alt779=2;
            int LA779_0 = input.LA(1);

            if ( ((LA779_0>=Protected && LA779_0<=Abstract)||LA779_0==External||(LA779_0>=Private && LA779_0<=Project)||LA779_0==Public||LA779_0==Static||LA779_0==Const) ) {
                alt779=1;
            }


            switch (alt779) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_144);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop779;
            }
        } while (true);

        pushFollow(FOLLOW_2);
        norm1_GetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred298_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred299_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop780:
        do {
            int alt780=2;
            int LA780_0 = input.LA(1);

            if ( ((LA780_0>=Protected && LA780_0<=Abstract)||LA780_0==External||(LA780_0>=Private && LA780_0<=Project)||LA780_0==Public||LA780_0==Static||LA780_0==Const) ) {
                alt780=1;
            }


            switch (alt780) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_146);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop780;
            }
        } while (true);

        match(input,Set,FOLLOW_178); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred301_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred302_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop781:
        do {
            int alt781=2;
            alt781 = dfa781.predict(input);
            switch (alt781) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_143);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop781;
            }
        } while (true);
        int alt782=2;
        int LA782_0 = input.LA(1);

        if ( (LA782_0==LessThanSign) ) {
            alt782=1;
        }
        switch (alt782) {
            case 1 :
                {
                pushFollow(FOLLOW_94);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt783=2;
        alt783 = dfa783.predict(input);
        switch (alt783) {
            case 1 :
                {
                pushFollow(FOLLOW_94);
                ruleBogusTypeRefFragment(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt784=2;
        int LA784_0 = input.LA(1);

        if ( (LA784_0==Asterisk) ) {
            alt784=1;
        }
        else if ( ((LA784_0>=Intersection && LA784_0<=With)||(LA784_0>=For && LA784_0<=Var)||(LA784_0>=As && LA784_0<=Of)||LA784_0==LeftSquareBracket||LA784_0==RULE_DOUBLE||LA784_0==RULE_HEX_INT||LA784_0==RULE_OCTAL_INT||LA784_0==RULE_SCIENTIFIC_INT||LA784_0==RULE_IDENTIFIER||LA784_0==RULE_STRING||LA784_0==RULE_INT) ) {
            alt784=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 784, 0, input);

            throw nvae;
        }
        switch (alt784) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_93); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_53);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                pushFollow(FOLLOW_93);
                ruleAsyncNoTrailingLineBreak(null);

                state._fsp--;
                if (state.failed) return ;
                {
                {
                pushFollow(FOLLOW_53);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred311_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred312_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred313_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred314_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred316_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred318_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred323_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred326_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred327_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_83);
        ruleLiteralOrComputedPropertyName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred328_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_83);
        norm1_LiteralOrComputedPropertyName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred329_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred330_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred331_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred332_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred333_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftParenthesis,FOLLOW_156); if (state.failed) return ;
        pushFollow(FOLLOW_66);
        ruleTAnonymousFormalParameterList(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,RightParenthesis,FOLLOW_51); if (state.failed) return ;
        match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred334_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleUndefModifierToken();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred335_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred336_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred337_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred338_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred339_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred340_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Get,FOLLOW_27); if (state.failed) return ;
        {
        {
        pushFollow(FOLLOW_2);
        ruleIdentifierName();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred341_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Set,FOLLOW_27); if (state.failed) return ;
        {
        {
        pushFollow(FOLLOW_2);
        ruleIdentifierName();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred342_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt798=2;
        int LA798_0 = input.LA(1);

        if ( (LA798_0==LessThanSign) ) {
            alt798=1;
        }
        switch (alt798) {
            case 1 :
                {
                match(input,LessThanSign,FOLLOW_16); if (state.failed) return ;
                {
                {
                pushFollow(FOLLOW_17);
                ruleTypeVariable();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                loop797:
                do {
                    int alt797=2;
                    int LA797_0 = input.LA(1);

                    if ( (LA797_0==Comma) ) {
                        alt797=1;
                    }


                    switch (alt797) {
                	case 1 :
                	    {
                	    match(input,Comma,FOLLOW_16); if (state.failed) return ;
                	    {
                	    {
                	    pushFollow(FOLLOW_17);
                	    ruleTypeVariable();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop797;
                    }
                } while (true);

                match(input,GreaterThanSign,FOLLOW_27); if (state.failed) return ;

                }
                break;

        }
        {
        {
        pushFollow(FOLLOW_53);
        ruleIdentifierName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred346_InternalN4JSParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;

        }


        }
    }

    public final boolean synpred334_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred334_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred311_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred311_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred108_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred108_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred195_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred195_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred340_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred340_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred328_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred328_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred214_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred214_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred234_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred234_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred286_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred286_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred181_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred181_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred237_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred237_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred211_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred211_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred263_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred263_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred266_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred266_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred186_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred186_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred314_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred314_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred228_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred228_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred134_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred134_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred189_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred189_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred220_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred220_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred190_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred190_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred219_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred219_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred302_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred302_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred192_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred192_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred198_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred198_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred283_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred283_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred217_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred217_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred289_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred289_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred290_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred290_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred205_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred205_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred208_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred208_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred203_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred203_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred298_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred298_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred297_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred297_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred117_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred117_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred114_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred114_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred197_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred197_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred193_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred193_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred158_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred158_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred326_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred326_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred342_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred342_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred129_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred129_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred180_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred180_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred183_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred183_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred316_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred316_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred187_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred187_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred313_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred313_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred184_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred184_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred312_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred312_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred188_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred188_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred146_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred146_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred341_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred341_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred329_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred329_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred327_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred327_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred323_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred323_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred346_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred346_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred155_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred155_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred152_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred152_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred339_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred339_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred337_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred337_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred332_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred332_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred330_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred330_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred331_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred331_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred333_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred333_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred338_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred338_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred336_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred336_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred335_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred335_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred247_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred247_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred78_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred78_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred201_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred201_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred253_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred253_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred191_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred191_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred199_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred199_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred301_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred301_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred218_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred218_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred230_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred230_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred179_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred179_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred210_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred210_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred182_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred182_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred262_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred262_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred318_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred318_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred185_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred185_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred221_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred221_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred279_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred279_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred227_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred227_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred224_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred224_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred113_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred113_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred196_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred196_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred194_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred194_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred215_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred215_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred213_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred213_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred285_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred285_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred287_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred287_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred209_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred209_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred291_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred291_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred294_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred294_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred293_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred293_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred207_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred207_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred118_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred118_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred116_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred116_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred299_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred299_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred251_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred251_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred280_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred280_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred249_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred249_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred255_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred255_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred284_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred284_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred232_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred232_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred216_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred216_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred261_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred261_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred239_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred239_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred288_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred288_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred236_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred236_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred212_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred212_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred235_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred235_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred265_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred265_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred264_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred264_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred229_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred229_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred226_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred226_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred222_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred222_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred225_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred225_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred275_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred275_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred223_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred223_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred250_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred250_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred252_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred252_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred248_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred248_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred254_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred254_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred246_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred246_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred256_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred256_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred233_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred233_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred231_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred231_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred260_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred260_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred238_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred238_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred241_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred241_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred259_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred259_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred242_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred242_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred258_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred258_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred240_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred240_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred257_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred257_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred243_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred243_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred244_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred244_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred245_InternalN4JSParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred245_InternalN4JSParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA3 dfa3 = new DFA3(this);
    protected DFA16 dfa16 = new DFA16(this);
    protected DFA13 dfa13 = new DFA13(this);
    protected DFA19 dfa19 = new DFA19(this);
    protected DFA25 dfa25 = new DFA25(this);
    protected DFA40 dfa40 = new DFA40(this);
    protected DFA27 dfa27 = new DFA27(this);
    protected DFA37 dfa37 = new DFA37(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA51 dfa51 = new DFA51(this);
    protected DFA70 dfa70 = new DFA70(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA84 dfa84 = new DFA84(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA106 dfa106 = new DFA106(this);
    protected DFA117 dfa117 = new DFA117(this);
    protected DFA135 dfa135 = new DFA135(this);
    protected DFA132 dfa132 = new DFA132(this);
    protected DFA141 dfa141 = new DFA141(this);
    protected DFA138 dfa138 = new DFA138(this);
    protected DFA145 dfa145 = new DFA145(this);
    protected DFA146 dfa146 = new DFA146(this);
    protected DFA147 dfa147 = new DFA147(this);
    protected DFA148 dfa148 = new DFA148(this);
    protected DFA151 dfa151 = new DFA151(this);
    protected DFA163 dfa163 = new DFA163(this);
    protected DFA165 dfa165 = new DFA165(this);
    protected DFA167 dfa167 = new DFA167(this);
    protected DFA169 dfa169 = new DFA169(this);
    protected DFA171 dfa171 = new DFA171(this);
    protected DFA174 dfa174 = new DFA174(this);
    protected DFA177 dfa177 = new DFA177(this);
    protected DFA180 dfa180 = new DFA180(this);
    protected DFA189 dfa189 = new DFA189(this);
    protected DFA208 dfa208 = new DFA208(this);
    protected DFA207 dfa207 = new DFA207(this);
    protected DFA199 dfa199 = new DFA199(this);
    protected DFA192 dfa192 = new DFA192(this);
    protected DFA226 dfa226 = new DFA226(this);
    protected DFA225 dfa225 = new DFA225(this);
    protected DFA217 dfa217 = new DFA217(this);
    protected DFA210 dfa210 = new DFA210(this);
    protected DFA248 dfa248 = new DFA248(this);
    protected DFA247 dfa247 = new DFA247(this);
    protected DFA250 dfa250 = new DFA250(this);
    protected DFA249 dfa249 = new DFA249(this);
    protected DFA251 dfa251 = new DFA251(this);
    protected DFA252 dfa252 = new DFA252(this);
    protected DFA255 dfa255 = new DFA255(this);
    protected DFA261 dfa261 = new DFA261(this);
    protected DFA273 dfa273 = new DFA273(this);
    protected DFA274 dfa274 = new DFA274(this);
    protected DFA282 dfa282 = new DFA282(this);
    protected DFA275 dfa275 = new DFA275(this);
    protected DFA277 dfa277 = new DFA277(this);
    protected DFA280 dfa280 = new DFA280(this);
    protected DFA290 dfa290 = new DFA290(this);
    protected DFA283 dfa283 = new DFA283(this);
    protected DFA285 dfa285 = new DFA285(this);
    protected DFA288 dfa288 = new DFA288(this);
    protected DFA292 dfa292 = new DFA292(this);
    protected DFA296 dfa296 = new DFA296(this);
    protected DFA299 dfa299 = new DFA299(this);
    protected DFA300 dfa300 = new DFA300(this);
    protected DFA301 dfa301 = new DFA301(this);
    protected DFA303 dfa303 = new DFA303(this);
    protected DFA321 dfa321 = new DFA321(this);
    protected DFA327 dfa327 = new DFA327(this);
    protected DFA340 dfa340 = new DFA340(this);
    protected DFA341 dfa341 = new DFA341(this);
    protected DFA344 dfa344 = new DFA344(this);
    protected DFA345 dfa345 = new DFA345(this);
    protected DFA346 dfa346 = new DFA346(this);
    protected DFA347 dfa347 = new DFA347(this);
    protected DFA379 dfa379 = new DFA379(this);
    protected DFA378 dfa378 = new DFA378(this);
    protected DFA381 dfa381 = new DFA381(this);
    protected DFA380 dfa380 = new DFA380(this);
    protected DFA383 dfa383 = new DFA383(this);
    protected DFA382 dfa382 = new DFA382(this);
    protected DFA385 dfa385 = new DFA385(this);
    protected DFA384 dfa384 = new DFA384(this);
    protected DFA386 dfa386 = new DFA386(this);
    protected DFA387 dfa387 = new DFA387(this);
    protected DFA388 dfa388 = new DFA388(this);
    protected DFA389 dfa389 = new DFA389(this);
    protected DFA421 dfa421 = new DFA421(this);
    protected DFA463 dfa463 = new DFA463(this);
    protected DFA464 dfa464 = new DFA464(this);
    protected DFA476 dfa476 = new DFA476(this);
    protected DFA466 dfa466 = new DFA466(this);
    protected DFA469 dfa469 = new DFA469(this);
    protected DFA471 dfa471 = new DFA471(this);
    protected DFA473 dfa473 = new DFA473(this);
    protected DFA488 dfa488 = new DFA488(this);
    protected DFA478 dfa478 = new DFA478(this);
    protected DFA481 dfa481 = new DFA481(this);
    protected DFA483 dfa483 = new DFA483(this);
    protected DFA485 dfa485 = new DFA485(this);
    protected DFA489 dfa489 = new DFA489(this);
    protected DFA490 dfa490 = new DFA490(this);
    protected DFA493 dfa493 = new DFA493(this);
    protected DFA494 dfa494 = new DFA494(this);
    protected DFA497 dfa497 = new DFA497(this);
    protected DFA499 dfa499 = new DFA499(this);
    protected DFA502 dfa502 = new DFA502(this);
    protected DFA504 dfa504 = new DFA504(this);
    protected DFA512 dfa512 = new DFA512(this);
    protected DFA514 dfa514 = new DFA514(this);
    protected DFA516 dfa516 = new DFA516(this);
    protected DFA519 dfa519 = new DFA519(this);
    protected DFA526 dfa526 = new DFA526(this);
    protected DFA529 dfa529 = new DFA529(this);
    protected DFA539 dfa539 = new DFA539(this);
    protected DFA545 dfa545 = new DFA545(this);
    protected DFA549 dfa549 = new DFA549(this);
    protected DFA550 dfa550 = new DFA550(this);
    protected DFA567 dfa567 = new DFA567(this);
    protected DFA571 dfa571 = new DFA571(this);
    protected DFA574 dfa574 = new DFA574(this);
    protected DFA585 dfa585 = new DFA585(this);
    protected DFA590 dfa590 = new DFA590(this);
    protected DFA592 dfa592 = new DFA592(this);
    protected DFA596 dfa596 = new DFA596(this);
    protected DFA689 dfa689 = new DFA689(this);
    protected DFA691 dfa691 = new DFA691(this);
    protected DFA693 dfa693 = new DFA693(this);
    protected DFA695 dfa695 = new DFA695(this);
    protected DFA697 dfa697 = new DFA697(this);
    protected DFA699 dfa699 = new DFA699(this);
    protected DFA701 dfa701 = new DFA701(this);
    protected DFA703 dfa703 = new DFA703(this);
    protected DFA763 dfa763 = new DFA763(this);
    protected DFA765 dfa765 = new DFA765(this);
    protected DFA769 dfa769 = new DFA769(this);
    protected DFA771 dfa771 = new DFA771(this);
    protected DFA775 dfa775 = new DFA775(this);
    protected DFA777 dfa777 = new DFA777(this);
    protected DFA781 dfa781 = new DFA781(this);
    protected DFA783 dfa783 = new DFA783(this);
    static final String dfa_1s = "\124\uffff";
    static final String dfa_2s = "\1\4\13\0\110\uffff";
    static final String dfa_3s = "\1\u0095\13\0\110\uffff";
    static final String dfa_4s = "\14\uffff\1\4\1\5\1\6\1\7\101\uffff\1\1\1\2\1\3";
    static final String dfa_5s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\110\uffff}>";
    static final String[] dfa_6s = {
            "\3\17\1\uffff\1\17\1\13\1\4\1\7\2\17\1\6\1\17\3\uffff\1\2\1\3\1\17\1\16\1\15\1\5\1\17\1\10\6\17\1\uffff\1\12\1\11\7\17\2\uffff\1\14\7\17\4\uffff\10\17\5\uffff\1\17\1\uffff\1\17\1\uffff\1\17\7\uffff\3\17\1\uffff\1\17\2\uffff\1\17\2\uffff\1\17\1\uffff\2\17\1\uffff\1\17\1\uffff\1\17\1\uffff\2\17\3\uffff\1\1\1\17\2\uffff\1\17\2\uffff\1\17\3\uffff\1\17\1\uffff\4\17\1\uffff\1\17\1\uffff\1\17\2\uffff\1\17\11\uffff\2\17\10\uffff\1\17",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "147:1: ( ( ( ( () CommercialAt ( This | Target | RULE_IDENTIFIER ) ) )=>this_AnnotatedScriptElement_0= ruleAnnotatedScriptElement ) | ( ( ( () ( ( ruleN4Modifier ) )* Class ( ( ruleTypingStrategyDefSiteOperator ) )? ( ( ruleBindingIdentifier ) )? ) )=>this_N4ClassDeclaration_1= ruleN4ClassDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* Interface ( ( ruleTypingStrategyDefSiteOperator ) )? ( ( ruleBindingIdentifier ) )? ) )=>this_N4InterfaceDeclaration_2= ruleN4InterfaceDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* Enum ( ( ruleBindingIdentifier ) )? ) )=>this_N4EnumDeclaration_3= ruleN4EnumDeclaration ) | this_ImportDeclaration_4= ruleImportDeclaration | this_ExportDeclaration_5= ruleExportDeclaration | this_RootStatement_6= ruleRootStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA3_0 = input.LA(1);

                         
                        int index3_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA3_0>=9 && LA3_0<=106 && (s=T2S.M_0[LA3_0-(9)])>=0)) { /* 11 cases */ }
                        else if ( (LA3_0==Enum) && (synpred4_InternalN4JSParser())) {s = 12;}

                        else if ( (LA3_0==Import) ) {s = 13;}

                        else if ( (LA3_0==Export) ) {s = 14;}

                        else if ( ((LA3_0>=Intersection && LA3_0<=Implements)||LA3_0==Promisify||(LA3_0>=Continue && LA3_0<=Debugger)||LA3_0==Function||LA3_0==Delete||LA3_0==Return||(LA3_0>=Switch && LA3_0<=Break)||(LA3_0>=False && LA3_0<=This)||(LA3_0>=From && LA3_0<=With)||(LA3_0>=For && LA3_0<=Var)||LA3_0==PlusSignPlusSign||LA3_0==HyphenMinusHyphenMinus||LA3_0==SolidusEqualsSign||(LA3_0>=As && LA3_0<=If)||LA3_0==Of||LA3_0==ExclamationMark||LA3_0==LeftParenthesis||(LA3_0>=Asterisk && LA3_0<=PlusSign)||LA3_0==HyphenMinus||LA3_0==Solidus||(LA3_0>=Semicolon && LA3_0<=LessThanSign)||LA3_0==LeftSquareBracket||LA3_0==LeftCurlyBracket||LA3_0==Tilde||LA3_0==RULE_DOUBLE||(LA3_0>=RULE_HEX_INT && LA3_0<=RULE_LEGACY_OCTAL_INT)||LA3_0==RULE_SCIENTIFIC_INT||LA3_0==RULE_IDENTIFIER||LA3_0==RULE_STRING||(LA3_0>=RULE_TEMPLATE_HEAD && LA3_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA3_0==RULE_INT) ) {s = 15;}

                         
                        input.seek(index3_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA3_1 = input.LA(1);

                         
                        int index3_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalN4JSParser()) ) {s = 81;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index3_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA3_2 = input.LA(1);

                         
                        int index3_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalN4JSParser()) ) {s = 82;}

                        else if ( (synpred3_InternalN4JSParser()) ) {s = 83;}

                        else if ( (synpred4_InternalN4JSParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index3_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA3_3 = input.LA(1);

                         
                        int index3_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalN4JSParser()) ) {s = 82;}

                        else if ( (synpred3_InternalN4JSParser()) ) {s = 83;}

                        else if ( (synpred4_InternalN4JSParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index3_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA3_4 = input.LA(1);

                         
                        int index3_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalN4JSParser()) ) {s = 82;}

                        else if ( (synpred3_InternalN4JSParser()) ) {s = 83;}

                        else if ( (synpred4_InternalN4JSParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index3_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA3_5 = input.LA(1);

                         
                        int index3_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalN4JSParser()) ) {s = 82;}

                        else if ( (synpred3_InternalN4JSParser()) ) {s = 83;}

                        else if ( (synpred4_InternalN4JSParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index3_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA3_6 = input.LA(1);

                         
                        int index3_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalN4JSParser()) ) {s = 82;}

                        else if ( (synpred3_InternalN4JSParser()) ) {s = 83;}

                        else if ( (synpred4_InternalN4JSParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index3_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA3_7 = input.LA(1);

                         
                        int index3_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalN4JSParser()) ) {s = 82;}

                        else if ( (synpred3_InternalN4JSParser()) ) {s = 83;}

                        else if ( (synpred4_InternalN4JSParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index3_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA3_8 = input.LA(1);

                         
                        int index3_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalN4JSParser()) ) {s = 82;}

                        else if ( (synpred3_InternalN4JSParser()) ) {s = 83;}

                        else if ( (synpred4_InternalN4JSParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index3_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA3_9 = input.LA(1);

                         
                        int index3_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalN4JSParser()) ) {s = 82;}

                        else if ( (synpred3_InternalN4JSParser()) ) {s = 83;}

                        else if ( (synpred4_InternalN4JSParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index3_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA3_10 = input.LA(1);

                         
                        int index3_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalN4JSParser()) ) {s = 82;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index3_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA3_11 = input.LA(1);

                         
                        int index3_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalN4JSParser()) ) {s = 83;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index3_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 3, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\16\uffff";
    static final String dfa_8s = "\1\11\2\uffff\10\11\3\uffff";
    static final String dfa_9s = "\1\55\2\uffff\10\55\3\uffff";
    static final String dfa_10s = "\1\uffff\1\1\1\2\10\uffff\1\3\1\4\1\5";
    static final String dfa_11s = "\16\uffff}>";
    static final String[] dfa_12s = {
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\1\uffff\1\1\1\2\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "",
            "",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA16 extends DFA {

        public DFA16(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 16;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "305:2: ( ( () this_ExportDeclarationImpl_2= ruleExportDeclarationImpl[$current] ) | ( () this_ImportDeclarationImpl_4= ruleImportDeclarationImpl[$current] ) | ( () ( ( ( ( ( ruleN4Modifier ) )* ruleAsyncNoTrailingLineBreak[null] Function ) )=> ( ( (lv_declaredModifiers_6_0= ruleN4Modifier ) )* this_AsyncNoTrailingLineBreak_7= ruleAsyncNoTrailingLineBreak[$current] ( ( Function )=>this_FunctionImpl_8= ruleFunctionImpl[$current] ) ) ) ) | ( ( ( () ( (lv_declaredModifiers_10_0= ruleN4Modifier ) )* otherlv_11= Class ( (lv_typingStrategy_12_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_13_0= ruleBindingIdentifier ) ) (this_TypeVariables_14= ruleTypeVariables[$current] )? (this_ClassExtendsClause_15= ruleClassExtendsClause[$current] )? ) | ( () ( (lv_declaredModifiers_17_0= ruleN4Modifier ) )* otherlv_18= Interface ( (lv_typingStrategy_19_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_20_0= ruleBindingIdentifier ) ) (this_TypeVariables_21= ruleTypeVariables[$current] )? (this_InterfaceImplementsList_22= ruleInterfaceImplementsList[$current] )? ) ) this_Members_23= ruleMembers[$current] ) | ( () ( (lv_declaredModifiers_25_0= ruleN4Modifier ) )* otherlv_26= Enum ( (lv_name_27_0= ruleBindingIdentifier ) ) otherlv_28= LeftCurlyBracket ( (lv_literals_29_0= ruleN4EnumLiteral ) ) (otherlv_30= Comma ( (lv_literals_31_0= ruleN4EnumLiteral ) ) )* otherlv_32= RightCurlyBracket ) )";
        }
    }
    static final String dfa_13s = "\13\uffff";
    static final String dfa_14s = "\11\11\2\uffff";
    static final String dfa_15s = "\11\43\2\uffff";
    static final String dfa_16s = "\11\uffff\1\1\1\2";
    static final String dfa_17s = "\13\uffff}>";
    static final String[] dfa_18s = {
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA13 extends DFA {

        public DFA13(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 13;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "400:7: ( ( () ( (lv_declaredModifiers_10_0= ruleN4Modifier ) )* otherlv_11= Class ( (lv_typingStrategy_12_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_13_0= ruleBindingIdentifier ) ) (this_TypeVariables_14= ruleTypeVariables[$current] )? (this_ClassExtendsClause_15= ruleClassExtendsClause[$current] )? ) | ( () ( (lv_declaredModifiers_17_0= ruleN4Modifier ) )* otherlv_18= Interface ( (lv_typingStrategy_19_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_20_0= ruleBindingIdentifier ) ) (this_TypeVariables_21= ruleTypeVariables[$current] )? (this_InterfaceImplementsList_22= ruleInterfaceImplementsList[$current] )? ) )";
        }
    }
    static final String dfa_19s = "\102\uffff";
    static final String dfa_20s = "\1\4\10\0\1\uffff\2\0\1\uffff\2\0\1\uffff\1\0\61\uffff";
    static final String dfa_21s = "\1\u0095\10\0\1\uffff\2\0\1\uffff\2\0\1\uffff\1\0\61\uffff";
    static final String dfa_22s = "\11\uffff\1\1\2\uffff\1\1\2\uffff\1\1\1\uffff\1\2\60\uffff";
    static final String dfa_23s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\12\1\uffff\1\13\1\14\1\uffff\1\15\61\uffff}>";
    static final String[] dfa_24s = {
            "\3\21\1\uffff\1\21\1\13\1\4\1\7\2\uffff\1\6\1\16\3\uffff\1\2\1\3\1\21\2\uffff\1\5\1\uffff\1\10\1\uffff\2\21\1\15\1\21\2\uffff\1\12\1\11\2\21\1\uffff\1\21\1\uffff\2\21\2\uffff\1\14\6\21\6\uffff\1\21\1\20\3\21\1\uffff\1\17\5\uffff\1\21\1\uffff\1\21\1\uffff\1\21\7\uffff\1\21\3\uffff\1\21\2\uffff\1\21\2\uffff\1\21\1\uffff\2\21\1\uffff\1\21\1\uffff\1\21\2\uffff\1\21\3\uffff\1\1\1\21\2\uffff\1\21\2\uffff\1\21\3\uffff\1\21\1\uffff\4\21\1\uffff\1\21\1\uffff\1\21\2\uffff\1\21\11\uffff\2\21\10\uffff\1\21",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA19 extends DFA {

        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "918:2: ( ( ( CommercialAt | Private | Project | Protected | Public | External | Abstract | Static | Const | Class | Interface | Enum | Async | Function | Var | Let )=> (lv_exportedElement_9_0= ruleExportableElement ) ) | ( ( (lv_defaultExportedExpression_10_0= norm1_AssignmentExpression ) ) ruleSemi ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA19_0 = input.LA(1);

                         
                        int index19_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA19_0==CommercialAt) ) {s = 1;}

                        else if ( (LA19_0==Private) ) {s = 2;}

                        else if ( (LA19_0==Project) ) {s = 3;}

                        else if ( (LA19_0==Protected) ) {s = 4;}

                        else if ( (LA19_0==Public) ) {s = 5;}

                        else if ( (LA19_0==External) ) {s = 6;}

                        else if ( (LA19_0==Abstract) ) {s = 7;}

                        else if ( (LA19_0==Static) ) {s = 8;}

                        else if ( (LA19_0==Const) && (synpred9_InternalN4JSParser())) {s = 9;}

                        else if ( (LA19_0==Class) ) {s = 10;}

                        else if ( (LA19_0==Interface) ) {s = 11;}

                        else if ( (LA19_0==Enum) && (synpred9_InternalN4JSParser())) {s = 12;}

                        else if ( (LA19_0==Async) ) {s = 13;}

                        else if ( (LA19_0==Function) ) {s = 14;}

                        else if ( (LA19_0==Var) && (synpred9_InternalN4JSParser())) {s = 15;}

                        else if ( (LA19_0==Let) ) {s = 16;}

                        else if ( ((LA19_0>=Intersection && LA19_0<=Implements)||LA19_0==Promisify||LA19_0==Delete||(LA19_0>=Target && LA19_0<=Typeof)||LA19_0==Await||(LA19_0>=False && LA19_0<=Super)||LA19_0==Union||(LA19_0>=Yield && LA19_0<=This)||(LA19_0>=From && LA19_0<=Void)||LA19_0==Get||(LA19_0>=New && LA19_0<=Set)||LA19_0==PlusSignPlusSign||LA19_0==HyphenMinusHyphenMinus||LA19_0==SolidusEqualsSign||LA19_0==As||LA19_0==Of||LA19_0==ExclamationMark||LA19_0==LeftParenthesis||(LA19_0>=Asterisk && LA19_0<=PlusSign)||LA19_0==HyphenMinus||LA19_0==Solidus||LA19_0==LessThanSign||LA19_0==LeftSquareBracket||LA19_0==LeftCurlyBracket||LA19_0==Tilde||LA19_0==RULE_DOUBLE||(LA19_0>=RULE_HEX_INT && LA19_0<=RULE_LEGACY_OCTAL_INT)||LA19_0==RULE_SCIENTIFIC_INT||LA19_0==RULE_IDENTIFIER||LA19_0==RULE_STRING||(LA19_0>=RULE_TEMPLATE_HEAD && LA19_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA19_0==RULE_INT) ) {s = 17;}

                         
                        input.seek(index19_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA19_1 = input.LA(1);

                         
                        int index19_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_InternalN4JSParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index19_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA19_2 = input.LA(1);

                         
                        int index19_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_InternalN4JSParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index19_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA19_3 = input.LA(1);

                         
                        int index19_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_InternalN4JSParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index19_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA19_4 = input.LA(1);

                         
                        int index19_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_InternalN4JSParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index19_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA19_5 = input.LA(1);

                         
                        int index19_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_InternalN4JSParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index19_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA19_6 = input.LA(1);

                         
                        int index19_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_InternalN4JSParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index19_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA19_7 = input.LA(1);

                         
                        int index19_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_InternalN4JSParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index19_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA19_8 = input.LA(1);

                         
                        int index19_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_InternalN4JSParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index19_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA19_10 = input.LA(1);

                         
                        int index19_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_InternalN4JSParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index19_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA19_11 = input.LA(1);

                         
                        int index19_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_InternalN4JSParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index19_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA19_13 = input.LA(1);

                         
                        int index19_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_InternalN4JSParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index19_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA19_14 = input.LA(1);

                         
                        int index19_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_InternalN4JSParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index19_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA19_16 = input.LA(1);

                         
                        int index19_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_InternalN4JSParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index19_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 19, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_25s = "\67\uffff";
    static final String dfa_26s = "\17\uffff\11\16\37\uffff";
    static final String dfa_27s = "\1\11\1\uffff\7\11\1\4\5\uffff\7\11\1\4\1\17\37\uffff";
    static final String dfa_28s = "\1\152\1\uffff\7\100\1\176\5\uffff\11\u0099\37\uffff";
    static final String dfa_29s = "\1\uffff\1\1\10\uffff\1\2\1\3\1\4\1\5\1\6\11\uffff\37\3";
    static final String dfa_30s = "\1\16\1\uffff\1\6\1\2\1\12\1\10\1\15\1\5\1\3\1\20\5\uffff\1\13\1\4\1\17\1\11\1\0\1\14\1\1\1\7\40\uffff}>";
    static final String[] dfa_31s = {
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\51\uffff\1\1",
            "",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\3\16\1\uffff\1\16\1\26\1\21\1\24\2\uffff\1\23\1\15\3\uffff\1\17\1\20\3\uffff\1\22\1\uffff\1\25\1\uffff\1\16\1\uffff\1\27\1\16\2\uffff\1\12\1\11\3\uffff\1\16\1\uffff\2\16\2\uffff\1\14\1\16\3\uffff\1\16\7\uffff\2\16\1\uffff\2\16\1\uffff\1\16\21\uffff\1\16\3\uffff\1\16\23\uffff\2\16\2\uffff\1\16\17\uffff\1\16",
            "",
            "",
            "",
            "",
            "",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\51\1\44\1\56\1\uffff\1\53\1\57\1\61\1\40\2\uffff\1\37\2\uffff\1\65\1\uffff\1\60\1\36\3\uffff\1\62\1\uffff\1\41\1\uffff\1\46\1\uffff\1\55\1\54\7\uffff\1\50\1\uffff\1\32\1\52\3\uffff\1\43\3\uffff\1\47\7\uffff\1\33\1\35\1\uffff\1\63\1\34\23\uffff\1\42\3\uffff\1\45\11\uffff\1\16\3\uffff\2\16\1\64\1\16\6\uffff\1\66\1\uffff\1\16\1\30\14\uffff\1\31\30\uffff\1\16\1\uffff\1\16",
            "\1\15\120\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\40\uffff\1\15\5\uffff\1\16\1\uffff\1\16",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA25 extends DFA {

        public DFA25(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 25;
            this.eot = dfa_25;
            this.eof = dfa_26;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "1181:1: ( ( ( ( () CommercialAt ( This | Target | RULE_IDENTIFIER ) ) )=>this_AnnotatedExportableElement_0= ruleAnnotatedExportableElement ) | ( ( ( () ( ( ruleN4Modifier ) )* Class ( ( ruleTypingStrategyDefSiteOperator ) )? ( ( ruleBindingIdentifier ) )? ) )=>this_N4ClassDeclaration_1= ruleN4ClassDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* Interface ( ( ruleTypingStrategyDefSiteOperator ) )? ( ( ruleBindingIdentifier ) )? ) )=>this_N4InterfaceDeclaration_2= ruleN4InterfaceDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* Enum ( ( ruleBindingIdentifier ) )? ) )=>this_N4EnumDeclaration_3= ruleN4EnumDeclaration ) | this_ExportedFunctionDeclaration_4= ruleExportedFunctionDeclaration | this_ExportedVariableStatement_5= ruleExportedVariableStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA25_19 = input.LA(1);

                         
                        int index25_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA25_19==Class) && (synpred11_InternalN4JSParser())) {s = 10;}

                        else if ( (LA25_19==Private) ) {s = 2;}

                        else if ( (LA25_19==Project) ) {s = 3;}

                        else if ( (LA25_19==Protected) ) {s = 4;}

                        else if ( (LA25_19==Public) ) {s = 5;}

                        else if ( (LA25_19==External) ) {s = 6;}

                        else if ( (LA25_19==Abstract) ) {s = 7;}

                        else if ( (LA25_19==Static) ) {s = 8;}

                        else if ( (LA25_19==Const) ) {s = 9;}

                        else if ( (LA25_19==EOF||LA25_19==Let||LA25_19==Var||LA25_19==Comma||(LA25_19>=Colon && LA25_19<=Semicolon)||LA25_19==EqualsSign||LA25_19==RightCurlyBracket||LA25_19==RULE_ML_COMMENT||LA25_19==RULE_EOL) ) {s = 14;}

                        else if ( (LA25_19==Interface) && (synpred12_InternalN4JSParser())) {s = 11;}

                        else if ( (LA25_19==Function||LA25_19==Async) ) {s = 13;}

                        else if ( (LA25_19==Enum) && (synpred13_InternalN4JSParser())) {s = 12;}

                         
                        input.seek(index25_19);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA25_21 = input.LA(1);

                         
                        int index25_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA25_21==Interface) && (synpred12_InternalN4JSParser())) {s = 11;}

                        else if ( (LA25_21==Private) ) {s = 2;}

                        else if ( (LA25_21==Project) ) {s = 3;}

                        else if ( (LA25_21==Protected) ) {s = 4;}

                        else if ( (LA25_21==Public) ) {s = 5;}

                        else if ( (LA25_21==External) ) {s = 6;}

                        else if ( (LA25_21==Abstract) ) {s = 7;}

                        else if ( (LA25_21==Static) ) {s = 8;}

                        else if ( (LA25_21==Const) ) {s = 9;}

                        else if ( (LA25_21==Function||LA25_21==Async) ) {s = 13;}

                        else if ( (LA25_21==Enum) && (synpred13_InternalN4JSParser())) {s = 12;}

                        else if ( (LA25_21==Class) && (synpred11_InternalN4JSParser())) {s = 10;}

                        else if ( (LA25_21==EOF||LA25_21==Let||LA25_21==Var||LA25_21==Comma||(LA25_21>=Colon && LA25_21<=Semicolon)||LA25_21==EqualsSign||LA25_21==RightCurlyBracket||LA25_21==RULE_ML_COMMENT||LA25_21==RULE_EOL) ) {s = 14;}

                         
                        input.seek(index25_21);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA25_3 = input.LA(1);

                         
                        int index25_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA25_3==Class) && (synpred11_InternalN4JSParser())) {s = 10;}

                        else if ( (LA25_3==Private) ) {s = 2;}

                        else if ( (LA25_3==Project) ) {s = 3;}

                        else if ( (LA25_3==Protected) ) {s = 4;}

                        else if ( (LA25_3==Public) ) {s = 5;}

                        else if ( (LA25_3==External) ) {s = 6;}

                        else if ( (LA25_3==Abstract) ) {s = 7;}

                        else if ( (LA25_3==Static) ) {s = 8;}

                        else if ( (LA25_3==Const) ) {s = 9;}

                        else if ( (LA25_3==Let||LA25_3==Var) ) {s = 14;}

                        else if ( (LA25_3==Interface) && (synpred12_InternalN4JSParser())) {s = 11;}

                        else if ( (LA25_3==Function||LA25_3==Async) ) {s = 13;}

                        else if ( (LA25_3==Enum) && (synpred13_InternalN4JSParser())) {s = 12;}

                         
                        input.seek(index25_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA25_8 = input.LA(1);

                         
                        int index25_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA25_8==Interface) && (synpred12_InternalN4JSParser())) {s = 11;}

                        else if ( (LA25_8==Private) ) {s = 2;}

                        else if ( (LA25_8==Project) ) {s = 3;}

                        else if ( (LA25_8==Protected) ) {s = 4;}

                        else if ( (LA25_8==Public) ) {s = 5;}

                        else if ( (LA25_8==External) ) {s = 6;}

                        else if ( (LA25_8==Abstract) ) {s = 7;}

                        else if ( (LA25_8==Static) ) {s = 8;}

                        else if ( (LA25_8==Const) ) {s = 9;}

                        else if ( (LA25_8==Function||LA25_8==Async) ) {s = 13;}

                        else if ( (LA25_8==Enum) && (synpred13_InternalN4JSParser())) {s = 12;}

                        else if ( (LA25_8==Class) && (synpred11_InternalN4JSParser())) {s = 10;}

                        else if ( (LA25_8==Let||LA25_8==Var) ) {s = 14;}

                         
                        input.seek(index25_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA25_16 = input.LA(1);

                         
                        int index25_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA25_16==EOF||LA25_16==Let||LA25_16==Var||LA25_16==Comma||(LA25_16>=Colon && LA25_16<=Semicolon)||LA25_16==EqualsSign||LA25_16==RightCurlyBracket||LA25_16==RULE_ML_COMMENT||LA25_16==RULE_EOL) ) {s = 14;}

                        else if ( (LA25_16==Class) && (synpred11_InternalN4JSParser())) {s = 10;}

                        else if ( (LA25_16==Private) ) {s = 2;}

                        else if ( (LA25_16==Project) ) {s = 3;}

                        else if ( (LA25_16==Protected) ) {s = 4;}

                        else if ( (LA25_16==Public) ) {s = 5;}

                        else if ( (LA25_16==External) ) {s = 6;}

                        else if ( (LA25_16==Abstract) ) {s = 7;}

                        else if ( (LA25_16==Static) ) {s = 8;}

                        else if ( (LA25_16==Const) ) {s = 9;}

                        else if ( (LA25_16==Interface) && (synpred12_InternalN4JSParser())) {s = 11;}

                        else if ( (LA25_16==Function||LA25_16==Async) ) {s = 13;}

                        else if ( (LA25_16==Enum) && (synpred13_InternalN4JSParser())) {s = 12;}

                         
                        input.seek(index25_16);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA25_7 = input.LA(1);

                         
                        int index25_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA25_7==Function||LA25_7==Async) ) {s = 13;}

                        else if ( (LA25_7==Private) ) {s = 2;}

                        else if ( (LA25_7==Project) ) {s = 3;}

                        else if ( (LA25_7==Protected) ) {s = 4;}

                        else if ( (LA25_7==Public) ) {s = 5;}

                        else if ( (LA25_7==External) ) {s = 6;}

                        else if ( (LA25_7==Abstract) ) {s = 7;}

                        else if ( (LA25_7==Static) ) {s = 8;}

                        else if ( (LA25_7==Const) ) {s = 9;}

                        else if ( (LA25_7==Enum) && (synpred13_InternalN4JSParser())) {s = 12;}

                        else if ( (LA25_7==Class) && (synpred11_InternalN4JSParser())) {s = 10;}

                        else if ( (LA25_7==Let||LA25_7==Var) ) {s = 14;}

                        else if ( (LA25_7==Interface) && (synpred12_InternalN4JSParser())) {s = 11;}

                         
                        input.seek(index25_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA25_2 = input.LA(1);

                         
                        int index25_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA25_2==Let||LA25_2==Var) ) {s = 14;}

                        else if ( (LA25_2==Const) ) {s = 9;}

                        else if ( (LA25_2==Private) ) {s = 2;}

                        else if ( (LA25_2==Project) ) {s = 3;}

                        else if ( (LA25_2==Protected) ) {s = 4;}

                        else if ( (LA25_2==Public) ) {s = 5;}

                        else if ( (LA25_2==External) ) {s = 6;}

                        else if ( (LA25_2==Abstract) ) {s = 7;}

                        else if ( (LA25_2==Static) ) {s = 8;}

                        else if ( (LA25_2==Interface) && (synpred12_InternalN4JSParser())) {s = 11;}

                        else if ( (LA25_2==Function||LA25_2==Async) ) {s = 13;}

                        else if ( (LA25_2==Enum) && (synpred13_InternalN4JSParser())) {s = 12;}

                        else if ( (LA25_2==Class) && (synpred11_InternalN4JSParser())) {s = 10;}

                         
                        input.seek(index25_2);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA25_22 = input.LA(1);

                         
                        int index25_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA25_22==EOF||LA25_22==Comma||(LA25_22>=Colon && LA25_22<=Semicolon)||LA25_22==EqualsSign||LA25_22==RightCurlyBracket||LA25_22==RULE_ML_COMMENT||LA25_22==RULE_EOL) ) {s = 14;}

                        else if ( (LA25_22==Tilde) && (synpred12_InternalN4JSParser())) {s = 24;}

                        else if ( (LA25_22==RULE_IDENTIFIER) && (synpred12_InternalN4JSParser())) {s = 25;}

                        else if ( (LA25_22==Yield) && (synpred12_InternalN4JSParser())) {s = 26;}

                        else if ( (LA25_22==Get) && (synpred12_InternalN4JSParser())) {s = 27;}

                        else if ( (LA25_22==Set) && (synpred12_InternalN4JSParser())) {s = 28;}

                        else if ( (LA25_22==Let) && (synpred12_InternalN4JSParser())) {s = 29;}

                        else if ( (LA25_22==Project) && (synpred12_InternalN4JSParser())) {s = 30;}

                        else if ( (LA25_22==External) && (synpred12_InternalN4JSParser())) {s = 31;}

                        else if ( (LA25_22==Abstract) && (synpred12_InternalN4JSParser())) {s = 32;}

                        else if ( (LA25_22==Static) && (synpred12_InternalN4JSParser())) {s = 33;}

                        else if ( (LA25_22==As) && (synpred12_InternalN4JSParser())) {s = 34;}

                        else if ( (LA25_22==From) && (synpred12_InternalN4JSParser())) {s = 35;}

                        else if ( (LA25_22==Constructor) && (synpred12_InternalN4JSParser())) {s = 36;}

                        else if ( (LA25_22==Of) && (synpred12_InternalN4JSParser())) {s = 37;}

                        else if ( (LA25_22==Target) && (synpred12_InternalN4JSParser())) {s = 38;}

                        else if ( (LA25_22==Type) && (synpred12_InternalN4JSParser())) {s = 39;}

                        else if ( (LA25_22==Union) && (synpred12_InternalN4JSParser())) {s = 40;}

                        else if ( (LA25_22==Intersection) && (synpred12_InternalN4JSParser())) {s = 41;}

                        else if ( (LA25_22==This) && (synpred12_InternalN4JSParser())) {s = 42;}

                        else if ( (LA25_22==Promisify) && (synpred12_InternalN4JSParser())) {s = 43;}

                        else if ( (LA25_22==Await) && (synpred12_InternalN4JSParser())) {s = 44;}

                        else if ( (LA25_22==Async) && (synpred12_InternalN4JSParser())) {s = 45;}

                        else if ( (LA25_22==Implements) && (synpred12_InternalN4JSParser())) {s = 46;}

                        else if ( (LA25_22==Interface) && (synpred12_InternalN4JSParser())) {s = 47;}

                        else if ( (LA25_22==Private) && (synpred12_InternalN4JSParser())) {s = 48;}

                        else if ( (LA25_22==Protected) && (synpred12_InternalN4JSParser())) {s = 49;}

                        else if ( (LA25_22==Public) && (synpred12_InternalN4JSParser())) {s = 50;}

                        else if ( (LA25_22==Out) && (synpred12_InternalN4JSParser())) {s = 51;}

                        else if ( (LA25_22==LessThanSign) && (synpred12_InternalN4JSParser())) {s = 52;}

                        else if ( (LA25_22==Extends) && (synpred12_InternalN4JSParser())) {s = 53;}

                        else if ( (LA25_22==LeftCurlyBracket) && (synpred12_InternalN4JSParser())) {s = 54;}

                         
                        input.seek(index25_22);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA25_5 = input.LA(1);

                         
                        int index25_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA25_5==Let||LA25_5==Var) ) {s = 14;}

                        else if ( (LA25_5==Const) ) {s = 9;}

                        else if ( (LA25_5==Private) ) {s = 2;}

                        else if ( (LA25_5==Project) ) {s = 3;}

                        else if ( (LA25_5==Protected) ) {s = 4;}

                        else if ( (LA25_5==Public) ) {s = 5;}

                        else if ( (LA25_5==External) ) {s = 6;}

                        else if ( (LA25_5==Abstract) ) {s = 7;}

                        else if ( (LA25_5==Static) ) {s = 8;}

                        else if ( (LA25_5==Interface) && (synpred12_InternalN4JSParser())) {s = 11;}

                        else if ( (LA25_5==Function||LA25_5==Async) ) {s = 13;}

                        else if ( (LA25_5==Enum) && (synpred13_InternalN4JSParser())) {s = 12;}

                        else if ( (LA25_5==Class) && (synpred11_InternalN4JSParser())) {s = 10;}

                         
                        input.seek(index25_5);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA25_18 = input.LA(1);

                         
                        int index25_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA25_18==EOF||LA25_18==Let||LA25_18==Var||LA25_18==Comma||(LA25_18>=Colon && LA25_18<=Semicolon)||LA25_18==EqualsSign||LA25_18==RightCurlyBracket||LA25_18==RULE_ML_COMMENT||LA25_18==RULE_EOL) ) {s = 14;}

                        else if ( (LA25_18==Const) ) {s = 9;}

                        else if ( (LA25_18==Private) ) {s = 2;}

                        else if ( (LA25_18==Project) ) {s = 3;}

                        else if ( (LA25_18==Protected) ) {s = 4;}

                        else if ( (LA25_18==Public) ) {s = 5;}

                        else if ( (LA25_18==External) ) {s = 6;}

                        else if ( (LA25_18==Abstract) ) {s = 7;}

                        else if ( (LA25_18==Static) ) {s = 8;}

                        else if ( (LA25_18==Interface) && (synpred12_InternalN4JSParser())) {s = 11;}

                        else if ( (LA25_18==Function||LA25_18==Async) ) {s = 13;}

                        else if ( (LA25_18==Enum) && (synpred13_InternalN4JSParser())) {s = 12;}

                        else if ( (LA25_18==Class) && (synpred11_InternalN4JSParser())) {s = 10;}

                         
                        input.seek(index25_18);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA25_4 = input.LA(1);

                         
                        int index25_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA25_4==Interface) && (synpred12_InternalN4JSParser())) {s = 11;}

                        else if ( (LA25_4==Private) ) {s = 2;}

                        else if ( (LA25_4==Project) ) {s = 3;}

                        else if ( (LA25_4==Protected) ) {s = 4;}

                        else if ( (LA25_4==Public) ) {s = 5;}

                        else if ( (LA25_4==External) ) {s = 6;}

                        else if ( (LA25_4==Abstract) ) {s = 7;}

                        else if ( (LA25_4==Static) ) {s = 8;}

                        else if ( (LA25_4==Const) ) {s = 9;}

                        else if ( (LA25_4==Function||LA25_4==Async) ) {s = 13;}

                        else if ( (LA25_4==Enum) && (synpred13_InternalN4JSParser())) {s = 12;}

                        else if ( (LA25_4==Class) && (synpred11_InternalN4JSParser())) {s = 10;}

                        else if ( (LA25_4==Let||LA25_4==Var) ) {s = 14;}

                         
                        input.seek(index25_4);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA25_15 = input.LA(1);

                         
                        int index25_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA25_15==EOF||LA25_15==Let||LA25_15==Var||LA25_15==Comma||(LA25_15>=Colon && LA25_15<=Semicolon)||LA25_15==EqualsSign||LA25_15==RightCurlyBracket||LA25_15==RULE_ML_COMMENT||LA25_15==RULE_EOL) ) {s = 14;}

                        else if ( (LA25_15==Const) ) {s = 9;}

                        else if ( (LA25_15==Private) ) {s = 2;}

                        else if ( (LA25_15==Project) ) {s = 3;}

                        else if ( (LA25_15==Protected) ) {s = 4;}

                        else if ( (LA25_15==Public) ) {s = 5;}

                        else if ( (LA25_15==External) ) {s = 6;}

                        else if ( (LA25_15==Abstract) ) {s = 7;}

                        else if ( (LA25_15==Static) ) {s = 8;}

                        else if ( (LA25_15==Interface) && (synpred12_InternalN4JSParser())) {s = 11;}

                        else if ( (LA25_15==Function||LA25_15==Async) ) {s = 13;}

                        else if ( (LA25_15==Enum) && (synpred13_InternalN4JSParser())) {s = 12;}

                        else if ( (LA25_15==Class) && (synpred11_InternalN4JSParser())) {s = 10;}

                         
                        input.seek(index25_15);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA25_20 = input.LA(1);

                         
                        int index25_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA25_20==Function||LA25_20==Async) ) {s = 13;}

                        else if ( (LA25_20==Private) ) {s = 2;}

                        else if ( (LA25_20==Project) ) {s = 3;}

                        else if ( (LA25_20==Protected) ) {s = 4;}

                        else if ( (LA25_20==Public) ) {s = 5;}

                        else if ( (LA25_20==External) ) {s = 6;}

                        else if ( (LA25_20==Abstract) ) {s = 7;}

                        else if ( (LA25_20==Static) ) {s = 8;}

                        else if ( (LA25_20==Const) ) {s = 9;}

                        else if ( (LA25_20==Enum) && (synpred13_InternalN4JSParser())) {s = 12;}

                        else if ( (LA25_20==Class) && (synpred11_InternalN4JSParser())) {s = 10;}

                        else if ( (LA25_20==EOF||LA25_20==Let||LA25_20==Var||LA25_20==Comma||(LA25_20>=Colon && LA25_20<=Semicolon)||LA25_20==EqualsSign||LA25_20==RightCurlyBracket||LA25_20==RULE_ML_COMMENT||LA25_20==RULE_EOL) ) {s = 14;}

                        else if ( (LA25_20==Interface) && (synpred12_InternalN4JSParser())) {s = 11;}

                         
                        input.seek(index25_20);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA25_6 = input.LA(1);

                         
                        int index25_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA25_6==Class) && (synpred11_InternalN4JSParser())) {s = 10;}

                        else if ( (LA25_6==Private) ) {s = 2;}

                        else if ( (LA25_6==Project) ) {s = 3;}

                        else if ( (LA25_6==Protected) ) {s = 4;}

                        else if ( (LA25_6==Public) ) {s = 5;}

                        else if ( (LA25_6==External) ) {s = 6;}

                        else if ( (LA25_6==Abstract) ) {s = 7;}

                        else if ( (LA25_6==Static) ) {s = 8;}

                        else if ( (LA25_6==Const) ) {s = 9;}

                        else if ( (LA25_6==Let||LA25_6==Var) ) {s = 14;}

                        else if ( (LA25_6==Interface) && (synpred12_InternalN4JSParser())) {s = 11;}

                        else if ( (LA25_6==Function||LA25_6==Async) ) {s = 13;}

                        else if ( (LA25_6==Enum) && (synpred13_InternalN4JSParser())) {s = 12;}

                         
                        input.seek(index25_6);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA25_0 = input.LA(1);

                         
                        int index25_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA25_0==CommercialAt) && (synpred10_InternalN4JSParser())) {s = 1;}

                        else if ( (LA25_0==Private) ) {s = 2;}

                        else if ( (LA25_0==Project) ) {s = 3;}

                        else if ( (LA25_0==Protected) ) {s = 4;}

                        else if ( (LA25_0==Public) ) {s = 5;}

                        else if ( (LA25_0==External) ) {s = 6;}

                        else if ( (LA25_0==Abstract) ) {s = 7;}

                        else if ( (LA25_0==Static) ) {s = 8;}

                        else if ( (LA25_0==Const) ) {s = 9;}

                        else if ( (LA25_0==Class) && (synpred11_InternalN4JSParser())) {s = 10;}

                        else if ( (LA25_0==Interface) && (synpred12_InternalN4JSParser())) {s = 11;}

                        else if ( (LA25_0==Enum) && (synpred13_InternalN4JSParser())) {s = 12;}

                        else if ( (LA25_0==Function||LA25_0==Async) ) {s = 13;}

                        else if ( (LA25_0==Let||LA25_0==Var) ) {s = 14;}

                         
                        input.seek(index25_0);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA25_17 = input.LA(1);

                         
                        int index25_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA25_17==Interface) && (synpred12_InternalN4JSParser())) {s = 11;}

                        else if ( (LA25_17==Private) ) {s = 2;}

                        else if ( (LA25_17==Project) ) {s = 3;}

                        else if ( (LA25_17==Protected) ) {s = 4;}

                        else if ( (LA25_17==Public) ) {s = 5;}

                        else if ( (LA25_17==External) ) {s = 6;}

                        else if ( (LA25_17==Abstract) ) {s = 7;}

                        else if ( (LA25_17==Static) ) {s = 8;}

                        else if ( (LA25_17==Const) ) {s = 9;}

                        else if ( (LA25_17==Function||LA25_17==Async) ) {s = 13;}

                        else if ( (LA25_17==Enum) && (synpred13_InternalN4JSParser())) {s = 12;}

                        else if ( (LA25_17==Class) && (synpred11_InternalN4JSParser())) {s = 10;}

                        else if ( (LA25_17==EOF||LA25_17==Let||LA25_17==Var||LA25_17==Comma||(LA25_17>=Colon && LA25_17<=Semicolon)||LA25_17==EqualsSign||LA25_17==RightCurlyBracket||LA25_17==RULE_ML_COMMENT||LA25_17==RULE_EOL) ) {s = 14;}

                         
                        input.seek(index25_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA25_9 = input.LA(1);

                         
                        int index25_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA25_9==Class) && (synpred11_InternalN4JSParser())) {s = 10;}

                        else if ( (LA25_9==Private) ) {s = 15;}

                        else if ( (LA25_9==Project) ) {s = 16;}

                        else if ( (LA25_9==Protected) ) {s = 17;}

                        else if ( (LA25_9==Public) ) {s = 18;}

                        else if ( (LA25_9==External) ) {s = 19;}

                        else if ( (LA25_9==Abstract) ) {s = 20;}

                        else if ( (LA25_9==Static) ) {s = 21;}

                        else if ( (LA25_9==Const) ) {s = 9;}

                        else if ( ((LA25_9>=Intersection && LA25_9<=Implements)||LA25_9==Promisify||LA25_9==Target||LA25_9==Await||LA25_9==Union||(LA25_9>=Yield && LA25_9<=This)||LA25_9==From||LA25_9==Type||(LA25_9>=Get && LA25_9<=Let)||(LA25_9>=Out && LA25_9<=Set)||LA25_9==Var||LA25_9==As||LA25_9==Of||(LA25_9>=CommercialAt && LA25_9<=LeftSquareBracket)||LA25_9==LeftCurlyBracket||LA25_9==RULE_IDENTIFIER) ) {s = 14;}

                        else if ( (LA25_9==Interface) ) {s = 22;}

                        else if ( (LA25_9==Async) ) {s = 23;}

                        else if ( (LA25_9==Function) ) {s = 13;}

                        else if ( (LA25_9==Enum) && (synpred13_InternalN4JSParser())) {s = 12;}

                         
                        input.seek(index25_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 25, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_32s = "\26\uffff";
    static final String dfa_33s = "\15\uffff\11\12";
    static final String dfa_34s = "\10\11\1\4\4\uffff\1\4\7\11\1\17";
    static final String dfa_35s = "\10\100\1\176\4\uffff\11\u0099";
    static final String dfa_36s = "\11\uffff\1\1\1\2\1\3\1\4\11\uffff";
    static final String dfa_37s = "\26\uffff}>";
    static final String[] dfa_38s = {
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\3\12\1\uffff\1\12\1\15\1\20\1\23\2\uffff\1\22\1\11\3\uffff\1\16\1\17\3\uffff\1\21\1\uffff\1\24\1\uffff\1\12\1\uffff\1\25\1\12\2\uffff\1\13\1\10\3\uffff\1\12\1\uffff\2\12\2\uffff\1\14\1\12\3\uffff\1\12\7\uffff\2\12\1\uffff\2\12\1\uffff\1\12\21\uffff\1\12\3\uffff\1\12\23\uffff\2\12\2\uffff\1\12\17\uffff\1\12",
            "",
            "",
            "",
            "",
            "\3\13\1\uffff\4\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\13\1\uffff\2\13\7\uffff\1\13\1\uffff\2\13\3\uffff\1\13\3\uffff\1\13\7\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\11\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\1\13\14\uffff\1\13\30\uffff\1\12\1\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12",
            "\1\11\120\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\40\uffff\1\11\5\uffff\1\12\1\uffff\1\12"
    };

    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA40 extends DFA {

        public DFA40(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 40;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "1329:2: ( ( () ( (lv_declaredModifiers_2_0= ruleN4Modifier ) )* this_AsyncNoTrailingLineBreak_3= ruleAsyncNoTrailingLineBreak[$current] this_FunctionImpl_4= ruleFunctionImpl[$current] ) | ( () ( (lv_declaredModifiers_6_0= ruleN4Modifier ) )* ( (lv_varStmtKeyword_7_0= ruleVariableStatementKeyword ) ) ( (lv_varDeclsOrBindings_8_0= ruleExportedVariableDeclarationOrBinding ) ) (otherlv_9= Comma ( (lv_varDeclsOrBindings_10_0= ruleExportedVariableDeclarationOrBinding ) ) )* ruleSemi ) | ( ( ( () ( (lv_declaredModifiers_13_0= ruleN4Modifier ) )* otherlv_14= Class ( (lv_typingStrategy_15_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_16_0= ruleBindingIdentifier ) ) (this_TypeVariables_17= ruleTypeVariables[$current] )? (this_ClassExtendsClause_18= ruleClassExtendsClause[$current] )? ) | ( () ( (lv_declaredModifiers_20_0= ruleN4Modifier ) )* otherlv_21= Interface ( (lv_typingStrategy_22_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_23_0= ruleBindingIdentifier ) ) (this_TypeVariables_24= ruleTypeVariables[$current] )? (this_InterfaceImplementsList_25= ruleInterfaceImplementsList[$current] )? ) ) this_Members_26= ruleMembers[$current] ) | ( () ( (lv_declaredModifiers_28_0= ruleN4Modifier ) )* otherlv_29= Enum ( (lv_name_30_0= ruleBindingIdentifier ) ) otherlv_31= LeftCurlyBracket ( (lv_literals_32_0= ruleN4EnumLiteral ) ) (otherlv_33= Comma ( (lv_literals_34_0= ruleN4EnumLiteral ) ) )* otherlv_35= RightCurlyBracket ) )";
        }
    }
    static final String dfa_39s = "\14\uffff";
    static final String dfa_40s = "\4\uffff\10\1";
    static final String dfa_41s = "\1\12\1\uffff\1\4\1\uffff\1\4\7\12";
    static final String dfa_42s = "\1\100\1\uffff\1\176\1\uffff\10\u0099";
    static final String dfa_43s = "\1\uffff\1\2\1\uffff\1\1\10\uffff";
    static final String dfa_44s = "\14\uffff}>";
    static final String[] dfa_45s = {
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\2\27\uffff\1\1\4\uffff\1\1",
            "",
            "\3\1\1\uffff\2\1\1\12\1\7\2\uffff\1\6\4\uffff\1\11\1\5\3\uffff\1\13\1\uffff\1\10\1\uffff\1\1\1\uffff\2\1\3\uffff\1\3\3\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\1\1\1\4\1\uffff\2\1\1\uffff\1\3\21\uffff\1\1\3\uffff\1\1\23\uffff\2\1\2\uffff\1\1\17\uffff\1\1",
            "",
            "\3\3\1\uffff\4\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\2\3\7\uffff\1\3\1\uffff\2\3\3\uffff\1\3\3\uffff\1\3\7\uffff\2\3\1\uffff\2\3\23\uffff\1\3\3\uffff\1\3\11\uffff\1\1\3\uffff\2\1\1\uffff\1\1\2\uffff\2\3\2\uffff\1\3\1\uffff\1\1\15\uffff\1\3\30\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1"
    };

    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "()* loopback of 1384:2: ( (lv_declaredModifiers_6_0= ruleN4Modifier ) )*";
        }
    }

    class DFA37 extends DFA {

        public DFA37(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 37;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "1470:7: ( ( () ( (lv_declaredModifiers_13_0= ruleN4Modifier ) )* otherlv_14= Class ( (lv_typingStrategy_15_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_16_0= ruleBindingIdentifier ) ) (this_TypeVariables_17= ruleTypeVariables[$current] )? (this_ClassExtendsClause_18= ruleClassExtendsClause[$current] )? ) | ( () ( (lv_declaredModifiers_20_0= ruleN4Modifier ) )* otherlv_21= Interface ( (lv_typingStrategy_22_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_23_0= ruleBindingIdentifier ) ) (this_TypeVariables_24= ruleTypeVariables[$current] )? (this_InterfaceImplementsList_25= ruleInterfaceImplementsList[$current] )? ) )";
        }
    }
    static final String dfa_46s = "\36\uffff";
    static final String dfa_47s = "\1\uffff\33\35\2\uffff";
    static final String dfa_48s = "\1\4\33\122\2\uffff";
    static final String dfa_49s = "\1\176\33\160\2\uffff";
    static final String dfa_50s = "\34\uffff\1\2\1\1";
    static final String dfa_51s = "\36\uffff}>";
    static final String[] dfa_52s = {
            "\1\21\1\14\1\26\1\34\1\23\1\27\1\31\1\10\2\34\1\7\4\34\1\30\1\6\3\34\1\32\1\34\1\11\1\34\1\16\1\34\1\25\1\24\7\34\1\20\1\34\1\2\1\22\3\34\1\13\3\34\1\17\2\34\4\uffff\1\34\1\3\1\5\1\34\1\33\1\4\2\34\21\uffff\1\12\3\34\1\15\47\uffff\1\1",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "",
            ""
    };

    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[][] dfa_52 = unpackEncodedStringArray(dfa_52s);

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_46;
            this.eof = dfa_47;
            this.min = dfa_48;
            this.max = dfa_49;
            this.accept = dfa_50;
            this.special = dfa_51;
            this.transition = dfa_52;
        }
        public String getDescription() {
            return "2041:1: ( ( ( ruleBindingIdentifier ) ) | ( ( ( ruleIdentifierName ) ) otherlv_2= As ( (lv_alias_3_0= ruleBindingIdentifier ) ) ) )";
        }
    }
    static final String dfa_53s = "\134\uffff";
    static final String dfa_54s = "\1\2\1\uffff\1\6\3\uffff\1\133\125\uffff";
    static final String dfa_55s = "\1\4\1\0\1\4\1\0\2\uffff\1\0\125\uffff";
    static final String dfa_56s = "\1\u0099\1\0\1\u0095\1\0\2\uffff\1\0\125\uffff";
    static final String dfa_57s = "\4\uffff\1\1\1\2\1\uffff\125\1";
    static final String dfa_58s = "\1\0\1\3\1\1\1\2\2\uffff\1\4\125\uffff}>";
    static final String[] dfa_59s = {
            "\3\5\1\uffff\11\5\2\uffff\16\5\1\uffff\23\5\4\uffff\10\5\5\uffff\1\5\1\uffff\1\5\1\uffff\1\5\7\uffff\3\5\1\uffff\1\5\2\uffff\1\5\2\uffff\1\5\1\uffff\2\5\1\uffff\1\5\1\uffff\1\5\1\uffff\1\1\1\5\3\uffff\2\5\2\uffff\1\5\1\uffff\1\3\1\5\3\uffff\1\5\1\uffff\4\5\1\uffff\1\5\1\uffff\1\5\2\uffff\1\5\11\uffff\2\5\10\uffff\1\5\1\uffff\1\4\1\uffff\1\4",
            "\1\uffff",
            "\1\46\1\41\1\52\1\uffff\1\50\1\21\1\12\1\15\1\117\1\126\1\14\1\27\1\131\2\uffff\1\10\1\11\1\102\1\24\1\23\1\13\1\121\1\16\1\123\1\43\1\104\1\26\1\51\1\120\1\uffff\1\20\1\17\1\72\1\60\1\124\1\45\1\115\1\34\1\47\1\132\1\130\1\22\1\40\1\74\1\57\1\71\1\44\1\103\1\122\4\uffff\1\116\1\35\1\31\1\56\1\53\1\36\1\125\1\30\5\uffff\1\105\1\uffff\1\106\1\uffff\1\76\7\uffff\1\37\1\114\1\113\1\uffff\1\42\2\uffff\1\112\2\uffff\1\54\1\uffff\1\55\1\107\1\uffff\1\110\1\uffff\1\75\1\uffff\1\32\1\61\3\uffff\1\7\1\77\2\uffff\1\25\1\uffff\1\127\1\111\3\uffff\1\62\1\uffff\1\67\1\64\1\65\1\66\1\uffff\1\70\1\uffff\1\33\2\uffff\1\73\11\uffff\1\101\1\100\10\uffff\1\63",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[][] dfa_59 = unpackEncodedStringArray(dfa_59s);

    class DFA51 extends DFA {

        public DFA51(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 51;
            this.eot = dfa_53;
            this.eof = dfa_54;
            this.min = dfa_55;
            this.max = dfa_56;
            this.accept = dfa_57;
            this.special = dfa_58;
            this.transition = dfa_59;
        }
        public String getDescription() {
            return "2312:4: ( ( ruleSemi )=> ruleSemi )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA51_0 = input.LA(1);

                         
                        int index51_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA51_0==Semicolon) ) {s = 1;}

                        else if ( (LA51_0==EOF) ) {s = 2;}

                        else if ( (LA51_0==RightCurlyBracket) ) {s = 3;}

                        else if ( (LA51_0==RULE_ML_COMMENT||LA51_0==RULE_EOL) && (synpred17_InternalN4JSParser())) {s = 4;}

                        else if ( ((LA51_0>=Intersection && LA51_0<=Implements)||(LA51_0>=Promisify && LA51_0<=Default)||(LA51_0>=Private && LA51_0<=Break)||(LA51_0>=Class && LA51_0<=With)||(LA51_0>=For && LA51_0<=Var)||LA51_0==PlusSignPlusSign||LA51_0==HyphenMinusHyphenMinus||LA51_0==SolidusEqualsSign||(LA51_0>=As && LA51_0<=If)||LA51_0==Of||LA51_0==ExclamationMark||LA51_0==LeftParenthesis||(LA51_0>=Asterisk && LA51_0<=PlusSign)||LA51_0==HyphenMinus||LA51_0==Solidus||LA51_0==LessThanSign||(LA51_0>=CommercialAt && LA51_0<=LeftSquareBracket)||LA51_0==LeftCurlyBracket||LA51_0==Tilde||LA51_0==RULE_DOUBLE||(LA51_0>=RULE_HEX_INT && LA51_0<=RULE_LEGACY_OCTAL_INT)||LA51_0==RULE_SCIENTIFIC_INT||LA51_0==RULE_IDENTIFIER||LA51_0==RULE_STRING||(LA51_0>=RULE_TEMPLATE_HEAD && LA51_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA51_0==RULE_INT) ) {s = 5;}

                         
                        input.seek(index51_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA51_2 = input.LA(1);

                         
                        int index51_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA51_2==EOF) ) {s = 6;}

                        
                        else if ((LA51_2>=-1 && LA51_2<=149 && (s=T2S.M_1[LA51_2-(-1)])>=0) && (synpred17_InternalN4JSParser())) { /* 85 cases */ }
                        input.seek(index51_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA51_3 = input.LA(1);

                         
                        int index51_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalN4JSParser()) ) {s = 90;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index51_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA51_1 = input.LA(1);

                         
                        int index51_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalN4JSParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index51_1);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA51_6 = input.LA(1);

                         
                        int index51_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA51_6==EOF) && (synpred17_InternalN4JSParser())) {s = 91;}

                         
                        input.seek(index51_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 51, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_60s = "\130\uffff";
    static final String dfa_61s = "\1\2\127\uffff";
    static final String dfa_62s = "\1\4\1\0\126\uffff";
    static final String dfa_63s = "\1\u0099\1\0\126\uffff";
    static final String dfa_64s = "\2\uffff\1\2\124\uffff\1\1";
    static final String dfa_65s = "\1\uffff\1\0\126\uffff}>";
    static final String[] dfa_66s = {
            "\3\2\1\uffff\11\2\2\uffff\16\2\1\uffff\23\2\4\uffff\10\2\5\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\3\2\1\uffff\1\2\2\uffff\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\3\uffff\2\2\2\uffff\1\1\1\uffff\2\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2\1\uffff\1\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[][] dfa_66 = unpackEncodedStringArray(dfa_66s);

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = dfa_60;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "3031:1: ( ( ( () LeftCurlyBracket ) )=> (lv_body_0_0= ruleBlock ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA70_1 = input.LA(1);

                         
                        int index70_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_InternalN4JSParser()) ) {s = 87;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index70_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 70, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_60;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "3065:1: ( ( ( () LeftCurlyBracket ) )=> (lv_body_0_0= norm1_Block ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_1 = input.LA(1);

                         
                        int index71_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_InternalN4JSParser()) ) {s = 87;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index71_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_67s = "\100\uffff";
    static final String dfa_68s = "\1\4\1\0\76\uffff";
    static final String dfa_69s = "\1\u0095\1\0\76\uffff";
    static final String dfa_70s = "\2\uffff\1\2\74\uffff\1\1";
    static final String dfa_71s = "\1\uffff\1\0\76\uffff}>";
    static final String[] dfa_72s = {
            "\3\2\1\uffff\4\2\2\uffff\2\2\3\uffff\3\2\2\uffff\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\2\2\3\uffff\6\2\6\uffff\5\2\7\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\1\2\3\uffff\1\2\2\uffff\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\3\uffff\2\2\2\uffff\1\1\2\uffff\1\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[][] dfa_72 = unpackEncodedStringArray(dfa_72s);

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = dfa_67;
            this.eof = dfa_67;
            this.min = dfa_68;
            this.max = dfa_69;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_72;
        }
        public String getDescription() {
            return "3915:3: ( ( ( ( LeftCurlyBracket )=> (lv_hasBracesAroundBody_27_0= LeftCurlyBracket ) ) ( (lv_body_28_0= norm1_BlockMinusBraces ) ) otherlv_29= RightCurlyBracket ) | ( (lv_body_30_0= norm2_ExpressionDisguisedAsBlock ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA84_1 = input.LA(1);

                         
                        int index84_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalN4JSParser()) ) {s = 63;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index84_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 84, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = dfa_67;
            this.eof = dfa_67;
            this.min = dfa_68;
            this.max = dfa_69;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_72;
        }
        public String getDescription() {
            return "4387:3: ( ( ( ( LeftCurlyBracket )=> (lv_hasBracesAroundBody_27_0= LeftCurlyBracket ) ) ( (lv_body_28_0= norm1_BlockMinusBraces ) ) otherlv_29= RightCurlyBracket ) | ( (lv_body_30_0= norm3_ExpressionDisguisedAsBlock ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA95_1 = input.LA(1);

                         
                        int index95_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_InternalN4JSParser()) ) {s = 63;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index95_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 95, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA106 extends DFA {

        public DFA106(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 106;
            this.eot = dfa_67;
            this.eof = dfa_67;
            this.min = dfa_68;
            this.max = dfa_69;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_72;
        }
        public String getDescription() {
            return "4859:3: ( ( ( ( LeftCurlyBracket )=> (lv_hasBracesAroundBody_27_0= LeftCurlyBracket ) ) ( (lv_body_28_0= norm1_BlockMinusBraces ) ) otherlv_29= RightCurlyBracket ) | ( (lv_body_30_0= norm2_ExpressionDisguisedAsBlock ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA106_1 = input.LA(1);

                         
                        int index106_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalN4JSParser()) ) {s = 63;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index106_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 106, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA117 extends DFA {

        public DFA117(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 117;
            this.eot = dfa_67;
            this.eof = dfa_67;
            this.min = dfa_68;
            this.max = dfa_69;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_72;
        }
        public String getDescription() {
            return "5331:3: ( ( ( ( LeftCurlyBracket )=> (lv_hasBracesAroundBody_27_0= LeftCurlyBracket ) ) ( (lv_body_28_0= norm1_BlockMinusBraces ) ) otherlv_29= RightCurlyBracket ) | ( (lv_body_30_0= norm3_ExpressionDisguisedAsBlock ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA117_1 = input.LA(1);

                         
                        int index117_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalN4JSParser()) ) {s = 63;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index117_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 117, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_73s = "\44\uffff";
    static final String dfa_74s = "\1\4\1\0\42\uffff";
    static final String dfa_75s = "\1\176\1\0\42\uffff";
    static final String dfa_76s = "\2\uffff\1\1\1\2\40\uffff";
    static final String dfa_77s = "\1\0\1\1\42\uffff}>";
    static final String[] dfa_78s = {
            "\3\3\1\uffff\4\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\2\3\7\uffff\1\3\1\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\2\3\2\uffff\1\3\3\uffff\2\3\1\uffff\2\3\23\uffff\1\3\3\uffff\1\3\22\uffff\2\3\1\2\2\uffff\1\1\2\uffff\1\3\14\uffff\1\3",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[][] dfa_78 = unpackEncodedStringArray(dfa_78s);

    class DFA135 extends DFA {

        public DFA135(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 135;
            this.eot = dfa_73;
            this.eof = dfa_73;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_78;
        }
        public String getDescription() {
            return "6236:2: ( ( ( ( ruleBindingPattern ) )=> (lv_bindingPattern_0_0= ruleBindingPattern ) ) | ( ( (lv_annotations_1_0= ruleAnnotation ) )* (this_BogusTypeRefFragment_2= ruleBogusTypeRefFragment[$current] )? ( (lv_variadic_3_0= FullStopFullStopFullStop ) )? ( (lv_name_4_0= ruleBindingIdentifier ) ) (this_ColonSepTypeRef_5= ruleColonSepTypeRef[$current] )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA135_0 = input.LA(1);

                         
                        int index135_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA135_0==LeftCurlyBracket) ) {s = 1;}

                        else if ( (LA135_0==LeftSquareBracket) && (synpred65_InternalN4JSParser())) {s = 2;}

                        else if ( ((LA135_0>=Intersection && LA135_0<=Implements)||(LA135_0>=Promisify && LA135_0<=Abstract)||LA135_0==External||(LA135_0>=Private && LA135_0<=Project)||LA135_0==Public||LA135_0==Static||LA135_0==Target||(LA135_0>=Async && LA135_0<=Await)||LA135_0==Union||(LA135_0>=Yield && LA135_0<=This)||LA135_0==From||LA135_0==This_1||(LA135_0>=Type && LA135_0<=Void)||LA135_0==FullStopFullStopFullStop||(LA135_0>=Get && LA135_0<=Let)||(LA135_0>=Out && LA135_0<=Set)||LA135_0==As||LA135_0==Of||(LA135_0>=QuestionMark && LA135_0<=CommercialAt)||LA135_0==Tilde||LA135_0==RULE_IDENTIFIER) ) {s = 3;}

                         
                        input.seek(index135_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA135_1 = input.LA(1);

                         
                        int index135_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred65_InternalN4JSParser()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index135_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 135, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_79s = "\2\uffff\11\13\1\uffff";
    static final String dfa_80s = "\1\4\1\uffff\5\4\4\135\1\uffff";
    static final String dfa_81s = "\1\176\1\uffff\5\176\4\156\1\uffff";
    static final String dfa_82s = "\1\uffff\1\1\11\uffff\1\2";
    static final String[] dfa_83s = {
            "\1\12\1\10\1\13\1\uffff\1\4\3\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\5\1\uffff\1\13\1\3\7\uffff\1\11\1\uffff\1\13\1\2\3\uffff\1\13\1\uffff\1\1\1\uffff\1\7\1\1\2\uffff\1\13\3\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\22\uffff\1\1\4\uffff\1\1\2\uffff\1\1\14\uffff\1\6",
            "",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\1\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            ""
    };
    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final char[] dfa_80 = DFA.unpackEncodedStringToUnsignedChars(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[][] dfa_83 = unpackEncodedStringArray(dfa_83s);

    class DFA132 extends DFA {

        public DFA132(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 132;
            this.eot = dfa_39;
            this.eof = dfa_79;
            this.min = dfa_80;
            this.max = dfa_81;
            this.accept = dfa_82;
            this.special = dfa_44;
            this.transition = dfa_83;
        }
        public String getDescription() {
            return "6277:3: (this_BogusTypeRefFragment_2= ruleBogusTypeRefFragment[$current] )?";
        }
    }
    static final String dfa_84s = "\43\uffff";
    static final String dfa_85s = "\1\4\1\0\41\uffff";
    static final String dfa_86s = "\1\176\1\0\41\uffff";
    static final String dfa_87s = "\2\uffff\1\1\1\2\37\uffff";
    static final String dfa_88s = "\1\0\1\1\41\uffff}>";
    static final String[] dfa_89s = {
            "\3\3\1\uffff\4\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\2\3\7\uffff\1\3\2\uffff\1\3\3\uffff\1\3\1\uffff\1\3\1\uffff\2\3\2\uffff\1\3\3\uffff\2\3\1\uffff\2\3\23\uffff\1\3\3\uffff\1\3\22\uffff\2\3\1\2\2\uffff\1\1\2\uffff\1\3\14\uffff\1\3",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final char[] dfa_86 = DFA.unpackEncodedStringToUnsignedChars(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[][] dfa_89 = unpackEncodedStringArray(dfa_89s);

    class DFA141 extends DFA {

        public DFA141(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 141;
            this.eot = dfa_84;
            this.eof = dfa_84;
            this.min = dfa_85;
            this.max = dfa_86;
            this.accept = dfa_87;
            this.special = dfa_88;
            this.transition = dfa_89;
        }
        public String getDescription() {
            return "6371:2: ( ( ( ( norm1_BindingPattern ) )=> (lv_bindingPattern_0_0= norm1_BindingPattern ) ) | ( ( (lv_annotations_1_0= ruleAnnotation ) )* (this_BogusTypeRefFragment_2= ruleBogusTypeRefFragment[$current] )? ( (lv_variadic_3_0= FullStopFullStopFullStop ) )? ( (lv_name_4_0= norm1_BindingIdentifier ) ) (this_ColonSepTypeRef_5= ruleColonSepTypeRef[$current] )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA141_0 = input.LA(1);

                         
                        int index141_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA141_0==LeftCurlyBracket) ) {s = 1;}

                        else if ( (LA141_0==LeftSquareBracket) && (synpred66_InternalN4JSParser())) {s = 2;}

                        else if ( ((LA141_0>=Intersection && LA141_0<=Implements)||(LA141_0>=Promisify && LA141_0<=Abstract)||LA141_0==External||(LA141_0>=Private && LA141_0<=Project)||LA141_0==Public||LA141_0==Static||LA141_0==Target||(LA141_0>=Async && LA141_0<=Await)||LA141_0==Union||LA141_0==This||LA141_0==From||LA141_0==This_1||(LA141_0>=Type && LA141_0<=Void)||LA141_0==FullStopFullStopFullStop||(LA141_0>=Get && LA141_0<=Let)||(LA141_0>=Out && LA141_0<=Set)||LA141_0==As||LA141_0==Of||(LA141_0>=QuestionMark && LA141_0<=CommercialAt)||LA141_0==Tilde||LA141_0==RULE_IDENTIFIER) ) {s = 3;}

                         
                        input.seek(index141_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA141_1 = input.LA(1);

                         
                        int index141_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalN4JSParser()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index141_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 141, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_90s = {
            "\1\12\1\10\1\13\1\uffff\1\4\3\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\5\1\uffff\1\13\1\3\7\uffff\1\11\2\uffff\1\2\3\uffff\1\13\1\uffff\1\1\1\uffff\1\7\1\1\2\uffff\1\13\3\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\22\uffff\1\1\4\uffff\1\1\2\uffff\1\1\14\uffff\1\6",
            "",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\1\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            ""
    };
    static final short[][] dfa_90 = unpackEncodedStringArray(dfa_90s);

    class DFA138 extends DFA {

        public DFA138(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 138;
            this.eot = dfa_39;
            this.eof = dfa_39;
            this.min = dfa_80;
            this.max = dfa_81;
            this.accept = dfa_82;
            this.special = dfa_44;
            this.transition = dfa_90;
        }
        public String getDescription() {
            return "6412:3: (this_BogusTypeRefFragment_2= ruleBogusTypeRefFragment[$current] )?";
        }
    }
    static final String dfa_91s = "\121\uffff";
    static final String dfa_92s = "\1\4\13\0\1\uffff\1\0\1\uffff\22\0\60\uffff";
    static final String dfa_93s = "\1\u0095\13\0\1\uffff\1\0\1\uffff\22\0\60\uffff";
    static final String dfa_94s = "\14\uffff\1\3\1\uffff\1\4\22\uffff\1\6\40\uffff\1\7\1\10\2\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\1\1\2\1\5";
    static final String dfa_95s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\uffff\1\14\1\uffff\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\60\uffff}>";
    static final String[] dfa_96s = {
            "\1\32\1\25\1\36\1\uffff\1\34\1\37\1\4\1\7\1\106\1\115\1\6\1\13\3\uffff\1\2\1\3\1\41\2\uffff\1\5\1\110\1\10\1\112\1\27\1\41\1\12\1\35\1\107\1\uffff\1\41\1\11\2\41\1\113\1\31\1\103\1\20\1\33\3\uffff\1\24\3\41\1\30\1\41\1\111\4\uffff\1\103\1\21\1\15\1\41\1\40\1\22\1\114\1\14\5\uffff\1\41\1\uffff\1\41\1\uffff\1\41\7\uffff\1\23\1\103\1\102\1\uffff\1\26\2\uffff\1\41\2\uffff\1\41\1\uffff\2\41\1\uffff\1\41\1\uffff\1\41\1\uffff\1\16\1\41\3\uffff\2\41\2\uffff\1\1\2\uffff\1\41\3\uffff\1\41\1\uffff\4\41\1\uffff\1\41\1\uffff\1\17\2\uffff\1\41\11\uffff\2\41\10\uffff\1\41",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_91 = DFA.unpackEncodedString(dfa_91s);
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final char[] dfa_93 = DFA.unpackEncodedStringToUnsignedChars(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final short[][] dfa_96 = unpackEncodedStringArray(dfa_96s);

    class DFA145 extends DFA {

        public DFA145(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 145;
            this.eot = dfa_91;
            this.eof = dfa_91;
            this.min = dfa_92;
            this.max = dfa_93;
            this.accept = dfa_94;
            this.special = dfa_95;
            this.transition = dfa_96;
        }
        public String getDescription() {
            return "6689:1: ( ( ( ( () LeftCurlyBracket ) )=>this_Block_0= ruleBlock ) | ( ( ( () ( ( ruleN4Modifier ) )* ruleAsyncNoTrailingLineBreak[null] Function ) )=>this_FunctionDeclaration_1= ruleFunctionDeclaration ) | ( ( ( () ( ( ruleVariableStatementKeyword ) ) ) )=>this_VariableStatement_2= norm1_VariableStatement ) | this_EmptyStatement_3= ruleEmptyStatement | ( ( ( ( ( ruleBindingIdentifier ) ) Colon ) )=>this_LabelledStatement_4= ruleLabelledStatement ) | this_ExpressionStatement_5= ruleExpressionStatement | this_IfStatement_6= ruleIfStatement | this_IterationStatement_7= ruleIterationStatement | this_ContinueStatement_8= ruleContinueStatement | this_BreakStatement_9= ruleBreakStatement | this_ReturnStatement_10= ruleReturnStatement | this_WithStatement_11= ruleWithStatement | this_SwitchStatement_12= ruleSwitchStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryStatement_14= ruleTryStatement | this_DebuggerStatement_15= ruleDebuggerStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA145_0 = input.LA(1);

                         
                        int index145_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA145_0>=10 && LA145_0<=110 && (s=T2S.M_2[LA145_0-(10)])>=0)) { /* 11 cases */ }
                        else if ( (LA145_0==Var) && (synpred71_InternalN4JSParser())) {s = 12;}

                        
                        else if ((LA145_0>=4 && LA145_0<=126 && (s=T2S.M_3[LA145_0-(4)])>=0)) { /* 21 cases */ }
                        else if ( (LA145_0==Delete||LA145_0==Typeof||LA145_0==Class||(LA145_0>=False && LA145_0<=Super)||(LA145_0>=Null && LA145_0<=True)||LA145_0==Void||LA145_0==New||LA145_0==PlusSignPlusSign||LA145_0==HyphenMinusHyphenMinus||LA145_0==SolidusEqualsSign||LA145_0==ExclamationMark||LA145_0==LeftParenthesis||(LA145_0>=Asterisk && LA145_0<=PlusSign)||LA145_0==HyphenMinus||LA145_0==Solidus||LA145_0==LessThanSign||(LA145_0>=CommercialAt && LA145_0<=LeftSquareBracket)||LA145_0==Tilde||LA145_0==RULE_DOUBLE||(LA145_0>=RULE_HEX_INT && LA145_0<=RULE_LEGACY_OCTAL_INT)||LA145_0==RULE_SCIENTIFIC_INT||LA145_0==RULE_STRING||(LA145_0>=RULE_TEMPLATE_HEAD && LA145_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA145_0==RULE_INT) ) {s = 33;}

                        else if ( (LA145_0==If) ) {s = 66;}

                        else if ( (LA145_0==While||LA145_0==For||LA145_0==Do) ) {s = 67;}

                        else if ( (LA145_0==Continue) ) {s = 70;}

                        else if ( (LA145_0==Break) ) {s = 71;}

                        else if ( (LA145_0==Return) ) {s = 72;}

                        else if ( (LA145_0==With) ) {s = 73;}

                        else if ( (LA145_0==Switch) ) {s = 74;}

                        else if ( (LA145_0==Throw) ) {s = 75;}

                        else if ( (LA145_0==Try) ) {s = 76;}

                        else if ( (LA145_0==Debugger) ) {s = 77;}

                         
                        input.seek(index145_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA145_1 = input.LA(1);

                         
                        int index145_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalN4JSParser()) ) {s = 78;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA145_2 = input.LA(1);

                         
                        int index145_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA145_3 = input.LA(1);

                         
                        int index145_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA145_4 = input.LA(1);

                         
                        int index145_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA145_5 = input.LA(1);

                         
                        int index145_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA145_6 = input.LA(1);

                         
                        int index145_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA145_7 = input.LA(1);

                         
                        int index145_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA145_8 = input.LA(1);

                         
                        int index145_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA145_9 = input.LA(1);

                         
                        int index145_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred71_InternalN4JSParser()) ) {s = 12;}

                         
                        input.seek(index145_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA145_10 = input.LA(1);

                         
                        int index145_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA145_11 = input.LA(1);

                         
                        int index145_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalN4JSParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA145_13 = input.LA(1);

                         
                        int index145_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalN4JSParser()) ) {s = 12;}

                        else if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA145_15 = input.LA(1);

                         
                        int index145_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA145_16 = input.LA(1);

                         
                        int index145_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA145_17 = input.LA(1);

                         
                        int index145_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA145_18 = input.LA(1);

                         
                        int index145_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA145_19 = input.LA(1);

                         
                        int index145_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA145_20 = input.LA(1);

                         
                        int index145_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA145_21 = input.LA(1);

                         
                        int index145_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA145_22 = input.LA(1);

                         
                        int index145_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA145_23 = input.LA(1);

                         
                        int index145_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA145_24 = input.LA(1);

                         
                        int index145_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA145_25 = input.LA(1);

                         
                        int index145_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA145_26 = input.LA(1);

                         
                        int index145_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_26);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA145_27 = input.LA(1);

                         
                        int index145_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA145_28 = input.LA(1);

                         
                        int index145_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA145_29 = input.LA(1);

                         
                        int index145_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA145_30 = input.LA(1);

                         
                        int index145_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA145_31 = input.LA(1);

                         
                        int index145_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA145_32 = input.LA(1);

                         
                        int index145_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index145_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 145, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_97s = "\1\4\13\0\1\uffff\1\0\1\uffff\21\0\61\uffff";
    static final String dfa_98s = "\1\u0095\13\0\1\uffff\1\0\1\uffff\21\0\61\uffff";
    static final String dfa_99s = "\14\uffff\1\3\1\uffff\1\4\21\uffff\1\6\41\uffff\1\7\1\10\2\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\1\1\2\1\5";
    static final String dfa_100s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\uffff\1\14\1\uffff\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\61\uffff}>";
    static final String[] dfa_101s = {
            "\1\31\1\24\1\35\1\uffff\1\33\1\36\1\4\1\7\1\106\1\115\1\6\1\13\3\uffff\1\2\1\3\1\40\2\uffff\1\5\1\110\1\10\1\112\1\26\1\40\1\12\1\34\1\107\1\uffff\1\40\1\11\2\40\1\113\1\30\1\103\1\40\1\32\3\uffff\1\23\3\40\1\27\1\40\1\111\4\uffff\1\103\1\20\1\15\1\40\1\37\1\21\1\114\1\14\5\uffff\1\40\1\uffff\1\40\1\uffff\1\40\7\uffff\1\22\1\103\1\102\1\uffff\1\25\2\uffff\1\40\2\uffff\1\40\1\uffff\2\40\1\uffff\1\40\1\uffff\1\40\1\uffff\1\16\1\40\3\uffff\2\40\2\uffff\1\1\2\uffff\1\40\3\uffff\1\40\1\uffff\4\40\1\uffff\1\40\1\uffff\1\17\2\uffff\1\40\11\uffff\2\40\10\uffff\1\40",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_97 = DFA.unpackEncodedStringToUnsignedChars(dfa_97s);
    static final char[] dfa_98 = DFA.unpackEncodedStringToUnsignedChars(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final short[] dfa_100 = DFA.unpackEncodedString(dfa_100s);
    static final short[][] dfa_101 = unpackEncodedStringArray(dfa_101s);

    class DFA146 extends DFA {

        public DFA146(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 146;
            this.eot = dfa_91;
            this.eof = dfa_91;
            this.min = dfa_97;
            this.max = dfa_98;
            this.accept = dfa_99;
            this.special = dfa_100;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "6882:1: ( ( ( ( () LeftCurlyBracket ) )=>this_Block_0= norm1_Block ) | ( ( ( () ( ( ruleN4Modifier ) )* ruleAsyncNoTrailingLineBreak[null] Function ) )=>this_FunctionDeclaration_1= norm1_FunctionDeclaration ) | ( ( ( () ( ( ruleVariableStatementKeyword ) ) ) )=>this_VariableStatement_2= norm3_VariableStatement ) | this_EmptyStatement_3= ruleEmptyStatement | ( ( ( ( ( norm1_BindingIdentifier ) ) Colon ) )=>this_LabelledStatement_4= norm1_LabelledStatement ) | this_ExpressionStatement_5= norm1_ExpressionStatement | this_IfStatement_6= norm1_IfStatement | this_IterationStatement_7= norm1_IterationStatement | this_ContinueStatement_8= norm1_ContinueStatement | this_BreakStatement_9= norm1_BreakStatement | this_ReturnStatement_10= norm1_ReturnStatement | this_WithStatement_11= norm1_WithStatement | this_SwitchStatement_12= norm1_SwitchStatement | this_ThrowStatement_13= norm1_ThrowStatement | this_TryStatement_14= norm1_TryStatement | this_DebuggerStatement_15= ruleDebuggerStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA146_0 = input.LA(1);

                         
                        int index146_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA146_0>=10 && LA146_0<=110 && (s=T2S.M_2[LA146_0-(10)])>=0)) { /* 11 cases */ }
                        else if ( (LA146_0==Var) && (synpred75_InternalN4JSParser())) {s = 12;}

                        
                        else if ((LA146_0>=4 && LA146_0<=126 && (s=T2S.M_5[LA146_0-(4)])>=0)) { /* 20 cases */ }
                        else if ( (LA146_0==Delete||LA146_0==Typeof||LA146_0==Class||(LA146_0>=False && LA146_0<=Super)||LA146_0==Yield||(LA146_0>=Null && LA146_0<=True)||LA146_0==Void||LA146_0==New||LA146_0==PlusSignPlusSign||LA146_0==HyphenMinusHyphenMinus||LA146_0==SolidusEqualsSign||LA146_0==ExclamationMark||LA146_0==LeftParenthesis||(LA146_0>=Asterisk && LA146_0<=PlusSign)||LA146_0==HyphenMinus||LA146_0==Solidus||LA146_0==LessThanSign||(LA146_0>=CommercialAt && LA146_0<=LeftSquareBracket)||LA146_0==Tilde||LA146_0==RULE_DOUBLE||(LA146_0>=RULE_HEX_INT && LA146_0<=RULE_LEGACY_OCTAL_INT)||LA146_0==RULE_SCIENTIFIC_INT||LA146_0==RULE_STRING||(LA146_0>=RULE_TEMPLATE_HEAD && LA146_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA146_0==RULE_INT) ) {s = 32;}

                        else if ( (LA146_0==If) ) {s = 66;}

                        else if ( (LA146_0==While||LA146_0==For||LA146_0==Do) ) {s = 67;}

                        else if ( (LA146_0==Continue) ) {s = 70;}

                        else if ( (LA146_0==Break) ) {s = 71;}

                        else if ( (LA146_0==Return) ) {s = 72;}

                        else if ( (LA146_0==With) ) {s = 73;}

                        else if ( (LA146_0==Switch) ) {s = 74;}

                        else if ( (LA146_0==Throw) ) {s = 75;}

                        else if ( (LA146_0==Try) ) {s = 76;}

                        else if ( (LA146_0==Debugger) ) {s = 77;}

                         
                        input.seek(index146_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA146_1 = input.LA(1);

                         
                        int index146_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred73_InternalN4JSParser()) ) {s = 78;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA146_2 = input.LA(1);

                         
                        int index146_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA146_3 = input.LA(1);

                         
                        int index146_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA146_4 = input.LA(1);

                         
                        int index146_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA146_5 = input.LA(1);

                         
                        int index146_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA146_6 = input.LA(1);

                         
                        int index146_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA146_7 = input.LA(1);

                         
                        int index146_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA146_8 = input.LA(1);

                         
                        int index146_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA146_9 = input.LA(1);

                         
                        int index146_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred75_InternalN4JSParser()) ) {s = 12;}

                         
                        input.seek(index146_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA146_10 = input.LA(1);

                         
                        int index146_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA146_11 = input.LA(1);

                         
                        int index146_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA146_13 = input.LA(1);

                         
                        int index146_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalN4JSParser()) ) {s = 12;}

                        else if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA146_15 = input.LA(1);

                         
                        int index146_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA146_16 = input.LA(1);

                         
                        int index146_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA146_17 = input.LA(1);

                         
                        int index146_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA146_18 = input.LA(1);

                         
                        int index146_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA146_19 = input.LA(1);

                         
                        int index146_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA146_20 = input.LA(1);

                         
                        int index146_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA146_21 = input.LA(1);

                         
                        int index146_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA146_22 = input.LA(1);

                         
                        int index146_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA146_23 = input.LA(1);

                         
                        int index146_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA146_24 = input.LA(1);

                         
                        int index146_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA146_25 = input.LA(1);

                         
                        int index146_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA146_26 = input.LA(1);

                         
                        int index146_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_26);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA146_27 = input.LA(1);

                         
                        int index146_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA146_28 = input.LA(1);

                         
                        int index146_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA146_29 = input.LA(1);

                         
                        int index146_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA146_30 = input.LA(1);

                         
                        int index146_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA146_31 = input.LA(1);

                         
                        int index146_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index146_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 146, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_102s = "\117\uffff";
    static final String dfa_103s = "\1\4\1\0\115\uffff";
    static final String dfa_104s = "\1\u0095\1\0\115\uffff";
    static final String dfa_105s = "\2\uffff\1\2\113\uffff\1\1";
    static final String dfa_106s = "\1\uffff\1\0\115\uffff}>";
    static final String[] dfa_107s = {
            "\3\2\1\uffff\10\2\3\uffff\3\2\2\uffff\11\2\1\uffff\11\2\3\uffff\7\2\4\uffff\10\2\5\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\3\2\1\uffff\1\2\2\uffff\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\3\uffff\1\1\1\2\2\uffff\1\2\2\uffff\1\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final char[] dfa_103 = DFA.unpackEncodedStringToUnsignedChars(dfa_103s);
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[][] dfa_107 = unpackEncodedStringArray(dfa_107s);

    class DFA147 extends DFA {

        public DFA147(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 147;
            this.eot = dfa_102;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_106;
            this.transition = dfa_107;
        }
        public String getDescription() {
            return "7083:1: ( ( ( ( () CommercialAt ( This | Target | RULE_IDENTIFIER ) ) )=>this_AnnotatedFunctionDeclaration_0= ruleAnnotatedFunctionDeclaration ) | this_RootStatement_1= ruleRootStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA147_1 = input.LA(1);

                         
                        int index147_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalN4JSParser()) ) {s = 78;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index147_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 147, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA148 extends DFA {

        public DFA148(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 148;
            this.eot = dfa_102;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_106;
            this.transition = dfa_107;
        }
        public String getDescription() {
            return "7124:1: ( ( ( ( () CommercialAt ( This | Target | RULE_IDENTIFIER ) ) )=>this_AnnotatedFunctionDeclaration_0= norm1_AnnotatedFunctionDeclaration ) | this_RootStatement_1= norm1_RootStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA148_1 = input.LA(1);

                         
                        int index148_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalN4JSParser()) ) {s = 78;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index148_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 148, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA151 extends DFA {

        public DFA151(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 151;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "()* loopback of 7365:2: ( (lv_declaredModifiers_1_0= ruleN4Modifier ) )*";
        }
    }
    static final String dfa_108s = "\35\uffff";
    static final String dfa_109s = "\1\4\34\uffff";
    static final String dfa_110s = "\1\176\34\uffff";
    static final String dfa_111s = "\1\uffff\33\2\1\1";
    static final String dfa_112s = "\1\0\34\uffff}>";
    static final String[] dfa_113s = {
            "\1\21\1\14\1\26\1\uffff\1\23\1\27\1\31\1\10\2\uffff\1\7\4\uffff\1\30\1\6\3\uffff\1\32\1\uffff\1\11\1\uffff\1\16\1\uffff\1\25\1\24\7\uffff\1\20\1\uffff\1\2\1\22\3\uffff\1\13\3\uffff\1\17\7\uffff\1\3\1\5\1\uffff\1\33\1\4\23\uffff\1\12\3\uffff\1\15\23\uffff\1\34\23\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final char[] dfa_109 = DFA.unpackEncodedStringToUnsignedChars(dfa_109s);
    static final char[] dfa_110 = DFA.unpackEncodedStringToUnsignedChars(dfa_110s);
    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final short[][] dfa_113 = unpackEncodedStringArray(dfa_113s);

    class DFA163 extends DFA {

        public DFA163(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 163;
            this.eot = dfa_108;
            this.eof = dfa_108;
            this.min = dfa_109;
            this.max = dfa_110;
            this.accept = dfa_111;
            this.special = dfa_112;
            this.transition = dfa_113;
        }
        public String getDescription() {
            return "()* loopback of 8353:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA163_0 = input.LA(1);

                         
                        int index163_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA163_0>=4 && LA163_0<=126 && (s=T2S.M_6[LA163_0-(4)])>=0) && (synpred95_InternalN4JSParser())) { /* 27 cases */ }
                        else if ( (LA163_0==CommercialAt) ) {s = 28;}

                         
                        input.seek(index163_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 163, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA165 extends DFA {

        public DFA165(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 165;
            this.eot = dfa_108;
            this.eof = dfa_108;
            this.min = dfa_109;
            this.max = dfa_110;
            this.accept = dfa_111;
            this.special = dfa_112;
            this.transition = dfa_113;
        }
        public String getDescription() {
            return "()* loopback of 8429:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA165_0 = input.LA(1);

                         
                        int index165_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA165_0>=4 && LA165_0<=126 && (s=T2S.M_6[LA165_0-(4)])>=0) && (synpred96_InternalN4JSParser())) { /* 27 cases */ }
                        else if ( (LA165_0==CommercialAt) ) {s = 28;}

                         
                        input.seek(index165_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 165, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_114s = "\34\uffff";
    static final String dfa_115s = "\1\4\33\uffff";
    static final String dfa_116s = "\1\176\33\uffff";
    static final String dfa_117s = "\1\uffff\32\2\1\1";
    static final String dfa_118s = "\1\0\33\uffff}>";
    static final String[] dfa_119s = {
            "\1\20\1\13\1\25\1\uffff\1\22\1\26\1\30\1\7\2\uffff\1\6\4\uffff\1\27\1\5\3\uffff\1\31\1\uffff\1\10\1\uffff\1\15\1\uffff\1\24\1\23\7\uffff\1\17\2\uffff\1\21\3\uffff\1\12\3\uffff\1\16\7\uffff\1\2\1\4\1\uffff\1\32\1\3\23\uffff\1\11\3\uffff\1\14\23\uffff\1\33\23\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final char[] dfa_115 = DFA.unpackEncodedStringToUnsignedChars(dfa_115s);
    static final char[] dfa_116 = DFA.unpackEncodedStringToUnsignedChars(dfa_116s);
    static final short[] dfa_117 = DFA.unpackEncodedString(dfa_117s);
    static final short[] dfa_118 = DFA.unpackEncodedString(dfa_118s);
    static final short[][] dfa_119 = unpackEncodedStringArray(dfa_119s);

    class DFA167 extends DFA {

        public DFA167(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 167;
            this.eot = dfa_114;
            this.eof = dfa_114;
            this.min = dfa_115;
            this.max = dfa_116;
            this.accept = dfa_117;
            this.special = dfa_118;
            this.transition = dfa_119;
        }
        public String getDescription() {
            return "()* loopback of 8505:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA167_0 = input.LA(1);

                         
                        int index167_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA167_0>=4 && LA167_0<=126 && (s=T2S.M_8[LA167_0-(4)])>=0) && (synpred97_InternalN4JSParser())) { /* 26 cases */ }
                        else if ( (LA167_0==CommercialAt) ) {s = 27;}

                         
                        input.seek(index167_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 167, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA169 extends DFA {

        public DFA169(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 169;
            this.eot = dfa_114;
            this.eof = dfa_114;
            this.min = dfa_115;
            this.max = dfa_116;
            this.accept = dfa_117;
            this.special = dfa_118;
            this.transition = dfa_119;
        }
        public String getDescription() {
            return "()* loopback of 8581:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA169_0 = input.LA(1);

                         
                        int index169_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA169_0>=4 && LA169_0<=126 && (s=T2S.M_8[LA169_0-(4)])>=0) && (synpred98_InternalN4JSParser())) { /* 26 cases */ }
                        else if ( (LA169_0==CommercialAt) ) {s = 27;}

                         
                        input.seek(index169_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 169, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA171 extends DFA {

        public DFA171(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 171;
            this.eot = dfa_108;
            this.eof = dfa_108;
            this.min = dfa_109;
            this.max = dfa_110;
            this.accept = dfa_111;
            this.special = dfa_112;
            this.transition = dfa_113;
        }
        public String getDescription() {
            return "()* loopback of 8657:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA171_0 = input.LA(1);

                         
                        int index171_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA171_0>=4 && LA171_0<=126 && (s=T2S.M_6[LA171_0-(4)])>=0) && (synpred99_InternalN4JSParser())) { /* 27 cases */ }
                        else if ( (LA171_0==CommercialAt) ) {s = 28;}

                         
                        input.seek(index171_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 171, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA174 extends DFA {

        public DFA174(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 174;
            this.eot = dfa_108;
            this.eof = dfa_108;
            this.min = dfa_109;
            this.max = dfa_110;
            this.accept = dfa_111;
            this.special = dfa_112;
            this.transition = dfa_113;
        }
        public String getDescription() {
            return "()* loopback of 8745:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA174_0 = input.LA(1);

                         
                        int index174_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA174_0>=4 && LA174_0<=126 && (s=T2S.M_6[LA174_0-(4)])>=0) && (synpred100_InternalN4JSParser())) { /* 27 cases */ }
                        else if ( (LA174_0==CommercialAt) ) {s = 28;}

                         
                        input.seek(index174_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 174, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA177 extends DFA {

        public DFA177(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 177;
            this.eot = dfa_114;
            this.eof = dfa_114;
            this.min = dfa_115;
            this.max = dfa_116;
            this.accept = dfa_117;
            this.special = dfa_118;
            this.transition = dfa_119;
        }
        public String getDescription() {
            return "()* loopback of 8833:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA177_0 = input.LA(1);

                         
                        int index177_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA177_0>=4 && LA177_0<=126 && (s=T2S.M_8[LA177_0-(4)])>=0) && (synpred101_InternalN4JSParser())) { /* 26 cases */ }
                        else if ( (LA177_0==CommercialAt) ) {s = 27;}

                         
                        input.seek(index177_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 177, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA180 extends DFA {

        public DFA180(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 180;
            this.eot = dfa_114;
            this.eof = dfa_114;
            this.min = dfa_115;
            this.max = dfa_116;
            this.accept = dfa_117;
            this.special = dfa_118;
            this.transition = dfa_119;
        }
        public String getDescription() {
            return "()* loopback of 8921:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA180_0 = input.LA(1);

                         
                        int index180_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA180_0>=4 && LA180_0<=126 && (s=T2S.M_8[LA180_0-(4)])>=0) && (synpred102_InternalN4JSParser())) { /* 26 cases */ }
                        else if ( (LA180_0==CommercialAt) ) {s = 27;}

                         
                        input.seek(index180_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 180, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_120s = "\1\0\1\3\1\4\1\1\2\uffff\1\2\125\uffff}>";
    static final short[] dfa_120 = DFA.unpackEncodedString(dfa_120s);

    class DFA189 extends DFA {

        public DFA189(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 189;
            this.eot = dfa_53;
            this.eof = dfa_54;
            this.min = dfa_55;
            this.max = dfa_56;
            this.accept = dfa_57;
            this.special = dfa_120;
            this.transition = dfa_59;
        }
        public String getDescription() {
            return "9743:1: ( ( ruleSemi )=> ruleSemi )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA189_0 = input.LA(1);

                         
                        int index189_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA189_0==Semicolon) ) {s = 1;}

                        else if ( (LA189_0==EOF) ) {s = 2;}

                        else if ( (LA189_0==RightCurlyBracket) ) {s = 3;}

                        else if ( (LA189_0==RULE_ML_COMMENT||LA189_0==RULE_EOL) && (synpred109_InternalN4JSParser())) {s = 4;}

                        else if ( ((LA189_0>=Intersection && LA189_0<=Implements)||(LA189_0>=Promisify && LA189_0<=Default)||(LA189_0>=Private && LA189_0<=Break)||(LA189_0>=Class && LA189_0<=With)||(LA189_0>=For && LA189_0<=Var)||LA189_0==PlusSignPlusSign||LA189_0==HyphenMinusHyphenMinus||LA189_0==SolidusEqualsSign||(LA189_0>=As && LA189_0<=If)||LA189_0==Of||LA189_0==ExclamationMark||LA189_0==LeftParenthesis||(LA189_0>=Asterisk && LA189_0<=PlusSign)||LA189_0==HyphenMinus||LA189_0==Solidus||LA189_0==LessThanSign||(LA189_0>=CommercialAt && LA189_0<=LeftSquareBracket)||LA189_0==LeftCurlyBracket||LA189_0==Tilde||LA189_0==RULE_DOUBLE||(LA189_0>=RULE_HEX_INT && LA189_0<=RULE_LEGACY_OCTAL_INT)||LA189_0==RULE_SCIENTIFIC_INT||LA189_0==RULE_IDENTIFIER||LA189_0==RULE_STRING||(LA189_0>=RULE_TEMPLATE_HEAD && LA189_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA189_0==RULE_INT) ) {s = 5;}

                         
                        input.seek(index189_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA189_3 = input.LA(1);

                         
                        int index189_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred109_InternalN4JSParser()) ) {s = 90;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index189_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA189_6 = input.LA(1);

                         
                        int index189_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA189_6==EOF) && (synpred109_InternalN4JSParser())) {s = 91;}

                         
                        input.seek(index189_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA189_1 = input.LA(1);

                         
                        int index189_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred109_InternalN4JSParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index189_1);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA189_2 = input.LA(1);

                         
                        int index189_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA189_2==EOF) ) {s = 6;}

                        
                        else if ((LA189_2>=-1 && LA189_2<=149 && (s=T2S.M_1[LA189_2-(-1)])>=0) && (synpred109_InternalN4JSParser())) { /* 85 cases */ }
                        input.seek(index189_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 189, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_121s = "\103\uffff";
    static final String dfa_122s = "\1\4\1\0\101\uffff";
    static final String dfa_123s = "\1\u0095\1\0\101\uffff";
    static final String dfa_124s = "\2\uffff\1\2\77\uffff\1\1";
    static final String dfa_125s = "\1\uffff\1\0\101\uffff}>";
    static final String[] dfa_126s = {
            "\3\2\1\uffff\4\2\2\uffff\2\2\3\uffff\3\2\2\uffff\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\4\2\1\uffff\1\2\1\uffff\2\2\3\uffff\6\2\6\uffff\1\2\1\1\3\2\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\1\2\3\uffff\1\2\2\uffff\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\3\uffff\2\2\2\uffff\1\2\2\uffff\1\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_121 = DFA.unpackEncodedString(dfa_121s);
    static final char[] dfa_122 = DFA.unpackEncodedStringToUnsignedChars(dfa_122s);
    static final char[] dfa_123 = DFA.unpackEncodedStringToUnsignedChars(dfa_123s);
    static final short[] dfa_124 = DFA.unpackEncodedString(dfa_124s);
    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final short[][] dfa_126 = unpackEncodedStringArray(dfa_126s);

    class DFA208 extends DFA {

        public DFA208(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 208;
            this.eot = dfa_121;
            this.eof = dfa_121;
            this.min = dfa_122;
            this.max = dfa_123;
            this.accept = dfa_124;
            this.special = dfa_125;
            this.transition = dfa_126;
        }
        public String getDescription() {
            return "10001:1: ( ( ( ( ( ( ruleLetIdentifierRef ) ) ( ( In ) ) ( ( norm1_Expression ) ) RightParenthesis ) )=> ( ( (lv_initExpr_3_0= ruleLetIdentifierRef ) ) ( (lv_forIn_4_0= In ) ) ( (lv_expression_5_0= norm1_Expression ) ) otherlv_6= RightParenthesis ) ) | ( ( ( ( ( Var | Const | Let )=> (lv_varStmtKeyword_7_0= ruleVariableStatementKeyword ) ) ( ( ( ( ( ( ruleBindingIdentifierAsVariableDeclaration ) ) ( ( ( In ) ) | ( ( Of ) ) ) ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )? ) )=> ( ( (lv_varDeclsOrBindings_8_0= ruleBindingIdentifierAsVariableDeclaration ) ) ( ( (lv_forIn_9_0= In ) ) | ( (lv_forOf_10_0= Of ) ) ) ( ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm1_AssignmentExpression ) )? ) ) | ( ( (lv_varDeclsOrBindings_12_0= norm4_VariableDeclarationOrBinding ) ) ( ( (otherlv_13= Comma ( (lv_varDeclsOrBindings_14_0= ruleVariableDeclarationOrBinding ) ) )* otherlv_15= Semicolon ( (lv_expression_16_0= norm1_Expression ) )? otherlv_17= Semicolon ( (lv_updateExpr_18_0= norm1_Expression ) )? ) | ( ( (lv_forIn_19_0= In ) ) ( (lv_expression_20_0= norm1_Expression ) )? ) | ( ( (lv_forOf_21_0= Of ) ) ( (lv_expression_22_0= norm1_AssignmentExpression ) )? ) ) ) ) ) | ( ( (lv_initExpr_23_0= ruleExpression ) ) ( (otherlv_24= Semicolon ( (lv_expression_25_0= norm1_Expression ) )? otherlv_26= Semicolon ( (lv_updateExpr_27_0= norm1_Expression ) )? ) | ( ( (lv_forIn_28_0= In ) ) ( (lv_expression_29_0= norm1_Expression ) )? ) | ( ( (lv_forOf_30_0= Of ) ) ( (lv_expression_31_0= norm1_AssignmentExpression ) )? ) ) ) | (otherlv_32= Semicolon ( (lv_expression_33_0= norm1_Expression ) )? otherlv_34= Semicolon ( (lv_updateExpr_35_0= norm1_Expression ) )? ) ) otherlv_36= RightParenthesis ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA208_1 = input.LA(1);

                         
                        int index208_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalN4JSParser()) ) {s = 66;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index208_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 208, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_127s = "\1\4\2\uffff\1\0\76\uffff";
    static final String dfa_128s = "\1\u0095\2\uffff\1\0\76\uffff";
    static final String dfa_129s = "\1\uffff\2\1\1\uffff\1\2\74\uffff\1\3";
    static final String dfa_130s = "\1\0\2\uffff\1\1\76\uffff}>";
    static final String[] dfa_131s = {
            "\3\4\1\uffff\4\4\2\uffff\2\4\3\uffff\3\4\2\uffff\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\1\2\2\4\1\uffff\1\4\1\uffff\2\4\3\uffff\6\4\6\uffff\1\4\1\3\3\4\1\uffff\1\1\5\uffff\1\4\1\uffff\1\4\1\uffff\1\4\7\uffff\1\4\3\uffff\1\4\2\uffff\1\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff\1\4\1\uffff\1\101\1\4\3\uffff\2\4\2\uffff\1\4\2\uffff\1\4\3\uffff\1\4\1\uffff\4\4\1\uffff\1\4\1\uffff\1\4\2\uffff\1\4\11\uffff\2\4\10\uffff\1\4",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_127 = DFA.unpackEncodedStringToUnsignedChars(dfa_127s);
    static final char[] dfa_128 = DFA.unpackEncodedStringToUnsignedChars(dfa_128s);
    static final short[] dfa_129 = DFA.unpackEncodedString(dfa_129s);
    static final short[] dfa_130 = DFA.unpackEncodedString(dfa_130s);
    static final short[][] dfa_131 = unpackEncodedStringArray(dfa_131s);

    class DFA207 extends DFA {

        public DFA207(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 207;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_127;
            this.max = dfa_128;
            this.accept = dfa_129;
            this.special = dfa_130;
            this.transition = dfa_131;
        }
        public String getDescription() {
            return "10076:7: ( ( ( ( Var | Const | Let )=> (lv_varStmtKeyword_7_0= ruleVariableStatementKeyword ) ) ( ( ( ( ( ( ruleBindingIdentifierAsVariableDeclaration ) ) ( ( ( In ) ) | ( ( Of ) ) ) ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )? ) )=> ( ( (lv_varDeclsOrBindings_8_0= ruleBindingIdentifierAsVariableDeclaration ) ) ( ( (lv_forIn_9_0= In ) ) | ( (lv_forOf_10_0= Of ) ) ) ( ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm1_AssignmentExpression ) )? ) ) | ( ( (lv_varDeclsOrBindings_12_0= norm4_VariableDeclarationOrBinding ) ) ( ( (otherlv_13= Comma ( (lv_varDeclsOrBindings_14_0= ruleVariableDeclarationOrBinding ) ) )* otherlv_15= Semicolon ( (lv_expression_16_0= norm1_Expression ) )? otherlv_17= Semicolon ( (lv_updateExpr_18_0= norm1_Expression ) )? ) | ( ( (lv_forIn_19_0= In ) ) ( (lv_expression_20_0= norm1_Expression ) )? ) | ( ( (lv_forOf_21_0= Of ) ) ( (lv_expression_22_0= norm1_AssignmentExpression ) )? ) ) ) ) ) | ( ( (lv_initExpr_23_0= ruleExpression ) ) ( (otherlv_24= Semicolon ( (lv_expression_25_0= norm1_Expression ) )? otherlv_26= Semicolon ( (lv_updateExpr_27_0= norm1_Expression ) )? ) | ( ( (lv_forIn_28_0= In ) ) ( (lv_expression_29_0= norm1_Expression ) )? ) | ( ( (lv_forOf_30_0= Of ) ) ( (lv_expression_31_0= norm1_AssignmentExpression ) )? ) ) ) | (otherlv_32= Semicolon ( (lv_expression_33_0= norm1_Expression ) )? otherlv_34= Semicolon ( (lv_updateExpr_35_0= norm1_Expression ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA207_0 = input.LA(1);

                         
                        int index207_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA207_0==Var) && (synpred112_InternalN4JSParser())) {s = 1;}

                        else if ( (LA207_0==Const) && (synpred112_InternalN4JSParser())) {s = 2;}

                        else if ( (LA207_0==Let) ) {s = 3;}

                        else if ( ((LA207_0>=Intersection && LA207_0<=Implements)||(LA207_0>=Promisify && LA207_0<=Abstract)||(LA207_0>=External && LA207_0<=Function)||(LA207_0>=Private && LA207_0<=Delete)||LA207_0==Public||LA207_0==Static||(LA207_0>=Target && LA207_0<=Await)||LA207_0==Class||(LA207_0>=False && LA207_0<=Super)||LA207_0==Union||(LA207_0>=Yield && LA207_0<=This)||(LA207_0>=From && LA207_0<=Void)||LA207_0==Get||(LA207_0>=New && LA207_0<=Set)||LA207_0==PlusSignPlusSign||LA207_0==HyphenMinusHyphenMinus||LA207_0==SolidusEqualsSign||LA207_0==As||LA207_0==Of||LA207_0==ExclamationMark||LA207_0==LeftParenthesis||(LA207_0>=Asterisk && LA207_0<=PlusSign)||LA207_0==HyphenMinus||LA207_0==Solidus||LA207_0==LessThanSign||(LA207_0>=CommercialAt && LA207_0<=LeftSquareBracket)||LA207_0==LeftCurlyBracket||LA207_0==Tilde||LA207_0==RULE_DOUBLE||(LA207_0>=RULE_HEX_INT && LA207_0<=RULE_LEGACY_OCTAL_INT)||LA207_0==RULE_SCIENTIFIC_INT||LA207_0==RULE_IDENTIFIER||LA207_0==RULE_STRING||(LA207_0>=RULE_TEMPLATE_HEAD && LA207_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA207_0==RULE_INT) ) {s = 4;}

                        else if ( (LA207_0==Semicolon) ) {s = 65;}

                         
                        input.seek(index207_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA207_3 = input.LA(1);

                         
                        int index207_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSParser()) ) {s = 2;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index207_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 207, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_132s = "\40\uffff";
    static final String dfa_133s = "\1\4\33\125\1\uffff\2\0\1\uffff";
    static final String dfa_134s = "\1\176\33\147\1\uffff\2\0\1\uffff";
    static final String dfa_135s = "\34\uffff\1\2\2\uffff\1\1";
    static final String dfa_136s = "\35\uffff\1\1\1\0\1\uffff}>";
    static final String[] dfa_137s = {
            "\1\21\1\14\1\26\1\uffff\1\23\1\27\1\31\1\10\2\uffff\1\7\4\uffff\1\30\1\6\3\uffff\1\32\1\uffff\1\11\1\uffff\1\16\1\uffff\1\25\1\24\7\uffff\1\20\1\uffff\1\2\1\22\3\uffff\1\13\3\uffff\1\17\7\uffff\1\3\1\5\1\uffff\1\33\1\4\23\uffff\1\12\3\uffff\1\15\23\uffff\2\34\2\uffff\1\34\17\uffff\1\1",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_132 = DFA.unpackEncodedString(dfa_132s);
    static final char[] dfa_133 = DFA.unpackEncodedStringToUnsignedChars(dfa_133s);
    static final char[] dfa_134 = DFA.unpackEncodedStringToUnsignedChars(dfa_134s);
    static final short[] dfa_135 = DFA.unpackEncodedString(dfa_135s);
    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final short[][] dfa_137 = unpackEncodedStringArray(dfa_137s);

    class DFA199 extends DFA {

        public DFA199(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 199;
            this.eot = dfa_132;
            this.eof = dfa_132;
            this.min = dfa_133;
            this.max = dfa_134;
            this.accept = dfa_135;
            this.special = dfa_136;
            this.transition = dfa_137;
        }
        public String getDescription() {
            return "10100:2: ( ( ( ( ( ( ruleBindingIdentifierAsVariableDeclaration ) ) ( ( ( In ) ) | ( ( Of ) ) ) ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )? ) )=> ( ( (lv_varDeclsOrBindings_8_0= ruleBindingIdentifierAsVariableDeclaration ) ) ( ( (lv_forIn_9_0= In ) ) | ( (lv_forOf_10_0= Of ) ) ) ( ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm1_AssignmentExpression ) )? ) ) | ( ( (lv_varDeclsOrBindings_12_0= norm4_VariableDeclarationOrBinding ) ) ( ( (otherlv_13= Comma ( (lv_varDeclsOrBindings_14_0= ruleVariableDeclarationOrBinding ) ) )* otherlv_15= Semicolon ( (lv_expression_16_0= norm1_Expression ) )? otherlv_17= Semicolon ( (lv_updateExpr_18_0= norm1_Expression ) )? ) | ( ( (lv_forIn_19_0= In ) ) ( (lv_expression_20_0= norm1_Expression ) )? ) | ( ( (lv_forOf_21_0= Of ) ) ( (lv_expression_22_0= norm1_AssignmentExpression ) )? ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA199_30 = input.LA(1);

                         
                        int index199_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred113_InternalN4JSParser()) ) {s = 31;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index199_30);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA199_29 = input.LA(1);

                         
                        int index199_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred113_InternalN4JSParser()) ) {s = 31;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index199_29);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 199, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_138s = "\1\4\77\uffff";
    static final String dfa_139s = "\1\u0095\77\uffff";
    static final String dfa_140s = "\1\uffff\76\1\1\2";
    static final String dfa_141s = "\1\0\77\uffff}>";
    static final String[] dfa_142s = {
            "\1\26\1\21\1\31\1\uffff\1\30\1\32\1\34\1\15\2\uffff\1\14\1\62\3\uffff\1\33\1\13\1\66\2\uffff\1\35\1\uffff\1\16\1\uffff\1\23\1\70\1\4\1\1\2\uffff\1\63\1\uffff\1\53\1\41\1\uffff\1\25\1\uffff\1\7\1\27\3\uffff\1\20\1\55\1\40\1\52\1\24\1\67\6\uffff\1\10\1\12\1\37\1\36\1\11\7\uffff\1\71\1\uffff\1\72\1\uffff\1\57\7\uffff\1\17\3\uffff\1\22\2\uffff\1\76\2\uffff\1\3\1\77\1\5\1\73\1\uffff\1\74\1\uffff\1\56\2\uffff\1\42\3\uffff\1\2\1\60\2\uffff\1\61\2\uffff\1\75\3\uffff\1\43\1\uffff\1\50\1\45\1\46\1\47\1\uffff\1\51\1\uffff\1\6\2\uffff\1\54\11\uffff\1\65\1\64\10\uffff\1\44",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_138 = DFA.unpackEncodedStringToUnsignedChars(dfa_138s);
    static final char[] dfa_139 = DFA.unpackEncodedStringToUnsignedChars(dfa_139s);
    static final short[] dfa_140 = DFA.unpackEncodedString(dfa_140s);
    static final short[] dfa_141 = DFA.unpackEncodedString(dfa_141s);
    static final short[][] dfa_142 = unpackEncodedStringArray(dfa_142s);

    class DFA192 extends DFA {

        public DFA192(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 192;
            this.eot = dfa_67;
            this.eof = dfa_67;
            this.min = dfa_138;
            this.max = dfa_139;
            this.accept = dfa_140;
            this.special = dfa_141;
            this.transition = dfa_142;
        }
        public String getDescription() {
            return "10333:3: ( ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm1_AssignmentExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA192_0 = input.LA(1);

                         
                        int index192_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA192_0>=4 && LA192_0<=149 && (s=T2S.M_15[LA192_0-(4)])>=0) && (synpred114_InternalN4JSParser())) { /* 62 cases */ }
                        else if ( (LA192_0==RightParenthesis) ) {s = 63;}

                         
                        input.seek(index192_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 192, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA226 extends DFA {

        public DFA226(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 226;
            this.eot = dfa_121;
            this.eof = dfa_121;
            this.min = dfa_122;
            this.max = dfa_123;
            this.accept = dfa_124;
            this.special = dfa_125;
            this.transition = dfa_126;
        }
        public String getDescription() {
            return "10845:1: ( ( ( ( ( ( ruleLetIdentifierRef ) ) ( ( In ) ) ( ( norm3_Expression ) ) RightParenthesis ) )=> ( ( (lv_initExpr_3_0= ruleLetIdentifierRef ) ) ( (lv_forIn_4_0= In ) ) ( (lv_expression_5_0= norm3_Expression ) ) otherlv_6= RightParenthesis ) ) | ( ( ( ( ( Var | Const | Let )=> (lv_varStmtKeyword_7_0= ruleVariableStatementKeyword ) ) ( ( ( ( ( ( norm2_BindingIdentifierAsVariableDeclaration ) ) ( ( ( In ) ) | ( ( Of ) ) ) ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )? ) )=> ( ( (lv_varDeclsOrBindings_8_0= norm2_BindingIdentifierAsVariableDeclaration ) ) ( ( (lv_forIn_9_0= In ) ) | ( (lv_forOf_10_0= Of ) ) ) ( ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm3_AssignmentExpression ) )? ) ) | ( ( (lv_varDeclsOrBindings_12_0= norm6_VariableDeclarationOrBinding ) ) ( ( (otherlv_13= Comma ( (lv_varDeclsOrBindings_14_0= norm2_VariableDeclarationOrBinding ) ) )* otherlv_15= Semicolon ( (lv_expression_16_0= norm3_Expression ) )? otherlv_17= Semicolon ( (lv_updateExpr_18_0= norm3_Expression ) )? ) | ( ( (lv_forIn_19_0= In ) ) ( (lv_expression_20_0= norm3_Expression ) )? ) | ( ( (lv_forOf_21_0= Of ) ) ( (lv_expression_22_0= norm3_AssignmentExpression ) )? ) ) ) ) ) | ( ( (lv_initExpr_23_0= norm2_Expression ) ) ( (otherlv_24= Semicolon ( (lv_expression_25_0= norm3_Expression ) )? otherlv_26= Semicolon ( (lv_updateExpr_27_0= norm3_Expression ) )? ) | ( ( (lv_forIn_28_0= In ) ) ( (lv_expression_29_0= norm3_Expression ) )? ) | ( ( (lv_forOf_30_0= Of ) ) ( (lv_expression_31_0= norm3_AssignmentExpression ) )? ) ) ) | (otherlv_32= Semicolon ( (lv_expression_33_0= norm3_Expression ) )? otherlv_34= Semicolon ( (lv_updateExpr_35_0= norm3_Expression ) )? ) ) otherlv_36= RightParenthesis ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA226_1 = input.LA(1);

                         
                        int index226_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSParser()) ) {s = 66;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index226_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 226, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA225 extends DFA {

        public DFA225(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 225;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_127;
            this.max = dfa_128;
            this.accept = dfa_129;
            this.special = dfa_130;
            this.transition = dfa_131;
        }
        public String getDescription() {
            return "10920:7: ( ( ( ( Var | Const | Let )=> (lv_varStmtKeyword_7_0= ruleVariableStatementKeyword ) ) ( ( ( ( ( ( norm2_BindingIdentifierAsVariableDeclaration ) ) ( ( ( In ) ) | ( ( Of ) ) ) ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )? ) )=> ( ( (lv_varDeclsOrBindings_8_0= norm2_BindingIdentifierAsVariableDeclaration ) ) ( ( (lv_forIn_9_0= In ) ) | ( (lv_forOf_10_0= Of ) ) ) ( ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm3_AssignmentExpression ) )? ) ) | ( ( (lv_varDeclsOrBindings_12_0= norm6_VariableDeclarationOrBinding ) ) ( ( (otherlv_13= Comma ( (lv_varDeclsOrBindings_14_0= norm2_VariableDeclarationOrBinding ) ) )* otherlv_15= Semicolon ( (lv_expression_16_0= norm3_Expression ) )? otherlv_17= Semicolon ( (lv_updateExpr_18_0= norm3_Expression ) )? ) | ( ( (lv_forIn_19_0= In ) ) ( (lv_expression_20_0= norm3_Expression ) )? ) | ( ( (lv_forOf_21_0= Of ) ) ( (lv_expression_22_0= norm3_AssignmentExpression ) )? ) ) ) ) ) | ( ( (lv_initExpr_23_0= norm2_Expression ) ) ( (otherlv_24= Semicolon ( (lv_expression_25_0= norm3_Expression ) )? otherlv_26= Semicolon ( (lv_updateExpr_27_0= norm3_Expression ) )? ) | ( ( (lv_forIn_28_0= In ) ) ( (lv_expression_29_0= norm3_Expression ) )? ) | ( ( (lv_forOf_30_0= Of ) ) ( (lv_expression_31_0= norm3_AssignmentExpression ) )? ) ) ) | (otherlv_32= Semicolon ( (lv_expression_33_0= norm3_Expression ) )? otherlv_34= Semicolon ( (lv_updateExpr_35_0= norm3_Expression ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA225_0 = input.LA(1);

                         
                        int index225_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA225_0==Var) && (synpred116_InternalN4JSParser())) {s = 1;}

                        else if ( (LA225_0==Const) && (synpred116_InternalN4JSParser())) {s = 2;}

                        else if ( (LA225_0==Let) ) {s = 3;}

                        else if ( ((LA225_0>=Intersection && LA225_0<=Implements)||(LA225_0>=Promisify && LA225_0<=Abstract)||(LA225_0>=External && LA225_0<=Function)||(LA225_0>=Private && LA225_0<=Delete)||LA225_0==Public||LA225_0==Static||(LA225_0>=Target && LA225_0<=Await)||LA225_0==Class||(LA225_0>=False && LA225_0<=Super)||LA225_0==Union||(LA225_0>=Yield && LA225_0<=This)||(LA225_0>=From && LA225_0<=Void)||LA225_0==Get||(LA225_0>=New && LA225_0<=Set)||LA225_0==PlusSignPlusSign||LA225_0==HyphenMinusHyphenMinus||LA225_0==SolidusEqualsSign||LA225_0==As||LA225_0==Of||LA225_0==ExclamationMark||LA225_0==LeftParenthesis||(LA225_0>=Asterisk && LA225_0<=PlusSign)||LA225_0==HyphenMinus||LA225_0==Solidus||LA225_0==LessThanSign||(LA225_0>=CommercialAt && LA225_0<=LeftSquareBracket)||LA225_0==LeftCurlyBracket||LA225_0==Tilde||LA225_0==RULE_DOUBLE||(LA225_0>=RULE_HEX_INT && LA225_0<=RULE_LEGACY_OCTAL_INT)||LA225_0==RULE_SCIENTIFIC_INT||LA225_0==RULE_IDENTIFIER||LA225_0==RULE_STRING||(LA225_0>=RULE_TEMPLATE_HEAD && LA225_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA225_0==RULE_INT) ) {s = 4;}

                        else if ( (LA225_0==Semicolon) ) {s = 65;}

                         
                        input.seek(index225_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA225_3 = input.LA(1);

                         
                        int index225_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred116_InternalN4JSParser()) ) {s = 2;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index225_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 225, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_143s = "\37\uffff";
    static final String dfa_144s = "\1\4\32\125\1\uffff\2\0\1\uffff";
    static final String dfa_145s = "\1\176\32\147\1\uffff\2\0\1\uffff";
    static final String dfa_146s = "\33\uffff\1\2\2\uffff\1\1";
    static final String dfa_147s = "\34\uffff\1\1\1\0\1\uffff}>";
    static final String[] dfa_148s = {
            "\1\20\1\13\1\25\1\uffff\1\22\1\26\1\30\1\7\2\uffff\1\6\4\uffff\1\27\1\5\3\uffff\1\31\1\uffff\1\10\1\uffff\1\15\1\uffff\1\24\1\23\7\uffff\1\17\2\uffff\1\21\3\uffff\1\12\3\uffff\1\16\7\uffff\1\2\1\4\1\uffff\1\32\1\3\23\uffff\1\11\3\uffff\1\14\23\uffff\2\33\2\uffff\1\33\17\uffff\1\1",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_143 = DFA.unpackEncodedString(dfa_143s);
    static final char[] dfa_144 = DFA.unpackEncodedStringToUnsignedChars(dfa_144s);
    static final char[] dfa_145 = DFA.unpackEncodedStringToUnsignedChars(dfa_145s);
    static final short[] dfa_146 = DFA.unpackEncodedString(dfa_146s);
    static final short[] dfa_147 = DFA.unpackEncodedString(dfa_147s);
    static final short[][] dfa_148 = unpackEncodedStringArray(dfa_148s);

    class DFA217 extends DFA {

        public DFA217(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 217;
            this.eot = dfa_143;
            this.eof = dfa_143;
            this.min = dfa_144;
            this.max = dfa_145;
            this.accept = dfa_146;
            this.special = dfa_147;
            this.transition = dfa_148;
        }
        public String getDescription() {
            return "10944:2: ( ( ( ( ( ( norm2_BindingIdentifierAsVariableDeclaration ) ) ( ( ( In ) ) | ( ( Of ) ) ) ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )? ) )=> ( ( (lv_varDeclsOrBindings_8_0= norm2_BindingIdentifierAsVariableDeclaration ) ) ( ( (lv_forIn_9_0= In ) ) | ( (lv_forOf_10_0= Of ) ) ) ( ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm3_AssignmentExpression ) )? ) ) | ( ( (lv_varDeclsOrBindings_12_0= norm6_VariableDeclarationOrBinding ) ) ( ( (otherlv_13= Comma ( (lv_varDeclsOrBindings_14_0= norm2_VariableDeclarationOrBinding ) ) )* otherlv_15= Semicolon ( (lv_expression_16_0= norm3_Expression ) )? otherlv_17= Semicolon ( (lv_updateExpr_18_0= norm3_Expression ) )? ) | ( ( (lv_forIn_19_0= In ) ) ( (lv_expression_20_0= norm3_Expression ) )? ) | ( ( (lv_forOf_21_0= Of ) ) ( (lv_expression_22_0= norm3_AssignmentExpression ) )? ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA217_29 = input.LA(1);

                         
                        int index217_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred117_InternalN4JSParser()) ) {s = 30;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index217_29);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA217_28 = input.LA(1);

                         
                        int index217_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred117_InternalN4JSParser()) ) {s = 30;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index217_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 217, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_149s = {
            "\1\25\1\20\1\30\1\uffff\1\27\1\31\1\33\1\14\2\uffff\1\13\1\62\3\uffff\1\32\1\12\1\66\2\uffff\1\34\1\uffff\1\15\1\uffff\1\22\1\70\1\4\1\1\2\uffff\1\63\1\uffff\1\53\1\41\1\uffff\1\24\1\uffff\1\36\1\26\3\uffff\1\17\1\55\1\40\1\52\1\23\1\67\6\uffff\1\7\1\11\1\37\1\35\1\10\7\uffff\1\71\1\uffff\1\72\1\uffff\1\57\7\uffff\1\16\3\uffff\1\21\2\uffff\1\76\2\uffff\1\3\1\77\1\5\1\73\1\uffff\1\74\1\uffff\1\56\2\uffff\1\42\3\uffff\1\2\1\60\2\uffff\1\61\2\uffff\1\75\3\uffff\1\43\1\uffff\1\50\1\45\1\46\1\47\1\uffff\1\51\1\uffff\1\6\2\uffff\1\54\11\uffff\1\65\1\64\10\uffff\1\44",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_149 = unpackEncodedStringArray(dfa_149s);

    class DFA210 extends DFA {

        public DFA210(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 210;
            this.eot = dfa_67;
            this.eof = dfa_67;
            this.min = dfa_138;
            this.max = dfa_139;
            this.accept = dfa_140;
            this.special = dfa_141;
            this.transition = dfa_149;
        }
        public String getDescription() {
            return "11177:3: ( ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm3_AssignmentExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA210_0 = input.LA(1);

                         
                        int index210_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA210_0>=4 && LA210_0<=149 && (s=T2S.M_16[LA210_0-(4)])>=0) && (synpred118_InternalN4JSParser())) { /* 62 cases */ }
                        else if ( (LA210_0==RightParenthesis) ) {s = 63;}

                         
                        input.seek(index210_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 210, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_150s = "\1\4\1\0\1\uffff\33\0\5\uffff";
    static final String dfa_151s = "\1\176\1\0\1\uffff\33\0\5\uffff";
    static final String dfa_152s = "\2\uffff\1\1\33\uffff\1\3\3\uffff\1\2";
    static final String dfa_153s = "\1\0\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\5\uffff}>";
    static final String[] dfa_154s = {
            "\1\23\1\16\1\30\1\uffff\1\25\1\31\1\33\1\12\2\uffff\1\11\4\uffff\1\32\1\10\3\uffff\1\34\1\uffff\1\13\1\uffff\1\20\1\uffff\1\27\1\26\7\uffff\1\22\1\uffff\1\4\1\24\3\uffff\1\15\1\uffff\1\36\1\uffff\1\21\1\36\6\uffff\1\5\1\7\1\uffff\1\35\1\6\23\uffff\1\14\3\uffff\1\17\22\uffff\1\36\1\uffff\1\2\2\uffff\1\1\2\uffff\1\36\14\uffff\1\3",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_150 = DFA.unpackEncodedStringToUnsignedChars(dfa_150s);
    static final char[] dfa_151 = DFA.unpackEncodedStringToUnsignedChars(dfa_151s);
    static final short[] dfa_152 = DFA.unpackEncodedString(dfa_152s);
    static final short[] dfa_153 = DFA.unpackEncodedString(dfa_153s);
    static final short[][] dfa_154 = unpackEncodedStringArray(dfa_154s);

    class DFA248 extends DFA {

        public DFA248(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 248;
            this.eot = dfa_84;
            this.eof = dfa_84;
            this.min = dfa_150;
            this.max = dfa_151;
            this.accept = dfa_152;
            this.special = dfa_153;
            this.transition = dfa_154;
        }
        public String getDescription() {
            return "13302:1: ( ( ( ( ruleBindingPattern ) )=> (lv_bindingPattern_0_0= ruleBindingPattern ) ) | ( ( ( ( ( ruleBindingIdentifier ) ) Colon ) )=> ( ( (lv_name_1_0= ruleBindingIdentifier ) ) ( ( Colon )=>this_ColonSepTypeRef_2= ruleColonSepTypeRef[$current] ) ) ) | ( (this_BogusTypeRefFragment_3= ruleBogusTypeRefFragment[$current] )? ( (lv_name_4_0= ruleBindingIdentifier ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA248_0 = input.LA(1);

                         
                        int index248_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA248_0==LeftCurlyBracket) ) {s = 1;}

                        else if ( (LA248_0==LeftSquareBracket) && (synpred125_InternalN4JSParser())) {s = 2;}

                        
                        else if ((LA248_0>=4 && LA248_0<=126 && (s=T2S.M_17[LA248_0-(4)])>=0)) { /* 27 cases */ }
                        else if ( (LA248_0==This_1||LA248_0==Void||LA248_0==QuestionMark||LA248_0==Tilde) ) {s = 30;}

                         
                        input.seek(index248_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA248_1 = input.LA(1);

                         
                        int index248_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalN4JSParser()) ) {s = 2;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA248_3 = input.LA(1);

                         
                        int index248_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA248_4 = input.LA(1);

                         
                        int index248_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA248_5 = input.LA(1);

                         
                        int index248_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA248_6 = input.LA(1);

                         
                        int index248_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA248_7 = input.LA(1);

                         
                        int index248_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA248_8 = input.LA(1);

                         
                        int index248_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA248_9 = input.LA(1);

                         
                        int index248_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA248_10 = input.LA(1);

                         
                        int index248_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA248_11 = input.LA(1);

                         
                        int index248_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA248_12 = input.LA(1);

                         
                        int index248_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA248_13 = input.LA(1);

                         
                        int index248_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA248_14 = input.LA(1);

                         
                        int index248_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA248_15 = input.LA(1);

                         
                        int index248_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA248_16 = input.LA(1);

                         
                        int index248_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA248_17 = input.LA(1);

                         
                        int index248_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA248_18 = input.LA(1);

                         
                        int index248_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA248_19 = input.LA(1);

                         
                        int index248_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA248_20 = input.LA(1);

                         
                        int index248_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA248_21 = input.LA(1);

                         
                        int index248_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA248_22 = input.LA(1);

                         
                        int index248_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA248_23 = input.LA(1);

                         
                        int index248_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA248_24 = input.LA(1);

                         
                        int index248_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA248_25 = input.LA(1);

                         
                        int index248_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA248_26 = input.LA(1);

                         
                        int index248_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA248_27 = input.LA(1);

                         
                        int index248_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA248_28 = input.LA(1);

                         
                        int index248_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA248_29 = input.LA(1);

                         
                        int index248_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalN4JSParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index248_29);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 248, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_155s = {
            "\1\12\1\10\1\13\1\uffff\1\4\3\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\5\1\uffff\1\13\1\3\7\uffff\1\11\1\uffff\1\13\1\2\3\uffff\1\13\1\uffff\1\1\1\uffff\1\7\1\1\6\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\22\uffff\1\1\4\uffff\1\1\2\uffff\1\1\14\uffff\1\6",
            "",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\2\uffff\1\1\3\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\1\13\20\uffff\1\1",
            "\1\13\20\uffff\1\1",
            "\1\13\20\uffff\1\1",
            "\1\13\20\uffff\1\1",
            ""
    };
    static final short[][] dfa_155 = unpackEncodedStringArray(dfa_155s);

    class DFA247 extends DFA {

        public DFA247(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 247;
            this.eot = dfa_39;
            this.eof = dfa_79;
            this.min = dfa_80;
            this.max = dfa_81;
            this.accept = dfa_82;
            this.special = dfa_44;
            this.transition = dfa_155;
        }
        public String getDescription() {
            return "13364:7: (this_BogusTypeRefFragment_3= ruleBogusTypeRefFragment[$current] )?";
        }
    }
    static final String dfa_156s = "\42\uffff";
    static final String dfa_157s = "\1\4\1\0\1\uffff\32\0\5\uffff";
    static final String dfa_158s = "\1\176\1\0\1\uffff\32\0\5\uffff";
    static final String dfa_159s = "\2\uffff\1\1\32\uffff\1\3\3\uffff\1\2";
    static final String dfa_160s = "\1\0\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\5\uffff}>";
    static final String[] dfa_161s = {
            "\1\22\1\15\1\27\1\uffff\1\24\1\30\1\32\1\11\2\uffff\1\10\4\uffff\1\31\1\7\3\uffff\1\33\1\uffff\1\12\1\uffff\1\17\1\uffff\1\26\1\25\7\uffff\1\21\2\uffff\1\23\3\uffff\1\14\1\uffff\1\35\1\uffff\1\20\1\35\6\uffff\1\4\1\6\1\uffff\1\34\1\5\23\uffff\1\13\3\uffff\1\16\22\uffff\1\35\1\uffff\1\2\2\uffff\1\1\2\uffff\1\35\14\uffff\1\3",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_156 = DFA.unpackEncodedString(dfa_156s);
    static final char[] dfa_157 = DFA.unpackEncodedStringToUnsignedChars(dfa_157s);
    static final char[] dfa_158 = DFA.unpackEncodedStringToUnsignedChars(dfa_158s);
    static final short[] dfa_159 = DFA.unpackEncodedString(dfa_159s);
    static final short[] dfa_160 = DFA.unpackEncodedString(dfa_160s);
    static final short[][] dfa_161 = unpackEncodedStringArray(dfa_161s);

    class DFA250 extends DFA {

        public DFA250(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 250;
            this.eot = dfa_156;
            this.eof = dfa_156;
            this.min = dfa_157;
            this.max = dfa_158;
            this.accept = dfa_159;
            this.special = dfa_160;
            this.transition = dfa_161;
        }
        public String getDescription() {
            return "13407:1: ( ( ( ( norm1_BindingPattern ) )=> (lv_bindingPattern_0_0= norm1_BindingPattern ) ) | ( ( ( ( ( norm1_BindingIdentifier ) ) Colon ) )=> ( ( (lv_name_1_0= norm1_BindingIdentifier ) ) ( ( Colon )=>this_ColonSepTypeRef_2= ruleColonSepTypeRef[$current] ) ) ) | ( (this_BogusTypeRefFragment_3= ruleBogusTypeRefFragment[$current] )? ( (lv_name_4_0= norm1_BindingIdentifier ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA250_0 = input.LA(1);

                         
                        int index250_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA250_0==LeftCurlyBracket) ) {s = 1;}

                        else if ( (LA250_0==LeftSquareBracket) && (synpred128_InternalN4JSParser())) {s = 2;}

                        
                        else if ((LA250_0>=4 && LA250_0<=126 && (s=T2S.M_18[LA250_0-(4)])>=0)) { /* 26 cases */ }
                        else if ( (LA250_0==This_1||LA250_0==Void||LA250_0==QuestionMark||LA250_0==Tilde) ) {s = 29;}

                         
                        input.seek(index250_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA250_1 = input.LA(1);

                         
                        int index250_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSParser()) ) {s = 2;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA250_3 = input.LA(1);

                         
                        int index250_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA250_4 = input.LA(1);

                         
                        int index250_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA250_5 = input.LA(1);

                         
                        int index250_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA250_6 = input.LA(1);

                         
                        int index250_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA250_7 = input.LA(1);

                         
                        int index250_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA250_8 = input.LA(1);

                         
                        int index250_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA250_9 = input.LA(1);

                         
                        int index250_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA250_10 = input.LA(1);

                         
                        int index250_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA250_11 = input.LA(1);

                         
                        int index250_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA250_12 = input.LA(1);

                         
                        int index250_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA250_13 = input.LA(1);

                         
                        int index250_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA250_14 = input.LA(1);

                         
                        int index250_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA250_15 = input.LA(1);

                         
                        int index250_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA250_16 = input.LA(1);

                         
                        int index250_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA250_17 = input.LA(1);

                         
                        int index250_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA250_18 = input.LA(1);

                         
                        int index250_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA250_19 = input.LA(1);

                         
                        int index250_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA250_20 = input.LA(1);

                         
                        int index250_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA250_21 = input.LA(1);

                         
                        int index250_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA250_22 = input.LA(1);

                         
                        int index250_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA250_23 = input.LA(1);

                         
                        int index250_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA250_24 = input.LA(1);

                         
                        int index250_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA250_25 = input.LA(1);

                         
                        int index250_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA250_26 = input.LA(1);

                         
                        int index250_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA250_27 = input.LA(1);

                         
                        int index250_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA250_28 = input.LA(1);

                         
                        int index250_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred129_InternalN4JSParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index250_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 250, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_162s = {
            "\1\12\1\10\1\13\1\uffff\1\4\3\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\5\1\uffff\1\13\1\3\7\uffff\1\11\2\uffff\1\2\3\uffff\1\13\1\uffff\1\1\1\uffff\1\7\1\1\6\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\22\uffff\1\1\4\uffff\1\1\2\uffff\1\1\14\uffff\1\6",
            "",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\2\uffff\1\1\3\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\1\13\20\uffff\1\1",
            "\1\13\20\uffff\1\1",
            "\1\13\20\uffff\1\1",
            "\1\13\20\uffff\1\1",
            ""
    };
    static final short[][] dfa_162 = unpackEncodedStringArray(dfa_162s);

    class DFA249 extends DFA {

        public DFA249(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 249;
            this.eot = dfa_39;
            this.eof = dfa_39;
            this.min = dfa_80;
            this.max = dfa_81;
            this.accept = dfa_82;
            this.special = dfa_44;
            this.transition = dfa_162;
        }
        public String getDescription() {
            return "13469:7: (this_BogusTypeRefFragment_3= ruleBogusTypeRefFragment[$current] )?";
        }
    }
    static final String dfa_163s = "\20\uffff";
    static final String dfa_164s = "\4\uffff\1\3\13\uffff";
    static final String dfa_165s = "\1\4\3\uffff\1\7\13\uffff";
    static final String dfa_166s = "\1\u0095\3\uffff\1\u0099\13\uffff";
    static final String dfa_167s = "\1\uffff\1\1\1\2\1\3\1\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\14\1\15\2\13";
    static final String dfa_168s = "\4\uffff\1\0\13\uffff}>";
    static final String[] dfa_169s = {
            "\3\3\1\uffff\4\3\2\uffff\1\3\1\13\3\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\4\1\3\2\uffff\1\14\1\uffff\1\6\1\2\1\uffff\1\3\1\uffff\2\3\3\uffff\1\3\1\6\1\1\1\6\1\3\7\uffff\2\3\1\uffff\2\3\13\uffff\1\6\7\uffff\1\3\3\uffff\1\3\5\uffff\1\11\6\uffff\1\6\2\uffff\1\5\3\uffff\1\12\1\7\2\uffff\1\10\6\uffff\1\6\1\uffff\4\6\1\uffff\1\6\1\uffff\1\3\2\uffff\1\6\11\uffff\2\15\10\uffff\1\6",
            "",
            "",
            "",
            "\1\3\7\uffff\1\17\45\uffff\1\3\1\uffff\2\3\10\uffff\15\3\1\uffff\1\3\1\uffff\2\3\2\uffff\4\3\1\uffff\20\3\1\uffff\6\3\32\uffff\2\3\4\uffff\1\16\5\uffff\1\3\1\uffff\1\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_163 = DFA.unpackEncodedString(dfa_163s);
    static final short[] dfa_164 = DFA.unpackEncodedString(dfa_164s);
    static final char[] dfa_165 = DFA.unpackEncodedStringToUnsignedChars(dfa_165s);
    static final char[] dfa_166 = DFA.unpackEncodedStringToUnsignedChars(dfa_166s);
    static final short[] dfa_167 = DFA.unpackEncodedString(dfa_167s);
    static final short[] dfa_168 = DFA.unpackEncodedString(dfa_168s);
    static final short[][] dfa_169 = unpackEncodedStringArray(dfa_169s);

    class DFA251 extends DFA {

        public DFA251(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 251;
            this.eot = dfa_163;
            this.eof = dfa_164;
            this.min = dfa_165;
            this.max = dfa_166;
            this.accept = dfa_167;
            this.special = dfa_168;
            this.transition = dfa_169;
        }
        public String getDescription() {
            return "13658:1: (this_ThisLiteral_0= ruleThisLiteral | this_SuperLiteral_1= ruleSuperLiteral | this_IdentifierRef_2= ruleIdentifierRef | this_ParameterizedCallExpression_3= ruleParameterizedCallExpression | this_Literal_4= ruleLiteral | this_ArrayLiteral_5= ruleArrayLiteral | this_ObjectLiteral_6= ruleObjectLiteral | this_ParenExpression_7= ruleParenExpression | this_AnnotatedExpression_8= ruleAnnotatedExpression | this_FunctionExpression_9= ruleFunctionExpression | ( ( ( ( ( Async ) ) ruleNoLineTerminator[null] Function ) )=>this_AsyncFunctionExpression_10= ruleAsyncFunctionExpression ) | this_N4ClassExpression_11= ruleN4ClassExpression | this_TemplateLiteral_12= ruleTemplateLiteral )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA251_4 = input.LA(1);

                         
                        int index251_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA251_4==RULE_NO_LINE_TERMINATOR) && (synpred133_InternalN4JSParser())) {s = 14;}

                        else if ( (LA251_4==Function) && (synpred133_InternalN4JSParser())) {s = 15;}

                        else if ( (LA251_4==EOF||LA251_4==Instanceof||LA251_4==ExclamationMarkEqualsSignEqualsSign||(LA251_4>=LessThanSignLessThanSignEqualsSign && LA251_4<=EqualsSignEqualsSignEqualsSign)||(LA251_4>=ExclamationMarkEqualsSign && LA251_4<=EqualsSignEqualsSign)||LA251_4==GreaterThanSignEqualsSign||(LA251_4>=CircumflexAccentEqualsSign && LA251_4<=As)||(LA251_4>=In && LA251_4<=VerticalLineVerticalLine)||(LA251_4>=PercentSign && LA251_4<=QuestionMark)||(LA251_4>=LeftSquareBracket && LA251_4<=RightCurlyBracket)||(LA251_4>=RULE_TEMPLATE_HEAD && LA251_4<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA251_4==RULE_ML_COMMENT||LA251_4==RULE_EOL) ) {s = 3;}

                         
                        input.seek(index251_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 251, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_170s = {
            "\3\3\1\uffff\4\3\2\uffff\1\3\1\13\3\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\4\1\3\2\uffff\1\14\1\uffff\1\6\1\2\1\uffff\1\3\2\uffff\1\3\3\uffff\1\3\1\6\1\1\1\6\1\3\7\uffff\2\3\1\uffff\2\3\13\uffff\1\6\7\uffff\1\3\3\uffff\1\3\5\uffff\1\11\6\uffff\1\6\2\uffff\1\5\3\uffff\1\12\1\7\2\uffff\1\10\6\uffff\1\6\1\uffff\4\6\1\uffff\1\6\1\uffff\1\3\2\uffff\1\6\11\uffff\2\15\10\uffff\1\6",
            "",
            "",
            "",
            "\1\3\7\uffff\1\17\45\uffff\1\3\1\uffff\2\3\10\uffff\15\3\1\uffff\1\3\1\uffff\2\3\2\uffff\4\3\1\uffff\20\3\1\uffff\6\3\32\uffff\2\3\4\uffff\1\16\5\uffff\1\3\1\uffff\1\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_170 = unpackEncodedStringArray(dfa_170s);

    class DFA252 extends DFA {

        public DFA252(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 252;
            this.eot = dfa_163;
            this.eof = dfa_164;
            this.min = dfa_165;
            this.max = dfa_166;
            this.accept = dfa_167;
            this.special = dfa_168;
            this.transition = dfa_170;
        }
        public String getDescription() {
            return "13809:1: (this_ThisLiteral_0= ruleThisLiteral | this_SuperLiteral_1= ruleSuperLiteral | this_IdentifierRef_2= norm1_IdentifierRef | this_ParameterizedCallExpression_3= norm1_ParameterizedCallExpression | this_Literal_4= ruleLiteral | this_ArrayLiteral_5= norm1_ArrayLiteral | this_ObjectLiteral_6= norm1_ObjectLiteral | this_ParenExpression_7= norm1_ParenExpression | this_AnnotatedExpression_8= norm1_AnnotatedExpression | this_FunctionExpression_9= ruleFunctionExpression | ( ( ( ( ( Async ) ) ruleNoLineTerminator[null] Function ) )=>this_AsyncFunctionExpression_10= ruleAsyncFunctionExpression ) | this_N4ClassExpression_11= norm1_N4ClassExpression | this_TemplateLiteral_12= norm1_TemplateLiteral )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA252_4 = input.LA(1);

                         
                        int index252_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA252_4==EOF||LA252_4==Instanceof||LA252_4==ExclamationMarkEqualsSignEqualsSign||(LA252_4>=LessThanSignLessThanSignEqualsSign && LA252_4<=EqualsSignEqualsSignEqualsSign)||(LA252_4>=ExclamationMarkEqualsSign && LA252_4<=EqualsSignEqualsSign)||LA252_4==GreaterThanSignEqualsSign||(LA252_4>=CircumflexAccentEqualsSign && LA252_4<=As)||(LA252_4>=In && LA252_4<=VerticalLineVerticalLine)||(LA252_4>=PercentSign && LA252_4<=QuestionMark)||(LA252_4>=LeftSquareBracket && LA252_4<=RightCurlyBracket)||(LA252_4>=RULE_TEMPLATE_HEAD && LA252_4<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA252_4==RULE_ML_COMMENT||LA252_4==RULE_EOL) ) {s = 3;}

                        else if ( (LA252_4==RULE_NO_LINE_TERMINATOR) && (synpred134_InternalN4JSParser())) {s = 14;}

                        else if ( (LA252_4==Function) && (synpred134_InternalN4JSParser())) {s = 15;}

                         
                        input.seek(index252_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 252, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_171s = "\5\uffff";
    static final String dfa_172s = "\1\140\1\4\1\uffff\1\4\1\uffff";
    static final String dfa_173s = "\1\154\1\u0095\1\uffff\1\u0095\1\uffff";
    static final String dfa_174s = "\2\uffff\1\2\1\uffff\1\1";
    static final String dfa_175s = "\5\uffff}>";
    static final String[] dfa_176s = {
            "\1\1\13\uffff\1\2",
            "\3\4\1\uffff\4\4\2\uffff\2\4\3\uffff\3\4\2\uffff\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\3\uffff\6\4\2\uffff\1\4\3\uffff\5\4\7\uffff\1\4\1\uffff\1\4\1\uffff\1\4\7\uffff\1\4\3\uffff\1\4\2\uffff\1\4\2\uffff\1\4\1\uffff\2\4\1\3\1\4\1\uffff\1\4\2\uffff\1\4\3\uffff\2\4\1\2\1\uffff\1\4\2\uffff\1\4\3\uffff\1\4\1\uffff\4\4\1\uffff\1\4\1\uffff\1\4\2\uffff\1\4\11\uffff\2\4\10\uffff\1\4",
            "",
            "\3\4\1\uffff\4\4\2\uffff\2\4\3\uffff\3\4\2\uffff\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\3\uffff\6\4\2\uffff\1\4\3\uffff\5\4\7\uffff\1\4\1\uffff\1\4\1\uffff\1\4\7\uffff\1\4\3\uffff\1\4\2\uffff\1\4\2\uffff\1\4\1\uffff\2\4\1\3\1\4\1\uffff\1\4\2\uffff\1\4\3\uffff\2\4\1\2\1\uffff\1\4\2\uffff\1\4\3\uffff\1\4\1\uffff\4\4\1\uffff\1\4\1\uffff\1\4\2\uffff\1\4\11\uffff\2\4\10\uffff\1\4",
            ""
    };

    static final short[] dfa_171 = DFA.unpackEncodedString(dfa_171s);
    static final char[] dfa_172 = DFA.unpackEncodedStringToUnsignedChars(dfa_172s);
    static final char[] dfa_173 = DFA.unpackEncodedStringToUnsignedChars(dfa_173s);
    static final short[] dfa_174 = DFA.unpackEncodedString(dfa_174s);
    static final short[] dfa_175 = DFA.unpackEncodedString(dfa_175s);
    static final short[][] dfa_176 = unpackEncodedStringArray(dfa_176s);

    class DFA255 extends DFA {

        public DFA255(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 255;
            this.eot = dfa_171;
            this.eof = dfa_171;
            this.min = dfa_172;
            this.max = dfa_173;
            this.accept = dfa_174;
            this.special = dfa_175;
            this.transition = dfa_176;
        }
        public String getDescription() {
            return "()* loopback of 14235:2: (otherlv_4= Comma ( (lv_elements_5_0= ruleArrayPadding ) )* ( (lv_elements_6_0= ruleArrayElement ) ) )*";
        }
    }

    class DFA261 extends DFA {

        public DFA261(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 261;
            this.eot = dfa_171;
            this.eof = dfa_171;
            this.min = dfa_172;
            this.max = dfa_173;
            this.accept = dfa_174;
            this.special = dfa_175;
            this.transition = dfa_176;
        }
        public String getDescription() {
            return "()* loopback of 14375:2: (otherlv_4= Comma ( (lv_elements_5_0= ruleArrayPadding ) )* ( (lv_elements_6_0= norm1_ArrayElement ) ) )*";
        }
    }
    static final String dfa_177s = "\1\4\1\uffff\111\0\6\uffff";
    static final String dfa_178s = "\1\u0095\1\uffff\111\0\6\uffff";
    static final String dfa_179s = "\1\uffff\1\1\111\uffff\2\5\1\6\1\2\1\3\1\4";
    static final String dfa_180s = "\1\0\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\6\uffff}>";
    static final String[] dfa_181s = {
            "\1\16\1\13\1\76\1\43\1\5\1\77\1\101\1\70\1\25\1\26\1\67\1\37\1\27\1\34\1\35\1\100\1\66\1\30\1\33\1\41\1\102\1\45\1\71\1\47\1\6\1\52\1\75\1\4\1\20\1\22\1\23\1\24\1\61\1\46\1\50\1\15\1\54\1\56\1\3\1\21\1\32\1\62\1\73\1\57\1\11\1\60\1\12\1\2\1\55\4\uffff\1\36\1\63\1\65\1\44\1\103\1\64\1\51\1\53\21\uffff\1\72\1\31\1\40\1\42\1\74\5\uffff\1\115\1\uffff\1\114\7\uffff\1\113\2\uffff\1\17\1\1\1\112\2\uffff\1\14\2\uffff\1\10\3\uffff\1\105\1\uffff\1\110\1\uffff\1\107\2\uffff\1\111\1\uffff\1\7\2\uffff\1\104\23\uffff\1\106",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_177 = DFA.unpackEncodedStringToUnsignedChars(dfa_177s);
    static final char[] dfa_178 = DFA.unpackEncodedStringToUnsignedChars(dfa_178s);
    static final short[] dfa_179 = DFA.unpackEncodedString(dfa_179s);
    static final short[] dfa_180 = DFA.unpackEncodedString(dfa_180s);
    static final short[][] dfa_181 = unpackEncodedStringArray(dfa_181s);

    class DFA273 extends DFA {

        public DFA273(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 273;
            this.eot = dfa_91;
            this.eof = dfa_91;
            this.min = dfa_177;
            this.max = dfa_178;
            this.accept = dfa_179;
            this.special = dfa_180;
            this.transition = dfa_181;
        }
        public String getDescription() {
            return "14780:1: (this_AnnotatedPropertyAssignment_0= ruleAnnotatedPropertyAssignment | ( ( ( () ( ( ruleTypeRefWithModifiers ) )? ( ( ruleLiteralOrComputedPropertyName ) ) Colon ) )=>this_PropertyNameValuePair_1= rulePropertyNameValuePair ) | ( ( ( () ruleGetterHeader[null] ) )=>this_PropertyGetterDeclaration_2= rulePropertyGetterDeclaration ) | ( ( ( () Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=>this_PropertySetterDeclaration_3= rulePropertySetterDeclaration ) | ( ( ( () ( ruleTypeVariables[null] )? ( ( ruleTypeRefWithModifiers ) )? ( ( ( ( Asterisk ) ) ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=>this_PropertyMethodDeclaration_4= rulePropertyMethodDeclaration ) | this_PropertyNameValuePairSingleName_5= rulePropertyNameValuePairSingleName )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA273_0 = input.LA(1);

                         
                        int index273_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA273_0>=4 && LA273_0<=149 && (s=T2S.M_19[LA273_0-(4)])>=0)) { /* 74 cases */ }
                        else if ( (LA273_0==LessThanSign) && (synpred138_InternalN4JSParser())) {s = 75;}

                        else if ( (LA273_0==Asterisk) && (synpred138_InternalN4JSParser())) {s = 76;}

                        else if ( (LA273_0==LeftParenthesis) ) {s = 77;}

                         
                        input.seek(index273_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA273_2 = input.LA(1);

                         
                        int index273_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA273_3 = input.LA(1);

                         
                        int index273_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA273_4 = input.LA(1);

                         
                        int index273_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA273_5 = input.LA(1);

                         
                        int index273_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA273_6 = input.LA(1);

                         
                        int index273_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA273_7 = input.LA(1);

                         
                        int index273_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA273_8 = input.LA(1);

                         
                        int index273_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA273_9 = input.LA(1);

                         
                        int index273_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA273_10 = input.LA(1);

                         
                        int index273_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA273_11 = input.LA(1);

                         
                        int index273_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA273_12 = input.LA(1);

                         
                        int index273_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA273_13 = input.LA(1);

                         
                        int index273_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA273_14 = input.LA(1);

                         
                        int index273_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA273_15 = input.LA(1);

                         
                        int index273_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA273_16 = input.LA(1);

                         
                        int index273_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA273_17 = input.LA(1);

                         
                        int index273_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA273_18 = input.LA(1);

                         
                        int index273_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA273_19 = input.LA(1);

                         
                        int index273_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA273_20 = input.LA(1);

                         
                        int index273_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA273_21 = input.LA(1);

                         
                        int index273_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA273_22 = input.LA(1);

                         
                        int index273_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA273_23 = input.LA(1);

                         
                        int index273_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA273_24 = input.LA(1);

                         
                        int index273_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA273_25 = input.LA(1);

                         
                        int index273_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA273_26 = input.LA(1);

                         
                        int index273_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA273_27 = input.LA(1);

                         
                        int index273_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA273_28 = input.LA(1);

                         
                        int index273_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA273_29 = input.LA(1);

                         
                        int index273_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA273_30 = input.LA(1);

                         
                        int index273_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA273_31 = input.LA(1);

                         
                        int index273_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA273_32 = input.LA(1);

                         
                        int index273_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA273_33 = input.LA(1);

                         
                        int index273_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA273_34 = input.LA(1);

                         
                        int index273_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA273_35 = input.LA(1);

                         
                        int index273_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_35);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA273_36 = input.LA(1);

                         
                        int index273_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_36);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA273_37 = input.LA(1);

                         
                        int index273_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_37);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA273_38 = input.LA(1);

                         
                        int index273_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_38);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA273_39 = input.LA(1);

                         
                        int index273_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_39);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA273_40 = input.LA(1);

                         
                        int index273_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_40);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA273_41 = input.LA(1);

                         
                        int index273_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_41);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA273_42 = input.LA(1);

                         
                        int index273_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_42);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA273_43 = input.LA(1);

                         
                        int index273_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_43);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA273_44 = input.LA(1);

                         
                        int index273_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_44);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA273_45 = input.LA(1);

                         
                        int index273_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_45);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA273_46 = input.LA(1);

                         
                        int index273_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_46);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA273_47 = input.LA(1);

                         
                        int index273_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_47);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA273_48 = input.LA(1);

                         
                        int index273_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_48);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA273_49 = input.LA(1);

                         
                        int index273_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_49);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA273_50 = input.LA(1);

                         
                        int index273_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_50);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA273_51 = input.LA(1);

                         
                        int index273_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_51);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA273_52 = input.LA(1);

                         
                        int index273_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred137_InternalN4JSParser()) ) {s = 80;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_52);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA273_53 = input.LA(1);

                         
                        int index273_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_53);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA273_54 = input.LA(1);

                         
                        int index273_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_54);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA273_55 = input.LA(1);

                         
                        int index273_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_55);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA273_56 = input.LA(1);

                         
                        int index273_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_56);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA273_57 = input.LA(1);

                         
                        int index273_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_57);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA273_58 = input.LA(1);

                         
                        int index273_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_58);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA273_59 = input.LA(1);

                         
                        int index273_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_59);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA273_60 = input.LA(1);

                         
                        int index273_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_60);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA273_61 = input.LA(1);

                         
                        int index273_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_61);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA273_62 = input.LA(1);

                         
                        int index273_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_62);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA273_63 = input.LA(1);

                         
                        int index273_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_63);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA273_64 = input.LA(1);

                         
                        int index273_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_64);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA273_65 = input.LA(1);

                         
                        int index273_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_65);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA273_66 = input.LA(1);

                         
                        int index273_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_66);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA273_67 = input.LA(1);

                         
                        int index273_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_67);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA273_68 = input.LA(1);

                         
                        int index273_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_68);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA273_69 = input.LA(1);

                         
                        int index273_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_69);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA273_70 = input.LA(1);

                         
                        int index273_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_70);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA273_71 = input.LA(1);

                         
                        int index273_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_71);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA273_72 = input.LA(1);

                         
                        int index273_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_72);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA273_73 = input.LA(1);

                         
                        int index273_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index273_73);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA273_74 = input.LA(1);

                         
                        int index273_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index273_74);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 273, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA274 extends DFA {

        public DFA274(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 274;
            this.eot = dfa_91;
            this.eof = dfa_91;
            this.min = dfa_177;
            this.max = dfa_178;
            this.accept = dfa_179;
            this.special = dfa_180;
            this.transition = dfa_181;
        }
        public String getDescription() {
            return "15087:1: (this_AnnotatedPropertyAssignment_0= norm1_AnnotatedPropertyAssignment | ( ( ( () ( ( ruleTypeRefWithModifiers ) )? ( ( norm1_LiteralOrComputedPropertyName ) ) Colon ) )=>this_PropertyNameValuePair_1= norm1_PropertyNameValuePair ) | ( ( ( () norm1_GetterHeader[null] ) )=>this_PropertyGetterDeclaration_2= norm1_PropertyGetterDeclaration ) | ( ( ( () Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=>this_PropertySetterDeclaration_3= norm1_PropertySetterDeclaration ) | ( ( ( () ( ruleTypeVariables[null] )? ( ( ruleTypeRefWithModifiers ) )? ( ( ( ( Asterisk ) ) ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=>this_PropertyMethodDeclaration_4= norm1_PropertyMethodDeclaration ) | this_PropertyNameValuePairSingleName_5= norm1_PropertyNameValuePairSingleName )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA274_0 = input.LA(1);

                         
                        int index274_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA274_0>=4 && LA274_0<=149 && (s=T2S.M_19[LA274_0-(4)])>=0)) { /* 74 cases */ }
                        else if ( (LA274_0==LessThanSign) && (synpred142_InternalN4JSParser())) {s = 75;}

                        else if ( (LA274_0==Asterisk) && (synpred142_InternalN4JSParser())) {s = 76;}

                        else if ( (LA274_0==LeftParenthesis) ) {s = 77;}

                         
                        input.seek(index274_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA274_2 = input.LA(1);

                         
                        int index274_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA274_3 = input.LA(1);

                         
                        int index274_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA274_4 = input.LA(1);

                         
                        int index274_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA274_5 = input.LA(1);

                         
                        int index274_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA274_6 = input.LA(1);

                         
                        int index274_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA274_7 = input.LA(1);

                         
                        int index274_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA274_8 = input.LA(1);

                         
                        int index274_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA274_9 = input.LA(1);

                         
                        int index274_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA274_10 = input.LA(1);

                         
                        int index274_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA274_11 = input.LA(1);

                         
                        int index274_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA274_12 = input.LA(1);

                         
                        int index274_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA274_13 = input.LA(1);

                         
                        int index274_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA274_14 = input.LA(1);

                         
                        int index274_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA274_15 = input.LA(1);

                         
                        int index274_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA274_16 = input.LA(1);

                         
                        int index274_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA274_17 = input.LA(1);

                         
                        int index274_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA274_18 = input.LA(1);

                         
                        int index274_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA274_19 = input.LA(1);

                         
                        int index274_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA274_20 = input.LA(1);

                         
                        int index274_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA274_21 = input.LA(1);

                         
                        int index274_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA274_22 = input.LA(1);

                         
                        int index274_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA274_23 = input.LA(1);

                         
                        int index274_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA274_24 = input.LA(1);

                         
                        int index274_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA274_25 = input.LA(1);

                         
                        int index274_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA274_26 = input.LA(1);

                         
                        int index274_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA274_27 = input.LA(1);

                         
                        int index274_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA274_28 = input.LA(1);

                         
                        int index274_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA274_29 = input.LA(1);

                         
                        int index274_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA274_30 = input.LA(1);

                         
                        int index274_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA274_31 = input.LA(1);

                         
                        int index274_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA274_32 = input.LA(1);

                         
                        int index274_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA274_33 = input.LA(1);

                         
                        int index274_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA274_34 = input.LA(1);

                         
                        int index274_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA274_35 = input.LA(1);

                         
                        int index274_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_35);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA274_36 = input.LA(1);

                         
                        int index274_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_36);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA274_37 = input.LA(1);

                         
                        int index274_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_37);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA274_38 = input.LA(1);

                         
                        int index274_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_38);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA274_39 = input.LA(1);

                         
                        int index274_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_39);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA274_40 = input.LA(1);

                         
                        int index274_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_40);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA274_41 = input.LA(1);

                         
                        int index274_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_41);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA274_42 = input.LA(1);

                         
                        int index274_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_42);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA274_43 = input.LA(1);

                         
                        int index274_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_43);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA274_44 = input.LA(1);

                         
                        int index274_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_44);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA274_45 = input.LA(1);

                         
                        int index274_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_45);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA274_46 = input.LA(1);

                         
                        int index274_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_46);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA274_47 = input.LA(1);

                         
                        int index274_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_47);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA274_48 = input.LA(1);

                         
                        int index274_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_48);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA274_49 = input.LA(1);

                         
                        int index274_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_49);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA274_50 = input.LA(1);

                         
                        int index274_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_50);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA274_51 = input.LA(1);

                         
                        int index274_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_51);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA274_52 = input.LA(1);

                         
                        int index274_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred141_InternalN4JSParser()) ) {s = 80;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_52);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA274_53 = input.LA(1);

                         
                        int index274_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_53);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA274_54 = input.LA(1);

                         
                        int index274_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_54);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA274_55 = input.LA(1);

                         
                        int index274_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_55);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA274_56 = input.LA(1);

                         
                        int index274_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_56);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA274_57 = input.LA(1);

                         
                        int index274_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_57);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA274_58 = input.LA(1);

                         
                        int index274_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_58);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA274_59 = input.LA(1);

                         
                        int index274_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_59);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA274_60 = input.LA(1);

                         
                        int index274_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_60);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA274_61 = input.LA(1);

                         
                        int index274_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_61);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA274_62 = input.LA(1);

                         
                        int index274_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_62);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA274_63 = input.LA(1);

                         
                        int index274_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_63);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA274_64 = input.LA(1);

                         
                        int index274_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_64);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA274_65 = input.LA(1);

                         
                        int index274_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_65);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA274_66 = input.LA(1);

                         
                        int index274_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_66);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA274_67 = input.LA(1);

                         
                        int index274_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_67);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA274_68 = input.LA(1);

                         
                        int index274_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_68);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA274_69 = input.LA(1);

                         
                        int index274_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_69);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA274_70 = input.LA(1);

                         
                        int index274_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_70);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA274_71 = input.LA(1);

                         
                        int index274_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_71);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA274_72 = input.LA(1);

                         
                        int index274_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_72);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA274_73 = input.LA(1);

                         
                        int index274_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                         
                        input.seek(index274_73);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA274_74 = input.LA(1);

                         
                        int index274_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index274_74);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 274, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_182s = "\120\uffff";
    static final String dfa_183s = "\1\4\111\0\6\uffff";
    static final String dfa_184s = "\1\u0095\111\0\6\uffff";
    static final String dfa_185s = "\112\uffff\2\4\1\5\1\1\1\2\1\3";
    static final String dfa_186s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\6\uffff}>";
    static final String[] dfa_187s = {
            "\1\15\1\12\1\75\1\42\1\4\1\76\1\100\1\67\1\24\1\25\1\66\1\36\1\26\1\33\1\34\1\77\1\65\1\27\1\32\1\40\1\101\1\44\1\70\1\46\1\5\1\51\1\74\1\3\1\17\1\21\1\22\1\23\1\60\1\45\1\47\1\14\1\53\1\55\1\2\1\20\1\31\1\61\1\72\1\56\1\10\1\57\1\11\1\1\1\54\4\uffff\1\35\1\62\1\64\1\43\1\102\1\63\1\50\1\52\21\uffff\1\71\1\30\1\37\1\41\1\73\5\uffff\1\114\1\uffff\1\113\7\uffff\1\112\2\uffff\1\16\1\uffff\1\111\2\uffff\1\13\2\uffff\1\7\3\uffff\1\104\1\uffff\1\107\1\uffff\1\106\2\uffff\1\110\1\uffff\1\6\2\uffff\1\103\23\uffff\1\105",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_182 = DFA.unpackEncodedString(dfa_182s);
    static final char[] dfa_183 = DFA.unpackEncodedStringToUnsignedChars(dfa_183s);
    static final char[] dfa_184 = DFA.unpackEncodedStringToUnsignedChars(dfa_184s);
    static final short[] dfa_185 = DFA.unpackEncodedString(dfa_185s);
    static final short[] dfa_186 = DFA.unpackEncodedString(dfa_186s);
    static final short[][] dfa_187 = unpackEncodedStringArray(dfa_187s);

    class DFA282 extends DFA {

        public DFA282(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 282;
            this.eot = dfa_182;
            this.eof = dfa_182;
            this.min = dfa_183;
            this.max = dfa_184;
            this.accept = dfa_185;
            this.special = dfa_186;
            this.transition = dfa_187;
        }
        public String getDescription() {
            return "15411:1: ( ( ( ( ( () ( ( ruleTypeRefWithModifiers ) )? ( ( ruleLiteralOrComputedPropertyName ) ) Colon ) )=> ( () ( (lv_declaredTypeRef_2_0= ruleTypeRefWithModifiers ) )? ( (lv_declaredName_3_0= ruleLiteralOrComputedPropertyName ) ) otherlv_4= Colon ) ) ( (lv_expression_5_0= norm1_AssignmentExpression ) ) ) | ( ( ( ( () ruleGetterHeader[null] ) )=> ( () this_GetterHeader_7= ruleGetterHeader[$current] ) ) ( ( ( () LeftCurlyBracket ) )=> (lv_body_8_0= ruleBlock ) ) ) | ( ( ( ( () Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=> ( () otherlv_10= Set ( ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT )=> (lv_declaredName_11_0= ruleLiteralOrComputedPropertyName ) ) ) ) otherlv_12= LeftParenthesis ( (lv_fpar_13_0= ruleFormalParameter ) ) otherlv_14= RightParenthesis ( ( ( () LeftCurlyBracket ) )=> (lv_body_15_0= ruleBlock ) ) ) | ( ( ( ( () ( ruleTypeVariables[null] )? ( ( ruleTypeRefWithModifiers ) )? ( ( ( ( Asterisk ) ) ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=> ( () (this_TypeVariables_17= ruleTypeVariables[$current] )? ( (lv_returnTypeRef_18_0= ruleTypeRefWithModifiers ) )? ( ( ( (lv_generator_19_0= Asterisk ) ) ( (lv_declaredName_20_0= ruleLiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsAndBody_21= norm1_MethodParamsAndBody[$current] ) ) | ( ( (lv_declaredName_22_0= ruleLiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsAndBody_23= ruleMethodParamsAndBody[$current] ) ) ) ) ) (otherlv_24= Semicolon )? ) | ( () ( (lv_declaredTypeRef_26_0= ruleTypeRef ) )? ( (lv_identifierRef_27_0= ruleIdentifierRef ) ) (otherlv_28= EqualsSign ( (lv_expression_29_0= norm1_AssignmentExpression ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA282_0 = input.LA(1);

                         
                        int index282_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA282_0>=4 && LA282_0<=149 && (s=T2S.M_21[LA282_0-(4)])>=0)) { /* 73 cases */ }
                        else if ( (LA282_0==LessThanSign) && (synpred149_InternalN4JSParser())) {s = 74;}

                        else if ( (LA282_0==Asterisk) && (synpred149_InternalN4JSParser())) {s = 75;}

                        else if ( (LA282_0==LeftParenthesis) ) {s = 76;}

                         
                        input.seek(index282_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA282_1 = input.LA(1);

                         
                        int index282_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA282_2 = input.LA(1);

                         
                        int index282_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA282_3 = input.LA(1);

                         
                        int index282_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA282_4 = input.LA(1);

                         
                        int index282_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA282_5 = input.LA(1);

                         
                        int index282_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA282_6 = input.LA(1);

                         
                        int index282_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA282_7 = input.LA(1);

                         
                        int index282_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA282_8 = input.LA(1);

                         
                        int index282_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA282_9 = input.LA(1);

                         
                        int index282_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA282_10 = input.LA(1);

                         
                        int index282_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA282_11 = input.LA(1);

                         
                        int index282_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA282_12 = input.LA(1);

                         
                        int index282_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA282_13 = input.LA(1);

                         
                        int index282_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA282_14 = input.LA(1);

                         
                        int index282_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA282_15 = input.LA(1);

                         
                        int index282_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA282_16 = input.LA(1);

                         
                        int index282_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA282_17 = input.LA(1);

                         
                        int index282_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA282_18 = input.LA(1);

                         
                        int index282_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA282_19 = input.LA(1);

                         
                        int index282_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA282_20 = input.LA(1);

                         
                        int index282_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA282_21 = input.LA(1);

                         
                        int index282_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA282_22 = input.LA(1);

                         
                        int index282_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_22);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA282_23 = input.LA(1);

                         
                        int index282_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_23);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA282_24 = input.LA(1);

                         
                        int index282_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_24);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA282_25 = input.LA(1);

                         
                        int index282_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_25);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA282_26 = input.LA(1);

                         
                        int index282_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_26);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA282_27 = input.LA(1);

                         
                        int index282_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_27);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA282_28 = input.LA(1);

                         
                        int index282_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_28);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA282_29 = input.LA(1);

                         
                        int index282_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_29);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA282_30 = input.LA(1);

                         
                        int index282_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_30);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA282_31 = input.LA(1);

                         
                        int index282_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_31);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA282_32 = input.LA(1);

                         
                        int index282_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_32);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA282_33 = input.LA(1);

                         
                        int index282_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_33);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA282_34 = input.LA(1);

                         
                        int index282_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_34);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA282_35 = input.LA(1);

                         
                        int index282_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_35);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA282_36 = input.LA(1);

                         
                        int index282_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_36);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA282_37 = input.LA(1);

                         
                        int index282_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_37);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA282_38 = input.LA(1);

                         
                        int index282_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_38);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA282_39 = input.LA(1);

                         
                        int index282_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_39);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA282_40 = input.LA(1);

                         
                        int index282_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_40);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA282_41 = input.LA(1);

                         
                        int index282_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_41);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA282_42 = input.LA(1);

                         
                        int index282_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_42);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA282_43 = input.LA(1);

                         
                        int index282_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_43);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA282_44 = input.LA(1);

                         
                        int index282_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_44);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA282_45 = input.LA(1);

                         
                        int index282_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_45);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA282_46 = input.LA(1);

                         
                        int index282_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_46);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA282_47 = input.LA(1);

                         
                        int index282_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_47);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA282_48 = input.LA(1);

                         
                        int index282_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_48);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA282_49 = input.LA(1);

                         
                        int index282_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_49);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA282_50 = input.LA(1);

                         
                        int index282_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_50);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA282_51 = input.LA(1);

                         
                        int index282_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred146_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_51);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA282_52 = input.LA(1);

                         
                        int index282_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_52);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA282_53 = input.LA(1);

                         
                        int index282_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_53);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA282_54 = input.LA(1);

                         
                        int index282_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_54);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA282_55 = input.LA(1);

                         
                        int index282_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_55);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA282_56 = input.LA(1);

                         
                        int index282_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_56);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA282_57 = input.LA(1);

                         
                        int index282_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_57);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA282_58 = input.LA(1);

                         
                        int index282_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_58);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA282_59 = input.LA(1);

                         
                        int index282_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_59);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA282_60 = input.LA(1);

                         
                        int index282_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_60);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA282_61 = input.LA(1);

                         
                        int index282_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_61);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA282_62 = input.LA(1);

                         
                        int index282_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_62);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA282_63 = input.LA(1);

                         
                        int index282_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_63);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA282_64 = input.LA(1);

                         
                        int index282_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_64);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA282_65 = input.LA(1);

                         
                        int index282_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_65);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA282_66 = input.LA(1);

                         
                        int index282_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_66);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA282_67 = input.LA(1);

                         
                        int index282_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_67);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA282_68 = input.LA(1);

                         
                        int index282_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_68);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA282_69 = input.LA(1);

                         
                        int index282_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_69);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA282_70 = input.LA(1);

                         
                        int index282_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_70);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA282_71 = input.LA(1);

                         
                        int index282_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_71);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA282_72 = input.LA(1);

                         
                        int index282_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index282_72);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA282_73 = input.LA(1);

                         
                        int index282_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index282_73);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 282, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_188s = "\7\4\1\uffff\1\4\4\144\1\uffff";
    static final String dfa_189s = "\7\u0095\1\uffff\1\u0095\4\156\1\uffff";
    static final String dfa_190s = "\7\uffff\1\1\5\uffff\1\2";
    static final String[] dfa_191s = {
            "\1\14\1\12\2\15\1\4\23\15\1\5\2\15\1\3\7\15\1\13\2\15\1\2\5\15\1\10\1\15\1\11\1\1\1\15\4\uffff\10\15\21\uffff\5\15\22\uffff\1\7\1\uffff\1\15\2\uffff\1\7\2\uffff\1\7\3\uffff\1\15\1\uffff\1\15\1\uffff\1\15\2\uffff\1\15\1\uffff\1\6\2\uffff\1\15\23\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\1\15\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\1\15\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\1\15\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\1\15\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\1\15\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\2\uffff\1\7\1\uffff\1\15\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\1\15\11\uffff\1\7",
            "\1\15\11\uffff\1\7",
            "\1\15\11\uffff\1\7",
            "\1\15\11\uffff\1\7",
            ""
    };
    static final char[] dfa_188 = DFA.unpackEncodedStringToUnsignedChars(dfa_188s);
    static final char[] dfa_189 = DFA.unpackEncodedStringToUnsignedChars(dfa_189s);
    static final short[] dfa_190 = DFA.unpackEncodedString(dfa_190s);
    static final short[][] dfa_191 = unpackEncodedStringArray(dfa_191s);

    class DFA275 extends DFA {

        public DFA275(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 275;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_188;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_191;
        }
        public String getDescription() {
            return "15428:2: ( (lv_declaredTypeRef_2_0= ruleTypeRefWithModifiers ) )?";
        }
    }
    static final String dfa_192s = "\7\4\1\uffff\1\4\4\134\1\uffff";
    static final String[] dfa_193s = {
            "\1\14\1\12\2\15\1\4\23\15\1\5\2\15\1\3\7\15\1\13\2\15\1\2\5\15\1\10\1\15\1\11\1\1\1\15\4\uffff\10\15\21\uffff\5\15\7\uffff\1\15\12\uffff\1\7\1\uffff\1\15\2\uffff\1\7\2\uffff\1\7\3\uffff\1\15\1\uffff\1\15\1\uffff\1\15\2\uffff\1\15\1\uffff\1\6\2\uffff\1\15\23\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\6\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\6\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\6\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\6\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\6\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\2\uffff\1\7\3\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\11\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\1\15\21\uffff\1\7",
            "\1\15\21\uffff\1\7",
            "\1\15\21\uffff\1\7",
            "\1\15\21\uffff\1\7",
            ""
    };
    static final char[] dfa_192 = DFA.unpackEncodedStringToUnsignedChars(dfa_192s);
    static final short[][] dfa_193 = unpackEncodedStringArray(dfa_193s);

    class DFA277 extends DFA {

        public DFA277(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 277;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "15975:3: ( (lv_returnTypeRef_18_0= ruleTypeRefWithModifiers ) )?";
        }
    }
    static final String dfa_194s = "\1\4\1\uffff\5\4\4\140\1\uffff";
    static final String dfa_195s = "\1\176\1\uffff\5\176\4\160\1\uffff";
    static final String[] dfa_196s = {
            "\1\12\1\10\1\13\1\uffff\1\4\3\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\5\1\uffff\1\13\1\3\7\uffff\1\11\1\uffff\1\13\1\2\3\uffff\1\13\1\uffff\1\1\1\uffff\1\7\1\1\6\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\5\uffff\1\1\14\uffff\1\1\1\uffff\1\1\2\uffff\1\1\2\uffff\1\1\14\uffff\1\6",
            "",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\1\uffff\1\1\3\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            ""
    };
    static final char[] dfa_194 = DFA.unpackEncodedStringToUnsignedChars(dfa_194s);
    static final char[] dfa_195 = DFA.unpackEncodedStringToUnsignedChars(dfa_195s);
    static final short[][] dfa_196 = unpackEncodedStringArray(dfa_196s);

    class DFA280 extends DFA {

        public DFA280(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 280;
            this.eot = dfa_39;
            this.eof = dfa_79;
            this.min = dfa_194;
            this.max = dfa_195;
            this.accept = dfa_82;
            this.special = dfa_44;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "16086:2: ( (lv_declaredTypeRef_26_0= ruleTypeRef ) )?";
        }
    }

    class DFA290 extends DFA {

        public DFA290(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 290;
            this.eot = dfa_182;
            this.eof = dfa_182;
            this.min = dfa_183;
            this.max = dfa_184;
            this.accept = dfa_185;
            this.special = dfa_186;
            this.transition = dfa_187;
        }
        public String getDescription() {
            return "16167:1: ( ( ( ( ( () ( ( ruleTypeRefWithModifiers ) )? ( ( norm1_LiteralOrComputedPropertyName ) ) Colon ) )=> ( () ( (lv_declaredTypeRef_2_0= ruleTypeRefWithModifiers ) )? ( (lv_declaredName_3_0= norm1_LiteralOrComputedPropertyName ) ) otherlv_4= Colon ) ) ( (lv_expression_5_0= norm3_AssignmentExpression ) ) ) | ( ( ( ( () norm1_GetterHeader[null] ) )=> ( () this_GetterHeader_7= norm1_GetterHeader[$current] ) ) ( ( ( () LeftCurlyBracket ) )=> (lv_body_8_0= ruleBlock ) ) ) | ( ( ( ( () Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=> ( () otherlv_10= Set ( ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT )=> (lv_declaredName_11_0= norm1_LiteralOrComputedPropertyName ) ) ) ) otherlv_12= LeftParenthesis ( (lv_fpar_13_0= norm1_FormalParameter ) ) otherlv_14= RightParenthesis ( ( ( () LeftCurlyBracket ) )=> (lv_body_15_0= ruleBlock ) ) ) | ( ( ( ( () ( ruleTypeVariables[null] )? ( ( ruleTypeRefWithModifiers ) )? ( ( ( ( Asterisk ) ) ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=> ( () (this_TypeVariables_17= ruleTypeVariables[$current] )? ( (lv_returnTypeRef_18_0= ruleTypeRefWithModifiers ) )? ( ( ( (lv_generator_19_0= Asterisk ) ) ( (lv_declaredName_20_0= norm1_LiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsAndBody_21= norm1_MethodParamsAndBody[$current] ) ) | ( ( (lv_declaredName_22_0= norm1_LiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsAndBody_23= ruleMethodParamsAndBody[$current] ) ) ) ) ) (otherlv_24= Semicolon )? ) | ( () ( (lv_declaredTypeRef_26_0= ruleTypeRef ) )? ( (lv_identifierRef_27_0= norm1_IdentifierRef ) ) (otherlv_28= EqualsSign ( (lv_expression_29_0= norm3_AssignmentExpression ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA290_0 = input.LA(1);

                         
                        int index290_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA290_0>=4 && LA290_0<=149 && (s=T2S.M_21[LA290_0-(4)])>=0)) { /* 73 cases */ }
                        else if ( (LA290_0==LessThanSign) && (synpred158_InternalN4JSParser())) {s = 74;}

                        else if ( (LA290_0==Asterisk) && (synpred158_InternalN4JSParser())) {s = 75;}

                        else if ( (LA290_0==LeftParenthesis) ) {s = 76;}

                         
                        input.seek(index290_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA290_1 = input.LA(1);

                         
                        int index290_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA290_2 = input.LA(1);

                         
                        int index290_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA290_3 = input.LA(1);

                         
                        int index290_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA290_4 = input.LA(1);

                         
                        int index290_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA290_5 = input.LA(1);

                         
                        int index290_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA290_6 = input.LA(1);

                         
                        int index290_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA290_7 = input.LA(1);

                         
                        int index290_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA290_8 = input.LA(1);

                         
                        int index290_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA290_9 = input.LA(1);

                         
                        int index290_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA290_10 = input.LA(1);

                         
                        int index290_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA290_11 = input.LA(1);

                         
                        int index290_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA290_12 = input.LA(1);

                         
                        int index290_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA290_13 = input.LA(1);

                         
                        int index290_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA290_14 = input.LA(1);

                         
                        int index290_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA290_15 = input.LA(1);

                         
                        int index290_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA290_16 = input.LA(1);

                         
                        int index290_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA290_17 = input.LA(1);

                         
                        int index290_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA290_18 = input.LA(1);

                         
                        int index290_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA290_19 = input.LA(1);

                         
                        int index290_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA290_20 = input.LA(1);

                         
                        int index290_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA290_21 = input.LA(1);

                         
                        int index290_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA290_22 = input.LA(1);

                         
                        int index290_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_22);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA290_23 = input.LA(1);

                         
                        int index290_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_23);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA290_24 = input.LA(1);

                         
                        int index290_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_24);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA290_25 = input.LA(1);

                         
                        int index290_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_25);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA290_26 = input.LA(1);

                         
                        int index290_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_26);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA290_27 = input.LA(1);

                         
                        int index290_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_27);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA290_28 = input.LA(1);

                         
                        int index290_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_28);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA290_29 = input.LA(1);

                         
                        int index290_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_29);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA290_30 = input.LA(1);

                         
                        int index290_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_30);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA290_31 = input.LA(1);

                         
                        int index290_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_31);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA290_32 = input.LA(1);

                         
                        int index290_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_32);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA290_33 = input.LA(1);

                         
                        int index290_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_33);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA290_34 = input.LA(1);

                         
                        int index290_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_34);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA290_35 = input.LA(1);

                         
                        int index290_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_35);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA290_36 = input.LA(1);

                         
                        int index290_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_36);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA290_37 = input.LA(1);

                         
                        int index290_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_37);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA290_38 = input.LA(1);

                         
                        int index290_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_38);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA290_39 = input.LA(1);

                         
                        int index290_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_39);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA290_40 = input.LA(1);

                         
                        int index290_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_40);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA290_41 = input.LA(1);

                         
                        int index290_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_41);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA290_42 = input.LA(1);

                         
                        int index290_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_42);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA290_43 = input.LA(1);

                         
                        int index290_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_43);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA290_44 = input.LA(1);

                         
                        int index290_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_44);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA290_45 = input.LA(1);

                         
                        int index290_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_45);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA290_46 = input.LA(1);

                         
                        int index290_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_46);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA290_47 = input.LA(1);

                         
                        int index290_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_47);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA290_48 = input.LA(1);

                         
                        int index290_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_48);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA290_49 = input.LA(1);

                         
                        int index290_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_49);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA290_50 = input.LA(1);

                         
                        int index290_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_50);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA290_51 = input.LA(1);

                         
                        int index290_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred155_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_51);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA290_52 = input.LA(1);

                         
                        int index290_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_52);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA290_53 = input.LA(1);

                         
                        int index290_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_53);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA290_54 = input.LA(1);

                         
                        int index290_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_54);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA290_55 = input.LA(1);

                         
                        int index290_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_55);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA290_56 = input.LA(1);

                         
                        int index290_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_56);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA290_57 = input.LA(1);

                         
                        int index290_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_57);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA290_58 = input.LA(1);

                         
                        int index290_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_58);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA290_59 = input.LA(1);

                         
                        int index290_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_59);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA290_60 = input.LA(1);

                         
                        int index290_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_60);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA290_61 = input.LA(1);

                         
                        int index290_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_61);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA290_62 = input.LA(1);

                         
                        int index290_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_62);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA290_63 = input.LA(1);

                         
                        int index290_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_63);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA290_64 = input.LA(1);

                         
                        int index290_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_64);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA290_65 = input.LA(1);

                         
                        int index290_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_65);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA290_66 = input.LA(1);

                         
                        int index290_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_66);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA290_67 = input.LA(1);

                         
                        int index290_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_67);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA290_68 = input.LA(1);

                         
                        int index290_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_68);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA290_69 = input.LA(1);

                         
                        int index290_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_69);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA290_70 = input.LA(1);

                         
                        int index290_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_70);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA290_71 = input.LA(1);

                         
                        int index290_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_71);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA290_72 = input.LA(1);

                         
                        int index290_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                         
                        input.seek(index290_72);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA290_73 = input.LA(1);

                         
                        int index290_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_73);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 290, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA283 extends DFA {

        public DFA283(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 283;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_188;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_191;
        }
        public String getDescription() {
            return "16184:2: ( (lv_declaredTypeRef_2_0= ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA285 extends DFA {

        public DFA285(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 285;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "16731:3: ( (lv_returnTypeRef_18_0= ruleTypeRefWithModifiers ) )?";
        }
    }
    static final String[] dfa_197s = {
            "\1\12\1\10\1\13\1\uffff\1\4\3\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\5\1\uffff\1\13\1\3\7\uffff\1\11\2\uffff\1\2\3\uffff\1\13\1\uffff\1\1\1\uffff\1\7\1\1\6\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\5\uffff\1\1\14\uffff\1\1\1\uffff\1\1\2\uffff\1\1\2\uffff\1\1\14\uffff\1\6",
            "",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\1\uffff\1\1\3\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            ""
    };
    static final short[][] dfa_197 = unpackEncodedStringArray(dfa_197s);

    class DFA288 extends DFA {

        public DFA288(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 288;
            this.eot = dfa_39;
            this.eof = dfa_39;
            this.min = dfa_194;
            this.max = dfa_195;
            this.accept = dfa_82;
            this.special = dfa_44;
            this.transition = dfa_197;
        }
        public String getDescription() {
            return "16842:2: ( (lv_declaredTypeRef_26_0= ruleTypeRef ) )?";
        }
    }

    class DFA292 extends DFA {

        public DFA292(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 292;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "16965:3: ( (lv_returnTypeRef_2_0= ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA296 extends DFA {

        public DFA296(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 296;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "17125:3: ( (lv_returnTypeRef_2_0= ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA299 extends DFA {

        public DFA299(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 299;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_188;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_191;
        }
        public String getDescription() {
            return "17267:2: ( (lv_declaredTypeRef_1_0= ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA300 extends DFA {

        public DFA300(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 300;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_188;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_191;
        }
        public String getDescription() {
            return "17356:2: ( (lv_declaredTypeRef_1_0= ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA301 extends DFA {

        public DFA301(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 301;
            this.eot = dfa_39;
            this.eof = dfa_79;
            this.min = dfa_194;
            this.max = dfa_195;
            this.accept = dfa_82;
            this.special = dfa_44;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "17436:2: ( (lv_declaredTypeRef_0_0= ruleTypeRef ) )?";
        }
    }

    class DFA303 extends DFA {

        public DFA303(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 303;
            this.eot = dfa_39;
            this.eof = dfa_39;
            this.min = dfa_194;
            this.max = dfa_195;
            this.accept = dfa_82;
            this.special = dfa_44;
            this.transition = dfa_197;
        }
        public String getDescription() {
            return "17508:2: ( (lv_declaredTypeRef_0_0= ruleTypeRef ) )?";
        }
    }
    static final String dfa_198s = "\70\uffff";
    static final String dfa_199s = "\2\4\66\uffff";
    static final String dfa_200s = "\2\u0095\66\uffff";
    static final String dfa_201s = "\2\uffff\1\3\64\2\1\1";
    static final String dfa_202s = "\1\uffff\1\0\66\uffff}>";
    static final String[] dfa_203s = {
            "\3\2\1\uffff\4\2\2\uffff\2\2\3\uffff\2\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\2\2\3\uffff\5\2\7\uffff\2\2\1\1\2\2\13\uffff\1\2\7\uffff\1\2\3\uffff\1\2\5\uffff\1\2\6\uffff\1\2\2\uffff\1\2\3\uffff\2\2\2\uffff\1\2\6\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2",
            "\1\26\1\21\1\33\1\uffff\1\30\1\34\1\36\1\15\2\uffff\1\14\1\63\3\uffff\1\35\1\13\3\uffff\1\37\1\uffff\1\16\1\uffff\1\23\1\uffff\1\32\1\31\2\uffff\1\64\1\uffff\1\52\1\5\1\uffff\1\25\1\uffff\1\7\1\27\3\uffff\1\20\1\54\1\4\1\51\1\24\7\uffff\1\10\1\12\1\3\1\40\1\11\13\uffff\1\56\7\uffff\1\17\3\uffff\1\22\5\uffff\1\61\5\uffff\1\67\1\55\2\uffff\1\41\3\uffff\1\62\1\57\2\uffff\1\60\6\uffff\1\42\1\uffff\1\47\1\44\1\45\1\46\1\uffff\1\50\1\uffff\1\6\2\uffff\1\53\11\uffff\1\66\1\65\10\uffff\1\43",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_198 = DFA.unpackEncodedString(dfa_198s);
    static final char[] dfa_199 = DFA.unpackEncodedStringToUnsignedChars(dfa_199s);
    static final char[] dfa_200 = DFA.unpackEncodedStringToUnsignedChars(dfa_200s);
    static final short[] dfa_201 = DFA.unpackEncodedString(dfa_201s);
    static final short[] dfa_202 = DFA.unpackEncodedString(dfa_202s);
    static final short[][] dfa_203 = unpackEncodedStringArray(dfa_203s);

    class DFA321 extends DFA {

        public DFA321(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 321;
            this.eot = dfa_198;
            this.eof = dfa_198;
            this.min = dfa_199;
            this.max = dfa_200;
            this.accept = dfa_201;
            this.special = dfa_202;
            this.transition = dfa_203;
        }
        public String getDescription() {
            return "19252:1: ( ( ( ( ( () New FullStop ) )=> ( () otherlv_1= New otherlv_2= FullStop ) ) otherlv_3= Target ) | ( ( ( ( () New ) )=> ( () otherlv_5= New ) ) ( (lv_callee_6_0= ruleMemberExpression ) ) ( ( LessThanSign )=>this_TypeArguments_7= ruleTypeArguments[$current] )? ( ( ( ( LeftParenthesis ) )=> (lv_withArgs_8_0= LeftParenthesis ) ) (this_Arguments_9= ruleArguments[$current] )? otherlv_10= RightParenthesis ( ( () this_IndexedAccessExpressionTail_12= ruleIndexedAccessExpressionTail[$current] ) | ( () this_ParameterizedPropertyAccessExpressionTail_14= ruleParameterizedPropertyAccessExpressionTail[$current] ) | ( () ( (lv_template_16_0= ruleTemplateLiteral ) ) ) )* )? ) | (this_PrimaryExpression_17= rulePrimaryExpression ( ( () this_IndexedAccessExpressionTail_19= ruleIndexedAccessExpressionTail[$current] ) | ( () this_ParameterizedPropertyAccessExpressionTail_21= ruleParameterizedPropertyAccessExpressionTail[$current] ) | ( () ( (lv_template_23_0= ruleTemplateLiteral ) ) ) )* ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA321_1 = input.LA(1);

                         
                        int index321_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA321_1>=4 && LA321_1<=149 && (s=T2S.M_23[LA321_1-(4)])>=0) && (synpred182_InternalN4JSParser())) { /* 52 cases */ }
                        else if ( (LA321_1==FullStop) && (synpred181_InternalN4JSParser())) {s = 55;}

                         
                        input.seek(index321_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 321, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_204s = "\2\4\65\uffff";
    static final String dfa_205s = "\2\u0095\65\uffff";
    static final String dfa_206s = "\2\uffff\1\3\63\2\1\1";
    static final String dfa_207s = "\1\uffff\1\0\65\uffff}>";
    static final String[] dfa_208s = {
            "\3\2\1\uffff\4\2\2\uffff\2\2\3\uffff\2\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\2\uffff\1\2\3\uffff\5\2\7\uffff\2\2\1\1\2\2\13\uffff\1\2\7\uffff\1\2\3\uffff\1\2\5\uffff\1\2\6\uffff\1\2\2\uffff\1\2\3\uffff\2\2\2\uffff\1\2\6\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2",
            "\1\25\1\20\1\32\1\uffff\1\27\1\33\1\35\1\14\2\uffff\1\13\1\62\3\uffff\1\34\1\12\3\uffff\1\36\1\uffff\1\15\1\uffff\1\22\1\uffff\1\31\1\30\2\uffff\1\63\1\uffff\1\51\1\5\1\uffff\1\24\2\uffff\1\26\3\uffff\1\17\1\53\1\4\1\50\1\23\7\uffff\1\7\1\11\1\3\1\37\1\10\13\uffff\1\55\7\uffff\1\16\3\uffff\1\21\5\uffff\1\60\5\uffff\1\66\1\54\2\uffff\1\40\3\uffff\1\61\1\56\2\uffff\1\57\6\uffff\1\41\1\uffff\1\46\1\43\1\44\1\45\1\uffff\1\47\1\uffff\1\6\2\uffff\1\52\11\uffff\1\65\1\64\10\uffff\1\42",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_204 = DFA.unpackEncodedStringToUnsignedChars(dfa_204s);
    static final char[] dfa_205 = DFA.unpackEncodedStringToUnsignedChars(dfa_205s);
    static final short[] dfa_206 = DFA.unpackEncodedString(dfa_206s);
    static final short[] dfa_207 = DFA.unpackEncodedString(dfa_207s);
    static final short[][] dfa_208 = unpackEncodedStringArray(dfa_208s);

    class DFA327 extends DFA {

        public DFA327(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 327;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_204;
            this.max = dfa_205;
            this.accept = dfa_206;
            this.special = dfa_207;
            this.transition = dfa_208;
        }
        public String getDescription() {
            return "19512:1: ( ( ( ( ( () New FullStop ) )=> ( () otherlv_1= New otherlv_2= FullStop ) ) otherlv_3= Target ) | ( ( ( ( () New ) )=> ( () otherlv_5= New ) ) ( (lv_callee_6_0= norm1_MemberExpression ) ) ( ( LessThanSign )=>this_TypeArguments_7= ruleTypeArguments[$current] )? ( ( ( ( LeftParenthesis ) )=> (lv_withArgs_8_0= LeftParenthesis ) ) (this_Arguments_9= norm1_Arguments[$current] )? otherlv_10= RightParenthesis ( ( () this_IndexedAccessExpressionTail_12= norm1_IndexedAccessExpressionTail[$current] ) | ( () this_ParameterizedPropertyAccessExpressionTail_14= norm1_ParameterizedPropertyAccessExpressionTail[$current] ) | ( () ( (lv_template_16_0= norm1_TemplateLiteral ) ) ) )* )? ) | (this_PrimaryExpression_17= norm1_PrimaryExpression ( ( () this_IndexedAccessExpressionTail_19= norm1_IndexedAccessExpressionTail[$current] ) | ( () this_ParameterizedPropertyAccessExpressionTail_21= norm1_ParameterizedPropertyAccessExpressionTail[$current] ) | ( () ( (lv_template_23_0= norm1_TemplateLiteral ) ) ) )* ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA327_1 = input.LA(1);

                         
                        int index327_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA327_1>=4 && LA327_1<=149 && (s=T2S.M_24[LA327_1-(4)])>=0) && (synpred186_InternalN4JSParser())) { /* 51 cases */ }
                        else if ( (LA327_1==FullStop) && (synpred185_InternalN4JSParser())) {s = 54;}

                         
                        input.seek(index327_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 327, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_209s = "\1\1\102\uffff";
    static final String dfa_210s = "\1\7\1\uffff\1\4\1\uffff\1\4\76\uffff";
    static final String dfa_211s = "\1\u0099\1\uffff\1\u0095\1\uffff\1\u0095\76\uffff";
    static final String dfa_212s = "\1\uffff\1\2\1\uffff\1\1\1\uffff\76\1";
    static final String dfa_213s = "\1\0\3\uffff\1\1\76\uffff}>";
    static final String[] dfa_214s = {
            "\1\1\55\uffff\1\1\1\uffff\2\1\10\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\3\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\4\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\3\uffff\4\1\1\2\1\1\2\uffff\2\1\1\uffff\2\1\46\uffff\1\1\1\uffff\1\1",
            "",
            "\3\1\1\uffff\4\1\2\uffff\2\1\3\uffff\3\1\2\uffff\1\1\1\uffff\1\1\1\uffff\4\1\2\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\2\1\3\uffff\6\1\6\uffff\5\1\7\uffff\1\1\1\uffff\1\1\1\uffff\1\1\4\uffff\1\1\2\uffff\1\1\3\uffff\1\1\2\uffff\1\1\2\uffff\1\1\2\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\4\1\uffff\2\1\2\uffff\1\1\2\uffff\1\1\3\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\11\uffff\2\1\10\uffff\1\1",
            "",
            "\1\31\1\24\1\36\1\uffff\1\33\1\37\1\41\1\20\2\uffff\1\17\1\66\3\uffff\1\40\1\16\1\72\2\uffff\1\42\1\uffff\1\21\1\uffff\1\26\1\74\1\35\1\34\2\uffff\1\67\1\uffff\1\55\1\10\1\uffff\1\30\1\uffff\1\12\1\32\3\uffff\1\23\1\57\1\7\1\54\1\27\1\73\6\uffff\1\13\1\15\1\6\1\43\1\14\7\uffff\1\75\1\uffff\1\76\1\uffff\1\61\4\uffff\1\1\2\uffff\1\22\3\uffff\1\25\2\uffff\1\102\2\uffff\1\64\2\uffff\1\77\1\uffff\1\100\1\uffff\1\60\2\uffff\1\44\1\uffff\1\5\1\uffff\1\65\1\62\2\uffff\1\63\2\uffff\1\101\3\uffff\1\45\1\uffff\1\52\1\47\1\50\1\51\1\uffff\1\53\1\uffff\1\11\2\uffff\1\56\11\uffff\1\71\1\70\10\uffff\1\46",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_209 = DFA.unpackEncodedString(dfa_209s);
    static final char[] dfa_210 = DFA.unpackEncodedStringToUnsignedChars(dfa_210s);
    static final char[] dfa_211 = DFA.unpackEncodedStringToUnsignedChars(dfa_211s);
    static final short[] dfa_212 = DFA.unpackEncodedString(dfa_212s);
    static final short[] dfa_213 = DFA.unpackEncodedString(dfa_213s);
    static final short[][] dfa_214 = unpackEncodedStringArray(dfa_214s);

    class DFA340 extends DFA {

        public DFA340(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 340;
            this.eot = dfa_121;
            this.eof = dfa_209;
            this.min = dfa_210;
            this.max = dfa_211;
            this.accept = dfa_212;
            this.special = dfa_213;
            this.transition = dfa_214;
        }
        public String getDescription() {
            return "()* loopback of 20619:1: ( ( ( () ( ( ruleShiftOperator ) ) ( ( ruleAdditiveExpression ) ) ) )=> ( () ( (lv_op_2_0= ruleShiftOperator ) ) ( (lv_rhs_3_0= ruleAdditiveExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA340_0 = input.LA(1);

                         
                        int index340_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA340_0==EOF||LA340_0==Instanceof||LA340_0==ExclamationMarkEqualsSignEqualsSign||(LA340_0>=LessThanSignLessThanSignEqualsSign && LA340_0<=EqualsSignEqualsSignEqualsSign)||(LA340_0>=ExclamationMarkEqualsSign && LA340_0<=AsteriskEqualsSign)||LA340_0==PlusSignEqualsSign||(LA340_0>=HyphenMinusEqualsSign && LA340_0<=SolidusEqualsSign)||(LA340_0>=LessThanSignEqualsSign && LA340_0<=EqualsSignEqualsSign)||LA340_0==GreaterThanSignEqualsSign||LA340_0==CircumflexAccentEqualsSign||(LA340_0>=In && LA340_0<=VerticalLineVerticalLine)||LA340_0==Ampersand||LA340_0==RightParenthesis||LA340_0==Comma||(LA340_0>=Colon && LA340_0<=EqualsSign)||LA340_0==QuestionMark||(LA340_0>=RightSquareBracket && LA340_0<=CircumflexAccent)||(LA340_0>=VerticalLine && LA340_0<=RightCurlyBracket)||LA340_0==RULE_ML_COMMENT||LA340_0==RULE_EOL) ) {s = 1;}

                        else if ( (LA340_0==GreaterThanSign) ) {s = 2;}

                        else if ( (LA340_0==LessThanSignLessThanSign) && (synpred197_InternalN4JSParser())) {s = 3;}

                         
                        input.seek(index340_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA340_4 = input.LA(1);

                         
                        int index340_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA340_4==GreaterThanSignEqualsSign) ) {s = 1;}

                        
                        else if ((LA340_4>=4 && LA340_4<=149 && (s=T2S.M_25[LA340_4-(4)])>=0) && (synpred197_InternalN4JSParser())) { /* 63 cases */ }
                        input.seek(index340_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 340, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_215s = "\1\1\101\uffff";
    static final String dfa_216s = "\1\7\1\uffff\1\4\1\uffff\1\4\75\uffff";
    static final String dfa_217s = "\1\u0099\1\uffff\1\u0095\1\uffff\1\u0095\75\uffff";
    static final String dfa_218s = "\1\uffff\1\2\1\uffff\1\1\1\uffff\75\1";
    static final String dfa_219s = "\1\1\3\uffff\1\0\75\uffff}>";
    static final String[] dfa_220s = {
            "\1\1\55\uffff\1\1\1\uffff\2\1\10\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\3\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\4\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\3\uffff\4\1\1\2\1\1\2\uffff\2\1\1\uffff\2\1\46\uffff\1\1\1\uffff\1\1",
            "",
            "\3\1\1\uffff\4\1\2\uffff\2\1\3\uffff\3\1\2\uffff\1\1\1\uffff\1\1\1\uffff\4\1\2\uffff\1\1\1\uffff\2\1\1\uffff\1\1\2\uffff\1\1\3\uffff\6\1\6\uffff\5\1\7\uffff\1\1\1\uffff\1\1\1\uffff\1\1\4\uffff\1\1\2\uffff\1\1\3\uffff\1\1\2\uffff\1\1\2\uffff\1\1\2\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\4\1\uffff\2\1\2\uffff\1\1\2\uffff\1\1\3\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\11\uffff\2\1\10\uffff\1\1",
            "",
            "\1\30\1\23\1\35\1\uffff\1\32\1\36\1\40\1\17\2\uffff\1\16\1\65\3\uffff\1\37\1\15\1\71\2\uffff\1\41\1\uffff\1\20\1\uffff\1\25\1\73\1\34\1\33\2\uffff\1\66\1\uffff\1\54\1\10\1\uffff\1\27\2\uffff\1\31\3\uffff\1\22\1\56\1\7\1\53\1\26\1\72\6\uffff\1\12\1\14\1\6\1\42\1\13\7\uffff\1\74\1\uffff\1\75\1\uffff\1\60\4\uffff\1\1\2\uffff\1\21\3\uffff\1\24\2\uffff\1\101\2\uffff\1\63\2\uffff\1\76\1\uffff\1\77\1\uffff\1\57\2\uffff\1\43\1\uffff\1\5\1\uffff\1\64\1\61\2\uffff\1\62\2\uffff\1\100\3\uffff\1\44\1\uffff\1\51\1\46\1\47\1\50\1\uffff\1\52\1\uffff\1\11\2\uffff\1\55\11\uffff\1\70\1\67\10\uffff\1\45",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_215 = DFA.unpackEncodedString(dfa_215s);
    static final char[] dfa_216 = DFA.unpackEncodedStringToUnsignedChars(dfa_216s);
    static final char[] dfa_217 = DFA.unpackEncodedStringToUnsignedChars(dfa_217s);
    static final short[] dfa_218 = DFA.unpackEncodedString(dfa_218s);
    static final short[] dfa_219 = DFA.unpackEncodedString(dfa_219s);
    static final short[][] dfa_220 = unpackEncodedStringArray(dfa_220s);

    class DFA341 extends DFA {

        public DFA341(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 341;
            this.eot = dfa_19;
            this.eof = dfa_215;
            this.min = dfa_216;
            this.max = dfa_217;
            this.accept = dfa_218;
            this.special = dfa_219;
            this.transition = dfa_220;
        }
        public String getDescription() {
            return "()* loopback of 20692:1: ( ( ( () ( ( ruleShiftOperator ) ) ( ( norm1_AdditiveExpression ) ) ) )=> ( () ( (lv_op_2_0= ruleShiftOperator ) ) ( (lv_rhs_3_0= norm1_AdditiveExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA341_4 = input.LA(1);

                         
                        int index341_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA341_4==GreaterThanSignEqualsSign) ) {s = 1;}

                        
                        else if ((LA341_4>=4 && LA341_4<=149 && (s=T2S.M_26[LA341_4-(4)])>=0) && (synpred198_InternalN4JSParser())) { /* 62 cases */ }
                        input.seek(index341_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA341_0 = input.LA(1);

                         
                        int index341_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA341_0==EOF||LA341_0==Instanceof||LA341_0==ExclamationMarkEqualsSignEqualsSign||(LA341_0>=LessThanSignLessThanSignEqualsSign && LA341_0<=EqualsSignEqualsSignEqualsSign)||(LA341_0>=ExclamationMarkEqualsSign && LA341_0<=AsteriskEqualsSign)||LA341_0==PlusSignEqualsSign||(LA341_0>=HyphenMinusEqualsSign && LA341_0<=SolidusEqualsSign)||(LA341_0>=LessThanSignEqualsSign && LA341_0<=EqualsSignEqualsSign)||LA341_0==GreaterThanSignEqualsSign||LA341_0==CircumflexAccentEqualsSign||(LA341_0>=In && LA341_0<=VerticalLineVerticalLine)||LA341_0==Ampersand||LA341_0==RightParenthesis||LA341_0==Comma||(LA341_0>=Colon && LA341_0<=EqualsSign)||LA341_0==QuestionMark||(LA341_0>=RightSquareBracket && LA341_0<=CircumflexAccent)||(LA341_0>=VerticalLine && LA341_0<=RightCurlyBracket)||LA341_0==RULE_ML_COMMENT||LA341_0==RULE_EOL) ) {s = 1;}

                        else if ( (LA341_0==GreaterThanSign) ) {s = 2;}

                        else if ( (LA341_0==LessThanSignLessThanSign) && (synpred198_InternalN4JSParser())) {s = 3;}

                         
                        input.seek(index341_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 341, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_221s = "\104\uffff";
    static final String dfa_222s = "\1\1\103\uffff";
    static final String dfa_223s = "\1\7\1\uffff\1\4\101\uffff";
    static final String dfa_224s = "\1\157\1\uffff\1\u0095\101\uffff";
    static final String dfa_225s = "\1\uffff\1\2\1\uffff\101\1";
    static final String dfa_226s = "\1\0\1\uffff\1\1\101\uffff}>";
    static final String[] dfa_227s = {
            "\1\6\55\uffff\1\1\1\uffff\2\1\10\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\4\1\1\1\uffff\1\5\1\uffff\1\1\3\uffff\4\1\2\uffff\1\1\4\uffff\1\1\4\uffff\1\1\1\3\1\1\1\2\1\1\3\uffff\1\1\1\uffff\1\1",
            "",
            "\1\32\1\25\1\37\1\uffff\1\34\1\40\1\42\1\21\2\uffff\1\20\1\67\3\uffff\1\41\1\17\1\73\2\uffff\1\43\1\uffff\1\22\1\uffff\1\27\1\75\1\36\1\35\2\uffff\1\70\1\uffff\1\56\1\11\1\uffff\1\31\1\uffff\1\13\1\33\3\uffff\1\24\1\60\1\10\1\55\1\30\1\74\6\uffff\1\14\1\16\1\7\1\44\1\15\7\uffff\1\76\1\uffff\1\77\1\uffff\1\62\4\uffff\1\1\2\uffff\1\23\3\uffff\1\26\2\uffff\1\103\2\uffff\1\65\2\uffff\1\100\1\uffff\1\101\1\uffff\1\61\2\uffff\1\45\1\uffff\1\1\1\uffff\1\66\1\63\2\uffff\1\64\2\uffff\1\102\3\uffff\1\46\1\uffff\1\53\1\50\1\51\1\52\1\uffff\1\54\1\uffff\1\12\2\uffff\1\57\11\uffff\1\72\1\71\10\uffff\1\47",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_221 = DFA.unpackEncodedString(dfa_221s);
    static final short[] dfa_222 = DFA.unpackEncodedString(dfa_222s);
    static final char[] dfa_223 = DFA.unpackEncodedStringToUnsignedChars(dfa_223s);
    static final char[] dfa_224 = DFA.unpackEncodedStringToUnsignedChars(dfa_224s);
    static final short[] dfa_225 = DFA.unpackEncodedString(dfa_225s);
    static final short[] dfa_226 = DFA.unpackEncodedString(dfa_226s);
    static final short[][] dfa_227 = unpackEncodedStringArray(dfa_227s);

    class DFA344 extends DFA {

        public DFA344(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 344;
            this.eot = dfa_221;
            this.eof = dfa_222;
            this.min = dfa_223;
            this.max = dfa_224;
            this.accept = dfa_225;
            this.special = dfa_226;
            this.transition = dfa_227;
        }
        public String getDescription() {
            return "()* loopback of 20820:1: ( ( ( () ( ( ruleRelationalOperator ) ) ( New | This_1 | Super | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD ) ) )=> ( () ( (lv_op_2_0= ruleRelationalOperator ) ) ( ( New | This_1 | Super | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_rhs_3_0= ruleShiftExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA344_0 = input.LA(1);

                         
                        int index344_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA344_0==EOF||LA344_0==ExclamationMarkEqualsSignEqualsSign||(LA344_0>=LessThanSignLessThanSignEqualsSign && LA344_0<=EqualsSignEqualsSignEqualsSign)||(LA344_0>=ExclamationMarkEqualsSign && LA344_0<=AsteriskEqualsSign)||LA344_0==PlusSignEqualsSign||(LA344_0>=HyphenMinusEqualsSign && LA344_0<=SolidusEqualsSign)||LA344_0==EqualsSignEqualsSign||LA344_0==CircumflexAccentEqualsSign||(LA344_0>=In && LA344_0<=VerticalLineVerticalLine)||LA344_0==Ampersand||LA344_0==Comma||LA344_0==Semicolon||LA344_0==EqualsSign||LA344_0==QuestionMark||LA344_0==CircumflexAccent||LA344_0==VerticalLine) ) {s = 1;}

                        else if ( (LA344_0==GreaterThanSign) ) {s = 2;}

                        else if ( (LA344_0==LessThanSign) && (synpred199_InternalN4JSParser())) {s = 3;}

                        else if ( (LA344_0==LessThanSignEqualsSign) && (synpred199_InternalN4JSParser())) {s = 4;}

                        else if ( (LA344_0==GreaterThanSignEqualsSign) && (synpred199_InternalN4JSParser())) {s = 5;}

                        else if ( (LA344_0==Instanceof) && (synpred199_InternalN4JSParser())) {s = 6;}

                         
                        input.seek(index344_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA344_2 = input.LA(1);

                         
                        int index344_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA344_2>=4 && LA344_2<=149 && (s=T2S.M_27[LA344_2-(4)])>=0) && (synpred199_InternalN4JSParser())) { /* 61 cases */ }
                        else if ( (LA344_2==GreaterThanSignEqualsSign||LA344_2==GreaterThanSign) ) {s = 1;}

                         
                        input.seek(index344_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 344, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_228s = "\105\uffff";
    static final String dfa_229s = "\1\1\104\uffff";
    static final String dfa_230s = "\1\7\1\uffff\1\4\102\uffff";
    static final String dfa_231s = "\1\u0099\1\uffff\1\u0095\102\uffff";
    static final String dfa_232s = "\1\uffff\1\2\1\uffff\102\1";
    static final String dfa_233s = "\1\0\1\uffff\1\1\102\uffff}>";
    static final String[] dfa_234s = {
            "\1\6\55\uffff\1\1\1\uffff\2\1\10\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\4\1\1\1\uffff\1\5\1\uffff\1\1\3\uffff\1\7\1\uffff\2\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\3\uffff\2\1\1\3\1\1\1\2\1\1\2\uffff\2\1\1\uffff\2\1\46\uffff\1\1\1\uffff\1\1",
            "",
            "\1\33\1\26\1\40\1\uffff\1\35\1\41\1\43\1\22\2\uffff\1\21\1\70\3\uffff\1\42\1\20\1\74\2\uffff\1\44\1\uffff\1\23\1\uffff\1\30\1\76\1\37\1\36\2\uffff\1\71\1\uffff\1\57\1\12\1\uffff\1\32\1\uffff\1\14\1\34\3\uffff\1\25\1\61\1\11\1\56\1\31\1\75\6\uffff\1\15\1\17\1\10\1\45\1\16\7\uffff\1\77\1\uffff\1\100\1\uffff\1\63\4\uffff\1\1\2\uffff\1\24\3\uffff\1\27\2\uffff\1\104\2\uffff\1\66\2\uffff\1\101\1\uffff\1\102\1\uffff\1\62\2\uffff\1\46\1\uffff\1\1\1\uffff\1\67\1\64\2\uffff\1\65\2\uffff\1\103\3\uffff\1\47\1\uffff\1\54\1\51\1\52\1\53\1\uffff\1\55\1\uffff\1\13\2\uffff\1\60\11\uffff\1\73\1\72\10\uffff\1\50",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_228 = DFA.unpackEncodedString(dfa_228s);
    static final short[] dfa_229 = DFA.unpackEncodedString(dfa_229s);
    static final char[] dfa_230 = DFA.unpackEncodedStringToUnsignedChars(dfa_230s);
    static final char[] dfa_231 = DFA.unpackEncodedStringToUnsignedChars(dfa_231s);
    static final short[] dfa_232 = DFA.unpackEncodedString(dfa_232s);
    static final short[] dfa_233 = DFA.unpackEncodedString(dfa_233s);
    static final short[][] dfa_234 = unpackEncodedStringArray(dfa_234s);

    class DFA345 extends DFA {

        public DFA345(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 345;
            this.eot = dfa_228;
            this.eof = dfa_229;
            this.min = dfa_230;
            this.max = dfa_231;
            this.accept = dfa_232;
            this.special = dfa_233;
            this.transition = dfa_234;
        }
        public String getDescription() {
            return "()* loopback of 21149:1: ( ( ( () ( ( norm1_RelationalOperator ) ) ( New | This_1 | Super | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD ) ) )=> ( () ( (lv_op_2_0= norm1_RelationalOperator ) ) ( ( New | This_1 | Super | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_rhs_3_0= ruleShiftExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA345_0 = input.LA(1);

                         
                        int index345_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA345_0==EOF||LA345_0==ExclamationMarkEqualsSignEqualsSign||(LA345_0>=LessThanSignLessThanSignEqualsSign && LA345_0<=EqualsSignEqualsSignEqualsSign)||(LA345_0>=ExclamationMarkEqualsSign && LA345_0<=AsteriskEqualsSign)||LA345_0==PlusSignEqualsSign||(LA345_0>=HyphenMinusEqualsSign && LA345_0<=SolidusEqualsSign)||LA345_0==EqualsSignEqualsSign||LA345_0==CircumflexAccentEqualsSign||(LA345_0>=VerticalLineEqualsSign && LA345_0<=VerticalLineVerticalLine)||LA345_0==Ampersand||LA345_0==RightParenthesis||LA345_0==Comma||(LA345_0>=Colon && LA345_0<=Semicolon)||LA345_0==EqualsSign||LA345_0==QuestionMark||(LA345_0>=RightSquareBracket && LA345_0<=CircumflexAccent)||(LA345_0>=VerticalLine && LA345_0<=RightCurlyBracket)||LA345_0==RULE_ML_COMMENT||LA345_0==RULE_EOL) ) {s = 1;}

                        else if ( (LA345_0==GreaterThanSign) ) {s = 2;}

                        else if ( (LA345_0==LessThanSign) && (synpred201_InternalN4JSParser())) {s = 3;}

                        else if ( (LA345_0==LessThanSignEqualsSign) && (synpred201_InternalN4JSParser())) {s = 4;}

                        else if ( (LA345_0==GreaterThanSignEqualsSign) && (synpred201_InternalN4JSParser())) {s = 5;}

                        else if ( (LA345_0==Instanceof) && (synpred201_InternalN4JSParser())) {s = 6;}

                        else if ( (LA345_0==In) && (synpred201_InternalN4JSParser())) {s = 7;}

                         
                        input.seek(index345_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA345_2 = input.LA(1);

                         
                        int index345_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA345_2>=4 && LA345_2<=149 && (s=T2S.M_28[LA345_2-(4)])>=0) && (synpred201_InternalN4JSParser())) { /* 61 cases */ }
                        else if ( (LA345_2==GreaterThanSignEqualsSign||LA345_2==GreaterThanSign) ) {s = 1;}

                         
                        input.seek(index345_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 345, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_235s = "\1\7\1\uffff\1\4\100\uffff";
    static final String dfa_236s = "\1\157\1\uffff\1\u0095\100\uffff";
    static final String dfa_237s = "\1\uffff\1\2\1\uffff\100\1";
    static final String dfa_238s = "\1\1\1\uffff\1\0\100\uffff}>";
    static final String[] dfa_239s = {
            "\1\6\55\uffff\1\1\1\uffff\2\1\10\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\4\1\1\1\uffff\1\5\1\uffff\1\1\3\uffff\4\1\2\uffff\1\1\4\uffff\1\1\4\uffff\1\1\1\3\1\1\1\2\1\1\3\uffff\1\1\1\uffff\1\1",
            "",
            "\1\31\1\24\1\36\1\uffff\1\33\1\37\1\41\1\20\2\uffff\1\17\1\66\3\uffff\1\40\1\16\1\72\2\uffff\1\42\1\uffff\1\21\1\uffff\1\26\1\74\1\35\1\34\2\uffff\1\67\1\uffff\1\55\1\11\1\uffff\1\30\2\uffff\1\32\3\uffff\1\23\1\57\1\10\1\54\1\27\1\73\6\uffff\1\13\1\15\1\7\1\43\1\14\7\uffff\1\75\1\uffff\1\76\1\uffff\1\61\4\uffff\1\1\2\uffff\1\22\3\uffff\1\25\2\uffff\1\102\2\uffff\1\64\2\uffff\1\77\1\uffff\1\100\1\uffff\1\60\2\uffff\1\44\1\uffff\1\1\1\uffff\1\65\1\62\2\uffff\1\63\2\uffff\1\101\3\uffff\1\45\1\uffff\1\52\1\47\1\50\1\51\1\uffff\1\53\1\uffff\1\12\2\uffff\1\56\11\uffff\1\71\1\70\10\uffff\1\46",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_235 = DFA.unpackEncodedStringToUnsignedChars(dfa_235s);
    static final char[] dfa_236 = DFA.unpackEncodedStringToUnsignedChars(dfa_236s);
    static final short[] dfa_237 = DFA.unpackEncodedString(dfa_237s);
    static final short[] dfa_238 = DFA.unpackEncodedString(dfa_238s);
    static final short[][] dfa_239 = unpackEncodedStringArray(dfa_239s);

    class DFA346 extends DFA {

        public DFA346(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 346;
            this.eot = dfa_121;
            this.eof = dfa_209;
            this.min = dfa_235;
            this.max = dfa_236;
            this.accept = dfa_237;
            this.special = dfa_238;
            this.transition = dfa_239;
        }
        public String getDescription() {
            return "()* loopback of 21478:1: ( ( ( () ( ( ruleRelationalOperator ) ) ( New | This_1 | Super | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD ) ) )=> ( () ( (lv_op_2_0= ruleRelationalOperator ) ) ( ( New | This_1 | Super | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_rhs_3_0= norm1_ShiftExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA346_2 = input.LA(1);

                         
                        int index346_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA346_2==GreaterThanSignEqualsSign||LA346_2==GreaterThanSign) ) {s = 1;}

                        else if ( (LA346_2==New) && (synpred203_InternalN4JSParser())) {s = 7;}

                        else if ( (LA346_2==This_1) && (synpred203_InternalN4JSParser())) {s = 8;}

                        else if ( (LA346_2==Super) && (synpred203_InternalN4JSParser())) {s = 9;}

                        else if ( (LA346_2==RULE_IDENTIFIER) && (synpred203_InternalN4JSParser())) {s = 10;}

                        else if ( (LA346_2==Get) && (synpred203_InternalN4JSParser())) {s = 11;}

                        else if ( (LA346_2==Set) && (synpred203_InternalN4JSParser())) {s = 12;}

                        else if ( (LA346_2==Let) && (synpred203_InternalN4JSParser())) {s = 13;}

                        else if ( (LA346_2==Project) && (synpred203_InternalN4JSParser())) {s = 14;}

                        else if ( (LA346_2==External) && (synpred203_InternalN4JSParser())) {s = 15;}

                        else if ( (LA346_2==Abstract) && (synpred203_InternalN4JSParser())) {s = 16;}

                        else if ( (LA346_2==Static) && (synpred203_InternalN4JSParser())) {s = 17;}

                        else if ( (LA346_2==As) && (synpred203_InternalN4JSParser())) {s = 18;}

                        else if ( (LA346_2==From) && (synpred203_InternalN4JSParser())) {s = 19;}

                        else if ( (LA346_2==Constructor) && (synpred203_InternalN4JSParser())) {s = 20;}

                        else if ( (LA346_2==Of) && (synpred203_InternalN4JSParser())) {s = 21;}

                        else if ( (LA346_2==Target) && (synpred203_InternalN4JSParser())) {s = 22;}

                        else if ( (LA346_2==Type) && (synpred203_InternalN4JSParser())) {s = 23;}

                        else if ( (LA346_2==Union) && (synpred203_InternalN4JSParser())) {s = 24;}

                        else if ( (LA346_2==Intersection) && (synpred203_InternalN4JSParser())) {s = 25;}

                        else if ( (LA346_2==This) && (synpred203_InternalN4JSParser())) {s = 26;}

                        else if ( (LA346_2==Promisify) && (synpred203_InternalN4JSParser())) {s = 27;}

                        else if ( (LA346_2==Await) && (synpred203_InternalN4JSParser())) {s = 28;}

                        else if ( (LA346_2==Async) && (synpred203_InternalN4JSParser())) {s = 29;}

                        else if ( (LA346_2==Implements) && (synpred203_InternalN4JSParser())) {s = 30;}

                        else if ( (LA346_2==Interface) && (synpred203_InternalN4JSParser())) {s = 31;}

                        else if ( (LA346_2==Private) && (synpred203_InternalN4JSParser())) {s = 32;}

                        else if ( (LA346_2==Protected) && (synpred203_InternalN4JSParser())) {s = 33;}

                        else if ( (LA346_2==Public) && (synpred203_InternalN4JSParser())) {s = 34;}

                        else if ( (LA346_2==Out) && (synpred203_InternalN4JSParser())) {s = 35;}

                        else if ( (LA346_2==LessThanSign) && (synpred203_InternalN4JSParser())) {s = 36;}

                        else if ( (LA346_2==RULE_DOUBLE) && (synpred203_InternalN4JSParser())) {s = 37;}

                        else if ( (LA346_2==RULE_INT) && (synpred203_InternalN4JSParser())) {s = 38;}

                        else if ( (LA346_2==RULE_BINARY_INT) && (synpred203_InternalN4JSParser())) {s = 39;}

                        else if ( (LA346_2==RULE_OCTAL_INT) && (synpred203_InternalN4JSParser())) {s = 40;}

                        else if ( (LA346_2==RULE_LEGACY_OCTAL_INT) && (synpred203_InternalN4JSParser())) {s = 41;}

                        else if ( (LA346_2==RULE_HEX_INT) && (synpred203_InternalN4JSParser())) {s = 42;}

                        else if ( (LA346_2==RULE_SCIENTIFIC_INT) && (synpred203_InternalN4JSParser())) {s = 43;}

                        else if ( (LA346_2==True) && (synpred203_InternalN4JSParser())) {s = 44;}

                        else if ( (LA346_2==False) && (synpred203_InternalN4JSParser())) {s = 45;}

                        else if ( (LA346_2==RULE_STRING) && (synpred203_InternalN4JSParser())) {s = 46;}

                        else if ( (LA346_2==Null) && (synpred203_InternalN4JSParser())) {s = 47;}

                        else if ( (LA346_2==Solidus) && (synpred203_InternalN4JSParser())) {s = 48;}

                        else if ( (LA346_2==SolidusEqualsSign) && (synpred203_InternalN4JSParser())) {s = 49;}

                        else if ( (LA346_2==LeftSquareBracket) && (synpred203_InternalN4JSParser())) {s = 50;}

                        else if ( (LA346_2==LeftCurlyBracket) && (synpred203_InternalN4JSParser())) {s = 51;}

                        else if ( (LA346_2==LeftParenthesis) && (synpred203_InternalN4JSParser())) {s = 52;}

                        else if ( (LA346_2==CommercialAt) && (synpred203_InternalN4JSParser())) {s = 53;}

                        else if ( (LA346_2==Function) && (synpred203_InternalN4JSParser())) {s = 54;}

                        else if ( (LA346_2==Class) && (synpred203_InternalN4JSParser())) {s = 55;}

                        else if ( (LA346_2==RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) && (synpred203_InternalN4JSParser())) {s = 56;}

                        else if ( (LA346_2==RULE_TEMPLATE_HEAD) && (synpred203_InternalN4JSParser())) {s = 57;}

                        else if ( (LA346_2==Delete) && (synpred203_InternalN4JSParser())) {s = 58;}

                        else if ( (LA346_2==Void) && (synpred203_InternalN4JSParser())) {s = 59;}

                        else if ( (LA346_2==Typeof) && (synpred203_InternalN4JSParser())) {s = 60;}

                        else if ( (LA346_2==PlusSignPlusSign) && (synpred203_InternalN4JSParser())) {s = 61;}

                        else if ( (LA346_2==HyphenMinusHyphenMinus) && (synpred203_InternalN4JSParser())) {s = 62;}

                        else if ( (LA346_2==PlusSign) && (synpred203_InternalN4JSParser())) {s = 63;}

                        else if ( (LA346_2==HyphenMinus) && (synpred203_InternalN4JSParser())) {s = 64;}

                        else if ( (LA346_2==Tilde) && (synpred203_InternalN4JSParser())) {s = 65;}

                        else if ( (LA346_2==ExclamationMark) && (synpred203_InternalN4JSParser())) {s = 66;}

                         
                        input.seek(index346_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA346_0 = input.LA(1);

                         
                        int index346_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA346_0==EOF||LA346_0==ExclamationMarkEqualsSignEqualsSign||(LA346_0>=LessThanSignLessThanSignEqualsSign && LA346_0<=EqualsSignEqualsSignEqualsSign)||(LA346_0>=ExclamationMarkEqualsSign && LA346_0<=AsteriskEqualsSign)||LA346_0==PlusSignEqualsSign||(LA346_0>=HyphenMinusEqualsSign && LA346_0<=SolidusEqualsSign)||LA346_0==EqualsSignEqualsSign||LA346_0==CircumflexAccentEqualsSign||(LA346_0>=In && LA346_0<=VerticalLineVerticalLine)||LA346_0==Ampersand||LA346_0==Comma||LA346_0==Semicolon||LA346_0==EqualsSign||LA346_0==QuestionMark||LA346_0==CircumflexAccent||LA346_0==VerticalLine) ) {s = 1;}

                        else if ( (LA346_0==GreaterThanSign) ) {s = 2;}

                        else if ( (LA346_0==LessThanSign) && (synpred203_InternalN4JSParser())) {s = 3;}

                        else if ( (LA346_0==LessThanSignEqualsSign) && (synpred203_InternalN4JSParser())) {s = 4;}

                        else if ( (LA346_0==GreaterThanSignEqualsSign) && (synpred203_InternalN4JSParser())) {s = 5;}

                        else if ( (LA346_0==Instanceof) && (synpred203_InternalN4JSParser())) {s = 6;}

                         
                        input.seek(index346_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 346, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_240s = "\1\u0099\1\uffff\1\u0095\101\uffff";
    static final String dfa_241s = "\1\1\1\uffff\1\0\101\uffff}>";
    static final String[] dfa_242s = {
            "\1\6\55\uffff\1\1\1\uffff\2\1\10\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\4\1\1\1\uffff\1\5\1\uffff\1\1\3\uffff\1\7\1\uffff\2\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\3\uffff\2\1\1\3\1\1\1\2\1\1\2\uffff\2\1\1\uffff\2\1\46\uffff\1\1\1\uffff\1\1",
            "",
            "\1\32\1\25\1\37\1\uffff\1\34\1\40\1\42\1\21\2\uffff\1\20\1\67\3\uffff\1\41\1\17\1\73\2\uffff\1\43\1\uffff\1\22\1\uffff\1\27\1\75\1\36\1\35\2\uffff\1\70\1\uffff\1\56\1\12\1\uffff\1\31\2\uffff\1\33\3\uffff\1\24\1\60\1\11\1\55\1\30\1\74\6\uffff\1\14\1\16\1\10\1\44\1\15\7\uffff\1\76\1\uffff\1\77\1\uffff\1\62\4\uffff\1\1\2\uffff\1\23\3\uffff\1\26\2\uffff\1\103\2\uffff\1\65\2\uffff\1\100\1\uffff\1\101\1\uffff\1\61\2\uffff\1\45\1\uffff\1\1\1\uffff\1\66\1\63\2\uffff\1\64\2\uffff\1\102\3\uffff\1\46\1\uffff\1\53\1\50\1\51\1\52\1\uffff\1\54\1\uffff\1\13\2\uffff\1\57\11\uffff\1\72\1\71\10\uffff\1\47",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_240 = DFA.unpackEncodedStringToUnsignedChars(dfa_240s);
    static final short[] dfa_241 = DFA.unpackEncodedString(dfa_241s);
    static final short[][] dfa_242 = unpackEncodedStringArray(dfa_242s);

    class DFA347 extends DFA {

        public DFA347(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 347;
            this.eot = dfa_221;
            this.eof = dfa_222;
            this.min = dfa_223;
            this.max = dfa_240;
            this.accept = dfa_225;
            this.special = dfa_241;
            this.transition = dfa_242;
        }
        public String getDescription() {
            return "()* loopback of 21802:1: ( ( ( () ( ( norm1_RelationalOperator ) ) ( New | This_1 | Super | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD ) ) )=> ( () ( (lv_op_2_0= norm1_RelationalOperator ) ) ( ( New | This_1 | Super | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_rhs_3_0= norm1_ShiftExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA347_2 = input.LA(1);

                         
                        int index347_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA347_2==GreaterThanSignEqualsSign||LA347_2==GreaterThanSign) ) {s = 1;}

                        else if ( (LA347_2==New) && (synpred205_InternalN4JSParser())) {s = 8;}

                        else if ( (LA347_2==This_1) && (synpred205_InternalN4JSParser())) {s = 9;}

                        else if ( (LA347_2==Super) && (synpred205_InternalN4JSParser())) {s = 10;}

                        else if ( (LA347_2==RULE_IDENTIFIER) && (synpred205_InternalN4JSParser())) {s = 11;}

                        else if ( (LA347_2==Get) && (synpred205_InternalN4JSParser())) {s = 12;}

                        else if ( (LA347_2==Set) && (synpred205_InternalN4JSParser())) {s = 13;}

                        else if ( (LA347_2==Let) && (synpred205_InternalN4JSParser())) {s = 14;}

                        else if ( (LA347_2==Project) && (synpred205_InternalN4JSParser())) {s = 15;}

                        else if ( (LA347_2==External) && (synpred205_InternalN4JSParser())) {s = 16;}

                        else if ( (LA347_2==Abstract) && (synpred205_InternalN4JSParser())) {s = 17;}

                        else if ( (LA347_2==Static) && (synpred205_InternalN4JSParser())) {s = 18;}

                        else if ( (LA347_2==As) && (synpred205_InternalN4JSParser())) {s = 19;}

                        else if ( (LA347_2==From) && (synpred205_InternalN4JSParser())) {s = 20;}

                        else if ( (LA347_2==Constructor) && (synpred205_InternalN4JSParser())) {s = 21;}

                        else if ( (LA347_2==Of) && (synpred205_InternalN4JSParser())) {s = 22;}

                        else if ( (LA347_2==Target) && (synpred205_InternalN4JSParser())) {s = 23;}

                        else if ( (LA347_2==Type) && (synpred205_InternalN4JSParser())) {s = 24;}

                        else if ( (LA347_2==Union) && (synpred205_InternalN4JSParser())) {s = 25;}

                        else if ( (LA347_2==Intersection) && (synpred205_InternalN4JSParser())) {s = 26;}

                        else if ( (LA347_2==This) && (synpred205_InternalN4JSParser())) {s = 27;}

                        else if ( (LA347_2==Promisify) && (synpred205_InternalN4JSParser())) {s = 28;}

                        else if ( (LA347_2==Await) && (synpred205_InternalN4JSParser())) {s = 29;}

                        else if ( (LA347_2==Async) && (synpred205_InternalN4JSParser())) {s = 30;}

                        else if ( (LA347_2==Implements) && (synpred205_InternalN4JSParser())) {s = 31;}

                        else if ( (LA347_2==Interface) && (synpred205_InternalN4JSParser())) {s = 32;}

                        else if ( (LA347_2==Private) && (synpred205_InternalN4JSParser())) {s = 33;}

                        else if ( (LA347_2==Protected) && (synpred205_InternalN4JSParser())) {s = 34;}

                        else if ( (LA347_2==Public) && (synpred205_InternalN4JSParser())) {s = 35;}

                        else if ( (LA347_2==Out) && (synpred205_InternalN4JSParser())) {s = 36;}

                        else if ( (LA347_2==LessThanSign) && (synpred205_InternalN4JSParser())) {s = 37;}

                        else if ( (LA347_2==RULE_DOUBLE) && (synpred205_InternalN4JSParser())) {s = 38;}

                        else if ( (LA347_2==RULE_INT) && (synpred205_InternalN4JSParser())) {s = 39;}

                        else if ( (LA347_2==RULE_BINARY_INT) && (synpred205_InternalN4JSParser())) {s = 40;}

                        else if ( (LA347_2==RULE_OCTAL_INT) && (synpred205_InternalN4JSParser())) {s = 41;}

                        else if ( (LA347_2==RULE_LEGACY_OCTAL_INT) && (synpred205_InternalN4JSParser())) {s = 42;}

                        else if ( (LA347_2==RULE_HEX_INT) && (synpred205_InternalN4JSParser())) {s = 43;}

                        else if ( (LA347_2==RULE_SCIENTIFIC_INT) && (synpred205_InternalN4JSParser())) {s = 44;}

                        else if ( (LA347_2==True) && (synpred205_InternalN4JSParser())) {s = 45;}

                        else if ( (LA347_2==False) && (synpred205_InternalN4JSParser())) {s = 46;}

                        else if ( (LA347_2==RULE_STRING) && (synpred205_InternalN4JSParser())) {s = 47;}

                        else if ( (LA347_2==Null) && (synpred205_InternalN4JSParser())) {s = 48;}

                        else if ( (LA347_2==Solidus) && (synpred205_InternalN4JSParser())) {s = 49;}

                        else if ( (LA347_2==SolidusEqualsSign) && (synpred205_InternalN4JSParser())) {s = 50;}

                        else if ( (LA347_2==LeftSquareBracket) && (synpred205_InternalN4JSParser())) {s = 51;}

                        else if ( (LA347_2==LeftCurlyBracket) && (synpred205_InternalN4JSParser())) {s = 52;}

                        else if ( (LA347_2==LeftParenthesis) && (synpred205_InternalN4JSParser())) {s = 53;}

                        else if ( (LA347_2==CommercialAt) && (synpred205_InternalN4JSParser())) {s = 54;}

                        else if ( (LA347_2==Function) && (synpred205_InternalN4JSParser())) {s = 55;}

                        else if ( (LA347_2==Class) && (synpred205_InternalN4JSParser())) {s = 56;}

                        else if ( (LA347_2==RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) && (synpred205_InternalN4JSParser())) {s = 57;}

                        else if ( (LA347_2==RULE_TEMPLATE_HEAD) && (synpred205_InternalN4JSParser())) {s = 58;}

                        else if ( (LA347_2==Delete) && (synpred205_InternalN4JSParser())) {s = 59;}

                        else if ( (LA347_2==Void) && (synpred205_InternalN4JSParser())) {s = 60;}

                        else if ( (LA347_2==Typeof) && (synpred205_InternalN4JSParser())) {s = 61;}

                        else if ( (LA347_2==PlusSignPlusSign) && (synpred205_InternalN4JSParser())) {s = 62;}

                        else if ( (LA347_2==HyphenMinusHyphenMinus) && (synpred205_InternalN4JSParser())) {s = 63;}

                        else if ( (LA347_2==PlusSign) && (synpred205_InternalN4JSParser())) {s = 64;}

                        else if ( (LA347_2==HyphenMinus) && (synpred205_InternalN4JSParser())) {s = 65;}

                        else if ( (LA347_2==Tilde) && (synpred205_InternalN4JSParser())) {s = 66;}

                        else if ( (LA347_2==ExclamationMark) && (synpred205_InternalN4JSParser())) {s = 67;}

                         
                        input.seek(index347_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA347_0 = input.LA(1);

                         
                        int index347_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA347_0==EOF||LA347_0==ExclamationMarkEqualsSignEqualsSign||(LA347_0>=LessThanSignLessThanSignEqualsSign && LA347_0<=EqualsSignEqualsSignEqualsSign)||(LA347_0>=ExclamationMarkEqualsSign && LA347_0<=AsteriskEqualsSign)||LA347_0==PlusSignEqualsSign||(LA347_0>=HyphenMinusEqualsSign && LA347_0<=SolidusEqualsSign)||LA347_0==EqualsSignEqualsSign||LA347_0==CircumflexAccentEqualsSign||(LA347_0>=VerticalLineEqualsSign && LA347_0<=VerticalLineVerticalLine)||LA347_0==Ampersand||LA347_0==RightParenthesis||LA347_0==Comma||(LA347_0>=Colon && LA347_0<=Semicolon)||LA347_0==EqualsSign||LA347_0==QuestionMark||(LA347_0>=RightSquareBracket && LA347_0<=CircumflexAccent)||(LA347_0>=VerticalLine && LA347_0<=RightCurlyBracket)||LA347_0==RULE_ML_COMMENT||LA347_0==RULE_EOL) ) {s = 1;}

                        else if ( (LA347_0==GreaterThanSign) ) {s = 2;}

                        else if ( (LA347_0==LessThanSign) && (synpred205_InternalN4JSParser())) {s = 3;}

                        else if ( (LA347_0==LessThanSignEqualsSign) && (synpred205_InternalN4JSParser())) {s = 4;}

                        else if ( (LA347_0==GreaterThanSignEqualsSign) && (synpred205_InternalN4JSParser())) {s = 5;}

                        else if ( (LA347_0==Instanceof) && (synpred205_InternalN4JSParser())) {s = 6;}

                        else if ( (LA347_0==In) && (synpred205_InternalN4JSParser())) {s = 7;}

                         
                        input.seek(index347_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 347, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_243s = "\101\uffff";
    static final String dfa_244s = "\1\4\4\0\1\uffff\31\0\42\uffff";
    static final String dfa_245s = "\1\u0095\4\0\1\uffff\31\0\42\uffff";
    static final String dfa_246s = "\5\uffff\1\3\31\uffff\1\4\37\uffff\1\1\1\2";
    static final String dfa_247s = "\1\0\1\1\1\2\1\3\1\4\1\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\42\uffff}>";
    static final String[] dfa_248s = {
            "\1\26\1\21\1\31\1\uffff\1\30\1\32\1\34\1\15\2\uffff\1\14\1\37\3\uffff\1\33\1\13\1\37\2\uffff\1\35\1\uffff\1\16\1\uffff\1\23\1\37\1\4\1\1\2\uffff\1\37\1\uffff\2\37\1\uffff\1\25\1\uffff\1\7\1\27\3\uffff\1\20\3\37\1\24\1\37\6\uffff\1\10\1\12\1\37\1\36\1\11\7\uffff\1\37\1\uffff\1\37\1\uffff\1\37\7\uffff\1\17\3\uffff\1\22\2\uffff\1\37\2\uffff\1\3\1\uffff\1\5\1\37\1\uffff\1\37\1\uffff\1\37\2\uffff\1\37\3\uffff\1\2\1\37\2\uffff\1\37\2\uffff\1\37\3\uffff\1\37\1\uffff\4\37\1\uffff\1\37\1\uffff\1\6\2\uffff\1\37\11\uffff\2\37\10\uffff\1\37",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_243 = DFA.unpackEncodedString(dfa_243s);
    static final char[] dfa_244 = DFA.unpackEncodedStringToUnsignedChars(dfa_244s);
    static final char[] dfa_245 = DFA.unpackEncodedStringToUnsignedChars(dfa_245s);
    static final short[] dfa_246 = DFA.unpackEncodedString(dfa_246s);
    static final short[] dfa_247 = DFA.unpackEncodedString(dfa_247s);
    static final short[][] dfa_248 = unpackEncodedStringArray(dfa_248s);

    class DFA379 extends DFA {

        public DFA379(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 379;
            this.eot = dfa_243;
            this.eof = dfa_243;
            this.min = dfa_244;
            this.max = dfa_245;
            this.accept = dfa_246;
            this.special = dfa_247;
            this.transition = dfa_248;
        }
        public String getDescription() {
            return "24396:1: ( ( ( ( () Await ) )=>this_AwaitExpression_0= ruleAwaitExpression ) | ( ( ( () CommercialAt Promisify ) )=>this_PromisifyExpression_1= rulePromisifyExpression ) | ( ( ( ( ( ( ( LeftParenthesis )=> LeftParenthesis ) ( ( ( ruleFormalParameter ) ) ( Comma ( ( ruleFormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ( Async )=> ( ( ( Async ) ) ruleNoLineTerminator[null] LeftParenthesis ) ) ( ( ( ruleFormalParameter ) ) ( Comma ( ( ruleFormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ( Asterisk )=> ( ( ( Asterisk ) ) ruleNoLineTerminator[null] LeftParenthesis ) ) ( ( ( ruleFormalParameter ) ) ( Comma ( ( ruleFormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ruleBindingIdentifierAsFormalParameter ) ) ) EqualsSignGreaterThanSign ) )=>this_ArrowExpression_2= ruleArrowExpression ) | (this_ConditionalExpression_3= ruleConditionalExpression ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_5_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_6_0= ruleAssignmentExpression ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA379_0 = input.LA(1);

                         
                        int index379_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA379_0==Await) ) {s = 1;}

                        else if ( (LA379_0==CommercialAt) ) {s = 2;}

                        else if ( (LA379_0==LeftParenthesis) ) {s = 3;}

                        else if ( (LA379_0==Async) ) {s = 4;}

                        else if ( (LA379_0==Asterisk) && (synpred240_InternalN4JSParser())) {s = 5;}

                        
                        else if ((LA379_0>=4 && LA379_0<=126 && (s=T2S.M_29[LA379_0-(4)])>=0)) { /* 26 cases */ }
                        else if ( (LA379_0==Function||LA379_0==Delete||LA379_0==Typeof||LA379_0==Class||(LA379_0>=False && LA379_0<=Super)||(LA379_0>=Null && LA379_0<=True)||LA379_0==Void||LA379_0==New||LA379_0==PlusSignPlusSign||LA379_0==HyphenMinusHyphenMinus||LA379_0==SolidusEqualsSign||LA379_0==ExclamationMark||LA379_0==PlusSign||LA379_0==HyphenMinus||LA379_0==Solidus||LA379_0==LessThanSign||LA379_0==LeftSquareBracket||LA379_0==LeftCurlyBracket||LA379_0==Tilde||LA379_0==RULE_DOUBLE||(LA379_0>=RULE_HEX_INT && LA379_0<=RULE_LEGACY_OCTAL_INT)||LA379_0==RULE_SCIENTIFIC_INT||LA379_0==RULE_STRING||(LA379_0>=RULE_TEMPLATE_HEAD && LA379_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA379_0==RULE_INT) ) {s = 31;}

                         
                        input.seek(index379_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA379_1 = input.LA(1);

                         
                        int index379_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred235_InternalN4JSParser()) ) {s = 63;}

                        else if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA379_2 = input.LA(1);

                         
                        int index379_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalN4JSParser()) ) {s = 64;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA379_3 = input.LA(1);

                         
                        int index379_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA379_4 = input.LA(1);

                         
                        int index379_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA379_6 = input.LA(1);

                         
                        int index379_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA379_7 = input.LA(1);

                         
                        int index379_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA379_8 = input.LA(1);

                         
                        int index379_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA379_9 = input.LA(1);

                         
                        int index379_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA379_10 = input.LA(1);

                         
                        int index379_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA379_11 = input.LA(1);

                         
                        int index379_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA379_12 = input.LA(1);

                         
                        int index379_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA379_13 = input.LA(1);

                         
                        int index379_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA379_14 = input.LA(1);

                         
                        int index379_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA379_15 = input.LA(1);

                         
                        int index379_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA379_16 = input.LA(1);

                         
                        int index379_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA379_17 = input.LA(1);

                         
                        int index379_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA379_18 = input.LA(1);

                         
                        int index379_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA379_19 = input.LA(1);

                         
                        int index379_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA379_20 = input.LA(1);

                         
                        int index379_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA379_21 = input.LA(1);

                         
                        int index379_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA379_22 = input.LA(1);

                         
                        int index379_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA379_23 = input.LA(1);

                         
                        int index379_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA379_24 = input.LA(1);

                         
                        int index379_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA379_25 = input.LA(1);

                         
                        int index379_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA379_26 = input.LA(1);

                         
                        int index379_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA379_27 = input.LA(1);

                         
                        int index379_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA379_28 = input.LA(1);

                         
                        int index379_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA379_29 = input.LA(1);

                         
                        int index379_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA379_30 = input.LA(1);

                         
                        int index379_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index379_30);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 379, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_249s = "\1\14\15\uffff";
    static final String dfa_250s = "\1\67\13\0\2\uffff";
    static final String dfa_251s = "\1\150\13\0\2\uffff";
    static final String dfa_252s = "\14\uffff\1\2\1\1";
    static final String dfa_253s = "\1\uffff\1\0\1\6\1\1\1\7\1\2\1\10\1\3\1\5\1\11\1\4\1\12\2\uffff}>";
    static final String[] dfa_254s = {
            "\1\7\12\uffff\1\4\1\uffff\1\11\1\2\1\uffff\1\5\1\uffff\1\6\1\3\6\uffff\1\12\3\uffff\2\14\1\13\10\uffff\1\14\4\uffff\1\14\1\uffff\1\1\1\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final short[] dfa_249 = DFA.unpackEncodedString(dfa_249s);
    static final char[] dfa_250 = DFA.unpackEncodedStringToUnsignedChars(dfa_250s);
    static final char[] dfa_251 = DFA.unpackEncodedStringToUnsignedChars(dfa_251s);
    static final short[] dfa_252 = DFA.unpackEncodedString(dfa_252s);
    static final short[] dfa_253 = DFA.unpackEncodedString(dfa_253s);
    static final short[][] dfa_254 = unpackEncodedStringArray(dfa_254s);

    class DFA378 extends DFA {

        public DFA378(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 378;
            this.eot = dfa_7;
            this.eof = dfa_249;
            this.min = dfa_250;
            this.max = dfa_251;
            this.accept = dfa_252;
            this.special = dfa_253;
            this.transition = dfa_254;
        }
        public String getDescription() {
            return "24532:1: ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_5_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_6_0= ruleAssignmentExpression ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA378_1 = input.LA(1);

                         
                        int index378_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index378_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA378_3 = input.LA(1);

                         
                        int index378_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index378_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA378_5 = input.LA(1);

                         
                        int index378_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index378_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA378_7 = input.LA(1);

                         
                        int index378_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index378_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA378_10 = input.LA(1);

                         
                        int index378_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index378_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA378_8 = input.LA(1);

                         
                        int index378_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index378_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA378_2 = input.LA(1);

                         
                        int index378_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index378_2);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA378_4 = input.LA(1);

                         
                        int index378_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index378_4);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA378_6 = input.LA(1);

                         
                        int index378_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index378_6);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA378_9 = input.LA(1);

                         
                        int index378_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index378_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA378_11 = input.LA(1);

                         
                        int index378_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index378_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 378, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA381 extends DFA {

        public DFA381(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 381;
            this.eot = dfa_243;
            this.eof = dfa_243;
            this.min = dfa_244;
            this.max = dfa_245;
            this.accept = dfa_246;
            this.special = dfa_247;
            this.transition = dfa_248;
        }
        public String getDescription() {
            return "24592:1: ( ( ( ( () Await ) )=>this_AwaitExpression_0= norm1_AwaitExpression ) | ( ( ( () CommercialAt Promisify ) )=>this_PromisifyExpression_1= norm1_PromisifyExpression ) | ( ( ( ( ( ( ( LeftParenthesis )=> LeftParenthesis ) ( ( ( ruleFormalParameter ) ) ( Comma ( ( ruleFormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ( Async )=> ( ( ( Async ) ) ruleNoLineTerminator[null] LeftParenthesis ) ) ( ( ( ruleFormalParameter ) ) ( Comma ( ( ruleFormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ( Asterisk )=> ( ( ( Asterisk ) ) ruleNoLineTerminator[null] LeftParenthesis ) ) ( ( ( ruleFormalParameter ) ) ( Comma ( ( ruleFormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ruleBindingIdentifierAsFormalParameter ) ) ) EqualsSignGreaterThanSign ) )=>this_ArrowExpression_2= norm1_ArrowExpression ) | (this_ConditionalExpression_3= norm1_ConditionalExpression ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_5_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_6_0= norm1_AssignmentExpression ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA381_0 = input.LA(1);

                         
                        int index381_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA381_0==Await) ) {s = 1;}

                        else if ( (LA381_0==CommercialAt) ) {s = 2;}

                        else if ( (LA381_0==LeftParenthesis) ) {s = 3;}

                        else if ( (LA381_0==Async) ) {s = 4;}

                        else if ( (LA381_0==Asterisk) && (synpred247_InternalN4JSParser())) {s = 5;}

                        
                        else if ((LA381_0>=4 && LA381_0<=126 && (s=T2S.M_29[LA381_0-(4)])>=0)) { /* 26 cases */ }
                        else if ( (LA381_0==Function||LA381_0==Delete||LA381_0==Typeof||LA381_0==Class||(LA381_0>=False && LA381_0<=Super)||(LA381_0>=Null && LA381_0<=True)||LA381_0==Void||LA381_0==New||LA381_0==PlusSignPlusSign||LA381_0==HyphenMinusHyphenMinus||LA381_0==SolidusEqualsSign||LA381_0==ExclamationMark||LA381_0==PlusSign||LA381_0==HyphenMinus||LA381_0==Solidus||LA381_0==LessThanSign||LA381_0==LeftSquareBracket||LA381_0==LeftCurlyBracket||LA381_0==Tilde||LA381_0==RULE_DOUBLE||(LA381_0>=RULE_HEX_INT && LA381_0<=RULE_LEGACY_OCTAL_INT)||LA381_0==RULE_SCIENTIFIC_INT||LA381_0==RULE_STRING||(LA381_0>=RULE_TEMPLATE_HEAD && LA381_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA381_0==RULE_INT) ) {s = 31;}

                         
                        input.seek(index381_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA381_1 = input.LA(1);

                         
                        int index381_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred242_InternalN4JSParser()) ) {s = 63;}

                        else if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA381_2 = input.LA(1);

                         
                        int index381_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_InternalN4JSParser()) ) {s = 64;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA381_3 = input.LA(1);

                         
                        int index381_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA381_4 = input.LA(1);

                         
                        int index381_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA381_6 = input.LA(1);

                         
                        int index381_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA381_7 = input.LA(1);

                         
                        int index381_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA381_8 = input.LA(1);

                         
                        int index381_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA381_9 = input.LA(1);

                         
                        int index381_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA381_10 = input.LA(1);

                         
                        int index381_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA381_11 = input.LA(1);

                         
                        int index381_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA381_12 = input.LA(1);

                         
                        int index381_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA381_13 = input.LA(1);

                         
                        int index381_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA381_14 = input.LA(1);

                         
                        int index381_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA381_15 = input.LA(1);

                         
                        int index381_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA381_16 = input.LA(1);

                         
                        int index381_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA381_17 = input.LA(1);

                         
                        int index381_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA381_18 = input.LA(1);

                         
                        int index381_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA381_19 = input.LA(1);

                         
                        int index381_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA381_20 = input.LA(1);

                         
                        int index381_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA381_21 = input.LA(1);

                         
                        int index381_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA381_22 = input.LA(1);

                         
                        int index381_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA381_23 = input.LA(1);

                         
                        int index381_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA381_24 = input.LA(1);

                         
                        int index381_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA381_25 = input.LA(1);

                         
                        int index381_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA381_26 = input.LA(1);

                         
                        int index381_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA381_27 = input.LA(1);

                         
                        int index381_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA381_28 = input.LA(1);

                         
                        int index381_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA381_29 = input.LA(1);

                         
                        int index381_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA381_30 = input.LA(1);

                         
                        int index381_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index381_30);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 381, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_255s = "\1\u0099\13\0\2\uffff";
    static final String[] dfa_256s = {
            "\1\7\12\uffff\1\4\1\uffff\1\11\1\2\1\uffff\1\5\1\uffff\1\6\1\3\6\uffff\1\12\5\uffff\1\13\5\uffff\1\14\2\uffff\1\14\3\uffff\2\14\1\uffff\1\1\1\10\3\uffff\1\14\3\uffff\1\14\46\uffff\1\14\1\uffff\1\14",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_255 = DFA.unpackEncodedStringToUnsignedChars(dfa_255s);
    static final short[][] dfa_256 = unpackEncodedStringArray(dfa_256s);

    class DFA380 extends DFA {

        public DFA380(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 380;
            this.eot = dfa_7;
            this.eof = dfa_249;
            this.min = dfa_250;
            this.max = dfa_255;
            this.accept = dfa_252;
            this.special = dfa_253;
            this.transition = dfa_256;
        }
        public String getDescription() {
            return "24728:1: ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_5_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_6_0= norm1_AssignmentExpression ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA380_1 = input.LA(1);

                         
                        int index380_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index380_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA380_3 = input.LA(1);

                         
                        int index380_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index380_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA380_5 = input.LA(1);

                         
                        int index380_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index380_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA380_7 = input.LA(1);

                         
                        int index380_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index380_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA380_10 = input.LA(1);

                         
                        int index380_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index380_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA380_8 = input.LA(1);

                         
                        int index380_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index380_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA380_2 = input.LA(1);

                         
                        int index380_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index380_2);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA380_4 = input.LA(1);

                         
                        int index380_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index380_4);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA380_6 = input.LA(1);

                         
                        int index380_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index380_6);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA380_9 = input.LA(1);

                         
                        int index380_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index380_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA380_11 = input.LA(1);

                         
                        int index380_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index380_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 380, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_257s = "\1\4\4\0\1\uffff\30\0\43\uffff";
    static final String dfa_258s = "\1\u0095\4\0\1\uffff\30\0\43\uffff";
    static final String dfa_259s = "\5\uffff\1\3\30\uffff\1\4\1\5\37\uffff\1\1\1\2";
    static final String dfa_260s = "\1\0\1\1\1\2\1\3\1\4\1\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\43\uffff}>";
    static final String[] dfa_261s = {
            "\1\25\1\20\1\30\1\uffff\1\27\1\31\1\33\1\14\2\uffff\1\13\1\37\3\uffff\1\32\1\12\1\37\2\uffff\1\34\1\uffff\1\15\1\uffff\1\22\1\37\1\4\1\1\2\uffff\1\37\1\uffff\2\37\1\uffff\1\24\1\uffff\1\36\1\26\3\uffff\1\17\3\37\1\23\1\37\6\uffff\1\7\1\11\1\37\1\35\1\10\7\uffff\1\37\1\uffff\1\37\1\uffff\1\37\7\uffff\1\16\3\uffff\1\21\2\uffff\1\37\2\uffff\1\3\1\uffff\1\5\1\37\1\uffff\1\37\1\uffff\1\37\2\uffff\1\37\3\uffff\1\2\1\37\2\uffff\1\37\2\uffff\1\37\3\uffff\1\37\1\uffff\4\37\1\uffff\1\37\1\uffff\1\6\2\uffff\1\37\11\uffff\2\37\10\uffff\1\37",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_257 = DFA.unpackEncodedStringToUnsignedChars(dfa_257s);
    static final char[] dfa_258 = DFA.unpackEncodedStringToUnsignedChars(dfa_258s);
    static final short[] dfa_259 = DFA.unpackEncodedString(dfa_259s);
    static final short[] dfa_260 = DFA.unpackEncodedString(dfa_260s);
    static final short[][] dfa_261 = unpackEncodedStringArray(dfa_261s);

    class DFA383 extends DFA {

        public DFA383(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 383;
            this.eot = dfa_243;
            this.eof = dfa_243;
            this.min = dfa_257;
            this.max = dfa_258;
            this.accept = dfa_259;
            this.special = dfa_260;
            this.transition = dfa_261;
        }
        public String getDescription() {
            return "24788:1: ( ( ( ( () Await ) )=>this_AwaitExpression_0= norm2_AwaitExpression ) | ( ( ( () CommercialAt Promisify ) )=>this_PromisifyExpression_1= norm2_PromisifyExpression ) | ( ( ( ( ( ( ( LeftParenthesis )=> LeftParenthesis ) ( ( ( norm1_FormalParameter ) ) ( Comma ( ( norm1_FormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ( Async )=> ( ( ( Async ) ) ruleNoLineTerminator[null] LeftParenthesis ) ) ( ( ( norm1_FormalParameter ) ) ( Comma ( ( norm1_FormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ( Asterisk )=> ( ( ( Asterisk ) ) ruleNoLineTerminator[null] LeftParenthesis ) ) ( ( ( norm1_FormalParameter ) ) ( Comma ( ( norm1_FormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( norm1_BindingIdentifierAsFormalParameter ) ) ) EqualsSignGreaterThanSign ) )=>this_ArrowExpression_2= norm2_ArrowExpression ) | this_YieldExpression_3= ruleYieldExpression | (this_ConditionalExpression_4= norm2_ConditionalExpression ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_6_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_7_0= norm2_AssignmentExpression ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA383_0 = input.LA(1);

                         
                        int index383_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA383_0==Await) ) {s = 1;}

                        else if ( (LA383_0==CommercialAt) ) {s = 2;}

                        else if ( (LA383_0==LeftParenthesis) ) {s = 3;}

                        else if ( (LA383_0==Async) ) {s = 4;}

                        else if ( (LA383_0==Asterisk) && (synpred254_InternalN4JSParser())) {s = 5;}

                        
                        else if ((LA383_0>=4 && LA383_0<=126 && (s=T2S.M_31[LA383_0-(4)])>=0)) { /* 26 cases */ }
                        else if ( (LA383_0==Function||LA383_0==Delete||LA383_0==Typeof||LA383_0==Class||(LA383_0>=False && LA383_0<=Super)||(LA383_0>=Null && LA383_0<=True)||LA383_0==Void||LA383_0==New||LA383_0==PlusSignPlusSign||LA383_0==HyphenMinusHyphenMinus||LA383_0==SolidusEqualsSign||LA383_0==ExclamationMark||LA383_0==PlusSign||LA383_0==HyphenMinus||LA383_0==Solidus||LA383_0==LessThanSign||LA383_0==LeftSquareBracket||LA383_0==LeftCurlyBracket||LA383_0==Tilde||LA383_0==RULE_DOUBLE||(LA383_0>=RULE_HEX_INT && LA383_0<=RULE_LEGACY_OCTAL_INT)||LA383_0==RULE_SCIENTIFIC_INT||LA383_0==RULE_STRING||(LA383_0>=RULE_TEMPLATE_HEAD && LA383_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA383_0==RULE_INT) ) {s = 31;}

                         
                        input.seek(index383_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA383_1 = input.LA(1);

                         
                        int index383_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred249_InternalN4JSParser()) ) {s = 63;}

                        else if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA383_2 = input.LA(1);

                         
                        int index383_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred250_InternalN4JSParser()) ) {s = 64;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA383_3 = input.LA(1);

                         
                        int index383_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA383_4 = input.LA(1);

                         
                        int index383_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA383_6 = input.LA(1);

                         
                        int index383_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA383_7 = input.LA(1);

                         
                        int index383_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA383_8 = input.LA(1);

                         
                        int index383_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA383_9 = input.LA(1);

                         
                        int index383_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA383_10 = input.LA(1);

                         
                        int index383_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA383_11 = input.LA(1);

                         
                        int index383_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA383_12 = input.LA(1);

                         
                        int index383_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA383_13 = input.LA(1);

                         
                        int index383_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA383_14 = input.LA(1);

                         
                        int index383_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA383_15 = input.LA(1);

                         
                        int index383_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA383_16 = input.LA(1);

                         
                        int index383_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA383_17 = input.LA(1);

                         
                        int index383_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA383_18 = input.LA(1);

                         
                        int index383_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA383_19 = input.LA(1);

                         
                        int index383_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA383_20 = input.LA(1);

                         
                        int index383_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA383_21 = input.LA(1);

                         
                        int index383_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA383_22 = input.LA(1);

                         
                        int index383_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA383_23 = input.LA(1);

                         
                        int index383_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA383_24 = input.LA(1);

                         
                        int index383_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA383_25 = input.LA(1);

                         
                        int index383_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA383_26 = input.LA(1);

                         
                        int index383_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA383_27 = input.LA(1);

                         
                        int index383_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA383_28 = input.LA(1);

                         
                        int index383_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA383_29 = input.LA(1);

                         
                        int index383_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index383_29);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 383, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_262s = "\1\uffff\1\6\1\3\1\0\1\11\1\7\1\4\1\1\1\2\1\12\1\10\1\5\2\uffff}>";
    static final short[] dfa_262 = DFA.unpackEncodedString(dfa_262s);

    class DFA382 extends DFA {

        public DFA382(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 382;
            this.eot = dfa_7;
            this.eof = dfa_249;
            this.min = dfa_250;
            this.max = dfa_251;
            this.accept = dfa_252;
            this.special = dfa_262;
            this.transition = dfa_254;
        }
        public String getDescription() {
            return "24934:1: ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_6_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_7_0= norm2_AssignmentExpression ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA382_3 = input.LA(1);

                         
                        int index382_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index382_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA382_7 = input.LA(1);

                         
                        int index382_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index382_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA382_8 = input.LA(1);

                         
                        int index382_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index382_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA382_2 = input.LA(1);

                         
                        int index382_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index382_2);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA382_6 = input.LA(1);

                         
                        int index382_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index382_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA382_11 = input.LA(1);

                         
                        int index382_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index382_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA382_1 = input.LA(1);

                         
                        int index382_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index382_1);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA382_5 = input.LA(1);

                         
                        int index382_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index382_5);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA382_10 = input.LA(1);

                         
                        int index382_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index382_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA382_4 = input.LA(1);

                         
                        int index382_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index382_4);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA382_9 = input.LA(1);

                         
                        int index382_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index382_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 382, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA385 extends DFA {

        public DFA385(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 385;
            this.eot = dfa_243;
            this.eof = dfa_243;
            this.min = dfa_257;
            this.max = dfa_258;
            this.accept = dfa_259;
            this.special = dfa_260;
            this.transition = dfa_261;
        }
        public String getDescription() {
            return "24994:1: ( ( ( ( () Await ) )=>this_AwaitExpression_0= norm3_AwaitExpression ) | ( ( ( () CommercialAt Promisify ) )=>this_PromisifyExpression_1= norm3_PromisifyExpression ) | ( ( ( ( ( ( ( LeftParenthesis )=> LeftParenthesis ) ( ( ( norm1_FormalParameter ) ) ( Comma ( ( norm1_FormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ( Async )=> ( ( ( Async ) ) ruleNoLineTerminator[null] LeftParenthesis ) ) ( ( ( norm1_FormalParameter ) ) ( Comma ( ( norm1_FormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ( Asterisk )=> ( ( ( Asterisk ) ) ruleNoLineTerminator[null] LeftParenthesis ) ) ( ( ( norm1_FormalParameter ) ) ( Comma ( ( norm1_FormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( norm1_BindingIdentifierAsFormalParameter ) ) ) EqualsSignGreaterThanSign ) )=>this_ArrowExpression_2= norm3_ArrowExpression ) | this_YieldExpression_3= norm1_YieldExpression | (this_ConditionalExpression_4= norm3_ConditionalExpression ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_6_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_7_0= norm3_AssignmentExpression ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA385_0 = input.LA(1);

                         
                        int index385_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA385_0==Await) ) {s = 1;}

                        else if ( (LA385_0==CommercialAt) ) {s = 2;}

                        else if ( (LA385_0==LeftParenthesis) ) {s = 3;}

                        else if ( (LA385_0==Async) ) {s = 4;}

                        else if ( (LA385_0==Asterisk) && (synpred261_InternalN4JSParser())) {s = 5;}

                        
                        else if ((LA385_0>=4 && LA385_0<=126 && (s=T2S.M_31[LA385_0-(4)])>=0)) { /* 26 cases */ }
                        else if ( (LA385_0==Function||LA385_0==Delete||LA385_0==Typeof||LA385_0==Class||(LA385_0>=False && LA385_0<=Super)||(LA385_0>=Null && LA385_0<=True)||LA385_0==Void||LA385_0==New||LA385_0==PlusSignPlusSign||LA385_0==HyphenMinusHyphenMinus||LA385_0==SolidusEqualsSign||LA385_0==ExclamationMark||LA385_0==PlusSign||LA385_0==HyphenMinus||LA385_0==Solidus||LA385_0==LessThanSign||LA385_0==LeftSquareBracket||LA385_0==LeftCurlyBracket||LA385_0==Tilde||LA385_0==RULE_DOUBLE||(LA385_0>=RULE_HEX_INT && LA385_0<=RULE_LEGACY_OCTAL_INT)||LA385_0==RULE_SCIENTIFIC_INT||LA385_0==RULE_STRING||(LA385_0>=RULE_TEMPLATE_HEAD && LA385_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA385_0==RULE_INT) ) {s = 31;}

                         
                        input.seek(index385_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA385_1 = input.LA(1);

                         
                        int index385_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_InternalN4JSParser()) ) {s = 63;}

                        else if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA385_2 = input.LA(1);

                         
                        int index385_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalN4JSParser()) ) {s = 64;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA385_3 = input.LA(1);

                         
                        int index385_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA385_4 = input.LA(1);

                         
                        int index385_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA385_6 = input.LA(1);

                         
                        int index385_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA385_7 = input.LA(1);

                         
                        int index385_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA385_8 = input.LA(1);

                         
                        int index385_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA385_9 = input.LA(1);

                         
                        int index385_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA385_10 = input.LA(1);

                         
                        int index385_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA385_11 = input.LA(1);

                         
                        int index385_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA385_12 = input.LA(1);

                         
                        int index385_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA385_13 = input.LA(1);

                         
                        int index385_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA385_14 = input.LA(1);

                         
                        int index385_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA385_15 = input.LA(1);

                         
                        int index385_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA385_16 = input.LA(1);

                         
                        int index385_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA385_17 = input.LA(1);

                         
                        int index385_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA385_18 = input.LA(1);

                         
                        int index385_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA385_19 = input.LA(1);

                         
                        int index385_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA385_20 = input.LA(1);

                         
                        int index385_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA385_21 = input.LA(1);

                         
                        int index385_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA385_22 = input.LA(1);

                         
                        int index385_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA385_23 = input.LA(1);

                         
                        int index385_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA385_24 = input.LA(1);

                         
                        int index385_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA385_25 = input.LA(1);

                         
                        int index385_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA385_26 = input.LA(1);

                         
                        int index385_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA385_27 = input.LA(1);

                         
                        int index385_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA385_28 = input.LA(1);

                         
                        int index385_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA385_29 = input.LA(1);

                         
                        int index385_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index385_29);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 385, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_263s = "\1\uffff\1\10\1\5\1\3\1\0\1\11\1\6\1\4\1\2\1\1\1\12\1\7\2\uffff}>";
    static final short[] dfa_263 = DFA.unpackEncodedString(dfa_263s);

    class DFA384 extends DFA {

        public DFA384(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 384;
            this.eot = dfa_7;
            this.eof = dfa_249;
            this.min = dfa_250;
            this.max = dfa_255;
            this.accept = dfa_252;
            this.special = dfa_263;
            this.transition = dfa_256;
        }
        public String getDescription() {
            return "25140:1: ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_6_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_7_0= norm3_AssignmentExpression ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA384_4 = input.LA(1);

                         
                        int index384_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index384_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA384_9 = input.LA(1);

                         
                        int index384_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index384_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA384_8 = input.LA(1);

                         
                        int index384_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index384_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA384_3 = input.LA(1);

                         
                        int index384_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index384_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA384_7 = input.LA(1);

                         
                        int index384_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index384_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA384_2 = input.LA(1);

                         
                        int index384_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index384_2);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA384_6 = input.LA(1);

                         
                        int index384_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index384_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA384_11 = input.LA(1);

                         
                        int index384_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index384_11);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA384_1 = input.LA(1);

                         
                        int index384_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index384_1);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA384_5 = input.LA(1);

                         
                        int index384_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index384_5);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA384_10 = input.LA(1);

                         
                        int index384_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index384_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 384, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_264s = "\116\uffff";
    static final String dfa_265s = "\1\2\115\uffff";
    static final String dfa_266s = "\1\4\1\0\114\uffff";
    static final String dfa_267s = "\1\u0095\1\0\114\uffff";
    static final String dfa_268s = "\2\uffff\1\2\112\uffff\1\1";
    static final String dfa_269s = "\1\uffff\1\0\114\uffff}>";
    static final String[] dfa_270s = {
            "\3\2\1\uffff\4\2\2\uffff\2\2\3\uffff\3\2\2\uffff\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\2\2\3\uffff\6\2\3\uffff\1\2\2\uffff\5\2\3\uffff\1\2\1\uffff\7\2\6\uffff\2\2\2\uffff\3\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\1\3\2\1\uffff\1\2\1\uffff\4\2\1\uffff\2\2\2\uffff\1\2\2\uffff\1\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_264 = DFA.unpackEncodedString(dfa_264s);
    static final short[] dfa_265 = DFA.unpackEncodedString(dfa_265s);
    static final char[] dfa_266 = DFA.unpackEncodedStringToUnsignedChars(dfa_266s);
    static final char[] dfa_267 = DFA.unpackEncodedStringToUnsignedChars(dfa_267s);
    static final short[] dfa_268 = DFA.unpackEncodedString(dfa_268s);
    static final short[] dfa_269 = DFA.unpackEncodedString(dfa_269s);
    static final short[][] dfa_270 = unpackEncodedStringArray(dfa_270s);

    class DFA386 extends DFA {

        public DFA386(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 386;
            this.eot = dfa_264;
            this.eof = dfa_265;
            this.min = dfa_266;
            this.max = dfa_267;
            this.accept = dfa_268;
            this.special = dfa_269;
            this.transition = dfa_270;
        }
        public String getDescription() {
            return "25219:1: ( ( ( Asterisk ) )=> (lv_many_2_0= Asterisk ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA386_1 = input.LA(1);

                         
                        int index386_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred263_InternalN4JSParser()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index386_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 386, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_271s = "\115\uffff";
    static final String dfa_272s = "\1\77\114\uffff";
    static final String dfa_273s = "\1\4\20\uffff\1\0\35\uffff\1\0\35\uffff";
    static final String dfa_274s = "\1\u0095\20\uffff\1\0\35\uffff\1\0\35\uffff";
    static final String dfa_275s = "\1\uffff\20\1\1\uffff\35\1\1\uffff\17\1\1\2\15\uffff";
    static final String dfa_276s = "\1\0\20\uffff\1\1\35\uffff\1\2\35\uffff}>";
    static final String[] dfa_277s = {
            "\1\25\1\20\1\30\1\uffff\1\27\1\31\1\33\1\14\2\uffff\1\13\1\62\3\uffff\1\32\1\12\1\66\2\uffff\1\34\1\uffff\1\15\1\uffff\1\22\1\70\1\4\1\1\2\uffff\1\63\1\uffff\1\53\1\41\1\uffff\1\24\1\uffff\1\36\1\26\3\uffff\1\17\1\55\1\40\1\52\1\23\1\67\3\uffff\1\77\2\uffff\1\7\1\11\1\37\1\35\1\10\3\uffff\1\77\1\uffff\2\77\1\71\1\77\1\72\1\77\1\57\6\uffff\1\77\1\16\2\uffff\1\77\1\21\1\77\1\uffff\1\76\2\uffff\1\3\1\uffff\1\5\1\73\1\77\1\74\1\uffff\1\56\1\uffff\1\77\1\42\2\77\1\uffff\1\2\1\60\2\uffff\1\61\2\uffff\1\75\3\uffff\1\43\1\uffff\1\50\1\45\1\46\1\47\1\uffff\1\51\1\uffff\1\6\2\uffff\1\54\11\uffff\1\65\1\64\10\uffff\1\44",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_271 = DFA.unpackEncodedString(dfa_271s);
    static final short[] dfa_272 = DFA.unpackEncodedString(dfa_272s);
    static final char[] dfa_273 = DFA.unpackEncodedStringToUnsignedChars(dfa_273s);
    static final char[] dfa_274 = DFA.unpackEncodedStringToUnsignedChars(dfa_274s);
    static final short[] dfa_275 = DFA.unpackEncodedString(dfa_275s);
    static final short[] dfa_276 = DFA.unpackEncodedString(dfa_276s);
    static final short[][] dfa_277 = unpackEncodedStringArray(dfa_277s);

    class DFA387 extends DFA {

        public DFA387(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 387;
            this.eot = dfa_271;
            this.eof = dfa_272;
            this.min = dfa_273;
            this.max = dfa_274;
            this.accept = dfa_275;
            this.special = dfa_276;
            this.transition = dfa_277;
        }
        public String getDescription() {
            return "25242:3: ( ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_3_0= norm2_AssignmentExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA387_0 = input.LA(1);

                         
                        int index387_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA387_0>=5 && LA387_0<=126 && (s=T2S.M_33[LA387_0-(5)])>=0) && (synpred264_InternalN4JSParser())) { /* 16 cases */ }
                        else if ( (LA387_0==Of) ) {s = 17;}

                        
                        else if ((LA387_0>=4 && LA387_0<=149 && (s=T2S.M_34[LA387_0-(4)])>=0) && (synpred264_InternalN4JSParser())) { /* 30 cases */ }
                        else if ( (LA387_0==SolidusEqualsSign) ) {s = 47;}

                        
                        else if ((LA387_0>=15 && LA387_0<=140 && (s=T2S.M_35[LA387_0-(15)])>=0) && (synpred264_InternalN4JSParser())) { /* 16 cases */ }
                        else if ( (LA387_0==EOF||LA387_0==LessThanSignLessThanSignEqualsSign||LA387_0==PercentSignEqualsSign||(LA387_0>=AmpersandEqualsSign && LA387_0<=AsteriskEqualsSign)||LA387_0==PlusSignEqualsSign||LA387_0==HyphenMinusEqualsSign||LA387_0==CircumflexAccentEqualsSign||LA387_0==In||LA387_0==VerticalLineEqualsSign||LA387_0==Comma||LA387_0==Semicolon||(LA387_0>=EqualsSign && LA387_0<=GreaterThanSign)) ) {s = 63;}

                         
                        input.seek(index387_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA387_17 = input.LA(1);

                         
                        int index387_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSParser()) ) {s = 62;}

                        else if ( (true) ) {s = 63;}

                         
                        input.seek(index387_17);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA387_47 = input.LA(1);

                         
                        int index387_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSParser()) ) {s = 62;}

                        else if ( (true) ) {s = 63;}

                         
                        input.seek(index387_47);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 387, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_278s = "\122\uffff";
    static final String dfa_279s = "\1\2\121\uffff";
    static final String dfa_280s = "\1\4\1\0\120\uffff";
    static final String dfa_281s = "\1\u0099\1\0\120\uffff";
    static final String dfa_282s = "\2\uffff\1\2\116\uffff\1\1";
    static final String dfa_283s = "\1\uffff\1\0\120\uffff}>";
    static final String[] dfa_284s = {
            "\3\2\1\uffff\4\2\2\uffff\2\2\3\uffff\3\2\2\uffff\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\2\2\3\uffff\6\2\3\uffff\1\2\2\uffff\5\2\3\uffff\1\2\1\uffff\7\2\6\uffff\2\2\3\uffff\2\2\1\uffff\1\2\2\uffff\2\2\1\1\3\2\1\uffff\6\2\1\uffff\3\2\1\uffff\1\2\1\uffff\2\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2\1\uffff\1\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_278 = DFA.unpackEncodedString(dfa_278s);
    static final short[] dfa_279 = DFA.unpackEncodedString(dfa_279s);
    static final char[] dfa_280 = DFA.unpackEncodedStringToUnsignedChars(dfa_280s);
    static final char[] dfa_281 = DFA.unpackEncodedStringToUnsignedChars(dfa_281s);
    static final short[] dfa_282 = DFA.unpackEncodedString(dfa_282s);
    static final short[] dfa_283 = DFA.unpackEncodedString(dfa_283s);
    static final short[][] dfa_284 = unpackEncodedStringArray(dfa_284s);

    class DFA388 extends DFA {

        public DFA388(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 388;
            this.eot = dfa_278;
            this.eof = dfa_279;
            this.min = dfa_280;
            this.max = dfa_281;
            this.accept = dfa_282;
            this.special = dfa_283;
            this.transition = dfa_284;
        }
        public String getDescription() {
            return "25386:1: ( ( ( Asterisk ) )=> (lv_many_2_0= Asterisk ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA388_1 = input.LA(1);

                         
                        int index388_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSParser()) ) {s = 81;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index388_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 388, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_285s = "\1\77\120\uffff";
    static final String dfa_286s = "\1\4\56\uffff\1\0\41\uffff";
    static final String dfa_287s = "\1\u0099\56\uffff\1\0\41\uffff";
    static final String dfa_288s = "\1\uffff\56\1\1\uffff\17\1\1\2\21\uffff";
    static final String dfa_289s = "\1\0\56\uffff\1\1\41\uffff}>";
    static final String[] dfa_290s = {
            "\1\25\1\20\1\30\1\uffff\1\27\1\31\1\33\1\14\2\uffff\1\13\1\62\3\uffff\1\32\1\12\1\66\2\uffff\1\34\1\uffff\1\15\1\uffff\1\22\1\70\1\4\1\1\2\uffff\1\63\1\uffff\1\53\1\41\1\uffff\1\24\1\uffff\1\36\1\26\3\uffff\1\17\1\55\1\40\1\52\1\23\1\67\3\uffff\1\77\2\uffff\1\7\1\11\1\37\1\35\1\10\3\uffff\1\77\1\uffff\2\77\1\71\1\77\1\72\1\77\1\57\6\uffff\1\77\1\16\3\uffff\1\21\1\77\1\uffff\1\76\2\uffff\1\3\1\77\1\5\1\73\1\77\1\74\1\uffff\1\56\2\77\1\42\2\77\1\uffff\1\2\1\60\1\77\1\uffff\1\61\1\uffff\1\77\1\75\3\uffff\1\43\1\uffff\1\50\1\45\1\46\1\47\1\uffff\1\51\1\uffff\1\6\2\uffff\1\54\11\uffff\1\65\1\64\10\uffff\1\44\1\uffff\1\77\1\uffff\1\77",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_285 = DFA.unpackEncodedString(dfa_285s);
    static final char[] dfa_286 = DFA.unpackEncodedStringToUnsignedChars(dfa_286s);
    static final char[] dfa_287 = DFA.unpackEncodedStringToUnsignedChars(dfa_287s);
    static final short[] dfa_288 = DFA.unpackEncodedString(dfa_288s);
    static final short[] dfa_289 = DFA.unpackEncodedString(dfa_289s);
    static final short[][] dfa_290 = unpackEncodedStringArray(dfa_290s);

    class DFA389 extends DFA {

        public DFA389(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 389;
            this.eot = dfa_91;
            this.eof = dfa_285;
            this.min = dfa_286;
            this.max = dfa_287;
            this.accept = dfa_288;
            this.special = dfa_289;
            this.transition = dfa_290;
        }
        public String getDescription() {
            return "25409:3: ( ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_3_0= norm3_AssignmentExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA389_0 = input.LA(1);

                         
                        int index389_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA389_0>=4 && LA389_0<=149 && (s=T2S.M_36[LA389_0-(4)])>=0) && (synpred266_InternalN4JSParser())) { /* 46 cases */ }
                        else if ( (LA389_0==SolidusEqualsSign) ) {s = 47;}

                        
                        else if ((LA389_0>=15 && LA389_0<=140 && (s=T2S.M_35[LA389_0-(15)])>=0) && (synpred266_InternalN4JSParser())) { /* 16 cases */ }
                        else if ( (LA389_0==EOF||LA389_0==LessThanSignLessThanSignEqualsSign||LA389_0==PercentSignEqualsSign||(LA389_0>=AmpersandEqualsSign && LA389_0<=AsteriskEqualsSign)||LA389_0==PlusSignEqualsSign||LA389_0==HyphenMinusEqualsSign||LA389_0==CircumflexAccentEqualsSign||LA389_0==VerticalLineEqualsSign||LA389_0==RightParenthesis||LA389_0==Comma||(LA389_0>=Colon && LA389_0<=Semicolon)||(LA389_0>=EqualsSign && LA389_0<=GreaterThanSign)||LA389_0==RightSquareBracket||LA389_0==RightCurlyBracket||LA389_0==RULE_ML_COMMENT||LA389_0==RULE_EOL) ) {s = 63;}

                         
                        input.seek(index389_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA389_47 = input.LA(1);

                         
                        int index389_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred266_InternalN4JSParser()) ) {s = 62;}

                        else if ( (true) ) {s = 63;}

                         
                        input.seek(index389_47);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 389, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_291s = "\136\uffff";
    static final String dfa_292s = "\1\2\135\uffff";
    static final String dfa_293s = "\1\4\1\0\134\uffff";
    static final String dfa_294s = "\1\u0095\1\0\134\uffff";
    static final String dfa_295s = "\2\uffff\1\2\132\uffff\1\1";
    static final String dfa_296s = "\1\uffff\1\0\134\uffff}>";
    static final String[] dfa_297s = {
            "\61\2\1\uffff\1\2\2\uffff\10\2\5\uffff\1\2\1\uffff\1\2\1\uffff\1\2\5\uffff\1\2\1\uffff\5\2\2\uffff\1\2\2\uffff\1\1\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\2\uffff\3\2\2\uffff\1\2\2\uffff\1\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_291 = DFA.unpackEncodedString(dfa_291s);
    static final short[] dfa_292 = DFA.unpackEncodedString(dfa_292s);
    static final char[] dfa_293 = DFA.unpackEncodedStringToUnsignedChars(dfa_293s);
    static final char[] dfa_294 = DFA.unpackEncodedStringToUnsignedChars(dfa_294s);
    static final short[] dfa_295 = DFA.unpackEncodedString(dfa_295s);
    static final short[] dfa_296 = DFA.unpackEncodedString(dfa_296s);
    static final short[][] dfa_297 = unpackEncodedStringArray(dfa_297s);

    class DFA421 extends DFA {

        public DFA421(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 421;
            this.eot = dfa_291;
            this.eof = dfa_292;
            this.min = dfa_293;
            this.max = dfa_294;
            this.accept = dfa_295;
            this.special = dfa_296;
            this.transition = dfa_297;
        }
        public String getDescription() {
            return "27866:2: ( ( ( LeftParenthesis )=>otherlv_1= LeftParenthesis ) ( ( (lv_args_2_0= ruleAnnotationArgument ) ) (otherlv_3= Comma ( (lv_args_4_0= ruleAnnotationArgument ) ) )* )? otherlv_5= RightParenthesis )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA421_1 = input.LA(1);

                         
                        int index421_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred275_InternalN4JSParser()) ) {s = 93;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index421_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 421, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_298s = "\1\4\1\uffff\30\0\2\uffff\61\0\4\uffff";
    static final String dfa_299s = "\1\u0095\1\uffff\30\0\2\uffff\61\0\4\uffff";
    static final String dfa_300s = "\1\uffff\1\1\30\uffff\2\4\61\uffff\1\6\1\2\1\3\1\5";
    static final String dfa_301s = "\1\0\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\2\uffff\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\4\uffff}>";
    static final String[] dfa_302s = {
            "\1\26\1\23\1\103\1\57\1\15\1\104\1\4\1\7\1\41\1\42\1\6\1\53\1\43\1\50\1\51\1\2\1\3\1\44\1\47\1\55\1\5\1\61\1\10\1\63\1\16\1\66\1\34\1\14\1\35\1\37\1\40\1\11\1\75\1\62\1\64\1\25\1\70\1\72\1\13\1\36\1\46\1\76\1\101\1\73\1\21\1\74\1\22\1\12\1\71\4\uffff\1\52\1\30\1\77\1\60\1\105\1\31\1\65\1\67\21\uffff\1\100\1\45\1\54\1\56\1\102\5\uffff\1\115\1\uffff\1\33\7\uffff\1\32\2\uffff\1\27\1\1\1\114\2\uffff\1\24\2\uffff\1\20\3\uffff\1\107\1\uffff\1\112\1\uffff\1\111\2\uffff\1\113\1\uffff\1\17\2\uffff\1\106\23\uffff\1\110",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_298 = DFA.unpackEncodedStringToUnsignedChars(dfa_298s);
    static final char[] dfa_299 = DFA.unpackEncodedStringToUnsignedChars(dfa_299s);
    static final short[] dfa_300 = DFA.unpackEncodedString(dfa_300s);
    static final short[] dfa_301 = DFA.unpackEncodedString(dfa_301s);
    static final short[][] dfa_302 = unpackEncodedStringArray(dfa_302s);

    class DFA463 extends DFA {

        public DFA463(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 463;
            this.eot = dfa_91;
            this.eof = dfa_91;
            this.min = dfa_298;
            this.max = dfa_299;
            this.accept = dfa_300;
            this.special = dfa_301;
            this.transition = dfa_302;
        }
        public String getDescription() {
            return "29421:1: (this_AnnotatedN4MemberDeclaration_0= ruleAnnotatedN4MemberDeclaration | ( ( ( () ( ( ruleN4Modifier ) )* ruleGetterHeader[null] ) )=>this_N4GetterDeclaration_1= ruleN4GetterDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=>this_N4SetterDeclaration_2= ruleN4SetterDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* ( ruleTypeVariables[null] )? ( ruleBogusTypeRefFragment[null] )? ( ( ( ( Asterisk ) ) ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ruleAsyncNoTrailingLineBreak[null] ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=>this_N4MethodDeclaration_3= ruleN4MethodDeclaration ) | this_N4FieldDeclaration_4= ruleN4FieldDeclaration | this_N4CallableConstructorDeclaration_5= ruleN4CallableConstructorDeclaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA463_0 = input.LA(1);

                         
                        int index463_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA463_0>=4 && LA463_0<=126 && (s=T2S.M_38[LA463_0-(4)])>=0)) { /* 25 cases */ }
                        else if ( (LA463_0==LessThanSign) && (synpred285_InternalN4JSParser())) {s = 26;}

                        else if ( (LA463_0==Asterisk) && (synpred285_InternalN4JSParser())) {s = 27;}

                        
                        else if ((LA463_0>=6 && LA463_0<=149 && (s=T2S.M_39[LA463_0-(6)])>=0)) { /* 50 cases */ }
                        input.seek(index463_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA463_2 = input.LA(1);

                         
                        int index463_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred284_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA463_3 = input.LA(1);

                         
                        int index463_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred284_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA463_4 = input.LA(1);

                         
                        int index463_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred284_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA463_5 = input.LA(1);

                         
                        int index463_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred284_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA463_6 = input.LA(1);

                         
                        int index463_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred284_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA463_7 = input.LA(1);

                         
                        int index463_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred284_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA463_8 = input.LA(1);

                         
                        int index463_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred284_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA463_9 = input.LA(1);

                         
                        int index463_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred284_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA463_10 = input.LA(1);

                         
                        int index463_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA463_11 = input.LA(1);

                         
                        int index463_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA463_12 = input.LA(1);

                         
                        int index463_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA463_13 = input.LA(1);

                         
                        int index463_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA463_14 = input.LA(1);

                         
                        int index463_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA463_15 = input.LA(1);

                         
                        int index463_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA463_16 = input.LA(1);

                         
                        int index463_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA463_17 = input.LA(1);

                         
                        int index463_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA463_18 = input.LA(1);

                         
                        int index463_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA463_19 = input.LA(1);

                         
                        int index463_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA463_20 = input.LA(1);

                         
                        int index463_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA463_21 = input.LA(1);

                         
                        int index463_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA463_22 = input.LA(1);

                         
                        int index463_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA463_23 = input.LA(1);

                         
                        int index463_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA463_24 = input.LA(1);

                         
                        int index463_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA463_25 = input.LA(1);

                         
                        int index463_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred284_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA463_28 = input.LA(1);

                         
                        int index463_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_28);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA463_29 = input.LA(1);

                         
                        int index463_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_29);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA463_30 = input.LA(1);

                         
                        int index463_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_30);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA463_31 = input.LA(1);

                         
                        int index463_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_31);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA463_32 = input.LA(1);

                         
                        int index463_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_32);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA463_33 = input.LA(1);

                         
                        int index463_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_33);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA463_34 = input.LA(1);

                         
                        int index463_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_34);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA463_35 = input.LA(1);

                         
                        int index463_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_35);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA463_36 = input.LA(1);

                         
                        int index463_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_36);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA463_37 = input.LA(1);

                         
                        int index463_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_37);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA463_38 = input.LA(1);

                         
                        int index463_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_38);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA463_39 = input.LA(1);

                         
                        int index463_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_39);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA463_40 = input.LA(1);

                         
                        int index463_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_40);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA463_41 = input.LA(1);

                         
                        int index463_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_41);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA463_42 = input.LA(1);

                         
                        int index463_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_42);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA463_43 = input.LA(1);

                         
                        int index463_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_43);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA463_44 = input.LA(1);

                         
                        int index463_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_44);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA463_45 = input.LA(1);

                         
                        int index463_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_45);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA463_46 = input.LA(1);

                         
                        int index463_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_46);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA463_47 = input.LA(1);

                         
                        int index463_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_47);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA463_48 = input.LA(1);

                         
                        int index463_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_48);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA463_49 = input.LA(1);

                         
                        int index463_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_49);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA463_50 = input.LA(1);

                         
                        int index463_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_50);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA463_51 = input.LA(1);

                         
                        int index463_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_51);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA463_52 = input.LA(1);

                         
                        int index463_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_52);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA463_53 = input.LA(1);

                         
                        int index463_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_53);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA463_54 = input.LA(1);

                         
                        int index463_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_54);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA463_55 = input.LA(1);

                         
                        int index463_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_55);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA463_56 = input.LA(1);

                         
                        int index463_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_56);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA463_57 = input.LA(1);

                         
                        int index463_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_57);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA463_58 = input.LA(1);

                         
                        int index463_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_58);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA463_59 = input.LA(1);

                         
                        int index463_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_59);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA463_60 = input.LA(1);

                         
                        int index463_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_60);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA463_61 = input.LA(1);

                         
                        int index463_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_61);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA463_62 = input.LA(1);

                         
                        int index463_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_62);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA463_63 = input.LA(1);

                         
                        int index463_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_63);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA463_64 = input.LA(1);

                         
                        int index463_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_64);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA463_65 = input.LA(1);

                         
                        int index463_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_65);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA463_66 = input.LA(1);

                         
                        int index463_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_66);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA463_67 = input.LA(1);

                         
                        int index463_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_67);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA463_68 = input.LA(1);

                         
                        int index463_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_68);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA463_69 = input.LA(1);

                         
                        int index463_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_69);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA463_70 = input.LA(1);

                         
                        int index463_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_70);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA463_71 = input.LA(1);

                         
                        int index463_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_71);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA463_72 = input.LA(1);

                         
                        int index463_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_72);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA463_73 = input.LA(1);

                         
                        int index463_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_73);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA463_74 = input.LA(1);

                         
                        int index463_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_74);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA463_75 = input.LA(1);

                         
                        int index463_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_75);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA463_76 = input.LA(1);

                         
                        int index463_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index463_76);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 463, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA464 extends DFA {

        public DFA464(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 464;
            this.eot = dfa_91;
            this.eof = dfa_91;
            this.min = dfa_298;
            this.max = dfa_299;
            this.accept = dfa_300;
            this.special = dfa_301;
            this.transition = dfa_302;
        }
        public String getDescription() {
            return "29725:1: (this_AnnotatedN4MemberDeclaration_0= norm1_AnnotatedN4MemberDeclaration | ( ( ( () ( ( ruleN4Modifier ) )* norm1_GetterHeader[null] ) )=>this_N4GetterDeclaration_1= norm1_N4GetterDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=>this_N4SetterDeclaration_2= norm1_N4SetterDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* ( ruleTypeVariables[null] )? ( ruleBogusTypeRefFragment[null] )? ( ( ( ( Asterisk ) ) ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ruleAsyncNoTrailingLineBreak[null] ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=>this_N4MethodDeclaration_3= norm1_N4MethodDeclaration ) | this_N4FieldDeclaration_4= norm1_N4FieldDeclaration | this_N4CallableConstructorDeclaration_5= norm1_N4CallableConstructorDeclaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA464_0 = input.LA(1);

                         
                        int index464_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA464_0>=4 && LA464_0<=126 && (s=T2S.M_38[LA464_0-(4)])>=0)) { /* 25 cases */ }
                        else if ( (LA464_0==LessThanSign) && (synpred288_InternalN4JSParser())) {s = 26;}

                        else if ( (LA464_0==Asterisk) && (synpred288_InternalN4JSParser())) {s = 27;}

                        
                        else if ((LA464_0>=6 && LA464_0<=149 && (s=T2S.M_39[LA464_0-(6)])>=0)) { /* 50 cases */ }
                        input.seek(index464_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA464_2 = input.LA(1);

                         
                        int index464_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred287_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA464_3 = input.LA(1);

                         
                        int index464_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred287_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA464_4 = input.LA(1);

                         
                        int index464_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred287_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA464_5 = input.LA(1);

                         
                        int index464_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred287_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA464_6 = input.LA(1);

                         
                        int index464_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred287_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA464_7 = input.LA(1);

                         
                        int index464_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred287_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA464_8 = input.LA(1);

                         
                        int index464_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred287_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA464_9 = input.LA(1);

                         
                        int index464_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred287_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA464_10 = input.LA(1);

                         
                        int index464_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA464_11 = input.LA(1);

                         
                        int index464_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA464_12 = input.LA(1);

                         
                        int index464_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA464_13 = input.LA(1);

                         
                        int index464_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA464_14 = input.LA(1);

                         
                        int index464_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA464_15 = input.LA(1);

                         
                        int index464_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA464_16 = input.LA(1);

                         
                        int index464_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA464_17 = input.LA(1);

                         
                        int index464_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA464_18 = input.LA(1);

                         
                        int index464_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA464_19 = input.LA(1);

                         
                        int index464_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA464_20 = input.LA(1);

                         
                        int index464_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA464_21 = input.LA(1);

                         
                        int index464_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA464_22 = input.LA(1);

                         
                        int index464_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA464_23 = input.LA(1);

                         
                        int index464_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA464_24 = input.LA(1);

                         
                        int index464_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA464_25 = input.LA(1);

                         
                        int index464_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred287_InternalN4JSParser()) ) {s = 79;}

                        else if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA464_28 = input.LA(1);

                         
                        int index464_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_28);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA464_29 = input.LA(1);

                         
                        int index464_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_29);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA464_30 = input.LA(1);

                         
                        int index464_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_30);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA464_31 = input.LA(1);

                         
                        int index464_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_31);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA464_32 = input.LA(1);

                         
                        int index464_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_32);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA464_33 = input.LA(1);

                         
                        int index464_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_33);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA464_34 = input.LA(1);

                         
                        int index464_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_34);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA464_35 = input.LA(1);

                         
                        int index464_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_35);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA464_36 = input.LA(1);

                         
                        int index464_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_36);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA464_37 = input.LA(1);

                         
                        int index464_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_37);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA464_38 = input.LA(1);

                         
                        int index464_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_38);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA464_39 = input.LA(1);

                         
                        int index464_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_39);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA464_40 = input.LA(1);

                         
                        int index464_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_40);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA464_41 = input.LA(1);

                         
                        int index464_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_41);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA464_42 = input.LA(1);

                         
                        int index464_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_42);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA464_43 = input.LA(1);

                         
                        int index464_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_43);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA464_44 = input.LA(1);

                         
                        int index464_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_44);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA464_45 = input.LA(1);

                         
                        int index464_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_45);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA464_46 = input.LA(1);

                         
                        int index464_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_46);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA464_47 = input.LA(1);

                         
                        int index464_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_47);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA464_48 = input.LA(1);

                         
                        int index464_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_48);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA464_49 = input.LA(1);

                         
                        int index464_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_49);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA464_50 = input.LA(1);

                         
                        int index464_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_50);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA464_51 = input.LA(1);

                         
                        int index464_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_51);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA464_52 = input.LA(1);

                         
                        int index464_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_52);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA464_53 = input.LA(1);

                         
                        int index464_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_53);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA464_54 = input.LA(1);

                         
                        int index464_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_54);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA464_55 = input.LA(1);

                         
                        int index464_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_55);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA464_56 = input.LA(1);

                         
                        int index464_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_56);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA464_57 = input.LA(1);

                         
                        int index464_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_57);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA464_58 = input.LA(1);

                         
                        int index464_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_58);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA464_59 = input.LA(1);

                         
                        int index464_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_59);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA464_60 = input.LA(1);

                         
                        int index464_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_60);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA464_61 = input.LA(1);

                         
                        int index464_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_61);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA464_62 = input.LA(1);

                         
                        int index464_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_62);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA464_63 = input.LA(1);

                         
                        int index464_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_63);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA464_64 = input.LA(1);

                         
                        int index464_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_64);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA464_65 = input.LA(1);

                         
                        int index464_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_65);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA464_66 = input.LA(1);

                         
                        int index464_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_66);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA464_67 = input.LA(1);

                         
                        int index464_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_67);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA464_68 = input.LA(1);

                         
                        int index464_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_68);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA464_69 = input.LA(1);

                         
                        int index464_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_69);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA464_70 = input.LA(1);

                         
                        int index464_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_70);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA464_71 = input.LA(1);

                         
                        int index464_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_71);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA464_72 = input.LA(1);

                         
                        int index464_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_72);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA464_73 = input.LA(1);

                         
                        int index464_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_73);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA464_74 = input.LA(1);

                         
                        int index464_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_74);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA464_75 = input.LA(1);

                         
                        int index464_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_75);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA464_76 = input.LA(1);

                         
                        int index464_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index464_76);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 464, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_303s = "\1\4\30\0\2\uffff\61\0\3\uffff";
    static final String dfa_304s = "\1\u0095\30\0\2\uffff\61\0\3\uffff";
    static final String dfa_305s = "\31\uffff\2\3\61\uffff\1\1\1\2\1\4";
    static final String dfa_306s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\2\uffff\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\3\uffff}>";
    static final String[] dfa_307s = {
            "\1\25\1\22\1\102\1\56\1\14\1\103\1\3\1\6\1\40\1\41\1\5\1\52\1\42\1\47\1\50\1\1\1\2\1\43\1\46\1\54\1\4\1\60\1\7\1\62\1\15\1\65\1\33\1\13\1\34\1\36\1\37\1\10\1\74\1\61\1\63\1\24\1\67\1\71\1\12\1\35\1\45\1\75\1\100\1\72\1\20\1\73\1\21\1\11\1\70\4\uffff\1\51\1\27\1\76\1\57\1\104\1\30\1\64\1\66\21\uffff\1\77\1\44\1\53\1\55\1\101\7\uffff\1\32\7\uffff\1\31\2\uffff\1\26\1\uffff\1\113\2\uffff\1\23\2\uffff\1\17\3\uffff\1\106\1\uffff\1\111\1\uffff\1\110\2\uffff\1\112\1\uffff\1\16\2\uffff\1\105\23\uffff\1\107",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_303 = DFA.unpackEncodedStringToUnsignedChars(dfa_303s);
    static final char[] dfa_304 = DFA.unpackEncodedStringToUnsignedChars(dfa_304s);
    static final short[] dfa_305 = DFA.unpackEncodedString(dfa_305s);
    static final short[] dfa_306 = DFA.unpackEncodedString(dfa_306s);
    static final short[][] dfa_307 = unpackEncodedStringArray(dfa_307s);

    class DFA476 extends DFA {

        public DFA476(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 476;
            this.eot = dfa_102;
            this.eof = dfa_102;
            this.min = dfa_303;
            this.max = dfa_304;
            this.accept = dfa_305;
            this.special = dfa_306;
            this.transition = dfa_307;
        }
        public String getDescription() {
            return "30046:1: ( ( ( ( ( () ( ( ruleN4Modifier ) )* ruleGetterHeader[null] ) )=> ( () ( (lv_declaredModifiers_2_0= ruleN4Modifier ) )* this_GetterHeader_3= ruleGetterHeader[$current] ) ) ( ( ( () LeftCurlyBracket ) )=> (lv_body_4_0= ruleBlock ) )? (otherlv_5= Semicolon )? ) | ( ( ( ( () ( ( ruleN4Modifier ) )* Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=> ( () ( (lv_declaredModifiers_7_0= ruleN4Modifier ) )* otherlv_8= Set ( ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT )=> (lv_declaredName_9_0= ruleLiteralOrComputedPropertyName ) ) ) ) otherlv_10= LeftParenthesis ( (lv_fpar_11_0= ruleFormalParameter ) ) otherlv_12= RightParenthesis ( ( ( () LeftCurlyBracket ) )=> (lv_body_13_0= ruleBlock ) )? (otherlv_14= Semicolon )? ) | ( ( ( ( () ( ( ruleN4Modifier ) )* ( ruleTypeVariables[null] )? ( ruleBogusTypeRefFragment[null] )? ( ( ( ( Asterisk ) ) ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ruleAsyncNoTrailingLineBreak[null] ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=> ( () ( (lv_declaredModifiers_16_0= ruleN4Modifier ) )* (this_TypeVariables_17= ruleTypeVariables[$current] )? (this_BogusTypeRefFragment_18= ruleBogusTypeRefFragment[$current] )? ( ( ( (lv_generator_19_0= Asterisk ) ) ( (lv_declaredName_20_0= ruleLiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsReturnAndBody_21= norm1_MethodParamsReturnAndBody[$current] ) ) | (this_AsyncNoTrailingLineBreak_22= ruleAsyncNoTrailingLineBreak[$current] ( (lv_declaredName_23_0= ruleLiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsReturnAndBody_24= ruleMethodParamsReturnAndBody[$current] ) ) ) ) ) (otherlv_25= Semicolon )? ) | ( () this_FieldDeclarationImpl_27= ruleFieldDeclarationImpl[$current] ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA476_0 = input.LA(1);

                         
                        int index476_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA476_0>=4 && LA476_0<=126 && (s=T2S.M_42[LA476_0-(4)])>=0)) { /* 24 cases */ }
                        else if ( (LA476_0==LessThanSign) && (synpred294_InternalN4JSParser())) {s = 25;}

                        else if ( (LA476_0==Asterisk) && (synpred294_InternalN4JSParser())) {s = 26;}

                        
                        else if ((LA476_0>=6 && LA476_0<=149 && (s=T2S.M_43[LA476_0-(6)])>=0)) { /* 49 cases */ }
                        input.seek(index476_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA476_1 = input.LA(1);

                         
                        int index476_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred291_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA476_2 = input.LA(1);

                         
                        int index476_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred291_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA476_3 = input.LA(1);

                         
                        int index476_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred291_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA476_4 = input.LA(1);

                         
                        int index476_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred291_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA476_5 = input.LA(1);

                         
                        int index476_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred291_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA476_6 = input.LA(1);

                         
                        int index476_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred291_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA476_7 = input.LA(1);

                         
                        int index476_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred291_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA476_8 = input.LA(1);

                         
                        int index476_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred291_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA476_9 = input.LA(1);

                         
                        int index476_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA476_10 = input.LA(1);

                         
                        int index476_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA476_11 = input.LA(1);

                         
                        int index476_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA476_12 = input.LA(1);

                         
                        int index476_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA476_13 = input.LA(1);

                         
                        int index476_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA476_14 = input.LA(1);

                         
                        int index476_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA476_15 = input.LA(1);

                         
                        int index476_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA476_16 = input.LA(1);

                         
                        int index476_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA476_17 = input.LA(1);

                         
                        int index476_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA476_18 = input.LA(1);

                         
                        int index476_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA476_19 = input.LA(1);

                         
                        int index476_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA476_20 = input.LA(1);

                         
                        int index476_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA476_21 = input.LA(1);

                         
                        int index476_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA476_22 = input.LA(1);

                         
                        int index476_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_22);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA476_23 = input.LA(1);

                         
                        int index476_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_23);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA476_24 = input.LA(1);

                         
                        int index476_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred291_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_24);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA476_27 = input.LA(1);

                         
                        int index476_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA476_28 = input.LA(1);

                         
                        int index476_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA476_29 = input.LA(1);

                         
                        int index476_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA476_30 = input.LA(1);

                         
                        int index476_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA476_31 = input.LA(1);

                         
                        int index476_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA476_32 = input.LA(1);

                         
                        int index476_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_32);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA476_33 = input.LA(1);

                         
                        int index476_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_33);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA476_34 = input.LA(1);

                         
                        int index476_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_34);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA476_35 = input.LA(1);

                         
                        int index476_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_35);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA476_36 = input.LA(1);

                         
                        int index476_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_36);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA476_37 = input.LA(1);

                         
                        int index476_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_37);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA476_38 = input.LA(1);

                         
                        int index476_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_38);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA476_39 = input.LA(1);

                         
                        int index476_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_39);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA476_40 = input.LA(1);

                         
                        int index476_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_40);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA476_41 = input.LA(1);

                         
                        int index476_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_41);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA476_42 = input.LA(1);

                         
                        int index476_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_42);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA476_43 = input.LA(1);

                         
                        int index476_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_43);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA476_44 = input.LA(1);

                         
                        int index476_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_44);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA476_45 = input.LA(1);

                         
                        int index476_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_45);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA476_46 = input.LA(1);

                         
                        int index476_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_46);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA476_47 = input.LA(1);

                         
                        int index476_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_47);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA476_48 = input.LA(1);

                         
                        int index476_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_48);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA476_49 = input.LA(1);

                         
                        int index476_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_49);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA476_50 = input.LA(1);

                         
                        int index476_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_50);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA476_51 = input.LA(1);

                         
                        int index476_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_51);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA476_52 = input.LA(1);

                         
                        int index476_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_52);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA476_53 = input.LA(1);

                         
                        int index476_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_53);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA476_54 = input.LA(1);

                         
                        int index476_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_54);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA476_55 = input.LA(1);

                         
                        int index476_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_55);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA476_56 = input.LA(1);

                         
                        int index476_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_56);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA476_57 = input.LA(1);

                         
                        int index476_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_57);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA476_58 = input.LA(1);

                         
                        int index476_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_58);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA476_59 = input.LA(1);

                         
                        int index476_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_59);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA476_60 = input.LA(1);

                         
                        int index476_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_60);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA476_61 = input.LA(1);

                         
                        int index476_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_61);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA476_62 = input.LA(1);

                         
                        int index476_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_62);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA476_63 = input.LA(1);

                         
                        int index476_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_63);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA476_64 = input.LA(1);

                         
                        int index476_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_64);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA476_65 = input.LA(1);

                         
                        int index476_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_65);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA476_66 = input.LA(1);

                         
                        int index476_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_66);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA476_67 = input.LA(1);

                         
                        int index476_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_67);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA476_68 = input.LA(1);

                         
                        int index476_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_68);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA476_69 = input.LA(1);

                         
                        int index476_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_69);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA476_70 = input.LA(1);

                         
                        int index476_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_70);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA476_71 = input.LA(1);

                         
                        int index476_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_71);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA476_72 = input.LA(1);

                         
                        int index476_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_72);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA476_73 = input.LA(1);

                         
                        int index476_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_73);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA476_74 = input.LA(1);

                         
                        int index476_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_74);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA476_75 = input.LA(1);

                         
                        int index476_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index476_75);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 476, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_308s = "\1\u0095\1\0\120\uffff";
    static final String[] dfa_309s = {
            "\61\2\4\uffff\10\2\21\uffff\5\2\5\uffff\1\2\1\uffff\1\2\6\uffff\2\2\2\uffff\3\2\2\uffff\1\1\1\uffff\2\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\2\uffff\1\2\23\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_308 = DFA.unpackEncodedStringToUnsignedChars(dfa_308s);
    static final short[][] dfa_309 = unpackEncodedStringArray(dfa_309s);

    class DFA466 extends DFA {

        public DFA466(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 466;
            this.eot = dfa_278;
            this.eof = dfa_279;
            this.min = dfa_280;
            this.max = dfa_308;
            this.accept = dfa_282;
            this.special = dfa_283;
            this.transition = dfa_309;
        }
        public String getDescription() {
            return "30087:3: ( ( ( () LeftCurlyBracket ) )=> (lv_body_4_0= ruleBlock ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA466_1 = input.LA(1);

                         
                        int index466_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred290_InternalN4JSParser()) ) {s = 81;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index466_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 466, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA469 extends DFA {

        public DFA469(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 469;
            this.eot = dfa_278;
            this.eof = dfa_279;
            this.min = dfa_280;
            this.max = dfa_308;
            this.accept = dfa_282;
            this.special = dfa_283;
            this.transition = dfa_309;
        }
        public String getDescription() {
            return "30517:1: ( ( ( () LeftCurlyBracket ) )=> (lv_body_13_0= ruleBlock ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA469_1 = input.LA(1);

                         
                        int index469_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred293_InternalN4JSParser()) ) {s = 81;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index469_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 469, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_310s = "\1\4\1\uffff\10\4\1\uffff";
    static final String dfa_311s = "\1\u0095\1\uffff\10\u0095\1\uffff";
    static final String dfa_312s = "\1\uffff\1\2\10\uffff\1\1";
    static final String[] dfa_313s = {
            "\6\1\1\10\1\5\2\1\1\4\4\1\1\7\1\3\3\1\1\11\1\1\1\6\10\1\1\2\21\1\4\uffff\10\1\21\uffff\5\1\7\uffff\1\1\7\uffff\1\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\2\uffff\1\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\23\uffff\1\1",
            "",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            ""
    };
    static final char[] dfa_310 = DFA.unpackEncodedStringToUnsignedChars(dfa_310s);
    static final char[] dfa_311 = DFA.unpackEncodedStringToUnsignedChars(dfa_311s);
    static final short[] dfa_312 = DFA.unpackEncodedString(dfa_312s);
    static final short[][] dfa_313 = unpackEncodedStringArray(dfa_313s);

    class DFA471 extends DFA {

        public DFA471(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 471;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_310;
            this.max = dfa_311;
            this.accept = dfa_312;
            this.special = dfa_17;
            this.transition = dfa_313;
        }
        public String getDescription() {
            return "()* loopback of 30575:2: ( (lv_declaredModifiers_16_0= ruleN4Modifier ) )*";
        }
    }

    class DFA473 extends DFA {

        public DFA473(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 473;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "30605:3: (this_BogusTypeRefFragment_18= ruleBogusTypeRefFragment[$current] )?";
        }
    }

    class DFA488 extends DFA {

        public DFA488(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 488;
            this.eot = dfa_102;
            this.eof = dfa_102;
            this.min = dfa_303;
            this.max = dfa_304;
            this.accept = dfa_305;
            this.special = dfa_306;
            this.transition = dfa_307;
        }
        public String getDescription() {
            return "30756:1: ( ( ( ( ( () ( ( ruleN4Modifier ) )* norm1_GetterHeader[null] ) )=> ( () ( (lv_declaredModifiers_2_0= ruleN4Modifier ) )* this_GetterHeader_3= norm1_GetterHeader[$current] ) ) ( ( ( () LeftCurlyBracket ) )=> (lv_body_4_0= norm1_Block ) )? (otherlv_5= Semicolon )? ) | ( ( ( ( () ( ( ruleN4Modifier ) )* Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=> ( () ( (lv_declaredModifiers_7_0= ruleN4Modifier ) )* otherlv_8= Set ( ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT )=> (lv_declaredName_9_0= norm1_LiteralOrComputedPropertyName ) ) ) ) otherlv_10= LeftParenthesis ( (lv_fpar_11_0= norm1_FormalParameter ) ) otherlv_12= RightParenthesis ( ( ( () LeftCurlyBracket ) )=> (lv_body_13_0= norm1_Block ) )? (otherlv_14= Semicolon )? ) | ( ( ( ( () ( ( ruleN4Modifier ) )* ( ruleTypeVariables[null] )? ( ruleBogusTypeRefFragment[null] )? ( ( ( ( Asterisk ) ) ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ruleAsyncNoTrailingLineBreak[null] ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=> ( () ( (lv_declaredModifiers_16_0= ruleN4Modifier ) )* (this_TypeVariables_17= ruleTypeVariables[$current] )? (this_BogusTypeRefFragment_18= ruleBogusTypeRefFragment[$current] )? ( ( ( (lv_generator_19_0= Asterisk ) ) ( (lv_declaredName_20_0= norm1_LiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsReturnAndBody_21= norm1_MethodParamsReturnAndBody[$current] ) ) | (this_AsyncNoTrailingLineBreak_22= ruleAsyncNoTrailingLineBreak[$current] ( (lv_declaredName_23_0= norm1_LiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsReturnAndBody_24= ruleMethodParamsReturnAndBody[$current] ) ) ) ) ) (otherlv_25= Semicolon )? ) | ( () this_FieldDeclarationImpl_27= norm1_FieldDeclarationImpl[$current] ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA488_0 = input.LA(1);

                         
                        int index488_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA488_0>=4 && LA488_0<=126 && (s=T2S.M_42[LA488_0-(4)])>=0)) { /* 24 cases */ }
                        else if ( (LA488_0==LessThanSign) && (synpred302_InternalN4JSParser())) {s = 25;}

                        else if ( (LA488_0==Asterisk) && (synpred302_InternalN4JSParser())) {s = 26;}

                        
                        else if ((LA488_0>=6 && LA488_0<=149 && (s=T2S.M_43[LA488_0-(6)])>=0)) { /* 49 cases */ }
                        input.seek(index488_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA488_1 = input.LA(1);

                         
                        int index488_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred299_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA488_2 = input.LA(1);

                         
                        int index488_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred299_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA488_3 = input.LA(1);

                         
                        int index488_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred299_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA488_4 = input.LA(1);

                         
                        int index488_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred299_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA488_5 = input.LA(1);

                         
                        int index488_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred299_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA488_6 = input.LA(1);

                         
                        int index488_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred299_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA488_7 = input.LA(1);

                         
                        int index488_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred299_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA488_8 = input.LA(1);

                         
                        int index488_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred299_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA488_9 = input.LA(1);

                         
                        int index488_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA488_10 = input.LA(1);

                         
                        int index488_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA488_11 = input.LA(1);

                         
                        int index488_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA488_12 = input.LA(1);

                         
                        int index488_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA488_13 = input.LA(1);

                         
                        int index488_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA488_14 = input.LA(1);

                         
                        int index488_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA488_15 = input.LA(1);

                         
                        int index488_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA488_16 = input.LA(1);

                         
                        int index488_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA488_17 = input.LA(1);

                         
                        int index488_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA488_18 = input.LA(1);

                         
                        int index488_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA488_19 = input.LA(1);

                         
                        int index488_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA488_20 = input.LA(1);

                         
                        int index488_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA488_21 = input.LA(1);

                         
                        int index488_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA488_22 = input.LA(1);

                         
                        int index488_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_22);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA488_23 = input.LA(1);

                         
                        int index488_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_23);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA488_24 = input.LA(1);

                         
                        int index488_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalN4JSParser()) ) {s = 77;}

                        else if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_24);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA488_27 = input.LA(1);

                         
                        int index488_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA488_28 = input.LA(1);

                         
                        int index488_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA488_29 = input.LA(1);

                         
                        int index488_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA488_30 = input.LA(1);

                         
                        int index488_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA488_31 = input.LA(1);

                         
                        int index488_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA488_32 = input.LA(1);

                         
                        int index488_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_32);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA488_33 = input.LA(1);

                         
                        int index488_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_33);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA488_34 = input.LA(1);

                         
                        int index488_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_34);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA488_35 = input.LA(1);

                         
                        int index488_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_35);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA488_36 = input.LA(1);

                         
                        int index488_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_36);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA488_37 = input.LA(1);

                         
                        int index488_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_37);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA488_38 = input.LA(1);

                         
                        int index488_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_38);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA488_39 = input.LA(1);

                         
                        int index488_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_39);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA488_40 = input.LA(1);

                         
                        int index488_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_40);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA488_41 = input.LA(1);

                         
                        int index488_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_41);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA488_42 = input.LA(1);

                         
                        int index488_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_42);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA488_43 = input.LA(1);

                         
                        int index488_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_43);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA488_44 = input.LA(1);

                         
                        int index488_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_44);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA488_45 = input.LA(1);

                         
                        int index488_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_45);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA488_46 = input.LA(1);

                         
                        int index488_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_46);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA488_47 = input.LA(1);

                         
                        int index488_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_47);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA488_48 = input.LA(1);

                         
                        int index488_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_48);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA488_49 = input.LA(1);

                         
                        int index488_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_49);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA488_50 = input.LA(1);

                         
                        int index488_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_50);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA488_51 = input.LA(1);

                         
                        int index488_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_51);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA488_52 = input.LA(1);

                         
                        int index488_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_52);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA488_53 = input.LA(1);

                         
                        int index488_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_53);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA488_54 = input.LA(1);

                         
                        int index488_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_54);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA488_55 = input.LA(1);

                         
                        int index488_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_55);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA488_56 = input.LA(1);

                         
                        int index488_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_56);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA488_57 = input.LA(1);

                         
                        int index488_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_57);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA488_58 = input.LA(1);

                         
                        int index488_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_58);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA488_59 = input.LA(1);

                         
                        int index488_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_59);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA488_60 = input.LA(1);

                         
                        int index488_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_60);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA488_61 = input.LA(1);

                         
                        int index488_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_61);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA488_62 = input.LA(1);

                         
                        int index488_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_62);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA488_63 = input.LA(1);

                         
                        int index488_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_63);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA488_64 = input.LA(1);

                         
                        int index488_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_64);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA488_65 = input.LA(1);

                         
                        int index488_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_65);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA488_66 = input.LA(1);

                         
                        int index488_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_66);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA488_67 = input.LA(1);

                         
                        int index488_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_67);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA488_68 = input.LA(1);

                         
                        int index488_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_68);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA488_69 = input.LA(1);

                         
                        int index488_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_69);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA488_70 = input.LA(1);

                         
                        int index488_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_70);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA488_71 = input.LA(1);

                         
                        int index488_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_71);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA488_72 = input.LA(1);

                         
                        int index488_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_72);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA488_73 = input.LA(1);

                         
                        int index488_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_73);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA488_74 = input.LA(1);

                         
                        int index488_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_74);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA488_75 = input.LA(1);

                         
                        int index488_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index488_75);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 488, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_314s = "\1\4\1\0\117\uffff";
    static final String dfa_315s = "\1\u0095\1\0\117\uffff";
    static final String dfa_316s = "\2\uffff\1\2\115\uffff\1\1";
    static final String dfa_317s = "\1\uffff\1\0\117\uffff}>";
    static final String[] dfa_318s = {
            "\61\2\4\uffff\10\2\21\uffff\5\2\5\uffff\1\2\1\uffff\1\2\6\uffff\2\2\2\uffff\3\2\2\uffff\1\1\1\uffff\2\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\2\uffff\1\2\23\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_314 = DFA.unpackEncodedStringToUnsignedChars(dfa_314s);
    static final char[] dfa_315 = DFA.unpackEncodedStringToUnsignedChars(dfa_315s);
    static final short[] dfa_316 = DFA.unpackEncodedString(dfa_316s);
    static final short[] dfa_317 = DFA.unpackEncodedString(dfa_317s);
    static final short[][] dfa_318 = unpackEncodedStringArray(dfa_318s);

    class DFA478 extends DFA {

        public DFA478(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 478;
            this.eot = dfa_91;
            this.eof = dfa_91;
            this.min = dfa_314;
            this.max = dfa_315;
            this.accept = dfa_316;
            this.special = dfa_317;
            this.transition = dfa_318;
        }
        public String getDescription() {
            return "30797:3: ( ( ( () LeftCurlyBracket ) )=> (lv_body_4_0= norm1_Block ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA478_1 = input.LA(1);

                         
                        int index478_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred298_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index478_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 478, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA481 extends DFA {

        public DFA481(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 481;
            this.eot = dfa_91;
            this.eof = dfa_91;
            this.min = dfa_314;
            this.max = dfa_315;
            this.accept = dfa_316;
            this.special = dfa_317;
            this.transition = dfa_318;
        }
        public String getDescription() {
            return "31227:1: ( ( ( () LeftCurlyBracket ) )=> (lv_body_13_0= norm1_Block ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA481_1 = input.LA(1);

                         
                        int index481_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index481_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 481, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA483 extends DFA {

        public DFA483(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 483;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_310;
            this.max = dfa_311;
            this.accept = dfa_312;
            this.special = dfa_17;
            this.transition = dfa_313;
        }
        public String getDescription() {
            return "()* loopback of 31285:2: ( (lv_declaredModifiers_16_0= ruleN4Modifier ) )*";
        }
    }

    class DFA485 extends DFA {

        public DFA485(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 485;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "31315:3: (this_BogusTypeRefFragment_18= ruleBogusTypeRefFragment[$current] )?";
        }
    }
    static final String dfa_319s = "\2\uffff\10\1\1\uffff";
    static final String dfa_320s = "\1\u0095\1\uffff\10\u0099\1\uffff";
    static final String[] dfa_321s = {
            "\6\1\1\10\1\5\2\1\1\4\4\1\1\7\1\3\3\1\1\11\1\1\1\6\10\1\1\2\21\1\4\uffff\10\1\21\uffff\5\1\22\uffff\1\1\1\uffff\1\1\2\uffff\1\1\2\uffff\1\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\23\uffff\1\1",
            "",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            ""
    };
    static final short[] dfa_319 = DFA.unpackEncodedString(dfa_319s);
    static final char[] dfa_320 = DFA.unpackEncodedStringToUnsignedChars(dfa_320s);
    static final short[][] dfa_321 = unpackEncodedStringArray(dfa_321s);

    class DFA489 extends DFA {

        public DFA489(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 489;
            this.eot = dfa_13;
            this.eof = dfa_319;
            this.min = dfa_310;
            this.max = dfa_320;
            this.accept = dfa_312;
            this.special = dfa_17;
            this.transition = dfa_321;
        }
        public String getDescription() {
            return "()* loopback of 31457:2: ( (lv_declaredModifiers_0_0= ruleN4Modifier ) )*";
        }
    }
    static final String dfa_322s = "\1\uffff\6\15\1\uffff\5\15\1\uffff";
    static final String dfa_323s = "\1\u0095\6\u0099\1\uffff\5\u0099\1\uffff";
    static final String[] dfa_324s = {
            "\1\14\1\12\2\15\1\4\23\15\1\5\2\15\1\3\7\15\1\13\2\15\1\2\5\15\1\10\1\15\1\11\1\1\1\15\4\uffff\10\15\21\uffff\5\15\22\uffff\1\7\1\uffff\1\15\2\uffff\1\7\2\uffff\1\7\3\uffff\1\15\1\uffff\1\15\1\uffff\1\15\2\uffff\1\15\1\uffff\1\6\2\uffff\1\15\23\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\2\15\1\7\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\2\15\1\7\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\2\15\1\7\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\2\15\1\7\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\2\15\1\7\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\2\uffff\1\7\1\uffff\2\15\1\7\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\2\15\1\uffff\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "\2\15\1\uffff\1\15\6\uffff\1\7\1\uffff\1\15\46\uffff\1\15\1\uffff\1\15",
            "\2\15\1\uffff\1\15\6\uffff\1\7\1\uffff\1\15\46\uffff\1\15\1\uffff\1\15",
            "\2\15\1\uffff\1\15\6\uffff\1\7\1\uffff\1\15\46\uffff\1\15\1\uffff\1\15",
            "\2\15\1\uffff\1\15\6\uffff\1\7\1\uffff\1\15\46\uffff\1\15\1\uffff\1\15",
            ""
    };
    static final short[] dfa_322 = DFA.unpackEncodedString(dfa_322s);
    static final char[] dfa_323 = DFA.unpackEncodedStringToUnsignedChars(dfa_323s);
    static final short[][] dfa_324 = unpackEncodedStringArray(dfa_324s);

    class DFA490 extends DFA {

        public DFA490(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 490;
            this.eot = dfa_7;
            this.eof = dfa_322;
            this.min = dfa_188;
            this.max = dfa_323;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_324;
        }
        public String getDescription() {
            return "31475:3: (this_BogusTypeRefFragment_1= ruleBogusTypeRefFragment[$current] )?";
        }
    }

    class DFA493 extends DFA {

        public DFA493(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 493;
            this.eot = dfa_13;
            this.eof = dfa_319;
            this.min = dfa_310;
            this.max = dfa_320;
            this.accept = dfa_312;
            this.special = dfa_17;
            this.transition = dfa_321;
        }
        public String getDescription() {
            return "()* loopback of 31561:2: ( (lv_declaredModifiers_0_0= ruleN4Modifier ) )*";
        }
    }

    class DFA494 extends DFA {

        public DFA494(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 494;
            this.eot = dfa_7;
            this.eof = dfa_322;
            this.min = dfa_188;
            this.max = dfa_323;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_324;
        }
        public String getDescription() {
            return "31579:3: (this_BogusTypeRefFragment_1= ruleBogusTypeRefFragment[$current] )?";
        }
    }

    class DFA497 extends DFA {

        public DFA497(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 497;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_310;
            this.max = dfa_311;
            this.accept = dfa_312;
            this.special = dfa_17;
            this.transition = dfa_313;
        }
        public String getDescription() {
            return "()* loopback of 31774:2: ( (lv_declaredModifiers_1_0= ruleN4Modifier ) )*";
        }
    }

    class DFA499 extends DFA {

        public DFA499(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 499;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "31804:3: (this_BogusTypeRefFragment_3= ruleBogusTypeRefFragment[$current] )?";
        }
    }

    class DFA502 extends DFA {

        public DFA502(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 502;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_310;
            this.max = dfa_311;
            this.accept = dfa_312;
            this.special = dfa_17;
            this.transition = dfa_313;
        }
        public String getDescription() {
            return "()* loopback of 31958:2: ( (lv_declaredModifiers_1_0= ruleN4Modifier ) )*";
        }
    }

    class DFA504 extends DFA {

        public DFA504(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 504;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "31988:3: (this_BogusTypeRefFragment_3= ruleBogusTypeRefFragment[$current] )?";
        }
    }

    class DFA512 extends DFA {

        public DFA512(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 512;
            this.eot = dfa_278;
            this.eof = dfa_279;
            this.min = dfa_280;
            this.max = dfa_308;
            this.accept = dfa_282;
            this.special = dfa_283;
            this.transition = dfa_309;
        }
        public String getDescription() {
            return "32306:4: ( ( ( () LeftCurlyBracket ) )=> (lv_body_3_0= ruleBlock ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA512_1 = input.LA(1);

                         
                        int index512_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred313_InternalN4JSParser()) ) {s = 81;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index512_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 512, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA514 extends DFA {

        public DFA514(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 514;
            this.eot = dfa_278;
            this.eof = dfa_279;
            this.min = dfa_280;
            this.max = dfa_308;
            this.accept = dfa_282;
            this.special = dfa_283;
            this.transition = dfa_309;
        }
        public String getDescription() {
            return "32375:4: ( ( ( () LeftCurlyBracket ) )=> (lv_body_3_0= norm1_Block ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA514_1 = input.LA(1);

                         
                        int index514_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalN4JSParser()) ) {s = 81;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index514_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 514, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA516 extends DFA {

        public DFA516(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 516;
            this.eot = dfa_278;
            this.eof = dfa_279;
            this.min = dfa_280;
            this.max = dfa_308;
            this.accept = dfa_282;
            this.special = dfa_283;
            this.transition = dfa_309;
        }
        public String getDescription() {
            return "32458:3: ( ( ( () LeftCurlyBracket ) )=> (lv_body_3_0= ruleBlock ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA516_1 = input.LA(1);

                         
                        int index516_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalN4JSParser()) ) {s = 81;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index516_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 516, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA519 extends DFA {

        public DFA519(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 519;
            this.eot = dfa_91;
            this.eof = dfa_91;
            this.min = dfa_314;
            this.max = dfa_315;
            this.accept = dfa_316;
            this.special = dfa_317;
            this.transition = dfa_318;
        }
        public String getDescription() {
            return "32538:3: ( ( ( () LeftCurlyBracket ) )=> (lv_body_3_0= norm1_Block ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA519_1 = input.LA(1);

                         
                        int index519_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index519_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 519, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA526 extends DFA {

        public DFA526(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 526;
            this.eot = dfa_278;
            this.eof = dfa_279;
            this.min = dfa_280;
            this.max = dfa_308;
            this.accept = dfa_282;
            this.special = dfa_283;
            this.transition = dfa_309;
        }
        public String getDescription() {
            return "33380:1: ( ( ( () LeftCurlyBracket ) )=> (lv_body_7_0= ruleBlock ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA526_1 = input.LA(1);

                         
                        int index526_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalN4JSParser()) ) {s = 81;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index526_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 526, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA529 extends DFA {

        public DFA529(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 529;
            this.eot = dfa_91;
            this.eof = dfa_91;
            this.min = dfa_314;
            this.max = dfa_315;
            this.accept = dfa_316;
            this.special = dfa_317;
            this.transition = dfa_318;
        }
        public String getDescription() {
            return "33822:1: ( ( ( () LeftCurlyBracket ) )=> (lv_body_7_0= norm1_Block ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA529_1 = input.LA(1);

                         
                        int index529_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalN4JSParser()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index529_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 529, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_325s = "\1\154\1\176\1\uffff\1\176\1\uffff";
    static final String[] dfa_326s = {
            "\1\1\13\uffff\1\2",
            "\3\4\1\uffff\4\4\2\uffff\1\4\4\uffff\2\4\3\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\7\uffff\1\4\1\uffff\2\4\3\uffff\1\4\3\uffff\1\4\3\uffff\1\4\3\uffff\2\4\1\uffff\2\4\23\uffff\1\4\3\uffff\1\4\11\uffff\1\3\11\uffff\2\4\1\2\1\uffff\1\4\17\uffff\1\4",
            "",
            "\3\4\1\uffff\4\4\2\uffff\1\4\4\uffff\2\4\3\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\7\uffff\1\4\1\uffff\2\4\3\uffff\1\4\3\uffff\1\4\3\uffff\1\4\3\uffff\2\4\1\uffff\2\4\23\uffff\1\4\3\uffff\1\4\11\uffff\1\3\11\uffff\2\4\1\2\1\uffff\1\4\17\uffff\1\4",
            ""
    };
    static final char[] dfa_325 = DFA.unpackEncodedStringToUnsignedChars(dfa_325s);
    static final short[][] dfa_326 = unpackEncodedStringArray(dfa_326s);

    class DFA539 extends DFA {

        public DFA539(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 539;
            this.eot = dfa_171;
            this.eof = dfa_171;
            this.min = dfa_172;
            this.max = dfa_325;
            this.accept = dfa_174;
            this.special = dfa_175;
            this.transition = dfa_326;
        }
        public String getDescription() {
            return "()* loopback of 34136:2: (otherlv_4= Comma ( (lv_elements_5_0= ruleElision ) )* ( (lv_elements_6_0= ruleBindingRestElement ) ) )*";
        }
    }
    static final String[] dfa_327s = {
            "\1\1\13\uffff\1\2",
            "\3\4\1\uffff\4\4\2\uffff\1\4\4\uffff\2\4\3\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\7\uffff\1\4\2\uffff\1\4\3\uffff\1\4\3\uffff\1\4\3\uffff\1\4\3\uffff\2\4\1\uffff\2\4\23\uffff\1\4\3\uffff\1\4\11\uffff\1\3\11\uffff\2\4\1\2\1\uffff\1\4\17\uffff\1\4",
            "",
            "\3\4\1\uffff\4\4\2\uffff\1\4\4\uffff\2\4\3\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\7\uffff\1\4\2\uffff\1\4\3\uffff\1\4\3\uffff\1\4\3\uffff\1\4\3\uffff\2\4\1\uffff\2\4\23\uffff\1\4\3\uffff\1\4\11\uffff\1\3\11\uffff\2\4\1\2\1\uffff\1\4\17\uffff\1\4",
            ""
    };
    static final short[][] dfa_327 = unpackEncodedStringArray(dfa_327s);

    class DFA545 extends DFA {

        public DFA545(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 545;
            this.eot = dfa_171;
            this.eof = dfa_171;
            this.min = dfa_172;
            this.max = dfa_325;
            this.accept = dfa_174;
            this.special = dfa_175;
            this.transition = dfa_327;
        }
        public String getDescription() {
            return "()* loopback of 34265:2: (otherlv_4= Comma ( (lv_elements_5_0= ruleElision ) )* ( (lv_elements_6_0= norm1_BindingRestElement ) ) )*";
        }
    }
    static final String dfa_328s = "\111\uffff";
    static final String dfa_329s = "\1\uffff\1\107\40\uffff\1\107\4\uffff\31\107\11\uffff";
    static final String dfa_330s = "\1\4\1\140\40\uffff\1\140\4\uffff\31\140\11\uffff";
    static final String dfa_331s = "\1\u0095\1\160\40\uffff\1\160\4\uffff\31\160\11\uffff";
    static final String dfa_332s = "\2\uffff\40\1\1\uffff\4\1\31\uffff\7\1\1\2\1\1";
    static final String dfa_333s = "\1\15\1\33\40\uffff\1\16\4\uffff\1\6\1\12\1\17\1\22\1\25\1\30\1\0\1\3\1\7\1\13\1\20\1\23\1\26\1\31\1\1\1\4\1\10\1\14\1\21\1\24\1\27\1\32\1\2\1\5\1\11\11\uffff}>";
    static final String[] dfa_334s = {
            "\1\65\1\60\1\72\1\25\1\67\1\73\1\75\1\54\1\7\1\10\1\53\1\21\1\11\1\16\1\17\1\74\1\52\1\12\1\15\1\23\1\76\1\27\1\55\1\31\1\62\1\35\1\71\1\70\1\2\1\4\1\5\1\6\1\45\1\30\1\33\1\64\1\40\1\42\1\66\1\3\1\14\1\46\1\57\1\43\1\32\1\44\1\63\1\37\1\41\4\uffff\1\20\1\47\1\51\1\26\1\77\1\50\1\34\1\36\21\uffff\1\56\1\13\1\22\1\24\1\61\23\uffff\1\107\1\106\11\uffff\1\101\1\uffff\1\104\1\uffff\1\103\2\uffff\1\105\1\uffff\1\1\2\uffff\1\100\23\uffff\1\102",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "",
            "",
            "",
            "",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_328 = DFA.unpackEncodedString(dfa_328s);
    static final short[] dfa_329 = DFA.unpackEncodedString(dfa_329s);
    static final char[] dfa_330 = DFA.unpackEncodedStringToUnsignedChars(dfa_330s);
    static final char[] dfa_331 = DFA.unpackEncodedStringToUnsignedChars(dfa_331s);
    static final short[] dfa_332 = DFA.unpackEncodedString(dfa_332s);
    static final short[] dfa_333 = DFA.unpackEncodedString(dfa_333s);
    static final short[][] dfa_334 = unpackEncodedStringArray(dfa_334s);

    class DFA549 extends DFA {

        public DFA549(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 549;
            this.eot = dfa_328;
            this.eof = dfa_329;
            this.min = dfa_330;
            this.max = dfa_331;
            this.accept = dfa_332;
            this.special = dfa_333;
            this.transition = dfa_334;
        }
        public String getDescription() {
            return "34355:1: ( ( ( ( ( ( ( ruleLiteralOrComputedPropertyName ) ) Colon ) )=> ( ( (lv_declaredName_0_0= ruleLiteralOrComputedPropertyName ) ) otherlv_1= Colon ) ) ( (lv_value_2_0= ruleBindingElement ) ) ) | ( (lv_value_3_0= ruleSingleNameBinding ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA549_45 = input.LA(1);

                         
                        int index549_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_45==EOF||LA549_45==Comma||LA549_45==EqualsSign||LA549_45==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA549_45==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index549_45);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA549_53 = input.LA(1);

                         
                        int index549_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_53==EOF||LA549_53==Comma||LA549_53==EqualsSign||LA549_53==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA549_53==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index549_53);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA549_61 = input.LA(1);

                         
                        int index549_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_61==EOF||LA549_61==Comma||LA549_61==EqualsSign||LA549_61==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA549_61==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index549_61);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA549_46 = input.LA(1);

                         
                        int index549_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_46==EOF||LA549_46==Comma||LA549_46==EqualsSign||LA549_46==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA549_46==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index549_46);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA549_54 = input.LA(1);

                         
                        int index549_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_54==EOF||LA549_54==Comma||LA549_54==EqualsSign||LA549_54==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA549_54==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index549_54);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA549_62 = input.LA(1);

                         
                        int index549_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_62==EOF||LA549_62==Comma||LA549_62==EqualsSign||LA549_62==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA549_62==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index549_62);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA549_39 = input.LA(1);

                         
                        int index549_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_39==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                        else if ( (LA549_39==EOF||LA549_39==Comma||LA549_39==EqualsSign||LA549_39==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index549_39);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA549_47 = input.LA(1);

                         
                        int index549_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_47==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                        else if ( (LA549_47==EOF||LA549_47==Comma||LA549_47==EqualsSign||LA549_47==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index549_47);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA549_55 = input.LA(1);

                         
                        int index549_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_55==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                        else if ( (LA549_55==EOF||LA549_55==Comma||LA549_55==EqualsSign||LA549_55==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index549_55);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA549_63 = input.LA(1);

                         
                        int index549_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_63==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                        else if ( (LA549_63==EOF||LA549_63==Comma||LA549_63==EqualsSign||LA549_63==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index549_63);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA549_40 = input.LA(1);

                         
                        int index549_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_40==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                        else if ( (LA549_40==EOF||LA549_40==Comma||LA549_40==EqualsSign||LA549_40==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index549_40);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA549_48 = input.LA(1);

                         
                        int index549_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_48==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                        else if ( (LA549_48==EOF||LA549_48==Comma||LA549_48==EqualsSign||LA549_48==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index549_48);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA549_56 = input.LA(1);

                         
                        int index549_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_56==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                        else if ( (LA549_56==EOF||LA549_56==Comma||LA549_56==EqualsSign||LA549_56==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index549_56);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA549_0 = input.LA(1);

                         
                        int index549_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_0==RULE_IDENTIFIER) ) {s = 1;}

                        
                        else if ((LA549_0>=7 && LA549_0<=126 && (s=T2S.M_46[LA549_0-(7)])>=0) && (synpred327_InternalN4JSParser())) { /* 33 cases */ }
                        else if ( (LA549_0==Yield) ) {s = 34;}

                        else if ( (LA549_0==Null) && (synpred327_InternalN4JSParser())) {s = 35;}

                        else if ( (LA549_0==True) && (synpred327_InternalN4JSParser())) {s = 36;}

                        else if ( (LA549_0==False) && (synpred327_InternalN4JSParser())) {s = 37;}

                        else if ( (LA549_0==Enum) && (synpred327_InternalN4JSParser())) {s = 38;}

                        
                        else if ((LA549_0>=4 && LA549_0<=86 && (s=T2S.M_47[LA549_0-(4)])>=0)) { /* 25 cases */ }
                        else if ( (LA549_0==RULE_STRING) && (synpred327_InternalN4JSParser())) {s = 64;}

                        else if ( (LA549_0==RULE_DOUBLE) && (synpred327_InternalN4JSParser())) {s = 65;}

                        else if ( (LA549_0==RULE_INT) && (synpred327_InternalN4JSParser())) {s = 66;}

                        else if ( (LA549_0==RULE_OCTAL_INT) && (synpred327_InternalN4JSParser())) {s = 67;}

                        else if ( (LA549_0==RULE_HEX_INT) && (synpred327_InternalN4JSParser())) {s = 68;}

                        else if ( (LA549_0==RULE_SCIENTIFIC_INT) && (synpred327_InternalN4JSParser())) {s = 69;}

                        else if ( (LA549_0==LeftSquareBracket) && (synpred327_InternalN4JSParser())) {s = 70;}

                        else if ( (LA549_0==CommercialAt) ) {s = 71;}

                         
                        input.seek(index549_0);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA549_34 = input.LA(1);

                         
                        int index549_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_34==EOF||LA549_34==Comma||LA549_34==EqualsSign||LA549_34==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA549_34==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index549_34);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA549_41 = input.LA(1);

                         
                        int index549_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_41==EOF||LA549_41==Comma||LA549_41==EqualsSign||LA549_41==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA549_41==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index549_41);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA549_49 = input.LA(1);

                         
                        int index549_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_49==EOF||LA549_49==Comma||LA549_49==EqualsSign||LA549_49==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA549_49==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index549_49);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA549_57 = input.LA(1);

                         
                        int index549_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_57==EOF||LA549_57==Comma||LA549_57==EqualsSign||LA549_57==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA549_57==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index549_57);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA549_42 = input.LA(1);

                         
                        int index549_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_42==EOF||LA549_42==Comma||LA549_42==EqualsSign||LA549_42==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA549_42==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index549_42);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA549_50 = input.LA(1);

                         
                        int index549_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_50==EOF||LA549_50==Comma||LA549_50==EqualsSign||LA549_50==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA549_50==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index549_50);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA549_58 = input.LA(1);

                         
                        int index549_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_58==EOF||LA549_58==Comma||LA549_58==EqualsSign||LA549_58==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA549_58==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index549_58);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA549_43 = input.LA(1);

                         
                        int index549_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_43==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                        else if ( (LA549_43==EOF||LA549_43==Comma||LA549_43==EqualsSign||LA549_43==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index549_43);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA549_51 = input.LA(1);

                         
                        int index549_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_51==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                        else if ( (LA549_51==EOF||LA549_51==Comma||LA549_51==EqualsSign||LA549_51==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index549_51);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA549_59 = input.LA(1);

                         
                        int index549_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_59==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                        else if ( (LA549_59==EOF||LA549_59==Comma||LA549_59==EqualsSign||LA549_59==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index549_59);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA549_44 = input.LA(1);

                         
                        int index549_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_44==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                        else if ( (LA549_44==EOF||LA549_44==Comma||LA549_44==EqualsSign||LA549_44==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index549_44);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA549_52 = input.LA(1);

                         
                        int index549_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_52==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                        else if ( (LA549_52==EOF||LA549_52==Comma||LA549_52==EqualsSign||LA549_52==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index549_52);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA549_60 = input.LA(1);

                         
                        int index549_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_60==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                        else if ( (LA549_60==EOF||LA549_60==Comma||LA549_60==EqualsSign||LA549_60==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index549_60);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA549_1 = input.LA(1);

                         
                        int index549_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA549_1==EOF||LA549_1==Comma||LA549_1==EqualsSign||LA549_1==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA549_1==Colon) && (synpred327_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index549_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 549, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_335s = "\1\4\1\140\45\uffff\31\140\11\uffff";
    static final String dfa_336s = "\1\u0095\1\160\45\uffff\31\160\11\uffff";
    static final String dfa_337s = "\2\uffff\45\1\31\uffff\7\1\1\2\1\1";
    static final String dfa_338s = "\1\20\1\32\45\uffff\1\6\1\12\1\15\1\21\1\24\1\27\1\0\1\3\1\7\1\13\1\16\1\22\1\25\1\30\1\1\1\4\1\10\1\14\1\17\1\23\1\26\1\31\1\2\1\5\1\11\11\uffff}>";
    static final String[] dfa_339s = {
            "\1\65\1\60\1\72\1\25\1\67\1\73\1\75\1\54\1\7\1\10\1\53\1\21\1\11\1\16\1\17\1\74\1\52\1\12\1\15\1\23\1\76\1\27\1\55\1\31\1\62\1\35\1\71\1\70\1\2\1\4\1\5\1\6\1\45\1\30\1\33\1\64\1\40\1\42\1\66\1\3\1\14\1\46\1\57\1\43\1\32\1\44\1\63\1\37\1\41\4\uffff\1\20\1\47\1\51\1\26\1\77\1\50\1\34\1\36\21\uffff\1\56\1\13\1\22\1\24\1\61\23\uffff\1\107\1\106\11\uffff\1\101\1\uffff\1\104\1\uffff\1\103\2\uffff\1\105\1\uffff\1\1\2\uffff\1\100\23\uffff\1\102",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_335 = DFA.unpackEncodedStringToUnsignedChars(dfa_335s);
    static final char[] dfa_336 = DFA.unpackEncodedStringToUnsignedChars(dfa_336s);
    static final short[] dfa_337 = DFA.unpackEncodedString(dfa_337s);
    static final short[] dfa_338 = DFA.unpackEncodedString(dfa_338s);
    static final short[][] dfa_339 = unpackEncodedStringArray(dfa_339s);

    class DFA550 extends DFA {

        public DFA550(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 550;
            this.eot = dfa_328;
            this.eof = dfa_328;
            this.min = dfa_335;
            this.max = dfa_336;
            this.accept = dfa_337;
            this.special = dfa_338;
            this.transition = dfa_339;
        }
        public String getDescription() {
            return "34434:1: ( ( ( ( ( ( ( norm1_LiteralOrComputedPropertyName ) ) Colon ) )=> ( ( (lv_declaredName_0_0= norm1_LiteralOrComputedPropertyName ) ) otherlv_1= Colon ) ) ( (lv_value_2_0= norm1_BindingElement ) ) ) | ( (lv_value_3_0= norm1_SingleNameBinding ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA550_45 = input.LA(1);

                         
                        int index550_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_45==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                        else if ( (LA550_45==Comma||LA550_45==EqualsSign||LA550_45==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index550_45);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA550_53 = input.LA(1);

                         
                        int index550_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_53==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                        else if ( (LA550_53==Comma||LA550_53==EqualsSign||LA550_53==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index550_53);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA550_61 = input.LA(1);

                         
                        int index550_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_61==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                        else if ( (LA550_61==Comma||LA550_61==EqualsSign||LA550_61==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index550_61);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA550_46 = input.LA(1);

                         
                        int index550_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_46==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                        else if ( (LA550_46==Comma||LA550_46==EqualsSign||LA550_46==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index550_46);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA550_54 = input.LA(1);

                         
                        int index550_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_54==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                        else if ( (LA550_54==Comma||LA550_54==EqualsSign||LA550_54==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index550_54);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA550_62 = input.LA(1);

                         
                        int index550_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_62==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                        else if ( (LA550_62==Comma||LA550_62==EqualsSign||LA550_62==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index550_62);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA550_39 = input.LA(1);

                         
                        int index550_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_39==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                        else if ( (LA550_39==Comma||LA550_39==EqualsSign||LA550_39==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index550_39);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA550_47 = input.LA(1);

                         
                        int index550_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_47==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                        else if ( (LA550_47==Comma||LA550_47==EqualsSign||LA550_47==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index550_47);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA550_55 = input.LA(1);

                         
                        int index550_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_55==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                        else if ( (LA550_55==Comma||LA550_55==EqualsSign||LA550_55==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index550_55);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA550_63 = input.LA(1);

                         
                        int index550_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_63==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                        else if ( (LA550_63==Comma||LA550_63==EqualsSign||LA550_63==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index550_63);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA550_40 = input.LA(1);

                         
                        int index550_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_40==Comma||LA550_40==EqualsSign||LA550_40==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA550_40==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index550_40);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA550_48 = input.LA(1);

                         
                        int index550_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_48==Comma||LA550_48==EqualsSign||LA550_48==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA550_48==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index550_48);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA550_56 = input.LA(1);

                         
                        int index550_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_56==Comma||LA550_56==EqualsSign||LA550_56==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA550_56==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index550_56);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA550_41 = input.LA(1);

                         
                        int index550_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_41==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                        else if ( (LA550_41==Comma||LA550_41==EqualsSign||LA550_41==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index550_41);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA550_49 = input.LA(1);

                         
                        int index550_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_49==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                        else if ( (LA550_49==Comma||LA550_49==EqualsSign||LA550_49==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index550_49);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA550_57 = input.LA(1);

                         
                        int index550_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_57==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                        else if ( (LA550_57==Comma||LA550_57==EqualsSign||LA550_57==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index550_57);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA550_0 = input.LA(1);

                         
                        int index550_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_0==RULE_IDENTIFIER) ) {s = 1;}

                        
                        else if ((LA550_0>=7 && LA550_0<=126 && (s=T2S.M_48[LA550_0-(7)])>=0) && (synpred328_InternalN4JSParser())) { /* 38 cases */ }
                        
                        else if ((LA550_0>=4 && LA550_0<=86 && (s=T2S.M_47[LA550_0-(4)])>=0)) { /* 25 cases */ }
                        else if ( (LA550_0==RULE_STRING) && (synpred328_InternalN4JSParser())) {s = 64;}

                        else if ( (LA550_0==RULE_DOUBLE) && (synpred328_InternalN4JSParser())) {s = 65;}

                        else if ( (LA550_0==RULE_INT) && (synpred328_InternalN4JSParser())) {s = 66;}

                        else if ( (LA550_0==RULE_OCTAL_INT) && (synpred328_InternalN4JSParser())) {s = 67;}

                        else if ( (LA550_0==RULE_HEX_INT) && (synpred328_InternalN4JSParser())) {s = 68;}

                        else if ( (LA550_0==RULE_SCIENTIFIC_INT) && (synpred328_InternalN4JSParser())) {s = 69;}

                        else if ( (LA550_0==LeftSquareBracket) && (synpred328_InternalN4JSParser())) {s = 70;}

                        else if ( (LA550_0==CommercialAt) ) {s = 71;}

                         
                        input.seek(index550_0);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA550_42 = input.LA(1);

                         
                        int index550_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_42==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                        else if ( (LA550_42==Comma||LA550_42==EqualsSign||LA550_42==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index550_42);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA550_50 = input.LA(1);

                         
                        int index550_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_50==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                        else if ( (LA550_50==Comma||LA550_50==EqualsSign||LA550_50==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index550_50);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA550_58 = input.LA(1);

                         
                        int index550_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_58==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                        else if ( (LA550_58==Comma||LA550_58==EqualsSign||LA550_58==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index550_58);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA550_43 = input.LA(1);

                         
                        int index550_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_43==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                        else if ( (LA550_43==Comma||LA550_43==EqualsSign||LA550_43==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index550_43);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA550_51 = input.LA(1);

                         
                        int index550_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_51==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                        else if ( (LA550_51==Comma||LA550_51==EqualsSign||LA550_51==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index550_51);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA550_59 = input.LA(1);

                         
                        int index550_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_59==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                        else if ( (LA550_59==Comma||LA550_59==EqualsSign||LA550_59==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index550_59);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA550_44 = input.LA(1);

                         
                        int index550_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_44==Comma||LA550_44==EqualsSign||LA550_44==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA550_44==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index550_44);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA550_52 = input.LA(1);

                         
                        int index550_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_52==Comma||LA550_52==EqualsSign||LA550_52==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA550_52==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index550_52);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA550_60 = input.LA(1);

                         
                        int index550_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_60==Comma||LA550_60==EqualsSign||LA550_60==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA550_60==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index550_60);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA550_1 = input.LA(1);

                         
                        int index550_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA550_1==Comma||LA550_1==EqualsSign||LA550_1==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA550_1==Colon) && (synpred328_InternalN4JSParser())) {s = 72;}

                         
                        input.seek(index550_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 550, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_340s = "\23\uffff";
    static final String dfa_341s = "\1\4\1\0\21\uffff";
    static final String dfa_342s = "\1\176\1\0\21\uffff";
    static final String dfa_343s = "\2\uffff\1\2\1\3\15\uffff\1\1\1\4";
    static final String dfa_344s = "\1\uffff\1\0\21\uffff}>";
    static final String[] dfa_345s = {
            "\2\3\2\uffff\1\3\23\uffff\1\3\2\uffff\1\3\7\uffff\1\3\2\uffff\1\3\5\uffff\1\3\1\uffff\2\3\50\uffff\1\1\14\uffff\1\3\1\uffff\1\2\2\uffff\1\3\2\uffff\1\3\14\uffff\1\3",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_340 = DFA.unpackEncodedString(dfa_340s);
    static final char[] dfa_341 = DFA.unpackEncodedStringToUnsignedChars(dfa_341s);
    static final char[] dfa_342 = DFA.unpackEncodedStringToUnsignedChars(dfa_342s);
    static final short[] dfa_343 = DFA.unpackEncodedString(dfa_343s);
    static final short[] dfa_344 = DFA.unpackEncodedString(dfa_344s);
    static final short[][] dfa_345 = unpackEncodedStringArray(dfa_345s);

    class DFA567 extends DFA {

        public DFA567(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 567;
            this.eot = dfa_340;
            this.eof = dfa_340;
            this.min = dfa_341;
            this.max = dfa_342;
            this.accept = dfa_343;
            this.special = dfa_344;
            this.transition = dfa_345;
        }
        public String getDescription() {
            return "35397:1: ( ( ( ( ( () LeftParenthesis ruleTAnonymousFormalParameterList[null] RightParenthesis EqualsSignGreaterThanSign ) )=> ( () otherlv_1= LeftParenthesis this_TAnonymousFormalParameterList_2= ruleTAnonymousFormalParameterList[$current] otherlv_3= RightParenthesis otherlv_4= EqualsSignGreaterThanSign ) ) ( (lv_returnTypeRef_5_0= rulePrimaryTypeExpression ) ) ) | this_ArrayTypeRef_6= ruleArrayTypeRef | this_TypeRefWithModifiers_7= ruleTypeRefWithModifiers | (otherlv_8= LeftParenthesis this_TypeRef_9= ruleTypeRef otherlv_10= RightParenthesis ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA567_1 = input.LA(1);

                         
                        int index567_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred333_InternalN4JSParser()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index567_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 567, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_346s = "\173\uffff";
    static final String dfa_347s = "\1\2\172\uffff";
    static final String dfa_348s = "\1\4\1\0\171\uffff";
    static final String dfa_349s = "\1\u0099\1\0\171\uffff";
    static final String dfa_350s = "\2\uffff\1\2\167\uffff\1\1";
    static final String dfa_351s = "\1\uffff\1\0\171\uffff}>";
    static final String[] dfa_352s = {
            "\114\2\1\uffff\16\2\1\1\2\2\1\uffff\17\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2\1\uffff\1\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_346 = DFA.unpackEncodedString(dfa_346s);
    static final short[] dfa_347 = DFA.unpackEncodedString(dfa_347s);
    static final char[] dfa_348 = DFA.unpackEncodedStringToUnsignedChars(dfa_348s);
    static final char[] dfa_349 = DFA.unpackEncodedStringToUnsignedChars(dfa_349s);
    static final short[] dfa_350 = DFA.unpackEncodedString(dfa_350s);
    static final short[] dfa_351 = DFA.unpackEncodedString(dfa_351s);
    static final short[][] dfa_352 = unpackEncodedStringArray(dfa_352s);

    class DFA571 extends DFA {

        public DFA571(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 571;
            this.eot = dfa_346;
            this.eof = dfa_347;
            this.min = dfa_348;
            this.max = dfa_349;
            this.accept = dfa_350;
            this.special = dfa_351;
            this.transition = dfa_352;
        }
        public String getDescription() {
            return "35642:2: ( ( ( PlusSign ) )=> (lv_dynamic_2_0= PlusSign ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA571_1 = input.LA(1);

                         
                        int index571_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred335_InternalN4JSParser()) ) {s = 122;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index571_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 571, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_353s = "\1\4\1\uffff\1\10\7\uffff\2\10";
    static final String dfa_354s = "\1\176\1\uffff\1\u0093\7\uffff\2\176";
    static final String dfa_355s = "\1\uffff\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\2\uffff";
    static final String[] dfa_356s = {
            "\1\11\1\5\2\uffff\1\1\23\uffff\1\1\2\uffff\1\1\7\uffff\1\10\2\uffff\1\1\5\uffff\1\4\1\uffff\1\5\1\1\50\uffff\1\7\16\uffff\1\3\2\uffff\1\6\2\uffff\1\2\14\uffff\1\1",
            "",
            "\1\1\23\uffff\1\1\2\uffff\1\1\12\uffff\1\1\5\uffff\1\4\2\uffff\1\1\75\uffff\1\12\14\uffff\1\1\24\uffff\1\13",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\1\23\uffff\1\1\2\uffff\1\1\12\uffff\1\1\5\uffff\1\4\2\uffff\1\1\112\uffff\1\1",
            "\1\1\23\uffff\1\1\2\uffff\1\1\12\uffff\1\1\5\uffff\1\4\2\uffff\1\1\112\uffff\1\1"
    };
    static final char[] dfa_353 = DFA.unpackEncodedStringToUnsignedChars(dfa_353s);
    static final char[] dfa_354 = DFA.unpackEncodedStringToUnsignedChars(dfa_354s);
    static final short[] dfa_355 = DFA.unpackEncodedString(dfa_355s);
    static final short[][] dfa_356 = unpackEncodedStringArray(dfa_356s);

    class DFA574 extends DFA {

        public DFA574(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 574;
            this.eot = dfa_39;
            this.eof = dfa_39;
            this.min = dfa_353;
            this.max = dfa_354;
            this.accept = dfa_355;
            this.special = dfa_44;
            this.transition = dfa_356;
        }
        public String getDescription() {
            return "35796:1: (this_ParameterizedTypeRef_0= ruleParameterizedTypeRef | this_ArrayTypeRef_1= ruleArrayTypeRef | this_ThisTypeRef_2= ruleThisTypeRef | this_TypeTypeRef_3= ruleTypeTypeRef | this_FunctionTypeExpressionOLD_4= ruleFunctionTypeExpressionOLD | this_ArrowFunctionTypeExpression_5= ruleArrowFunctionTypeExpression | this_UnionTypeExpressionOLD_6= ruleUnionTypeExpressionOLD | this_IntersectionTypeExpressionOLD_7= ruleIntersectionTypeExpressionOLD )";
        }
    }
    static final String dfa_357s = "\1\uffff\1\34\14\uffff\1\34\3\uffff\3\34\11\uffff";
    static final String dfa_358s = "\1\4\1\133\12\uffff\1\144\1\uffff\1\133\3\144\3\133\11\uffff";
    static final String dfa_359s = "\1\176\1\157\12\uffff\1\156\1\uffff\1\157\3\156\3\157\11\uffff";
    static final String dfa_360s = "\2\uffff\12\1\1\uffff\1\1\7\uffff\7\1\1\2\1\1";
    static final String dfa_361s = "\1\5\1\0\12\uffff\1\7\1\uffff\1\3\1\4\1\6\1\2\1\1\1\10\1\11\11\uffff}>";
    static final String[] dfa_362s = {
            "\1\21\1\14\1\26\1\uffff\1\23\1\27\1\31\1\10\2\uffff\1\7\4\uffff\1\30\1\6\3\uffff\1\32\1\uffff\1\11\1\uffff\1\16\1\uffff\1\25\1\24\7\uffff\1\20\1\uffff\1\2\1\22\3\uffff\1\13\1\uffff\1\34\1\uffff\1\17\1\34\6\uffff\1\3\1\5\1\uffff\1\33\1\4\23\uffff\1\12\3\uffff\1\15\5\uffff\1\34\14\uffff\1\34\1\uffff\1\34\2\uffff\1\34\2\uffff\1\34\14\uffff\1\1",
            "\1\34\1\uffff\1\34\1\uffff\2\34\1\uffff\1\34\1\uffff\1\35\1\uffff\1\34\2\uffff\1\34\5\uffff\1\34",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\35\11\uffff\1\34",
            "",
            "\1\34\1\uffff\1\34\1\uffff\2\34\3\uffff\1\35\1\uffff\1\34\2\uffff\1\34\5\uffff\1\34",
            "\1\35\11\uffff\1\34",
            "\1\35\11\uffff\1\34",
            "\1\35\11\uffff\1\34",
            "\1\34\1\uffff\1\34\1\uffff\2\34\3\uffff\1\35\1\uffff\1\34\2\uffff\1\34\5\uffff\1\34",
            "\1\34\1\uffff\1\34\1\uffff\2\34\3\uffff\1\35\1\uffff\1\34\2\uffff\1\34\5\uffff\1\34",
            "\1\34\1\uffff\1\34\1\uffff\2\34\3\uffff\1\35\1\uffff\1\34\2\uffff\1\34\5\uffff\1\34",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_357 = DFA.unpackEncodedString(dfa_357s);
    static final char[] dfa_358 = DFA.unpackEncodedStringToUnsignedChars(dfa_358s);
    static final char[] dfa_359 = DFA.unpackEncodedStringToUnsignedChars(dfa_359s);
    static final short[] dfa_360 = DFA.unpackEncodedString(dfa_360s);
    static final short[] dfa_361 = DFA.unpackEncodedString(dfa_361s);
    static final short[][] dfa_362 = unpackEncodedStringArray(dfa_362s);

    class DFA585 extends DFA {

        public DFA585(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 585;
            this.eot = dfa_46;
            this.eof = dfa_357;
            this.min = dfa_358;
            this.max = dfa_359;
            this.accept = dfa_360;
            this.special = dfa_361;
            this.transition = dfa_362;
        }
        public String getDescription() {
            return "36400:3: ( ( ( ( ruleBindingIdentifier ) )=> (lv_name_1_0= ruleBindingIdentifier ) ) otherlv_2= Colon )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA585_1 = input.LA(1);

                         
                        int index585_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA585_1==Colon) && (synpred337_InternalN4JSParser())) {s = 29;}

                        else if ( (LA585_1==EOF||LA585_1==Ampersand||LA585_1==RightParenthesis||(LA585_1>=PlusSign && LA585_1<=Comma)||LA585_1==FullStop||LA585_1==LessThanSign||LA585_1==QuestionMark||LA585_1==VerticalLine) ) {s = 28;}

                         
                        input.seek(index585_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA585_18 = input.LA(1);

                         
                        int index585_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA585_18==Colon) && (synpred337_InternalN4JSParser())) {s = 29;}

                        else if ( (LA585_18==EOF||LA585_18==Ampersand||LA585_18==RightParenthesis||(LA585_18>=PlusSign && LA585_18<=Comma)||LA585_18==LessThanSign||LA585_18==QuestionMark||LA585_18==VerticalLine) ) {s = 28;}

                         
                        input.seek(index585_18);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA585_17 = input.LA(1);

                         
                        int index585_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA585_17==LeftCurlyBracket) ) {s = 28;}

                        else if ( (LA585_17==Colon) && (synpred337_InternalN4JSParser())) {s = 29;}

                         
                        input.seek(index585_17);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA585_14 = input.LA(1);

                         
                        int index585_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA585_14==Colon) && (synpred337_InternalN4JSParser())) {s = 29;}

                        else if ( (LA585_14==EOF||LA585_14==Ampersand||LA585_14==RightParenthesis||(LA585_14>=PlusSign && LA585_14<=Comma)||LA585_14==LessThanSign||LA585_14==QuestionMark||LA585_14==VerticalLine) ) {s = 28;}

                         
                        input.seek(index585_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA585_15 = input.LA(1);

                         
                        int index585_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA585_15==LeftCurlyBracket) ) {s = 28;}

                        else if ( (LA585_15==Colon) && (synpred337_InternalN4JSParser())) {s = 29;}

                         
                        input.seek(index585_15);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA585_0 = input.LA(1);

                         
                        int index585_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA585_0==RULE_IDENTIFIER) ) {s = 1;}

                        
                        else if ((LA585_0>=11 && LA585_0<=126 && (s=T2S.M_50[LA585_0-(11)])>=0) && (synpred337_InternalN4JSParser())) { /* 11 cases */ }
                        else if ( (LA585_0==Constructor) ) {s = 12;}

                        else if ( (LA585_0==Of) && (synpred337_InternalN4JSParser())) {s = 13;}

                        else if ( (LA585_0==Target) ) {s = 14;}

                        else if ( (LA585_0==Type) ) {s = 15;}

                        else if ( (LA585_0==Union) ) {s = 16;}

                        else if ( (LA585_0==Intersection) ) {s = 17;}

                        else if ( (LA585_0==This) ) {s = 18;}

                        else if ( (LA585_0==Promisify) ) {s = 19;}

                        else if ( (LA585_0==Await) ) {s = 20;}

                        else if ( (LA585_0==Async) && (synpred337_InternalN4JSParser())) {s = 21;}

                        else if ( (LA585_0==Implements) && (synpred337_InternalN4JSParser())) {s = 22;}

                        else if ( (LA585_0==Interface) && (synpred337_InternalN4JSParser())) {s = 23;}

                        else if ( (LA585_0==Private) && (synpred337_InternalN4JSParser())) {s = 24;}

                        else if ( (LA585_0==Protected) && (synpred337_InternalN4JSParser())) {s = 25;}

                        else if ( (LA585_0==Public) && (synpred337_InternalN4JSParser())) {s = 26;}

                        else if ( (LA585_0==Out) && (synpred337_InternalN4JSParser())) {s = 27;}

                        else if ( (LA585_0==This_1||LA585_0==Void||LA585_0==LeftParenthesis||LA585_0==QuestionMark||LA585_0==LeftSquareBracket||LA585_0==LeftCurlyBracket||LA585_0==Tilde) ) {s = 28;}

                         
                        input.seek(index585_0);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA585_16 = input.LA(1);

                         
                        int index585_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA585_16==LeftCurlyBracket) ) {s = 28;}

                        else if ( (LA585_16==Colon) && (synpred337_InternalN4JSParser())) {s = 29;}

                         
                        input.seek(index585_16);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA585_12 = input.LA(1);

                         
                        int index585_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA585_12==LeftCurlyBracket) ) {s = 28;}

                        else if ( (LA585_12==Colon) && (synpred337_InternalN4JSParser())) {s = 29;}

                         
                        input.seek(index585_12);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA585_19 = input.LA(1);

                         
                        int index585_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA585_19==EOF||LA585_19==Ampersand||LA585_19==RightParenthesis||(LA585_19>=PlusSign && LA585_19<=Comma)||LA585_19==LessThanSign||LA585_19==QuestionMark||LA585_19==VerticalLine) ) {s = 28;}

                        else if ( (LA585_19==Colon) && (synpred337_InternalN4JSParser())) {s = 29;}

                         
                        input.seek(index585_19);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA585_20 = input.LA(1);

                         
                        int index585_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA585_20==EOF||LA585_20==Ampersand||LA585_20==RightParenthesis||(LA585_20>=PlusSign && LA585_20<=Comma)||LA585_20==LessThanSign||LA585_20==QuestionMark||LA585_20==VerticalLine) ) {s = 28;}

                        else if ( (LA585_20==Colon) && (synpred337_InternalN4JSParser())) {s = 29;}

                         
                        input.seek(index585_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 585, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_363s = {
            "\114\2\1\uffff\21\2\1\uffff\3\2\1\1\13\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2\1\uffff\1\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_363 = unpackEncodedStringArray(dfa_363s);

    class DFA590 extends DFA {

        public DFA590(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 590;
            this.eot = dfa_346;
            this.eof = dfa_347;
            this.min = dfa_348;
            this.max = dfa_349;
            this.accept = dfa_350;
            this.special = dfa_351;
            this.transition = dfa_363;
        }
        public String getDescription() {
            return "36690:2: ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_typeArgs_2_0= ruleTypeArgument ) ) (otherlv_3= Comma ( (lv_typeArgs_4_0= ruleTypeArgument ) ) )* otherlv_5= GreaterThanSign )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA590_1 = input.LA(1);

                         
                        int index590_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred338_InternalN4JSParser()) ) {s = 122;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index590_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 590, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA592 extends DFA {

        public DFA592(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 592;
            this.eot = dfa_346;
            this.eof = dfa_347;
            this.min = dfa_348;
            this.max = dfa_349;
            this.accept = dfa_350;
            this.special = dfa_351;
            this.transition = dfa_363;
        }
        public String getDescription() {
            return "36858:2: ( ( ( LessThanSign )=>otherlv_2= LessThanSign ) ( (lv_typeArgs_3_0= ruleTypeArgument ) ) (otherlv_4= Comma ( (lv_typeArgs_5_0= ruleTypeArgument ) ) )* otherlv_6= GreaterThanSign )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA592_1 = input.LA(1);

                         
                        int index592_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred339_InternalN4JSParser()) ) {s = 122;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index592_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 592, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_364s = "\1\4\2\0\1\uffff\75\0\3\uffff";
    static final String dfa_365s = "\1\176\2\0\1\uffff\75\0\3\uffff";
    static final String dfa_366s = "\3\uffff\1\3\75\uffff\1\1\1\4\1\2";
    static final String dfa_367s = "\1\0\1\1\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\3\uffff}>";
    static final String[] dfa_368s = {
            "\1\66\1\61\1\73\1\30\1\70\1\74\1\76\1\55\1\12\1\13\1\54\1\24\1\14\1\21\1\22\1\75\1\53\1\15\1\20\1\26\1\77\1\32\1\56\1\34\1\63\1\40\1\72\1\71\1\5\1\7\1\10\1\11\1\50\1\33\1\36\1\65\1\43\1\45\1\67\1\6\1\17\1\51\1\60\1\46\1\35\1\47\1\64\1\42\1\44\4\uffff\1\23\1\1\1\52\1\31\1\100\1\2\1\37\1\41\21\uffff\1\57\1\16\1\25\1\27\1\62\17\uffff\1\3\27\uffff\1\4",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_364 = DFA.unpackEncodedStringToUnsignedChars(dfa_364s);
    static final char[] dfa_365 = DFA.unpackEncodedStringToUnsignedChars(dfa_365s);
    static final short[] dfa_366 = DFA.unpackEncodedString(dfa_366s);
    static final short[] dfa_367 = DFA.unpackEncodedString(dfa_367s);
    static final short[][] dfa_368 = unpackEncodedStringArray(dfa_368s);

    class DFA596 extends DFA {

        public DFA596(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 596;
            this.eot = dfa_221;
            this.eof = dfa_221;
            this.min = dfa_364;
            this.max = dfa_365;
            this.accept = dfa_366;
            this.special = dfa_367;
            this.transition = dfa_368;
        }
        public String getDescription() {
            return "37001:1: ( ( ( ( () Get ( ( ruleIdentifierName ) ) ) )=>this_TStructGetter_0= ruleTStructGetter ) | ( ( ( () Set ( ( ruleIdentifierName ) ) ) )=>this_TStructSetter_1= ruleTStructSetter ) | ( ( ( () ( LessThanSign ( ( ruleTypeVariable ) ) ( Comma ( ( ruleTypeVariable ) ) )* GreaterThanSign )? ( ( ruleIdentifierName ) ) LeftParenthesis ) )=>this_TStructMethod_2= ruleTStructMethod ) | this_TStructField_3= ruleTStructField )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA596_0 = input.LA(1);

                         
                        int index596_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA596_0==Get) ) {s = 1;}

                        else if ( (LA596_0==Set) ) {s = 2;}

                        else if ( (LA596_0==LessThanSign) && (synpred342_InternalN4JSParser())) {s = 3;}

                        
                        else if ((LA596_0>=4 && LA596_0<=126 && (s=T2S.M_51[LA596_0-(4)])>=0)) { /* 62 cases */ }
                        input.seek(index596_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA596_1 = input.LA(1);

                         
                        int index596_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalN4JSParser()) ) {s = 65;}

                        else if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA596_2 = input.LA(1);

                         
                        int index596_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred341_InternalN4JSParser()) ) {s = 67;}

                        else if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA596_4 = input.LA(1);

                         
                        int index596_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA596_5 = input.LA(1);

                         
                        int index596_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA596_6 = input.LA(1);

                         
                        int index596_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA596_7 = input.LA(1);

                         
                        int index596_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA596_8 = input.LA(1);

                         
                        int index596_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA596_9 = input.LA(1);

                         
                        int index596_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA596_10 = input.LA(1);

                         
                        int index596_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA596_11 = input.LA(1);

                         
                        int index596_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA596_12 = input.LA(1);

                         
                        int index596_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA596_13 = input.LA(1);

                         
                        int index596_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA596_14 = input.LA(1);

                         
                        int index596_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA596_15 = input.LA(1);

                         
                        int index596_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA596_16 = input.LA(1);

                         
                        int index596_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA596_17 = input.LA(1);

                         
                        int index596_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA596_18 = input.LA(1);

                         
                        int index596_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA596_19 = input.LA(1);

                         
                        int index596_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA596_20 = input.LA(1);

                         
                        int index596_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA596_21 = input.LA(1);

                         
                        int index596_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA596_22 = input.LA(1);

                         
                        int index596_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA596_23 = input.LA(1);

                         
                        int index596_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA596_24 = input.LA(1);

                         
                        int index596_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA596_25 = input.LA(1);

                         
                        int index596_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA596_26 = input.LA(1);

                         
                        int index596_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA596_27 = input.LA(1);

                         
                        int index596_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA596_28 = input.LA(1);

                         
                        int index596_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA596_29 = input.LA(1);

                         
                        int index596_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA596_30 = input.LA(1);

                         
                        int index596_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA596_31 = input.LA(1);

                         
                        int index596_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA596_32 = input.LA(1);

                         
                        int index596_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA596_33 = input.LA(1);

                         
                        int index596_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA596_34 = input.LA(1);

                         
                        int index596_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA596_35 = input.LA(1);

                         
                        int index596_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_35);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA596_36 = input.LA(1);

                         
                        int index596_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_36);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA596_37 = input.LA(1);

                         
                        int index596_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_37);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA596_38 = input.LA(1);

                         
                        int index596_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_38);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA596_39 = input.LA(1);

                         
                        int index596_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_39);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA596_40 = input.LA(1);

                         
                        int index596_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_40);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA596_41 = input.LA(1);

                         
                        int index596_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_41);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA596_42 = input.LA(1);

                         
                        int index596_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_42);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA596_43 = input.LA(1);

                         
                        int index596_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_43);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA596_44 = input.LA(1);

                         
                        int index596_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_44);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA596_45 = input.LA(1);

                         
                        int index596_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_45);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA596_46 = input.LA(1);

                         
                        int index596_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_46);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA596_47 = input.LA(1);

                         
                        int index596_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_47);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA596_48 = input.LA(1);

                         
                        int index596_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_48);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA596_49 = input.LA(1);

                         
                        int index596_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_49);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA596_50 = input.LA(1);

                         
                        int index596_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_50);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA596_51 = input.LA(1);

                         
                        int index596_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_51);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA596_52 = input.LA(1);

                         
                        int index596_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_52);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA596_53 = input.LA(1);

                         
                        int index596_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_53);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA596_54 = input.LA(1);

                         
                        int index596_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_54);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA596_55 = input.LA(1);

                         
                        int index596_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_55);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA596_56 = input.LA(1);

                         
                        int index596_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_56);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA596_57 = input.LA(1);

                         
                        int index596_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_57);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA596_58 = input.LA(1);

                         
                        int index596_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_58);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA596_59 = input.LA(1);

                         
                        int index596_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_59);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA596_60 = input.LA(1);

                         
                        int index596_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_60);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA596_61 = input.LA(1);

                         
                        int index596_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_61);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA596_62 = input.LA(1);

                         
                        int index596_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_62);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA596_63 = input.LA(1);

                         
                        int index596_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_63);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA596_64 = input.LA(1);

                         
                        int index596_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index596_64);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 596, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA689 extends DFA {

        public DFA689(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 689;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_188;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_191;
        }
        public String getDescription() {
            return "14791:2: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA691 extends DFA {

        public DFA691(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 691;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "15031:28: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA693 extends DFA {

        public DFA693(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 693;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_188;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_191;
        }
        public String getDescription() {
            return "15098:2: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA695 extends DFA {

        public DFA695(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 695;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "15338:28: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA697 extends DFA {

        public DFA697(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 697;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_188;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_191;
        }
        public String getDescription() {
            return "15412:2: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA699 extends DFA {

        public DFA699(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 699;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "15933:28: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA701 extends DFA {

        public DFA701(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 701;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_188;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_191;
        }
        public String getDescription() {
            return "16168:2: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA703 extends DFA {

        public DFA703(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 703;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "16689:28: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA763 extends DFA {

        public DFA763(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 763;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_310;
            this.max = dfa_311;
            this.accept = dfa_312;
            this.special = dfa_17;
            this.transition = dfa_313;
        }
        public String getDescription() {
            return "()* loopback of 29659:2: ( ( ruleN4Modifier ) )*";
        }
    }

    class DFA765 extends DFA {

        public DFA765(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 765;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "29663:29: ( ruleBogusTypeRefFragment[null] )?";
        }
    }

    class DFA769 extends DFA {

        public DFA769(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 769;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_310;
            this.max = dfa_311;
            this.accept = dfa_312;
            this.special = dfa_17;
            this.transition = dfa_313;
        }
        public String getDescription() {
            return "()* loopback of 29963:2: ( ( ruleN4Modifier ) )*";
        }
    }

    class DFA771 extends DFA {

        public DFA771(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 771;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "29967:29: ( ruleBogusTypeRefFragment[null] )?";
        }
    }

    class DFA775 extends DFA {

        public DFA775(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 775;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_310;
            this.max = dfa_311;
            this.accept = dfa_312;
            this.special = dfa_17;
            this.transition = dfa_313;
        }
        public String getDescription() {
            return "()* loopback of 30545:2: ( ( ruleN4Modifier ) )*";
        }
    }

    class DFA777 extends DFA {

        public DFA777(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 777;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "30549:29: ( ruleBogusTypeRefFragment[null] )?";
        }
    }

    class DFA781 extends DFA {

        public DFA781(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 781;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_310;
            this.max = dfa_311;
            this.accept = dfa_312;
            this.special = dfa_17;
            this.transition = dfa_313;
        }
        public String getDescription() {
            return "()* loopback of 31255:2: ( ( ruleN4Modifier ) )*";
        }
    }

    class DFA783 extends DFA {

        public DFA783(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 783;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_11;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "31259:29: ( ruleBogusTypeRefFragment[null] )?";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0xFE1FE7FDFFF8FF72L,0x57A24C6AD25D0541L,0x0000000000201802L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0xFE1FE7FDFFF8FF72L,0x57A24C6AD25C0541L,0x0000000000201802L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000200C45D8CE00L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x000000084518CC00L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000C05184C00L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x6C044680D5184F70L,0x4002000000440000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000000000440000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000020040L,0x0000404000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000805184E00L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000200805184C00L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000040010000100L,0x4000000000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000000L,0x0001000100000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x2000040010000100L,0x4000000000200000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000010100000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0800200C4519CE00L,0x0000440040000001L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000000L,0x0001002000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000400000000000L,0x0001002000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x7C0FE6BCF538CF70L,0x57A24C4AD2440541L,0x0000000000201802L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x6C044680D5184F70L,0x4001000000440000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x40000000007C0001L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0800200C4518CE00L,0x0000000000000001L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0800000805184C00L,0x0000000000000001L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x6C044680D5184F70L,0x40004C0000440000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0001002100000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000400040440000L,0x0000000000000002L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000400040440000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x40010000007C0001L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000002L,0x0001002000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000040008000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000004050440000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000004010440000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x000D048090000130L,0x40024A0010000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000008000L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x6C4D4680D5184F70L,0x40024E0020440000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000000120000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x6C4D4680D5184F70L,0x40024E0000440000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000001000004000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x7C0FC6B4F538CF70L,0x57A24C4AD2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0xFE1FE7FDFFF8FF70L,0x57A34C6AD25C0541L,0x0000000000201802L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000440008000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x6C044680D51A4F70L,0x4000404000440000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x6C044680D51A4F70L,0x4000400000440000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x6C4D4680D5184F70L,0x4002460000440000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x6C444680D5184F70L,0x4000000000440000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000002L,0x0000009000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000040000440000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleExpressionStatement = FOLLOW_20;
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0xFE1FE7FDFFF8FF70L,0x57A24C6AD25C0541L,0x0000000000201802L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000100000000002L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x7C0FC6BCF538CF70L,0x57A24C6AD2440541L,0x0000000000201802L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x7C0FC6B4F538CF70L,0x57A24C4AF2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000002100600000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000002100000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x7C0FC6B4F538CF70L,0x57A24C6AD2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000002000600000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x6C044680D5184F70L,0x4001002000440000L,0x0000000002800000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x7C0FC6B4F538CF70L,0x57A34C6AD2440540L,0x0000000002A01802L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000080000010000L,0x0001000000000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000080000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000200040000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000200040002L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x6C0D4680D5184F70L,0x40024A0000440000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x7C4FC6B4F538CF70L,0x57A25C4BD2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000100100000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x7C4FC6B4F538CF70L,0x57A24C4BD2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A34E40507C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A24E40507C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A24A40507C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A24A00007C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A24A00407C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000002L,0x0000002000000000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x7C07C6B4D518CF72L,0x57A04C4C10440400L,0x0000000000201802L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x7C4FC6B4F538CF70L,0x57A24C4AF2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x7C4FC6B4F538CF70L,0x57A24C4AD2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x7C07C6B4D518CF70L,0x57A04C4810440400L,0x0000000000201802L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000002L,0x0000004010000000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x40000040007C0001L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000140L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x000D048090000130L,0x4002480010000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000002L,0x0000000844000000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000002L,0x0000000280000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000800L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000082L,0x0000014000009000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000082L,0x0000014000209000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0120000000000002L,0x0000000000002002L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000002L,0x0000800000000000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0080000000000002L,0x00000180008206B4L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x7C0FC6B4F538CF72L,0x57A24C4AD2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000000L,0x0000010000008000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x7C0FC6B4F538CF70L,0x57A34C4AD2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000000000000C000L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000040010000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x000F849090000130L,0x57A24A0830000400L,0x0000000000200002L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x000F849090000130L,0x57A24A0810000400L,0x0000000000200002L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000002L,0x0000000400000000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x6C044680D51A4F70L,0x4002404000440000L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x7C0FC6B4D518CF70L,0x57A04C4810440400L,0x0000000000201802L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000000020042L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0008040090000100L,0x4000000000000000L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000000020042L,0x0000000100000000L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000400000440000L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000040010000100L,0x4001000000000000L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A24A40407C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x040D048895184D30L,0x4002420000000000L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000000002L,0x0000402000000000L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x4000000805184C00L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000000000000000L,0x000100B000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000000000L,0x000100A000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000000000000002L,0x0000400000000000L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000000000000002L,0x0000401000000000L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A34E00007C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A24E00007C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x6C444680D5184F70L,0x40005C0100440000L});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x6C444680D5184F70L,0x40004C0100440000L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x6C4D4680D5184F70L,0x40024A0030440000L});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x000D048090000132L,0x4002420000000000L});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0010000000000002L});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0000000000008000L,0x0000040000000000L});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x000D048090000130L,0x4002480000000000L});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0000000000000000L,0x0000004010000000L});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0000000000000000L,0x0001001000000000L});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x6C4D4680D5184F70L,0x40024A0010440000L});
    public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x6C0D4680D5184F70L,0x40024A0010440000L});
    public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x000D048090000130L,0x4002400000000000L});
    public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0000000000000002L,0x0000004000000000L});
    public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x200D048090000130L,0x40024A0010200000L});
    public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0010000000000002L,0x0000004000000000L});
    public static final BitSet FOLLOW_171 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x40010040007C0001L});
    public static final BitSet FOLLOW_172 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x40010061007C0001L});
    public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x0000000000000002L,0x0002000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x0009040090000100L,0x4000020000000000L});
    public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x0000002000020002L});
    public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x6C044680D5184F72L,0x4002000000440000L});
    public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x6C044680D5184F72L,0x4000000000440000L});
    public static final BitSet FOLLOW_178 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A00800007C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_179 = new BitSet(new long[]{0x7C0FC6B4F538CF70L,0x57A24C4A92440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_180 = new BitSet(new long[]{0x7C0FC4B4F538CF70L,0x57A24C4A92440540L,0x0000000000201802L});

}

final class T2S{
	final static int[] M_0 = { 11, 4, 7, -1, -1, 6, -1, -1, -1, -1, 2, 3, -1, -1, -1, 5, -1, 8, -1, -1, -1, -1, -1, -1, -1, 10, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_1 = { 6, -1, -1, -1, -1, 38, 33, 42, -1, 40, 17, 10, 13, 79, 86, 12, 23, 89, -1, -1, 8, 9, 66, 20, 19, 11, 81, 14, 83, 35, 68, 22, 41, 80, -1, 16, 15, 58, 48, 84, 37, 77, 28, 39, 90, 88, 18, 32, 60, 47, 57, 36, 67, 82, -1, -1, -1, -1, 78, 29, 25, 46, 43, 30, 85, 24, -1, -1, -1, -1, -1, 69, -1, 70, -1, 62, -1, -1, -1, -1, -1, -1, -1, 31, 76, 75, -1, 34, -1, -1, 74, -1, -1, 44, -1, 45, 71, -1, 72, -1, 61, -1, 26, 49, -1, -1, -1, 7, 63, -1, -1, 21, -1, 87, 73, -1, -1, -1, 50, -1, 55, 52, 53, 54, -1, 56, -1, 27, -1, -1, 59, -1, -1, -1, -1, -1, -1, -1, -1, -1, 65, 64, -1, -1, -1, -1, -1, -1, -1, -1, 51};
	final static int[] M_2 = { 4, 7, -1, -1, 6, 11, -1, -1, -1, 2, 3, -1, -1, -1, 5, -1, 8, -1, -1, -1, 10, -1, -1, -1, -1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_3 = { 26, 21, 30, -1, 28, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, -1, -1, 29, -1, -1, -1, -1, -1, -1, -1, 25, -1, 16, 27, -1, -1, -1, 20, -1, -1, -1, 24, -1, -1, -1, -1, -1, -1, -1, 17, 13, -1, 32, 18, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 19, -1, -1, -1, 22, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15};
	final static int[] M_5 = { 25, 20, 29, -1, 27, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, -1, -1, 28, -1, -1, -1, -1, -1, -1, -1, 24, -1, -1, 26, -1, -1, -1, 19, -1, -1, -1, 23, -1, -1, -1, -1, -1, -1, -1, 16, 13, -1, 31, 17, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 18, -1, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15};
	final static int[] M_6 = { 17, 12, 22, -1, 19, 23, 25, 8, -1, -1, 7, -1, -1, -1, -1, 24, 6, -1, -1, -1, 26, -1, 9, -1, 14, -1, 21, 20, -1, -1, -1, -1, -1, -1, -1, 16, -1, 2, 18, -1, -1, -1, 11, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, 3, 5, -1, 27, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_8 = { 16, 11, 21, -1, 18, 22, 24, 7, -1, -1, 6, -1, -1, -1, -1, 23, 5, -1, -1, -1, 25, -1, 8, -1, 13, -1, 20, 19, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, 17, -1, -1, -1, 10, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, 2, 4, -1, 26, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, -1, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_15 = { 22, 17, 25, -1, 24, 26, 28, 13, -1, -1, 12, 50, -1, -1, -1, 27, 11, 54, -1, -1, 29, -1, 14, -1, 19, 56, 4, 1, -1, -1, 51, -1, 43, 33, -1, 21, -1, 7, 23, -1, -1, -1, 16, 45, 32, 42, 20, 55, -1, -1, -1, -1, -1, -1, 8, 10, 31, 30, 9, -1, -1, -1, -1, -1, -1, -1, 57, -1, 58, -1, 47, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, 18, -1, -1, 62, -1, -1, 3, -1, 5, 59, -1, 60, -1, 46, -1, -1, 34, -1, -1, -1, 2, 48, -1, -1, 49, -1, -1, 61, -1, -1, -1, 35, -1, 40, 37, 38, 39, -1, 41, -1, 6, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, 52, -1, -1, -1, -1, -1, -1, -1, -1, 36};
	final static int[] M_16 = { 21, 16, 24, -1, 23, 25, 27, 12, -1, -1, 11, 50, -1, -1, -1, 26, 10, 54, -1, -1, 28, -1, 13, -1, 18, 56, 4, 1, -1, -1, 51, -1, 43, 33, -1, 20, -1, 30, 22, -1, -1, -1, 15, 45, 32, 42, 19, 55, -1, -1, -1, -1, -1, -1, 7, 9, 31, 29, 8, -1, -1, -1, -1, -1, -1, -1, 57, -1, 58, -1, 47, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, 17, -1, -1, 62, -1, -1, 3, -1, 5, 59, -1, 60, -1, 46, -1, -1, 34, -1, -1, -1, 2, 48, -1, -1, 49, -1, -1, 61, -1, -1, -1, 35, -1, 40, 37, 38, 39, -1, 41, -1, 6, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, 52, -1, -1, -1, -1, -1, -1, -1, -1, 36};
	final static int[] M_17 = { 19, 14, 24, -1, 21, 25, 27, 10, -1, -1, 9, -1, -1, -1, -1, 26, 8, -1, -1, -1, 28, -1, 11, -1, 16, -1, 23, 22, -1, -1, -1, -1, -1, -1, -1, 18, -1, 4, 20, -1, -1, -1, 13, -1, -1, -1, 17, -1, -1, -1, -1, -1, -1, -1, 5, 7, -1, 29, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3};
	final static int[] M_18 = { 18, 13, 23, -1, 20, 24, 26, 9, -1, -1, 8, -1, -1, -1, -1, 25, 7, -1, -1, -1, 27, -1, 10, -1, 15, -1, 22, 21, -1, -1, -1, -1, -1, -1, -1, 17, -1, -1, 19, -1, -1, -1, 12, -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, 4, 6, -1, 28, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3};
	final static int[] M_19 = { 14, 11, 62, 35, 5, 63, 65, 56, 21, 22, 55, 31, 23, 28, 29, 64, 54, 24, 27, 33, 66, 37, 57, 39, 6, 42, 61, 4, 16, 18, 19, 20, 49, 38, 40, 13, 44, 46, 3, 17, 26, 50, 59, 47, 9, 48, 10, 2, 45, -1, -1, -1, -1, 30, 51, 53, 36, 67, 52, 41, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 58, 25, 32, 34, 60, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, 1, 74, -1, -1, 12, -1, -1, 8, -1, -1, -1, 69, -1, 72, -1, 71, -1, -1, 73, -1, 7, -1, -1, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 70};
	final static int[] M_21 = { 13, 10, 61, 34, 4, 62, 64, 55, 20, 21, 54, 30, 22, 27, 28, 63, 53, 23, 26, 32, 65, 36, 56, 38, 5, 41, 60, 3, 15, 17, 18, 19, 48, 37, 39, 12, 43, 45, 2, 16, 25, 49, 58, 46, 8, 47, 9, 1, 44, -1, -1, -1, -1, 29, 50, 52, 35, 66, 51, 40, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 57, 24, 31, 33, 59, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, 73, -1, -1, 11, -1, -1, 7, -1, -1, -1, 68, -1, 71, -1, 70, -1, -1, 72, -1, 6, -1, -1, 67, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 69};
	final static int[] M_23 = { 22, 17, 27, -1, 24, 28, 30, 13, -1, -1, 12, 51, -1, -1, -1, 29, 11, -1, -1, -1, 31, -1, 14, -1, 19, -1, 26, 25, -1, -1, 52, -1, 42, 5, -1, 21, -1, 7, 23, -1, -1, -1, 16, 44, 4, 41, 20, -1, -1, -1, -1, -1, -1, -1, 8, 10, 3, 32, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, 18, -1, -1, -1, -1, -1, 49, -1, -1, -1, -1, -1, -1, 45, -1, -1, 33, -1, -1, -1, 50, 47, -1, -1, 48, -1, -1, -1, -1, -1, -1, 34, -1, 39, 36, 37, 38, -1, 40, -1, 6, -1, -1, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, 54, 53, -1, -1, -1, -1, -1, -1, -1, -1, 35};
	final static int[] M_24 = { 21, 16, 26, -1, 23, 27, 29, 12, -1, -1, 11, 50, -1, -1, -1, 28, 10, -1, -1, -1, 30, -1, 13, -1, 18, -1, 25, 24, -1, -1, 51, -1, 41, 5, -1, 20, -1, -1, 22, -1, -1, -1, 15, 43, 4, 40, 19, -1, -1, -1, -1, -1, -1, -1, 7, 9, 3, 31, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, 17, -1, -1, -1, -1, -1, 48, -1, -1, -1, -1, -1, -1, 44, -1, -1, 32, -1, -1, -1, 49, 46, -1, -1, 47, -1, -1, -1, -1, -1, -1, 33, -1, 38, 35, 36, 37, -1, 39, -1, 6, -1, -1, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, 52, -1, -1, -1, -1, -1, -1, -1, -1, 34};
	final static int[] M_25 = { 25, 20, 30, -1, 27, 31, 33, 16, -1, -1, 15, 54, -1, -1, -1, 32, 14, 58, -1, -1, 34, -1, 17, -1, 22, 60, 29, 28, -1, -1, 55, -1, 45, 8, -1, 24, -1, 10, 26, -1, -1, -1, 19, 47, 7, 44, 23, 59, -1, -1, -1, -1, -1, -1, 11, 13, 6, 35, 12, -1, -1, -1, -1, -1, -1, -1, 61, -1, 62, -1, 49, -1, -1, -1, -1, 1, -1, -1, 18, -1, -1, -1, 21, -1, -1, 66, -1, -1, 52, -1, -1, 63, -1, 64, -1, 48, -1, -1, 36, -1, 5, -1, 53, 50, -1, -1, 51, -1, -1, 65, -1, -1, -1, 37, -1, 42, 39, 40, 41, -1, 43, -1, 9, -1, -1, 46, -1, -1, -1, -1, -1, -1, -1, -1, -1, 57, 56, -1, -1, -1, -1, -1, -1, -1, -1, 38};
	final static int[] M_26 = { 24, 19, 29, -1, 26, 30, 32, 15, -1, -1, 14, 53, -1, -1, -1, 31, 13, 57, -1, -1, 33, -1, 16, -1, 21, 59, 28, 27, -1, -1, 54, -1, 44, 8, -1, 23, -1, -1, 25, -1, -1, -1, 18, 46, 7, 43, 22, 58, -1, -1, -1, -1, -1, -1, 10, 12, 6, 34, 11, -1, -1, -1, -1, -1, -1, -1, 60, -1, 61, -1, 48, -1, -1, -1, -1, 1, -1, -1, 17, -1, -1, -1, 20, -1, -1, 65, -1, -1, 51, -1, -1, 62, -1, 63, -1, 47, -1, -1, 35, -1, 5, -1, 52, 49, -1, -1, 50, -1, -1, 64, -1, -1, -1, 36, -1, 41, 38, 39, 40, -1, 42, -1, 9, -1, -1, 45, -1, -1, -1, -1, -1, -1, -1, -1, -1, 56, 55, -1, -1, -1, -1, -1, -1, -1, -1, 37};
	final static int[] M_27 = { 26, 21, 31, -1, 28, 32, 34, 17, -1, -1, 16, 55, -1, -1, -1, 33, 15, 59, -1, -1, 35, -1, 18, -1, 23, 61, 30, 29, -1, -1, 56, -1, 46, 9, -1, 25, -1, 11, 27, -1, -1, -1, 20, 48, 8, 45, 24, 60, -1, -1, -1, -1, -1, -1, 12, 14, 7, 36, 13, -1, -1, -1, -1, -1, -1, -1, 62, -1, 63, -1, 50, -1, -1, -1, -1, -1, -1, -1, 19, -1, -1, -1, 22, -1, -1, 67, -1, -1, 53, -1, -1, 64, -1, 65, -1, 49, -1, -1, 37, -1, -1, -1, 54, 51, -1, -1, 52, -1, -1, 66, -1, -1, -1, 38, -1, 43, 40, 41, 42, -1, 44, -1, 10, -1, -1, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, 58, 57, -1, -1, -1, -1, -1, -1, -1, -1, 39};
	final static int[] M_28 = { 27, 22, 32, -1, 29, 33, 35, 18, -1, -1, 17, 56, -1, -1, -1, 34, 16, 60, -1, -1, 36, -1, 19, -1, 24, 62, 31, 30, -1, -1, 57, -1, 47, 10, -1, 26, -1, 12, 28, -1, -1, -1, 21, 49, 9, 46, 25, 61, -1, -1, -1, -1, -1, -1, 13, 15, 8, 37, 14, -1, -1, -1, -1, -1, -1, -1, 63, -1, 64, -1, 51, -1, -1, -1, -1, -1, -1, -1, 20, -1, -1, -1, 23, -1, -1, 68, -1, -1, 54, -1, -1, 65, -1, 66, -1, 50, -1, -1, 38, -1, -1, -1, 55, 52, -1, -1, 53, -1, -1, 67, -1, -1, -1, 39, -1, 44, 41, 42, 43, -1, 45, -1, 11, -1, -1, 48, -1, -1, -1, -1, -1, -1, -1, -1, -1, 59, 58, -1, -1, -1, -1, -1, -1, -1, -1, 40};
	final static int[] M_29 = { 22, 17, 25, -1, 24, 26, 28, 13, -1, -1, 12, -1, -1, -1, -1, 27, 11, -1, -1, -1, 29, -1, 14, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, -1, 7, 23, -1, -1, -1, 16, -1, -1, -1, 20, -1, -1, -1, -1, -1, -1, -1, 8, 10, -1, 30, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6};
	final static int[] M_31 = { 21, 16, 24, -1, 23, 25, 27, 12, -1, -1, 11, -1, -1, -1, -1, 26, 10, -1, -1, -1, 28, -1, 13, -1, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, -1, 30, 22, -1, -1, -1, 15, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, 7, 9, -1, 29, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, 17, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6};
	final static int[] M_33 = { 16, -1, -1, -1, -1, -1, 12, -1, -1, 11, -1, -1, -1, -1, -1, 10, -1, -1, -1, -1, -1, 13, -1, -1, -1, 4, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 9, -1, -1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6};
	final static int[] M_34 = { 21, -1, 24, -1, 23, 25, 27, -1, -1, -1, -1, -1, -1, -1, -1, 26, -1, -1, -1, -1, 28, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, 43, 33, -1, 20, -1, 30, 22, -1, -1, -1, -1, 45, 32, 42, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, 31, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 17, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, -1, -1, 34, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35, -1, 40, 37, 38, 39, -1, 41, -1, -1, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36};
	final static int[] M_35 = { 50, -1, -1, -1, -1, -1, 54, -1, -1, -1, -1, -1, -1, -1, 56, -1, -1, -1, -1, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 55, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 57, -1, 58, -1, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, -1, -1, 59, -1, 60, -1, -1, -1, -1, -1, -1, -1, -1, -1, 48, -1, -1, 49, -1, -1, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, 52};
	final static int[] M_36 = { 21, 16, 24, -1, 23, 25, 27, 12, -1, -1, 11, -1, -1, -1, -1, 26, 10, -1, -1, -1, 28, -1, 13, -1, 18, -1, 4, 1, -1, -1, -1, -1, 43, 33, -1, 20, -1, 30, 22, -1, -1, -1, 15, 45, 32, 42, 19, -1, -1, -1, -1, -1, -1, -1, 7, 9, 31, 29, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, 17, -1, -1, -1, -1, -1, 3, -1, 5, -1, -1, -1, -1, 46, -1, -1, 34, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35, -1, 40, 37, 38, 39, -1, 41, -1, 6, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36};
	final static int[] M_38 = { 22, 19, -1, -1, 13, -1, 4, 7, -1, -1, 6, -1, -1, -1, -1, 2, 3, -1, -1, -1, 5, -1, 8, -1, 14, -1, -1, 12, -1, -1, -1, 9, -1, -1, -1, 21, -1, -1, 11, -1, -1, -1, -1, -1, 17, -1, 18, 10, -1, -1, -1, -1, -1, -1, 24, -1, -1, -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, 1, -1, -1, -1, 20, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15};
	final static int[] M_39 = { 67, 47, -1, 68, -1, -1, 33, 34, -1, 43, 35, 40, 41, -1, -1, 36, 39, 45, -1, 49, -1, 51, -1, 54, 28, -1, 29, 31, 32, -1, 61, 50, 52, -1, 56, 58, -1, 30, 38, 62, 65, 59, -1, 60, -1, -1, 57, -1, -1, -1, -1, 42, -1, 63, 48, 69, -1, 53, 55, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 64, 37, 44, 46, 66, -1, -1, -1, -1, -1, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71, -1, 74, -1, 73, -1, -1, 75, -1, -1, -1, -1, 70, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 72};
	final static int[] M_42 = { 21, 18, -1, -1, 12, -1, 3, 6, -1, -1, 5, -1, -1, -1, -1, 1, 2, -1, -1, -1, 4, -1, 7, -1, 13, -1, -1, 11, -1, -1, -1, 8, -1, -1, -1, 20, -1, -1, 10, -1, -1, -1, -1, -1, 16, -1, 17, 9, -1, -1, -1, -1, -1, -1, 23, -1, -1, -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, -1, -1, -1, -1, 19, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14};
	final static int[] M_43 = { 66, 46, -1, 67, -1, -1, 32, 33, -1, 42, 34, 39, 40, -1, -1, 35, 38, 44, -1, 48, -1, 50, -1, 53, 27, -1, 28, 30, 31, -1, 60, 49, 51, -1, 55, 57, -1, 29, 37, 61, 64, 58, -1, 59, -1, -1, 56, -1, -1, -1, -1, 41, -1, 62, 47, 68, -1, 52, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 36, 43, 45, 65, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 75, -1, -1, -1, -1, -1, -1, -1, -1, -1, 70, -1, 73, -1, 72, -1, -1, 74, -1, -1, -1, -1, 69, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71};
	final static int[] M_46 = { 21, -1, -1, -1, -1, 7, 8, -1, 17, 9, 14, 15, -1, -1, 10, 13, 19, -1, 23, -1, 25, -1, 29, -1, -1, 2, 4, 5, 6, -1, 24, 27, -1, 32, -1, -1, 3, 12, -1, -1, -1, 26, -1, -1, 31, 33, -1, -1, -1, -1, 16, -1, -1, 22, -1, -1, 28, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 18, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_47 = { 53, 48, 58, -1, 55, 59, 61, 44, -1, -1, 43, -1, -1, -1, -1, 60, 42, -1, -1, -1, 62, -1, 45, -1, 50, -1, 57, 56, -1, -1, -1, -1, -1, -1, -1, 52, -1, -1, 54, -1, -1, -1, 47, -1, -1, -1, 51, -1, -1, -1, -1, -1, -1, -1, 39, 41, -1, 63, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, -1, -1, -1, 49};
	final static int[] M_48 = { 21, -1, -1, -1, -1, 7, 8, -1, 17, 9, 14, 15, -1, -1, 10, 13, 19, -1, 23, -1, 25, -1, 29, -1, -1, 2, 4, 5, 6, 37, 24, 27, -1, 32, 34, -1, 3, 12, 38, -1, 35, 26, 36, -1, 31, 33, -1, -1, -1, -1, 16, -1, -1, 22, -1, -1, 28, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 18, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_50 = { 8, -1, -1, 7, -1, -1, -1, -1, -1, 6, -1, -1, -1, -1, -1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 5, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_51 = { 54, 49, 59, 24, 56, 60, 62, 45, 10, 11, 44, 20, 12, 17, 18, 61, 43, 13, 16, 22, 63, 26, 46, 28, 51, 32, 58, 57, 5, 7, 8, 9, 40, 27, 30, 53, 35, 37, 55, 6, 15, 41, 48, 38, 29, 39, 52, 34, 36, -1, -1, -1, -1, 19, -1, 42, 25, 64, -1, 31, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 47, 14, 21, 23, 50, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4};
}