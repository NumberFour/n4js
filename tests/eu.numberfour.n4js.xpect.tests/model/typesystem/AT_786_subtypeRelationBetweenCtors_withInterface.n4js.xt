/* XPECT_SETUP eu.numberfour.n4js.tests.N4JSXpectTest END_SETUP  */


// exact same example as in AT_786_subtypeRelationBetweenCtors.n4js.xt, but "AbstractSoda" is now an interface!

interface AbstractSoda {
    public drinkEm();
}

class Beer implements AbstractSoda {
    @Override
    public drinkEm() : this{ return this;}
}

class Champagne implements AbstractSoda{
	
	constructor(bubblesDecayRate : number) {}
	
    @Override
    public drinkEm() : this{return this;}
}

function getWasted(beverageClass : constructor{AbstractSoda}) {
	// should be ok:
    var beverage = new beverageClass(); //this is where the problem is
    beverage.drinkEm();
}
// XPECT errors --> "constructor{Champagne} is not a subtype of constructor{AbstractSoda}." at "Champagne"
getWasted(Champagne);

// XPECT type of 'abstractSoda'--> type{AbstractSoda}
var abstractSoda = AbstractSoda;
// XPECT type of 'beer' --> constructor{Beer}
var beer = Beer;

var soda : type{AbstractSoda}; // = AbstractSoda;
// XPECT errors --> "type{AbstractSoda} is not a subtype of constructor{AbstractSoda}." at "soda"
getWasted(soda);
// ok
getWasted(beer);

// XPECT errors --> "Cannot instantiate interface AbstractSoda." at "AbstractSoda"
var someSoda = new AbstractSoda();
