/* XPECT_SETUP eu.numberfour.n4js.expectmatrix.tests.N4JSExpectMatrixPendingTest END_SETUP  */

function <T> FA01()  { return null; }
function <T> FA02() : T  { return null; }
function <T> FA03(p1 : T) : T  { return null; }
function <T,S> FA04(p1 : T, p2 : S?) : T  { return null; }

function <T,S> FA06(p1 : T, ...p2 : S) : T  { return null; }

// XPECT FIXME noerrors -->
function FA21() : {function()} { return <string>FA01; }
// XPECT FIXME noerrors -->
function FA22() : {function(string):string} { return <string>FA03; }
// XPECT FIXME noerrors -->
function <T> FA23() : {function(T):T} { return <T>FA03; }



// + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
// calls to higher order functions:

// OK XPECT errors -->"any is not a subtype of string." at "FA21()()"
var cfa21a : string = FA21()();

// XPECT errors --> "any is not a subtype of number." at "FA21()()"
var cfa21b : number = FA21()();

// XPECT errors --> "Incorrect number of arguments: expected 1, got 0." at "FA22()()"
var cfa22a : string = FA22()();

// OK XPECT noerrors -->
var cfa22b : string = FA22()("bee");

// XPECT errors --> "int is not a subtype of string." at "4"
var cfa22c : string = FA22()(4);

// XPECT errors --> "string is not a subtype of number." at "FA22()("bee")"
var cfa22d : number = FA22()("bee");

/* XPECT errors ---
"string is not a subtype of number." at "FA22()(4)"
"int is not a subtype of string." at "4"
--- */
var cfa22e : number = FA22()(4);

/* XPECT errors ---
"Incorrect number of arguments: expected 1, got 0." at "FA23()()"
"any is not a subtype of string." at "FA23()()"
--- */
var cfa23a : string = FA23()();

// OK XPECT FIXME noerrors -->
var cfa23b : string = FA23()("bee");

// XPECT FIXME errors --> "number is not a subtype of string" at "4"
var cfa23c : string = FA23()(4);

// XPECT FIXME errors --> "string is not a subtype number" at "bee"
var cfa23d : number = FA23()("bee");

// OK XPECT FIXME noerrors -->
var cfa23e : number = FA23()(4); // ok


// + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
