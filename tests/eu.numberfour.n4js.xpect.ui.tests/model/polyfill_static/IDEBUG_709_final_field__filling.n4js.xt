/* XPECT_SETUP eu.numberfour.n4js.tests.N4JSXpectPluginTest 
   
    Workspace {
   	 Project "P_USERTL_B01" {
   	 	Folder "src" {
	   	 	Folder "n4js" { 
	   	 		ThisFile "Poly.n4js" { from = "IDEBUG_709_final_field__filling.n4js.xt"}
	   	 	}
	   	 	Folder "n4js-gen" {
	   	 		File "Poly.n4js" { from = "IDEBUG_709_final_field__filled.n4js"}	
	   	 	}
	   	}
   	 	File "manifest.n4mf" { from = "manifest_uses_b00.n4mf" }
   	 }
   }
   
   END_SETUP
 */
// First 4 Testcases ensure proper setup.

@@StaticPolyfillModule

@StaticPolyfill
export public class A extends A {

  	@Final b : number;

  	@Override
	constructor(@Spec spec : ~i~this) {
    	super(spec);

	    // XPECT noerrors --> "The final field a is read-only." at "a"
	    this.a = 5;    // < - - - - this will fail because A.a is read-only
	
	    // XPECT noerrors --> "The final field a is read-only." at "b"
	    this.b = 5;
	}
}

@StaticPolyfill
export public class B extends B {

  ////// activate to simulte for debugging (same as 'a' but not final):
  //  public number y;
  ////////////////////
	@Final c : number;

	@Override
	constructor(@Spec spec : ~i~this) {
		super(spec);
	
	    // XPECT noerrors --> "The final field b2 is read-only." at "b"
	    this.b2 = 5;
	
	    // XPECT noerrors --> "The final field a is read-only." at "c"
	    this.c = 5;
	}
	
	
	/// actual TESTcase follow down here
	codeShell() : void{

		var x : Object = new Object(); 
		// XPECT errors -->	"Object is not a structural subtype of ~i~B: missing field a; a failed: non-optional writable field requires a readable field or a getter in subtype." at "x"
		new B(x);
		
		// XPECT nowarnings --> "Unnecessary cast from Object to ~~B" at "x as ~~B"
		new B(x as ~~B);
		
		// XPECT errors -->	"Object is not a structural subtype of ~i~A: missing field a; a failed: non-optional writable field requires a readable field or a getter in subtype." at "x"
		new A(x);
		
		// XPECT errors -->	"Object is not a structural subtype of ~i~A1: missing field a; a failed: non-optional writable field requires a readable field or a getter in subtype." at "x"
		new A1(x);
	}
}
