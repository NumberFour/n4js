/* XPECT_SETUP eu.numberfour.n4js.spec.tests.N4JSSpecTest END_SETUP */
// IDE-561

/* XPECT output --- 
<==
stdout:
# all direct + inherited
 - N4Accessor :: getterPrivateStaticString
 - N4Accessor :: getterPrivateString
 - N4Accessor :: getterPublicStaticStringClassS
 - N4Accessor :: getterPublicStaticStringClassSS
 - N4Accessor :: getterPublicStringClassS
 - N4Accessor :: getterPublicStringClassSS
 - N4Accessor :: setterPrivateStaticString
 - N4Accessor :: setterPrivateString
 - N4Accessor :: setterPublicStaticStringClassS
 - N4Accessor :: setterPublicStaticStringClassSS
 - N4Accessor :: setterPublicStringClassS
 - N4Accessor :: setterPublicStringClassSS
 - N4DataField :: datafieldPrivateStaticString
 - N4DataField :: datafieldPrivateString
 - N4DataField :: datafieldPublicStaticStringClassS
 - N4DataField :: datafieldPublicStaticStringClassSS
 - N4DataField :: datafieldPublicStringClassS
 - N4DataField :: datafieldPublicStringClassSS
 - N4Method :: methodPrivateStaticVoid
 - N4Method :: methodPrivateVoids
 - N4Method :: methodPublicStaticVoidClassS
 - N4Method :: methodPublicStaticVoidClassSS
 - N4Method :: methodPublicVoidsClassS
 - N4Method :: methodPublicVoidsClassSS
# all direct + inherited + static
 - N4Accessor :: getterPrivateStaticString
 - N4Accessor :: getterPublicStaticStringClassS
 - N4Accessor :: getterPublicStaticStringClassSS
 - N4Accessor :: setterPrivateStaticString
 - N4Accessor :: setterPublicStaticStringClassS
 - N4Accessor :: setterPublicStaticStringClassSS
 - N4DataField :: datafieldPrivateStaticString
 - N4DataField :: datafieldPublicStaticStringClassS
 - N4DataField :: datafieldPublicStaticStringClassSS
 - N4Method :: methodPrivateStaticVoid
 - N4Method :: methodPublicStaticVoidClassS
 - N4Method :: methodPublicStaticVoidClassSS
stderr:
==>
--- */



class SS{
	public static datafieldPublicStaticStringClassSS : string = "1";
	
	public static get getterPublicStaticStringClassSS() : string{
		return "2";
	}
	
	public static set setterPublicStaticStringClassSS(s : string){
	}
	
	public static methodPublicStaticVoidClassSS() : void{}
	
	public datafieldPublicStringClassSS : string = "3";

	public get getterPublicStringClassSS() : string{
		return "2";
	}
	
	public set setterPublicStringClassSS(s : string){
	}
	
	public methodPublicVoidsClassSS() : void{}
}
class S extends SS{
	public static datafieldPublicStaticStringClassS : string = "1";
	
	public static get getterPublicStaticStringClassS() : string{
		return "2";
	}
	
	public static set setterPublicStaticStringClassS(s : string){
	}
	
	public static methodPublicStaticVoidClassS() : void{}
	
	public datafieldPublicStringClassS : string = "3";

	public get getterPublicStringClassS() : string{
		return "2";
	}
	
	public set setterPublicStringClassS(s : string){
	}
	
	
	public methodPublicVoidsClassS() : void{}
}


class ClassWithStuff extends S{
	
	private static datafieldPrivateStaticString : string = "1";
	
	private static get getterPrivateStaticString() : string{
		return "2";
	}
	
	private static set setterPrivateStaticString(s : string){
	}
	
	private static methodPrivateStaticVoid() : void{}
	
	private datafieldPrivateString : string = "3";

	private get getterPrivateString() : string{
		return "2";
	}
	
	private set setterPrivateString(s : string){
	}
	
	
	private methodPrivateVoids() : void{}
	
}

function findMemberType(m : N4Member){
	if(m instanceof N4Method) {return "N4Method"}
	if(m instanceof N4DataField) {return "N4DataField"}
	if(m instanceof N4Accessor) {return "N4Accessor"}
	if(m instanceof N4Field) {return "N4Field"}
	if(m instanceof N4Member) {return "N4Member"}
	return "unknown type of member"
}

function print1 (a : Array<string>){
	a.forEach(function(s : string){ console.log(s);});
}

function printMembers(arr : Array<? extends N4Member>){
	var asd : Array<string> = [];
	arr.forEach(function(m : N4Member){ asd.push (" - "+ findMemberType(m)+ " :: "+ m.name) ; });
	asd.sort();   print1 ( asd );
}


var test = ClassWithStuff.n4type
console.log("# all direct + inherited")
printMembers(test.members(false, true));
console.log("# all direct + inherited + static")
printMembers(test.members(false, true, true));
