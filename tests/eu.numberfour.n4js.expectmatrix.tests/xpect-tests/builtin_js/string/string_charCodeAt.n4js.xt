/* XPECT_SETUP eu.numberfour.n4js.expectmatrix.tests.N4JSExpectMatrixPendingTest END_SETUP */

// String.prototype.charCodeAt()
// Source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt

// Fixing charCodeAt to handle non-Basic-Multilingual-Plane characters if their presence earlier in the string is unknown
function fixedCharCodeAt (str : string, idx : number) {
    idx = idx || 0;
    var code = str.charCodeAt(idx);
    var hi : number, low : number;
    
    // High surrogate (could change last hex to 0xDB7F to treat high
    // private surrogates as single characters)
    if (0xD800 <= code && code <= 0xDBFF) {
        hi = code;
        low = str.charCodeAt(idx+1);
        if (isNaN(low)) {
            throw 'High surrogate not followed by low surrogate in fixedCharCodeAt()';
        }
        return ((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000;
    }
    if (0xDC00 <= code && code <= 0xDFFF) { // Low surrogate
        // We return false to allow loops to skip this iteration since should have
        // already handled high surrogate above in the previous iteration
        return false;
    }
    return code;
}

console.log(fixedCharCodeAt ('\uD800\uDC00', 0)); // 65536
console.log(fixedCharCodeAt ('\uD800\uDC00', 1)); // false


/* XPECT output --- 
<==
stdout:
65536
false
stderr:
==>
--- */
