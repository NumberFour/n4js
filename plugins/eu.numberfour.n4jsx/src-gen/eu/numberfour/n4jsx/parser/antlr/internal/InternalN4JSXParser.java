package eu.numberfour.n4jsx.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import eu.numberfour.n4jsx.services.N4JSXGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalN4JSXParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "Intersection", "Constructor", "Implements", "Instanceof", "Promisify", "Interface", "Protected", "Abstract", "Continue", "Debugger", "External", "Function", "Default", "Extends", "Finally", "Private", "Project", "Delete", "Export", "Import", "Public", "Return", "Static", "Switch", "Target", "Typeof", "Async", "Await", "Break", "Catch", "Class", "Const", "False", "Super", "Throw", "Union", "While", "Yield", "This", "Case", "Else", "Enum", "From", "Null", "This_1", "True", "Type", "Void", "With", "ExclamationMarkEqualsSignEqualsSign", "FullStopFullStopFullStop", "LessThanSignLessThanSignEqualsSign", "EqualsSignEqualsSignEqualsSign", "For", "Get", "Let", "New", "Out", "Set", "Try", "Var", "ExclamationMarkEqualsSign", "PercentSignEqualsSign", "AmpersandAmpersand", "AmpersandEqualsSign", "AsteriskEqualsSign", "PlusSignPlusSign", "PlusSignEqualsSign", "HyphenMinusHyphenMinus", "HyphenMinusEqualsSign", "SolidusEqualsSign", "LessThanSignLessThanSign", "LessThanSignEqualsSign", "EqualsSignEqualsSign", "EqualsSignGreaterThanSign", "GreaterThanSignEqualsSign", "CommercialAtCommercialAt", "CircumflexAccentEqualsSign", "As", "Do", "If", "In", "Of", "VerticalLineEqualsSign", "VerticalLineVerticalLine", "ExclamationMark", "PercentSign", "Ampersand", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "QuestionMark", "CommercialAt", "LeftSquareBracket", "RightSquareBracket", "CircumflexAccent", "LeftCurlyBracket", "VerticalLine", "RightCurlyBracket", "Tilde", "RULE_DECIMAL_DIGIT_FRAGMENT", "RULE_EXPONENT_PART", "RULE_DECIMAL_INTEGER_LITERAL_FRAGMENT", "RULE_DOUBLE", "RULE_INT_SUFFIX", "RULE_HEX_INT", "RULE_BINARY_INT", "RULE_OCTAL_INT", "RULE_LEGACY_OCTAL_INT", "RULE_IDENTIFIER_PART", "RULE_SCIENTIFIC_INT", "RULE_SIGNED_INT", "RULE_IDENTIFIER", "RULE_DOUBLE_STRING_CHAR", "RULE_SINGLE_STRING_CHAR", "RULE_STRING", "RULE_LINE_TERMINATOR_FRAGMENT", "RULE_LINE_TERMINATOR_SEQUENCE_FRAGMENT", "RULE_BACKSLASH_SEQUENCE", "RULE_REGEX_CHAR_OR_BRACKET", "RULE_REGEX_CHAR", "RULE_ACTUAL_REGEX_TAIL", "RULE_REGEX_START", "RULE_REGEX_TAIL", "RULE_TEMPLATE_LITERAL_CHAR", "RULE_TEMPLATE_HEAD", "RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL", "RULE_ACTUAL_TEMPLATE_END", "RULE_TEMPLATE_MIDDLE", "RULE_TEMPLATE_END", "RULE_TEMPLATE_CONTINUATION", "RULE_NO_LINE_TERMINATOR", "RULE_INCOMPLETE_ASYNC_ARROW", "RULE_STRUCTMODSUFFIX", "RULE_IDENTIFIER_START", "RULE_INT", "RULE_ML_COMMENT_FRAGMENT", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_EOL", "RULE_WHITESPACE_FRAGMENT", "RULE_WS", "RULE_HEX_DIGIT", "RULE_UNICODE_ESCAPE_FRAGMENT", "RULE_UNICODE_LETTER_FRAGMENT", "RULE_UNICODE_COMBINING_MARK_FRAGMENT", "RULE_UNICODE_DIGIT_FRAGMENT", "RULE_UNICODE_CONNECTOR_PUNCTUATION_FRAGMENT", "RULE_ZWNJ", "RULE_ZWJ", "RULE_DOT_DOT", "RULE_BOM", "RULE_UNICODE_SPACE_SEPARATOR_FRAGMENT", "RULE_SL_COMMENT_FRAGMENT", "RULE_ANY_OTHER"
    };
    public static final int Delete=21;
    public static final int Enum=45;
    public static final int RULE_REGEX_CHAR=134;
    public static final int Import=23;
    public static final int EqualsSignGreaterThanSign=78;
    public static final int Var=64;
    public static final int RULE_ACTUAL_TEMPLATE_END=141;
    public static final int Break=32;
    public static final int False=36;
    public static final int LessThanSign=102;
    public static final int LeftParenthesis=92;
    public static final int RULE_TEMPLATE_LITERAL_CHAR=138;
    public static final int Throw=38;
    public static final int Private=19;
    public static final int Extends=17;
    public static final int RULE_REGEX_TAIL=137;
    public static final int ExclamationMark=89;
    public static final int ExclamationMarkEqualsSignEqualsSign=53;
    public static final int GreaterThanSign=104;
    public static final int RULE_LINE_TERMINATOR_SEQUENCE_FRAGMENT=131;
    public static final int RULE_TEMPLATE_HEAD=139;
    public static final int RULE_STRUCTMODSUFFIX=147;
    public static final int RULE_EOL=153;
    public static final int RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL=140;
    public static final int Out=61;
    public static final int GreaterThanSignEqualsSign=79;
    public static final int RULE_ZWNJ=162;
    public static final int Project=20;
    public static final int EqualsSignEqualsSign=77;
    public static final int Switch=27;
    public static final int RULE_OCTAL_INT=121;
    public static final int VerticalLine=111;
    public static final int PlusSign=95;
    public static final int RULE_INT=149;
    public static final int Get=58;
    public static final int RULE_ML_COMMENT=151;
    public static final int LeftSquareBracket=107;
    public static final int LessThanSignLessThanSign=75;
    public static final int If=84;
    public static final int RULE_REGEX_START=136;
    public static final int Finally=18;
    public static final int Intersection=4;
    public static final int Set=62;
    public static final int RULE_UNICODE_ESCAPE_FRAGMENT=157;
    public static final int In=85;
    public static final int Catch=33;
    public static final int VerticalLineVerticalLine=88;
    public static final int RULE_SCIENTIFIC_INT=124;
    public static final int RULE_TEMPLATE_MIDDLE=142;
    public static final int RULE_INCOMPLETE_ASYNC_ARROW=146;
    public static final int RULE_EXPONENT_PART=115;
    public static final int Union=39;
    public static final int Case=43;
    public static final int RULE_REGEX_CHAR_OR_BRACKET=133;
    public static final int Comma=96;
    public static final int RULE_SL_COMMENT_FRAGMENT=167;
    public static final int Target=28;
    public static final int As=82;
    public static final int HyphenMinus=97;
    public static final int RULE_IDENTIFIER_PART=123;
    public static final int RULE_UNICODE_SPACE_SEPARATOR_FRAGMENT=166;
    public static final int Export=22;
    public static final int LessThanSignEqualsSign=76;
    public static final int CommercialAtCommercialAt=80;
    public static final int Solidus=99;
    public static final int RightCurlyBracket=112;
    public static final int PercentSignEqualsSign=66;
    public static final int RULE_HEX_INT=119;
    public static final int FullStop=98;
    public static final int Constructor=5;
    public static final int Abstract=11;
    public static final int Promisify=8;
    public static final int RULE_SIGNED_INT=125;
    public static final int Default=16;
    public static final int CommercialAt=106;
    public static final int Semicolon=101;
    public static final int RULE_LINE_TERMINATOR_FRAGMENT=130;
    public static final int Type=50;
    public static final int PlusSignPlusSign=70;
    public static final int QuestionMark=105;
    public static final int Else=44;
    public static final int RULE_HEX_DIGIT=156;
    public static final int RULE_UNICODE_CONNECTOR_PUNCTUATION_FRAGMENT=161;
    public static final int Yield=41;
    public static final int ExclamationMarkEqualsSign=65;
    public static final int Interface=9;
    public static final int RULE_TEMPLATE_CONTINUATION=144;
    public static final int HyphenMinusHyphenMinus=72;
    public static final int New=60;
    public static final int Null=47;
    public static final int AmpersandEqualsSign=68;
    public static final int Typeof=29;
    public static final int SolidusEqualsSign=74;
    public static final int True=49;
    public static final int FullStopFullStopFullStop=54;
    public static final int PercentSign=90;
    public static final int RULE_IDENTIFIER_START=148;
    public static final int Implements=6;
    public static final int RULE_WHITESPACE_FRAGMENT=154;
    public static final int Super=37;
    public static final int Async=30;
    public static final int This=42;
    public static final int Try=63;
    public static final int Ampersand=91;
    public static final int AsteriskEqualsSign=69;
    public static final int Void=51;
    public static final int VerticalLineEqualsSign=87;
    public static final int RightSquareBracket=108;
    public static final int RULE_BINARY_INT=120;
    public static final int Protected=10;
    public static final int Const=35;
    public static final int RULE_ACTUAL_REGEX_TAIL=135;
    public static final int For=57;
    public static final int RightParenthesis=93;
    public static final int RULE_UNICODE_COMBINING_MARK_FRAGMENT=159;
    public static final int Public=24;
    public static final int Do=83;
    public static final int RULE_LEGACY_OCTAL_INT=122;
    public static final int RULE_DOUBLE_STRING_CHAR=127;
    public static final int EqualsSignEqualsSignEqualsSign=56;
    public static final int RULE_TEMPLATE_END=143;
    public static final int This_1=48;
    public static final int RULE_NO_LINE_TERMINATOR=145;
    public static final int RULE_DOT_DOT=164;
    public static final int External=14;
    public static final int CircumflexAccentEqualsSign=81;
    public static final int Class=34;
    public static final int Static=26;
    public static final int Debugger=13;
    public static final int RULE_SINGLE_STRING_CHAR=128;
    public static final int LessThanSignLessThanSignEqualsSign=55;
    public static final int RULE_INT_SUFFIX=118;
    public static final int RULE_IDENTIFIER=126;
    public static final int RULE_ML_COMMENT_FRAGMENT=150;
    public static final int RULE_STRING=129;
    public static final int Continue=12;
    public static final int With=52;
    public static final int RULE_SL_COMMENT=152;
    public static final int Function=15;
    public static final int EqualsSign=103;
    public static final int RULE_ZWJ=163;
    public static final int RULE_UNICODE_DIGIT_FRAGMENT=160;
    public static final int AmpersandAmpersand=67;
    public static final int RULE_DOUBLE=117;
    public static final int Instanceof=7;
    public static final int HyphenMinusEqualsSign=73;
    public static final int Colon=100;
    public static final int RULE_BACKSLASH_SEQUENCE=132;
    public static final int EOF=-1;
    public static final int Asterisk=94;
    public static final int PlusSignEqualsSign=71;
    public static final int Return=25;
    public static final int RULE_WS=155;
    public static final int RULE_BOM=165;
    public static final int LeftCurlyBracket=110;
    public static final int Tilde=113;
    public static final int While=40;
    public static final int From=46;
    public static final int RULE_ANY_OTHER=168;
    public static final int CircumflexAccent=109;
    public static final int RULE_UNICODE_LETTER_FRAGMENT=158;
    public static final int RULE_DECIMAL_DIGIT_FRAGMENT=114;
    public static final int Of=86;
    public static final int RULE_DECIMAL_INTEGER_LITERAL_FRAGMENT=116;
    public static final int Let=59;
    public static final int Await=31;


        public InternalN4JSXParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalN4JSXParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalN4JSXParser.tokenNames; }
    public String getGrammarFileName() { return "InternalN4JSXParser.g"; }
    protected void setInRegularExpression() {}
    protected void setInTemplateSegment() {}
    protected boolean forcedRewind(int marker) { return true; } // overridden in subtype
    protected void promoteEOL() {} // overridden in subtype
    protected void addASIMessage() {} // overridden in subtype
    protected boolean hasDisallowedEOL() { return false; } // overridden in subtype


    	private N4JSXGrammarAccess grammarAccess;
    	 	
    	public InternalN4JSXParser(TokenStream input, N4JSXGrammarAccess grammarAccess) {
    		this(input);
    		this.grammarAccess = grammarAccess;
    		registerRules(grammarAccess.getGrammar());
    	}
    	
    	@Override
    	protected String getFirstRuleName() {
    		return "IDLScript";	
    	} 
    	   	   	
    	@Override
    	protected N4JSXGrammarAccess getGrammarAccess() {
    		return grammarAccess;
    	}
    public final EObject entryRuleIDLScript() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIDLScript = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIDLScriptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIDLScript=ruleIDLScript();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIDLScript; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIDLScript() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_1_0 = null;

        EObject lv_scriptElements_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getIDLScriptAccess().getScriptAction_0(),
                          current);
                  
            }

            }
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==CommercialAtCommercialAt) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getIDLScriptAccess().getAnnotationsScriptAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_3);
            	    lv_annotations_1_0=ruleScriptAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getIDLScriptRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"eu.numberfour.n4js.N4JS.ScriptAnnotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( ((LA2_0>=Intersection && LA2_0<=Implements)||(LA2_0>=Promisify && LA2_0<=Function)||(LA2_0>=Private && LA2_0<=Break)||(LA2_0>=Class && LA2_0<=This)||(LA2_0>=Enum && LA2_0<=With)||(LA2_0>=For && LA2_0<=Var)||LA2_0==PlusSignPlusSign||LA2_0==HyphenMinusHyphenMinus||LA2_0==SolidusEqualsSign||(LA2_0>=As && LA2_0<=If)||LA2_0==Of||LA2_0==ExclamationMark||LA2_0==LeftParenthesis||LA2_0==PlusSign||LA2_0==HyphenMinus||LA2_0==Solidus||(LA2_0>=Semicolon && LA2_0<=LessThanSign)||(LA2_0>=CommercialAt && LA2_0<=LeftSquareBracket)||LA2_0==LeftCurlyBracket||LA2_0==Tilde||LA2_0==RULE_DOUBLE||(LA2_0>=RULE_HEX_INT && LA2_0<=RULE_LEGACY_OCTAL_INT)||LA2_0==RULE_SCIENTIFIC_INT||LA2_0==RULE_IDENTIFIER||LA2_0==RULE_STRING||(LA2_0>=RULE_TEMPLATE_HEAD && LA2_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA2_0==RULE_INT) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getIDLScriptAccess().getScriptElementsScriptElementParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_scriptElements_2_0=ruleScriptElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getIDLScriptRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"scriptElements",
            	              		lv_scriptElements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.ScriptElement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpression=rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePrimaryExpression() throws RecognitionException {
        EObject current = null;
        EObject this_ThisLiteral_0 = null;

        EObject this_SuperLiteral_1 = null;

        EObject this_IdentifierRef_2 = null;

        EObject this_ParameterizedCallExpression_3 = null;

        EObject this_Literal_4 = null;

        EObject this_ArrayLiteral_5 = null;

        EObject this_ObjectLiteral_6 = null;

        EObject this_ParenExpression_7 = null;

        EObject this_AnnotatedExpression_8 = null;

        EObject this_FunctionExpression_9 = null;

        EObject this_AsyncFunctionExpression_10 = null;

        EObject this_N4ClassExpression_11 = null;

        EObject this_TemplateLiteral_12 = null;

        EObject this_JSXElement_13 = null;


        enterRule(); 
        try { 
        	{
            int alt3=14;
            // REPLACEMENT rulePrimaryExpression.java.replacement START
            try {
                alt3 = dfa3.predict(input);
            } catch (NoViableAltException re) {
            	int as = input.LA(1);
            	if (as==Async) { alt3=3; }
            	else throw re;
            }
            // REPLACEMENT rulePrimaryExpression.java.replacement END
            switch (alt3) {
                case 1 : 
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getThisLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThisLiteral_0=ruleThisLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThisLiteral_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSuperLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SuperLiteral_1=ruleSuperLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SuperLiteral_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getIdentifierRefParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IdentifierRef_2=ruleIdentifierRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IdentifierRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParameterizedCallExpressionParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedCallExpression_3=ruleParameterizedCallExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedCallExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Literal_4=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Literal_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArrayLiteralParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayLiteral_5=ruleArrayLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayLiteral_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getObjectLiteralParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ObjectLiteral_6=ruleObjectLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ObjectLiteral_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParenExpressionParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParenExpression_7=ruleParenExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParenExpression_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getAnnotatedExpressionParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedExpression_8=ruleAnnotatedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedExpression_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getFunctionExpressionParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionExpression_9=ruleFunctionExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionExpression_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getAsyncFunctionExpressionParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AsyncFunctionExpression_10=ruleAsyncFunctionExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncFunctionExpression_10;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 12 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getN4ClassExpressionParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4ClassExpression_11=ruleN4ClassExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4ClassExpression_11;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 13 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTemplateLiteralParserRuleCall_12()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TemplateLiteral_12=ruleTemplateLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TemplateLiteral_12;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 14 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getJSXElementParserRuleCall_13()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_JSXElement_13=ruleJSXElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_JSXElement_13;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ThisLiteral_0 = null;

        EObject this_SuperLiteral_1 = null;

        EObject this_IdentifierRef_2 = null;

        EObject this_ParameterizedCallExpression_3 = null;

        EObject this_Literal_4 = null;

        EObject this_ArrayLiteral_5 = null;

        EObject this_ObjectLiteral_6 = null;

        EObject this_ParenExpression_7 = null;

        EObject this_AnnotatedExpression_8 = null;

        EObject this_FunctionExpression_9 = null;

        EObject this_AsyncFunctionExpression_10 = null;

        EObject this_N4ClassExpression_11 = null;

        EObject this_TemplateLiteral_12 = null;

        EObject this_JSXElement_13 = null;


         enterRule(); 
            
        try {
            {
            int alt4=14;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getThisLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThisLiteral_0=ruleThisLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThisLiteral_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSuperLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SuperLiteral_1=ruleSuperLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SuperLiteral_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getIdentifierRefParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IdentifierRef_2=norm1_IdentifierRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IdentifierRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParameterizedCallExpressionParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedCallExpression_3=norm1_ParameterizedCallExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedCallExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Literal_4=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Literal_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArrayLiteralParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayLiteral_5=norm1_ArrayLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayLiteral_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getObjectLiteralParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ObjectLiteral_6=norm1_ObjectLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ObjectLiteral_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParenExpressionParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParenExpression_7=norm1_ParenExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParenExpression_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getAnnotatedExpressionParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedExpression_8=norm1_AnnotatedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedExpression_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getFunctionExpressionParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionExpression_9=ruleFunctionExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionExpression_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getAsyncFunctionExpressionParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AsyncFunctionExpression_10=ruleAsyncFunctionExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncFunctionExpression_10;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 12 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getN4ClassExpressionParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4ClassExpression_11=norm1_N4ClassExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4ClassExpression_11;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 13 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTemplateLiteralParserRuleCall_12()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TemplateLiteral_12=norm1_TemplateLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TemplateLiteral_12;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 14 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getJSXElementParserRuleCall_13()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_JSXElement_13=ruleJSXElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_JSXElement_13;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleJSXElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJSXElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJSXElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJSXElement=ruleJSXElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJSXElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleJSXElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_jsxElementName_1_0 = null;

        EObject this_JSXAttributes_2 = null;

        EObject lv_jsxChildren_4_0 = null;

        EObject this_JSXClosingElement_5 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LessThanSign,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJSXElementAccess().getLessThanSignKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJSXElementAccess().getJsxElementNameJSXElementNameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_jsxElementName_1_0=ruleJSXElementName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJSXElementRule());
              	        }
                     		set(
                     			current, 
                     			"jsxElementName",
                      		lv_jsxElementName_1_0, 
                      		"eu.numberfour.n4jsx.N4JSX.JSXElementName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getJSXElementRule());
              		}
                      newCompositeNode(grammarAccess.getJSXElementAccess().getJSXAttributesParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_7);
            this_JSXAttributes_2=ruleJSXAttributes(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_JSXAttributes_2;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==GreaterThanSign) ) {
                alt6=1;
            }
            else if ( (LA6_0==Solidus) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    {
                    {
                    otherlv_3=(Token)match(input,GreaterThanSign,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getJSXElementAccess().getGreaterThanSignKeyword_3_0_0());
                          
                    }
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==LessThanSign) ) {
                            int LA5_1 = input.LA(2);

                            if ( ((LA5_1>=Intersection && LA5_1<=Implements)||(LA5_1>=Promisify && LA5_1<=Abstract)||LA5_1==External||(LA5_1>=Private && LA5_1<=Project)||LA5_1==Public||LA5_1==Static||LA5_1==Target||(LA5_1>=Async && LA5_1<=Await)||LA5_1==Union||(LA5_1>=Yield && LA5_1<=This)||LA5_1==From||LA5_1==Type||(LA5_1>=Get && LA5_1<=Let)||(LA5_1>=Out && LA5_1<=Set)||LA5_1==As||LA5_1==Of||LA5_1==RULE_IDENTIFIER) ) {
                                alt5=1;
                            }


                        }


                        switch (alt5) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJSXElementAccess().getJsxChildrenJSXChildParserRuleCall_3_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_8);
                    	    lv_jsxChildren_4_0=ruleJSXChild();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJSXElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"jsxChildren",
                    	              		lv_jsxChildren_4_0, 
                    	              		"eu.numberfour.n4jsx.N4JSX.JSXChild");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getJSXElementRule());
                      		}
                              newCompositeNode(grammarAccess.getJSXElementAccess().getJSXClosingElementParserRuleCall_3_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_JSXClosingElement_5=ruleJSXClosingElement(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_JSXClosingElement_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    otherlv_6=(Token)match(input,Solidus,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getJSXElementAccess().getSolidusKeyword_3_1_0());
                          
                    }
                    otherlv_7=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getJSXElementAccess().getGreaterThanSignKeyword_3_1_1());
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleJSXClosingElement(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_jsxClosingName_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LessThanSign,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJSXClosingElementAccess().getLessThanSignKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,Solidus,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getJSXClosingElementAccess().getSolidusKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJSXClosingElementAccess().getJsxClosingNameJSXElementNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_9);
            lv_jsxClosingName_2_0=ruleJSXElementName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJSXClosingElementRule());
              	        }
                     		set(
                     			current, 
                     			"jsxClosingName",
                      		lv_jsxClosingName_2_0, 
                      		"eu.numberfour.n4jsx.N4JSX.JSXElementName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getJSXClosingElementAccess().getGreaterThanSignKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleJSXChild() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJSXChild = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJSXChildRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJSXChild=ruleJSXChild();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJSXChild; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleJSXChild() throws RecognitionException {
        EObject current = null;

        EObject this_JSXElement_0 = null;


         enterRule(); 
            
        try {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getJSXChildAccess().getJSXElementParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_JSXElement_0=ruleJSXElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_JSXElement_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleJSXElementName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJSXElementName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJSXElementNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJSXElementName=ruleJSXElementName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJSXElementName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleJSXElementName() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJSXElementNameAccess().getExpressionJSXElementNameExpressionParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_0_0=ruleJSXElementNameExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJSXElementNameRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"eu.numberfour.n4jsx.N4JSX.JSXElementNameExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleJSXElementNameExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJSXElementNameExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJSXElementNameExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJSXElementNameExpression=ruleJSXElementNameExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJSXElementNameExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleJSXElementNameExpression() throws RecognitionException {
        EObject current = null;

        EObject this_IdentifierRef_0 = null;

        EObject this_ParameterizedPropertyAccessExpressionTail_2 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getJSXElementNameExpressionAccess().getIdentifierRefParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_11);
            this_IdentifierRef_0=ruleIdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_IdentifierRef_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop7:
            do {
                int alt7=2;
                int LA7_0 = input.LA(1);

                if ( (LA7_0==FullStop) ) {
                    alt7=1;
                }


                switch (alt7) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getJSXElementNameExpressionAccess().getParameterizedPropertyAccessExpressionTargetAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    if ( state.backtracking==0 ) {
            	       
            	      		if (current==null) {
            	      			current = createModelElement(grammarAccess.getJSXElementNameExpressionRule());
            	      		}
            	              newCompositeNode(grammarAccess.getJSXElementNameExpressionAccess().getParameterizedPropertyAccessExpressionTailParserRuleCall_1_1()); 
            	          
            	    }
            	    pushFollow(FOLLOW_11);
            	    this_ParameterizedPropertyAccessExpressionTail_2=ruleParameterizedPropertyAccessExpressionTail(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current = this_ParameterizedPropertyAccessExpressionTail_2;
            	              afterParserOrEnumRuleCall();
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop7;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleJSXAttributes(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_jsxAttributes_0_0 = null;


         enterRule(); 
            
        try {
            {
            loop8:
            do {
                int alt8=2;
                int LA8_0 = input.LA(1);

                if ( ((LA8_0>=Intersection && LA8_0<=With)||(LA8_0>=For && LA8_0<=Var)||(LA8_0>=As && LA8_0<=Of)||LA8_0==LeftCurlyBracket||LA8_0==RULE_IDENTIFIER) ) {
                    alt8=1;
                }


                switch (alt8) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getJSXAttributesAccess().getJsxAttributesJSXAttributeParserRuleCall_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_12);
            	    lv_jsxAttributes_0_0=ruleJSXAttribute();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getJSXAttributesRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"jsxAttributes",
            	              		lv_jsxAttributes_0_0, 
            	              		"eu.numberfour.n4jsx.N4JSX.JSXAttribute");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop8;
                }
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleJSXAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJSXAttribute = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJSXAttributeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJSXAttribute=ruleJSXAttribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJSXAttribute; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleJSXAttribute() throws RecognitionException {
        EObject current = null;

        EObject this_JSXSpreadAttribute_0 = null;

        EObject this_JSXPropertyAttribute_1 = null;


         enterRule(); 
            
        try {
            {
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==LeftCurlyBracket) ) {
                alt9=1;
            }
            else if ( ((LA9_0>=Intersection && LA9_0<=With)||(LA9_0>=For && LA9_0<=Var)||(LA9_0>=As && LA9_0<=Of)||LA9_0==RULE_IDENTIFIER) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJSXAttributeAccess().getJSXSpreadAttributeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_JSXSpreadAttribute_0=ruleJSXSpreadAttribute();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_JSXSpreadAttribute_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJSXAttributeAccess().getJSXPropertyAttributeParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_JSXPropertyAttribute_1=ruleJSXPropertyAttribute();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_JSXPropertyAttribute_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleJSXSpreadAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJSXSpreadAttribute = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJSXSpreadAttributeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJSXSpreadAttribute=ruleJSXSpreadAttribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJSXSpreadAttribute; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleJSXSpreadAttribute() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftCurlyBracket,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJSXSpreadAttributeAccess().getLeftCurlyBracketKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,FullStopFullStopFullStop,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getJSXSpreadAttributeAccess().getFullStopFullStopFullStopKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJSXSpreadAttributeAccess().getExpressionAssignmentExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_15);
            lv_expression_2_0=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJSXSpreadAttributeRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getJSXSpreadAttributeAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleJSXPropertyAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJSXPropertyAttribute = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJSXPropertyAttributeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJSXPropertyAttribute=ruleJSXPropertyAttribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJSXPropertyAttribute; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleJSXPropertyAttribute() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_jsxAttributeValue_2_0 = null;

        EObject lv_jsxAttributeValue_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getJSXPropertyAttributeRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJSXPropertyAttributeAccess().getPropertyIdentifiableElementCrossReference_0_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getJSXPropertyAttributeAccess().getEqualsSignKeyword_1());
                  
            }
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_STRING) ) {
                alt10=1;
            }
            else if ( (LA10_0==LeftCurlyBracket) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJSXPropertyAttributeAccess().getJsxAttributeValueStringLiteralParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_jsxAttributeValue_2_0=ruleStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJSXPropertyAttributeRule());
                      	        }
                             		set(
                             			current, 
                             			"jsxAttributeValue",
                              		lv_jsxAttributeValue_2_0, 
                              		"eu.numberfour.n4js.N4JS.StringLiteral");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getJSXPropertyAttributeAccess().getLeftCurlyBracketKeyword_2_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJSXPropertyAttributeAccess().getJsxAttributeValueAssignmentExpressionParserRuleCall_2_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_15);
                    lv_jsxAttributeValue_4_0=ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJSXPropertyAttributeRule());
                      	        }
                             		set(
                             			current, 
                             			"jsxAttributeValue",
                              		lv_jsxAttributeValue_4_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getJSXPropertyAttributeAccess().getRightCurlyBracketKeyword_2_1_2());
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleScriptElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScriptElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScriptElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleScriptElement=ruleScriptElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScriptElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleScriptElement() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedScriptElement_0 = null;

        EObject this_N4ClassDeclaration_1 = null;

        EObject this_N4InterfaceDeclaration_2 = null;

        EObject this_N4EnumDeclaration_3 = null;

        EObject this_ImportDeclaration_4 = null;

        EObject this_ExportDeclaration_5 = null;

        EObject this_RootStatement_6 = null;


         enterRule(); 
            
        try {
            {
            int alt11=7;
            alt11 = dfa11.predict(input);
            switch (alt11) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getAnnotatedScriptElementParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedScriptElement_0=ruleAnnotatedScriptElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedScriptElement_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getN4ClassDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4ClassDeclaration_1=ruleN4ClassDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4ClassDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getN4InterfaceDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4InterfaceDeclaration_2=ruleN4InterfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4InterfaceDeclaration_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getN4EnumDeclarationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4EnumDeclaration_3=ruleN4EnumDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4EnumDeclaration_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getImportDeclarationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ImportDeclaration_4=ruleImportDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ImportDeclaration_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getExportDeclarationParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportDeclaration_5=ruleExportDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportDeclaration_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getRootStatementParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_RootStatement_6=ruleRootStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_RootStatement_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotatedScriptElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedScriptElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedScriptElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedScriptElement=ruleAnnotatedScriptElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedScriptElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotatedScriptElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_11=null;
        Token otherlv_18=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        EObject this_AnnotationList_0 = null;

        EObject this_ExportDeclarationImpl_2 = null;

        EObject this_ImportDeclarationImpl_4 = null;

        Enumerator lv_declaredModifiers_6_0 = null;

        EObject this_AsyncNoTrailingLineBreak_7 = null;

        EObject this_FunctionImpl_8 = null;

        Enumerator lv_declaredModifiers_10_0 = null;

        AntlrDatatypeRuleToken lv_typingStrategy_12_0 = null;

        AntlrDatatypeRuleToken lv_name_13_0 = null;

        EObject this_TypeVariables_14 = null;

        EObject this_ClassExtendsClause_15 = null;

        Enumerator lv_declaredModifiers_17_0 = null;

        AntlrDatatypeRuleToken lv_typingStrategy_19_0 = null;

        AntlrDatatypeRuleToken lv_name_20_0 = null;

        EObject this_TypeVariables_21 = null;

        EObject this_InterfaceImplementsList_22 = null;

        EObject this_Members_23 = null;

        Enumerator lv_declaredModifiers_25_0 = null;

        AntlrDatatypeRuleToken lv_name_27_0 = null;

        EObject lv_literals_29_0 = null;

        EObject lv_literals_31_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_18);
            this_AnnotationList_0=ruleAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }
            int alt24=5;
            alt24 = dfa24.predict(input);
            switch (alt24) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedScriptElementAccess().getExportDeclarationAnnotationListAction_1_0_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getExportDeclarationImplParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportDeclarationImpl_2=ruleExportDeclarationImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportDeclarationImpl_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedScriptElementAccess().getImportDeclarationAnnotationListAction_1_1_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getImportDeclarationImplParserRuleCall_1_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ImportDeclarationImpl_4=ruleImportDeclarationImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ImportDeclarationImpl_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedScriptElementAccess().getFunctionDeclarationAnnotationListAction_1_2_0(),
                                  current);
                          
                    }

                    }
                    {
                    {
                    loop12:
                    do {
                        int alt12=2;
                        int LA12_0 = input.LA(1);

                        if ( ((LA12_0>=Protected && LA12_0<=Abstract)||LA12_0==External||(LA12_0>=Private && LA12_0<=Project)||LA12_0==Public||LA12_0==Static||LA12_0==Const) ) {
                            alt12=1;
                        }


                        switch (alt12) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_2_1_0_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    lv_declaredModifiers_6_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_6_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop12;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getAsyncNoTrailingLineBreakParserRuleCall_1_2_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_19);
                    this_AsyncNoTrailingLineBreak_7=ruleAsyncNoTrailingLineBreak(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncNoTrailingLineBreak_7;
                              afterParserOrEnumRuleCall();
                          
                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getFunctionImplParserRuleCall_1_2_1_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionImpl_8=ruleFunctionImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionImpl_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    int alt21=2;
                    alt21 = dfa21.predict(input);
                    switch (alt21) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAnnotatedScriptElementAccess().getN4ClassDeclarationAnnotationListAction_1_3_0_0_0(),
                                          current);
                                  
                            }

                            }
                            loop13:
                            do {
                                int alt13=2;
                                int LA13_0 = input.LA(1);

                                if ( ((LA13_0>=Protected && LA13_0<=Abstract)||LA13_0==External||(LA13_0>=Private && LA13_0<=Project)||LA13_0==Public||LA13_0==Static||LA13_0==Const) ) {
                                    alt13=1;
                                }


                                switch (alt13) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_3_0_0_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_20);
                            	    lv_declaredModifiers_10_0=ruleN4Modifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"declaredModifiers",
                            	              		lv_declaredModifiers_10_0, 
                            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop13;
                                }
                            } while (true);

                            otherlv_11=(Token)match(input,Class,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_11, grammarAccess.getAnnotatedScriptElementAccess().getClassKeyword_1_3_0_0_2());
                                  
                            }
                            int alt14=2;
                            int LA14_0 = input.LA(1);

                            if ( (LA14_0==Tilde) ) {
                                alt14=1;
                            }
                            switch (alt14) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_1_3_0_0_3_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_5);
                                    lv_typingStrategy_12_0=ruleTypingStrategyDefSiteOperator();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"typingStrategy",
                                              		lv_typingStrategy_12_0, 
                                              		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyDefSiteOperator");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getNameBindingIdentifierParserRuleCall_1_3_0_0_4_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_22);
                            lv_name_13_0=ruleBindingIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_13_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt15=2;
                            int LA15_0 = input.LA(1);

                            if ( (LA15_0==LessThanSign) ) {
                                alt15=1;
                            }
                            switch (alt15) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getTypeVariablesParserRuleCall_1_3_0_0_5()); 
                                          
                                    }
                                    pushFollow(FOLLOW_22);
                                    this_TypeVariables_14=ruleTypeVariables(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_TypeVariables_14;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }
                            int alt16=2;
                            int LA16_0 = input.LA(1);

                            if ( (LA16_0==Implements||LA16_0==Extends) ) {
                                alt16=1;
                            }
                            switch (alt16) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getClassExtendsClauseParserRuleCall_1_3_0_0_6()); 
                                          
                                    }
                                    pushFollow(FOLLOW_22);
                                    this_ClassExtendsClause_15=ruleClassExtendsClause(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_ClassExtendsClause_15;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAnnotatedScriptElementAccess().getN4InterfaceDeclarationAnnotationListAction_1_3_0_1_0(),
                                          current);
                                  
                            }

                            }
                            loop17:
                            do {
                                int alt17=2;
                                int LA17_0 = input.LA(1);

                                if ( ((LA17_0>=Protected && LA17_0<=Abstract)||LA17_0==External||(LA17_0>=Private && LA17_0<=Project)||LA17_0==Public||LA17_0==Static||LA17_0==Const) ) {
                                    alt17=1;
                                }


                                switch (alt17) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_3_0_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_23);
                            	    lv_declaredModifiers_17_0=ruleN4Modifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"declaredModifiers",
                            	              		lv_declaredModifiers_17_0, 
                            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop17;
                                }
                            } while (true);

                            otherlv_18=(Token)match(input,Interface,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_18, grammarAccess.getAnnotatedScriptElementAccess().getInterfaceKeyword_1_3_0_1_2());
                                  
                            }
                            int alt18=2;
                            int LA18_0 = input.LA(1);

                            if ( (LA18_0==Tilde) ) {
                                alt18=1;
                            }
                            switch (alt18) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_1_3_0_1_3_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_5);
                                    lv_typingStrategy_19_0=ruleTypingStrategyDefSiteOperator();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"typingStrategy",
                                              		lv_typingStrategy_19_0, 
                                              		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyDefSiteOperator");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getNameBindingIdentifierParserRuleCall_1_3_0_1_4_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_22);
                            lv_name_20_0=ruleBindingIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_20_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt19=2;
                            int LA19_0 = input.LA(1);

                            if ( (LA19_0==LessThanSign) ) {
                                alt19=1;
                            }
                            switch (alt19) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getTypeVariablesParserRuleCall_1_3_0_1_5()); 
                                          
                                    }
                                    pushFollow(FOLLOW_22);
                                    this_TypeVariables_21=ruleTypeVariables(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_TypeVariables_21;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }
                            int alt20=2;
                            int LA20_0 = input.LA(1);

                            if ( (LA20_0==Implements||LA20_0==Extends) ) {
                                alt20=1;
                            }
                            switch (alt20) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getInterfaceImplementsListParserRuleCall_1_3_0_1_6()); 
                                          
                                    }
                                    pushFollow(FOLLOW_22);
                                    this_InterfaceImplementsList_22=ruleInterfaceImplementsList(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_InterfaceImplementsList_22;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getMembersParserRuleCall_1_3_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Members_23=ruleMembers(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Members_23;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedScriptElementAccess().getN4EnumDeclarationAnnotationListAction_1_4_0(),
                                  current);
                          
                    }

                    }
                    loop22:
                    do {
                        int alt22=2;
                        int LA22_0 = input.LA(1);

                        if ( ((LA22_0>=Protected && LA22_0<=Abstract)||LA22_0==External||(LA22_0>=Private && LA22_0<=Project)||LA22_0==Public||LA22_0==Static||LA22_0==Const) ) {
                            alt22=1;
                        }


                        switch (alt22) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_declaredModifiers_25_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_25_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop22;
                        }
                    } while (true);

                    otherlv_26=(Token)match(input,Enum,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_26, grammarAccess.getAnnotatedScriptElementAccess().getEnumKeyword_1_4_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getNameBindingIdentifierParserRuleCall_1_4_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_25);
                    lv_name_27_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_27_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_28=(Token)match(input,LeftCurlyBracket,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_28, grammarAccess.getAnnotatedScriptElementAccess().getLeftCurlyBracketKeyword_1_4_4());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getLiteralsN4EnumLiteralParserRuleCall_1_4_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_27);
                    lv_literals_29_0=ruleN4EnumLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                      	        }
                             		add(
                             			current, 
                             			"literals",
                              		lv_literals_29_0, 
                              		"eu.numberfour.n4js.N4JS.N4EnumLiteral");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop23:
                    do {
                        int alt23=2;
                        int LA23_0 = input.LA(1);

                        if ( (LA23_0==Comma) ) {
                            alt23=1;
                        }


                        switch (alt23) {
                    	case 1 :
                    	    {
                    	    otherlv_30=(Token)match(input,Comma,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_30, grammarAccess.getAnnotatedScriptElementAccess().getCommaKeyword_1_4_6_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getLiteralsN4EnumLiteralParserRuleCall_1_4_6_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_literals_31_0=ruleN4EnumLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"literals",
                    	              		lv_literals_31_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4EnumLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop23;
                        }
                    } while (true);

                    otherlv_32=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_32, grammarAccess.getAnnotatedScriptElementAccess().getRightCurlyBracketKeyword_1_4_7());
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeVariables(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_typeVars_1_0 = null;

        EObject lv_typeVars_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LessThanSign,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTypeVariablesAccess().getLessThanSignKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypeVariablesAccess().getTypeVarsTypeVariableParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_29);
            lv_typeVars_1_0=ruleTypeVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeVariablesRule());
              	        }
                     		add(
                     			current, 
                     			"typeVars",
                      		lv_typeVars_1_0, 
                      		"eu.numberfour.n4js.N4JS.TypeVariable");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( (LA25_0==Comma) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    {
            	    otherlv_2=(Token)match(input,Comma,FOLLOW_28); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getTypeVariablesAccess().getCommaKeyword_2_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTypeVariablesAccess().getTypeVarsTypeVariableParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_29);
            	    lv_typeVars_3_0=ruleTypeVariable();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTypeVariablesRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"typeVars",
            	              		lv_typeVars_3_0, 
            	              		"eu.numberfour.n4js.N4JS.TypeVariable");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);

            otherlv_4=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getTypeVariablesAccess().getGreaterThanSignKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportDeclaration=ruleExportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_ExportDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExportDeclarationAccess().getExportDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getExportDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getExportDeclarationAccess().getExportDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_ExportDeclarationImpl_1=ruleExportDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ExportDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token lv_wildcardExport_1_0=null;
        Token lv_defaultExport_8_0=null;
        EObject this_ExportFromClause_2 = null;

        EObject this_ExportClause_4 = null;

        EObject this_ExportFromClause_5 = null;

        EObject lv_exportedElement_7_0 = null;

        EObject lv_exportedElement_9_0 = null;

        EObject lv_defaultExportedExpression_10_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Export,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getExportDeclarationImplAccess().getExportKeyword_0());
                  
            }
            int alt28=4;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt28=1;
                }
                break;
            case LeftCurlyBracket:
                {
                alt28=2;
                }
                break;
            case Interface:
            case Protected:
            case Abstract:
            case External:
            case Function:
            case Private:
            case Project:
            case Public:
            case Static:
            case Async:
            case Class:
            case Const:
            case Enum:
            case Let:
            case Var:
            case CommercialAt:
                {
                alt28=3;
                }
                break;
            case Default:
                {
                alt28=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_wildcardExport_1_0=(Token)match(input,Asterisk,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_wildcardExport_1_0, grammarAccess.getExportDeclarationImplAccess().getWildcardExportAsteriskKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getExportDeclarationImplRule());
                      	        }
                             		setWithLastConsumed(current, "wildcardExport", true, "*");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getExportDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getExportFromClauseParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_32);
                    this_ExportFromClause_2=ruleExportFromClause(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportFromClause_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getSemiParserRuleCall_1_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getExportDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getExportClauseParserRuleCall_1_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_33);
                    this_ExportClause_4=ruleExportClause(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportClause_4;
                              afterParserOrEnumRuleCall();
                          
                    }
                    int alt26=2;
                    int LA26_0 = input.LA(1);

                    if ( (LA26_0==From) && (synpred10_InternalN4JSXParser())) {
                        alt26=1;
                    }
                    switch (alt26) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getExportDeclarationImplRule());
                              		}
                                      newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getExportFromClauseParserRuleCall_1_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_32);
                            this_ExportFromClause_5=ruleExportFromClause(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ExportFromClause_5;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getSemiParserRuleCall_1_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getExportedElementExportableElementParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_exportedElement_7_0=ruleExportableElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExportDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"exportedElement",
                              		lv_exportedElement_7_0, 
                              		"eu.numberfour.n4js.N4JS.ExportableElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    {
                    lv_defaultExport_8_0=(Token)match(input,Default,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_defaultExport_8_0, grammarAccess.getExportDeclarationImplAccess().getDefaultExportDefaultKeyword_1_3_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getExportDeclarationImplRule());
                      	        }
                             		setWithLastConsumed(current, "defaultExport", true, "default");
                      	    
                    }

                    }


                    }
                    int alt27=2;
                    alt27 = dfa27.predict(input);
                    switch (alt27) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getExportedElementExportableElementParserRuleCall_1_3_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_exportedElement_9_0=ruleExportableElement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getExportDeclarationImplRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"exportedElement",
                                      		lv_exportedElement_9_0, 
                                      		"eu.numberfour.n4js.N4JS.ExportableElement");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getDefaultExportedExpressionAssignmentExpressionParserRuleCall_1_3_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_32);
                            lv_defaultExportedExpression_10_0=norm1_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getExportDeclarationImplRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"defaultExportedExpression",
                                      		lv_defaultExportedExpression_10_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {
                               
                                      newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getSemiParserRuleCall_1_3_1_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_2);
                            ruleSemi();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportFromClause(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;

         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,From,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getExportFromClauseAccess().getFromKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getExportFromClauseRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportFromClauseAccess().getReexportedFromTModuleCrossReference_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleModuleSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportClause(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_namedExports_1_0 = null;

        EObject lv_namedExports_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftCurlyBracket,FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getExportClauseAccess().getLeftCurlyBracketKeyword_0());
                  
            }
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( ((LA31_0>=Intersection && LA31_0<=Implements)||(LA31_0>=Promisify && LA31_0<=Abstract)||LA31_0==External||(LA31_0>=Private && LA31_0<=Project)||LA31_0==Public||LA31_0==Static||LA31_0==Target||(LA31_0>=Async && LA31_0<=Await)||LA31_0==Union||(LA31_0>=Yield && LA31_0<=This)||LA31_0==From||LA31_0==Type||(LA31_0>=Get && LA31_0<=Let)||(LA31_0>=Out && LA31_0<=Set)||LA31_0==As||LA31_0==Of||LA31_0==RULE_IDENTIFIER) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExportClauseAccess().getNamedExportsExportSpecifierParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_27);
                    lv_namedExports_1_0=ruleExportSpecifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExportClauseRule());
                      	        }
                             		add(
                             			current, 
                             			"namedExports",
                              		lv_namedExports_1_0, 
                              		"eu.numberfour.n4js.N4JS.ExportSpecifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop29:
                    do {
                        int alt29=2;
                        int LA29_0 = input.LA(1);

                        if ( (LA29_0==Comma) ) {
                            int LA29_1 = input.LA(2);

                            if ( ((LA29_1>=Intersection && LA29_1<=Implements)||(LA29_1>=Promisify && LA29_1<=Abstract)||LA29_1==External||(LA29_1>=Private && LA29_1<=Project)||LA29_1==Public||LA29_1==Static||LA29_1==Target||(LA29_1>=Async && LA29_1<=Await)||LA29_1==Union||(LA29_1>=Yield && LA29_1<=This)||LA29_1==From||LA29_1==Type||(LA29_1>=Get && LA29_1<=Let)||(LA29_1>=Out && LA29_1<=Set)||LA29_1==As||LA29_1==Of||LA29_1==RULE_IDENTIFIER) ) {
                                alt29=1;
                            }


                        }


                        switch (alt29) {
                    	case 1 :
                    	    {
                    	    otherlv_2=(Token)match(input,Comma,FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getExportClauseAccess().getCommaKeyword_1_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExportClauseAccess().getNamedExportsExportSpecifierParserRuleCall_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_namedExports_3_0=ruleExportSpecifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExportClauseRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"namedExports",
                    	              		lv_namedExports_3_0, 
                    	              		"eu.numberfour.n4js.N4JS.ExportSpecifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop29;
                        }
                    } while (true);
                    int alt30=2;
                    int LA30_0 = input.LA(1);

                    if ( (LA30_0==Comma) ) {
                        alt30=1;
                    }
                    switch (alt30) {
                        case 1 :
                            {
                            otherlv_4=(Token)match(input,Comma,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getExportClauseAccess().getCommaKeyword_1_2());
                                  
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getExportClauseAccess().getRightCurlyBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportSpecifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportSpecifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportSpecifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportSpecifier=ruleExportSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportSpecifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportSpecifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_element_0_0 = null;

        AntlrDatatypeRuleToken lv_alias_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportSpecifierAccess().getElementIdentifierRefParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_37);
            lv_element_0_0=ruleIdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportSpecifierRule());
              	        }
                     		set(
                     			current, 
                     			"element",
                      		lv_element_0_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==As) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,As,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getExportSpecifierAccess().getAsKeyword_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExportSpecifierAccess().getAliasIdentifierNameParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_alias_2_0=ruleIdentifierName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExportSpecifierRule());
                      	        }
                             		set(
                             			current, 
                             			"alias",
                              		lv_alias_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportableElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportableElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportableElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportableElement=ruleExportableElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportableElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportableElement() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedExportableElement_0 = null;

        EObject this_N4ClassDeclaration_1 = null;

        EObject this_N4InterfaceDeclaration_2 = null;

        EObject this_N4EnumDeclaration_3 = null;

        EObject this_ExportedFunctionDeclaration_4 = null;

        EObject this_ExportedVariableStatement_5 = null;


         enterRule(); 
            
        try {
            {
            int alt33=6;
            alt33 = dfa33.predict(input);
            switch (alt33) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportableElementAccess().getAnnotatedExportableElementParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedExportableElement_0=ruleAnnotatedExportableElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedExportableElement_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportableElementAccess().getN4ClassDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4ClassDeclaration_1=ruleN4ClassDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4ClassDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportableElementAccess().getN4InterfaceDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4InterfaceDeclaration_2=ruleN4InterfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4InterfaceDeclaration_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportableElementAccess().getN4EnumDeclarationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4EnumDeclaration_3=ruleN4EnumDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4EnumDeclaration_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportableElementAccess().getExportedFunctionDeclarationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportedFunctionDeclaration_4=ruleExportedFunctionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportedFunctionDeclaration_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportableElementAccess().getExportedVariableStatementParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportedVariableStatement_5=ruleExportedVariableStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportedVariableStatement_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotatedExportableElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedExportableElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedExportableElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedExportableElement=ruleAnnotatedExportableElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedExportableElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotatedExportableElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_9=null;
        Token otherlv_14=null;
        Token otherlv_21=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        EObject this_AnnotationList_0 = null;

        Enumerator lv_declaredModifiers_2_0 = null;

        EObject this_AsyncNoTrailingLineBreak_3 = null;

        EObject this_FunctionImpl_4 = null;

        Enumerator lv_declaredModifiers_6_0 = null;

        Enumerator lv_varStmtKeyword_7_0 = null;

        EObject lv_varDeclsOrBindings_8_0 = null;

        EObject lv_varDeclsOrBindings_10_0 = null;

        Enumerator lv_declaredModifiers_13_0 = null;

        AntlrDatatypeRuleToken lv_typingStrategy_15_0 = null;

        AntlrDatatypeRuleToken lv_name_16_0 = null;

        EObject this_TypeVariables_17 = null;

        EObject this_ClassExtendsClause_18 = null;

        Enumerator lv_declaredModifiers_20_0 = null;

        AntlrDatatypeRuleToken lv_typingStrategy_22_0 = null;

        AntlrDatatypeRuleToken lv_name_23_0 = null;

        EObject this_TypeVariables_24 = null;

        EObject this_InterfaceImplementsList_25 = null;

        EObject this_Members_26 = null;

        Enumerator lv_declaredModifiers_28_0 = null;

        AntlrDatatypeRuleToken lv_name_30_0 = null;

        EObject lv_literals_32_0 = null;

        EObject lv_literals_34_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_39);
            this_AnnotationList_0=ruleAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }
            int alt48=4;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExportableElementAccess().getFunctionDeclarationAnnotationListAction_1_0_0(),
                                  current);
                          
                    }

                    }
                    loop34:
                    do {
                        int alt34=2;
                        int LA34_0 = input.LA(1);

                        if ( ((LA34_0>=Protected && LA34_0<=Abstract)||LA34_0==External||(LA34_0>=Private && LA34_0<=Project)||LA34_0==Public||LA34_0==Static||LA34_0==Const) ) {
                            alt34=1;
                        }


                        switch (alt34) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    lv_declaredModifiers_2_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_2_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop34;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getAsyncNoTrailingLineBreakParserRuleCall_1_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_19);
                    this_AsyncNoTrailingLineBreak_3=ruleAsyncNoTrailingLineBreak(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncNoTrailingLineBreak_3;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getFunctionImplParserRuleCall_1_0_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionImpl_4=ruleFunctionImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionImpl_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExportableElementAccess().getExportedVariableStatementAnnotationListAction_1_1_0(),
                                  current);
                          
                    }

                    }
                    loop35:
                    do {
                        int alt35=2;
                        alt35 = dfa35.predict(input);
                        switch (alt35) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_40);
                    	    lv_declaredModifiers_6_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_6_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop35;
                        }
                    } while (true);
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getVarStmtKeywordVariableStatementKeywordEnumRuleCall_1_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_41);
                    lv_varStmtKeyword_7_0=ruleVariableStatementKeyword();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                      	        }
                             		set(
                             			current, 
                             			"varStmtKeyword",
                              		lv_varStmtKeyword_7_0, 
                              		"eu.numberfour.n4js.N4JS.VariableStatementKeyword");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getVarDeclsOrBindingsExportedVariableDeclarationOrBindingParserRuleCall_1_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_42);
                    lv_varDeclsOrBindings_8_0=ruleExportedVariableDeclarationOrBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                      	        }
                             		add(
                             			current, 
                             			"varDeclsOrBindings",
                              		lv_varDeclsOrBindings_8_0, 
                              		"eu.numberfour.n4js.N4JS.ExportedVariableDeclarationOrBinding");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop36:
                    do {
                        int alt36=2;
                        int LA36_0 = input.LA(1);

                        if ( (LA36_0==Comma) ) {
                            alt36=1;
                        }


                        switch (alt36) {
                    	case 1 :
                    	    {
                    	    otherlv_9=(Token)match(input,Comma,FOLLOW_41); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_9, grammarAccess.getAnnotatedExportableElementAccess().getCommaKeyword_1_1_4_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getVarDeclsOrBindingsExportedVariableDeclarationOrBindingParserRuleCall_1_1_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_42);
                    	    lv_varDeclsOrBindings_10_0=ruleExportedVariableDeclarationOrBinding();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"varDeclsOrBindings",
                    	              		lv_varDeclsOrBindings_10_0, 
                    	              		"eu.numberfour.n4js.N4JS.ExportedVariableDeclarationOrBinding");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop36;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getSemiParserRuleCall_1_1_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    int alt45=2;
                    alt45 = dfa45.predict(input);
                    switch (alt45) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAnnotatedExportableElementAccess().getN4ClassDeclarationAnnotationListAction_1_2_0_0_0(),
                                          current);
                                  
                            }

                            }
                            loop37:
                            do {
                                int alt37=2;
                                int LA37_0 = input.LA(1);

                                if ( ((LA37_0>=Protected && LA37_0<=Abstract)||LA37_0==External||(LA37_0>=Private && LA37_0<=Project)||LA37_0==Public||LA37_0==Static||LA37_0==Const) ) {
                                    alt37=1;
                                }


                                switch (alt37) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_2_0_0_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_20);
                            	    lv_declaredModifiers_13_0=ruleN4Modifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"declaredModifiers",
                            	              		lv_declaredModifiers_13_0, 
                            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop37;
                                }
                            } while (true);

                            otherlv_14=(Token)match(input,Class,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getAnnotatedExportableElementAccess().getClassKeyword_1_2_0_0_2());
                                  
                            }
                            int alt38=2;
                            int LA38_0 = input.LA(1);

                            if ( (LA38_0==Tilde) ) {
                                alt38=1;
                            }
                            switch (alt38) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_1_2_0_0_3_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_5);
                                    lv_typingStrategy_15_0=ruleTypingStrategyDefSiteOperator();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"typingStrategy",
                                              		lv_typingStrategy_15_0, 
                                              		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyDefSiteOperator");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getNameBindingIdentifierParserRuleCall_1_2_0_0_4_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_22);
                            lv_name_16_0=ruleBindingIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_16_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt39=2;
                            int LA39_0 = input.LA(1);

                            if ( (LA39_0==LessThanSign) ) {
                                alt39=1;
                            }
                            switch (alt39) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getTypeVariablesParserRuleCall_1_2_0_0_5()); 
                                          
                                    }
                                    pushFollow(FOLLOW_22);
                                    this_TypeVariables_17=ruleTypeVariables(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_TypeVariables_17;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }
                            int alt40=2;
                            int LA40_0 = input.LA(1);

                            if ( (LA40_0==Implements||LA40_0==Extends) ) {
                                alt40=1;
                            }
                            switch (alt40) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getClassExtendsClauseParserRuleCall_1_2_0_0_6()); 
                                          
                                    }
                                    pushFollow(FOLLOW_22);
                                    this_ClassExtendsClause_18=ruleClassExtendsClause(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_ClassExtendsClause_18;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAnnotatedExportableElementAccess().getN4InterfaceDeclarationAnnotationListAction_1_2_0_1_0(),
                                          current);
                                  
                            }

                            }
                            loop41:
                            do {
                                int alt41=2;
                                int LA41_0 = input.LA(1);

                                if ( ((LA41_0>=Protected && LA41_0<=Abstract)||LA41_0==External||(LA41_0>=Private && LA41_0<=Project)||LA41_0==Public||LA41_0==Static||LA41_0==Const) ) {
                                    alt41=1;
                                }


                                switch (alt41) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_2_0_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_23);
                            	    lv_declaredModifiers_20_0=ruleN4Modifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"declaredModifiers",
                            	              		lv_declaredModifiers_20_0, 
                            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop41;
                                }
                            } while (true);

                            otherlv_21=(Token)match(input,Interface,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_21, grammarAccess.getAnnotatedExportableElementAccess().getInterfaceKeyword_1_2_0_1_2());
                                  
                            }
                            int alt42=2;
                            int LA42_0 = input.LA(1);

                            if ( (LA42_0==Tilde) ) {
                                alt42=1;
                            }
                            switch (alt42) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_1_2_0_1_3_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_5);
                                    lv_typingStrategy_22_0=ruleTypingStrategyDefSiteOperator();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"typingStrategy",
                                              		lv_typingStrategy_22_0, 
                                              		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyDefSiteOperator");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getNameBindingIdentifierParserRuleCall_1_2_0_1_4_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_22);
                            lv_name_23_0=ruleBindingIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_23_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt43=2;
                            int LA43_0 = input.LA(1);

                            if ( (LA43_0==LessThanSign) ) {
                                alt43=1;
                            }
                            switch (alt43) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getTypeVariablesParserRuleCall_1_2_0_1_5()); 
                                          
                                    }
                                    pushFollow(FOLLOW_22);
                                    this_TypeVariables_24=ruleTypeVariables(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_TypeVariables_24;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }
                            int alt44=2;
                            int LA44_0 = input.LA(1);

                            if ( (LA44_0==Implements||LA44_0==Extends) ) {
                                alt44=1;
                            }
                            switch (alt44) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getInterfaceImplementsListParserRuleCall_1_2_0_1_6()); 
                                          
                                    }
                                    pushFollow(FOLLOW_22);
                                    this_InterfaceImplementsList_25=ruleInterfaceImplementsList(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_InterfaceImplementsList_25;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getMembersParserRuleCall_1_2_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Members_26=ruleMembers(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Members_26;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExportableElementAccess().getN4EnumDeclarationAnnotationListAction_1_3_0(),
                                  current);
                          
                    }

                    }
                    loop46:
                    do {
                        int alt46=2;
                        int LA46_0 = input.LA(1);

                        if ( ((LA46_0>=Protected && LA46_0<=Abstract)||LA46_0==External||(LA46_0>=Private && LA46_0<=Project)||LA46_0==Public||LA46_0==Static||LA46_0==Const) ) {
                            alt46=1;
                        }


                        switch (alt46) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_declaredModifiers_28_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_28_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop46;
                        }
                    } while (true);

                    otherlv_29=(Token)match(input,Enum,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_29, grammarAccess.getAnnotatedExportableElementAccess().getEnumKeyword_1_3_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getNameBindingIdentifierParserRuleCall_1_3_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_25);
                    lv_name_30_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_30_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_31=(Token)match(input,LeftCurlyBracket,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_31, grammarAccess.getAnnotatedExportableElementAccess().getLeftCurlyBracketKeyword_1_3_4());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getLiteralsN4EnumLiteralParserRuleCall_1_3_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_27);
                    lv_literals_32_0=ruleN4EnumLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                      	        }
                             		add(
                             			current, 
                             			"literals",
                              		lv_literals_32_0, 
                              		"eu.numberfour.n4js.N4JS.N4EnumLiteral");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop47:
                    do {
                        int alt47=2;
                        int LA47_0 = input.LA(1);

                        if ( (LA47_0==Comma) ) {
                            alt47=1;
                        }


                        switch (alt47) {
                    	case 1 :
                    	    {
                    	    otherlv_33=(Token)match(input,Comma,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_33, grammarAccess.getAnnotatedExportableElementAccess().getCommaKeyword_1_3_6_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getLiteralsN4EnumLiteralParserRuleCall_1_3_6_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_literals_34_0=ruleN4EnumLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"literals",
                    	              		lv_literals_34_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4EnumLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop47;
                        }
                    } while (true);

                    otherlv_35=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_35, grammarAccess.getAnnotatedExportableElementAccess().getRightCurlyBracketKeyword_1_3_7());
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImportDeclaration=ruleImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_ImportDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getImportDeclarationAccess().getImportDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getImportDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getImportDeclarationAccess().getImportDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_ImportDeclarationImpl_1=ruleImportDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ImportDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleImportDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token lv_importFrom_2_0=null;
        EObject this_ImportClause_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Import,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getImportDeclarationImplAccess().getImportKeyword_0());
                  
            }
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( ((LA49_0>=Intersection && LA49_0<=Implements)||(LA49_0>=Promisify && LA49_0<=Abstract)||LA49_0==External||(LA49_0>=Private && LA49_0<=Project)||LA49_0==Public||LA49_0==Static||LA49_0==Target||(LA49_0>=Async && LA49_0<=Await)||LA49_0==Union||(LA49_0>=Yield && LA49_0<=This)||LA49_0==From||LA49_0==Type||(LA49_0>=Get && LA49_0<=Let)||(LA49_0>=Out && LA49_0<=Set)||LA49_0==As||LA49_0==Of||LA49_0==Asterisk||LA49_0==LeftCurlyBracket||LA49_0==RULE_IDENTIFIER) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getImportDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getImportDeclarationImplAccess().getImportClauseParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_31);
                    this_ImportClause_1=ruleImportClause(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ImportClause_1;
                              afterParserOrEnumRuleCall();
                          
                    }
                    {
                    {
                    lv_importFrom_2_0=(Token)match(input,From,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_importFrom_2_0, grammarAccess.getImportDeclarationImplAccess().getImportFromFromKeyword_1_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getImportDeclarationImplRule());
                      	        }
                             		setWithLastConsumed(current, "importFrom", true, "from");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getImportDeclarationImplRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getImportDeclarationImplAccess().getModuleTModuleCrossReference_2_0()); 
              	    
            }
            pushFollow(FOLLOW_32);
            ruleModuleSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getImportDeclarationImplAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleImportClause(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_importSpecifiers_0_0 = null;

        EObject this_ImportSpecifiersExceptDefault_2 = null;

        EObject this_ImportSpecifiersExceptDefault_3 = null;


         enterRule(); 
            
        try {
            {
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( ((LA51_0>=Intersection && LA51_0<=Implements)||(LA51_0>=Promisify && LA51_0<=Abstract)||LA51_0==External||(LA51_0>=Private && LA51_0<=Project)||LA51_0==Public||LA51_0==Static||LA51_0==Target||(LA51_0>=Async && LA51_0<=Await)||LA51_0==Union||(LA51_0>=Yield && LA51_0<=This)||LA51_0==From||LA51_0==Type||(LA51_0>=Get && LA51_0<=Let)||(LA51_0>=Out && LA51_0<=Set)||LA51_0==As||LA51_0==Of||LA51_0==RULE_IDENTIFIER) ) {
                alt51=1;
            }
            else if ( (LA51_0==Asterisk||LA51_0==LeftCurlyBracket) ) {
                alt51=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }
            switch (alt51) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getImportClauseAccess().getImportSpecifiersDefaultImportSpecifierParserRuleCall_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_44);
                    lv_importSpecifiers_0_0=ruleDefaultImportSpecifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getImportClauseRule());
                      	        }
                             		add(
                             			current, 
                             			"importSpecifiers",
                              		lv_importSpecifiers_0_0, 
                              		"eu.numberfour.n4js.N4JS.DefaultImportSpecifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt50=2;
                    int LA50_0 = input.LA(1);

                    if ( (LA50_0==Comma) ) {
                        alt50=1;
                    }
                    switch (alt50) {
                        case 1 :
                            {
                            otherlv_1=(Token)match(input,Comma,FOLLOW_45); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_1, grammarAccess.getImportClauseAccess().getCommaKeyword_0_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getImportClauseRule());
                              		}
                                      newCompositeNode(grammarAccess.getImportClauseAccess().getImportSpecifiersExceptDefaultParserRuleCall_0_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_2);
                            this_ImportSpecifiersExceptDefault_2=ruleImportSpecifiersExceptDefault(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ImportSpecifiersExceptDefault_2;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getImportClauseRule());
                      		}
                              newCompositeNode(grammarAccess.getImportClauseAccess().getImportSpecifiersExceptDefaultParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ImportSpecifiersExceptDefault_3=ruleImportSpecifiersExceptDefault(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ImportSpecifiersExceptDefault_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleImportSpecifiersExceptDefault(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_importSpecifiers_0_0 = null;

        EObject lv_importSpecifiers_2_0 = null;

        EObject lv_importSpecifiers_4_0 = null;


         enterRule(); 
            
        try {
            {
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==Asterisk) ) {
                alt55=1;
            }
            else if ( (LA55_0==LeftCurlyBracket) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getImportSpecifiersExceptDefaultAccess().getImportSpecifiersNamespaceImportSpecifierParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_importSpecifiers_0_0=ruleNamespaceImportSpecifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getImportSpecifiersExceptDefaultRule());
                      	        }
                             		add(
                             			current, 
                             			"importSpecifiers",
                              		lv_importSpecifiers_0_0, 
                              		"eu.numberfour.n4js.N4JS.NamespaceImportSpecifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getImportSpecifiersExceptDefaultAccess().getLeftCurlyBracketKeyword_1_0());
                          
                    }
                    int alt54=2;
                    int LA54_0 = input.LA(1);

                    if ( ((LA54_0>=Intersection && LA54_0<=With)||(LA54_0>=For && LA54_0<=Var)||(LA54_0>=As && LA54_0<=Of)||LA54_0==RULE_IDENTIFIER) ) {
                        alt54=1;
                    }
                    switch (alt54) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getImportSpecifiersExceptDefaultAccess().getImportSpecifiersNamedImportSpecifierParserRuleCall_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_27);
                            lv_importSpecifiers_2_0=ruleNamedImportSpecifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getImportSpecifiersExceptDefaultRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"importSpecifiers",
                                      		lv_importSpecifiers_2_0, 
                                      		"eu.numberfour.n4js.N4JS.NamedImportSpecifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop52:
                            do {
                                int alt52=2;
                                int LA52_0 = input.LA(1);

                                if ( (LA52_0==Comma) ) {
                                    int LA52_1 = input.LA(2);

                                    if ( ((LA52_1>=Intersection && LA52_1<=With)||(LA52_1>=For && LA52_1<=Var)||(LA52_1>=As && LA52_1<=Of)||LA52_1==RULE_IDENTIFIER) ) {
                                        alt52=1;
                                    }


                                }


                                switch (alt52) {
                            	case 1 :
                            	    {
                            	    otherlv_3=(Token)match(input,Comma,FOLLOW_38); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_3, grammarAccess.getImportSpecifiersExceptDefaultAccess().getCommaKeyword_1_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getImportSpecifiersExceptDefaultAccess().getImportSpecifiersNamedImportSpecifierParserRuleCall_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_27);
                            	    lv_importSpecifiers_4_0=ruleNamedImportSpecifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getImportSpecifiersExceptDefaultRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"importSpecifiers",
                            	              		lv_importSpecifiers_4_0, 
                            	              		"eu.numberfour.n4js.N4JS.NamedImportSpecifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop52;
                                }
                            } while (true);
                            int alt53=2;
                            int LA53_0 = input.LA(1);

                            if ( (LA53_0==Comma) ) {
                                alt53=1;
                            }
                            switch (alt53) {
                                case 1 :
                                    {
                                    otherlv_5=(Token)match(input,Comma,FOLLOW_15); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_5, grammarAccess.getImportSpecifiersExceptDefaultAccess().getCommaKeyword_1_1_2());
                                          
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getImportSpecifiersExceptDefaultAccess().getRightCurlyBracketKeyword_1_2());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleNamedImportSpecifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedImportSpecifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedImportSpecifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedImportSpecifier=ruleNamedImportSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedImportSpecifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleNamedImportSpecifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_alias_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt56=2;
            alt56 = dfa56.predict(input);
            switch (alt56) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getNamedImportSpecifierRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNamedImportSpecifierAccess().getImportedElementTExportableElementCrossReference_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getNamedImportSpecifierRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNamedImportSpecifierAccess().getImportedElementTExportableElementCrossReference_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_47);
                    ruleIdentifierName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,As,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getNamedImportSpecifierAccess().getAsKeyword_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNamedImportSpecifierAccess().getAliasBindingIdentifierParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_alias_3_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNamedImportSpecifierRule());
                      	        }
                             		set(
                             			current, 
                             			"alias",
                              		lv_alias_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleDefaultImportSpecifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefaultImportSpecifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefaultImportSpecifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefaultImportSpecifier=ruleDefaultImportSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefaultImportSpecifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleDefaultImportSpecifier() throws RecognitionException {
        EObject current = null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getDefaultImportSpecifierRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDefaultImportSpecifierAccess().getImportedElementTExportableElementCrossReference_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleNamespaceImportSpecifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespaceImportSpecifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceImportSpecifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespaceImportSpecifier=ruleNamespaceImportSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceImportSpecifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleNamespaceImportSpecifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_declaredDynamic_4_0=null;
        AntlrDatatypeRuleToken lv_alias_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getNamespaceImportSpecifierAccess().getNamespaceImportSpecifierAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Asterisk,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getNamespaceImportSpecifierAccess().getAsteriskKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,As,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getNamespaceImportSpecifierAccess().getAsKeyword_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getNamespaceImportSpecifierAccess().getAliasBindingIdentifierParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_48);
            lv_alias_3_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNamespaceImportSpecifierRule());
              	        }
                     		set(
                     			current, 
                     			"alias",
                      		lv_alias_3_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==PlusSign) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    {
                    {
                    lv_declaredDynamic_4_0=(Token)match(input,PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredDynamic_4_0, grammarAccess.getNamespaceImportSpecifierAccess().getDeclaredDynamicPlusSignKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getNamespaceImportSpecifierRule());
                      	        }
                             		setWithLastConsumed(current, "declaredDynamic", true, "+");
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleModuleSpecifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleModuleSpecifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModuleSpecifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModuleSpecifier=ruleModuleSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModuleSpecifier.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleModuleSpecifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;

         enterRule(); 
            
        try {
            {
            this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_STRING_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_STRING_0, grammarAccess.getModuleSpecifierAccess().getSTRINGTerminalRuleCall()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionDeclaration=ruleFunctionDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_AsyncNoTrailingLineBreak_2 = null;

        EObject this_FunctionImpl_3 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFunctionDeclarationAccess().getFunctionDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( ((LA58_0>=Protected && LA58_0<=Abstract)||LA58_0==External||(LA58_0>=Private && LA58_0<=Project)||LA58_0==Public||LA58_0==Static||LA58_0==Const) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_19);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getFunctionDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_0_0_2()); 
                  
            }
            pushFollow(FOLLOW_19);
            this_AsyncNoTrailingLineBreak_2=ruleAsyncNoTrailingLineBreak(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AsyncNoTrailingLineBreak_2;
                      afterParserOrEnumRuleCall();
                  
            }
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getFunctionImplParserRuleCall_0_0_3()); 
                  
            }
            pushFollow(FOLLOW_49);
            this_FunctionImpl_3=ruleFunctionImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionImpl_3;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }


            }
            int alt59=2;
            alt59 = dfa59.predict(input);
            switch (alt59) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getSemiParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_FunctionDeclaration() throws RecognitionException {
        EObject current = null;

        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_AsyncNoTrailingLineBreak_2 = null;

        EObject this_FunctionImpl_3 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFunctionDeclarationAccess().getFunctionDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( ((LA60_0>=Protected && LA60_0<=Abstract)||LA60_0==External||(LA60_0>=Private && LA60_0<=Project)||LA60_0==Public||LA60_0==Static||LA60_0==Const) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_19);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getFunctionDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_0_0_2()); 
                  
            }
            pushFollow(FOLLOW_50);
            this_AsyncNoTrailingLineBreak_2=ruleAsyncNoTrailingLineBreak(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AsyncNoTrailingLineBreak_2;
                      afterParserOrEnumRuleCall();
                  
            }
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getFunctionImplParserRuleCall_0_0_3()); 
                  
            }
            pushFollow(FOLLOW_49);
            this_FunctionImpl_3=norm3_FunctionImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionImpl_3;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }


            }
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==Semicolon) ) {
                int LA61_1 = input.LA(2);

                if ( (synpred22_InternalN4JSXParser()) ) {
                    alt61=1;
                }
            }
            else if ( (LA61_0==EOF||LA61_0==RULE_ML_COMMENT||LA61_0==RULE_EOL) && (synpred22_InternalN4JSXParser())) {
                alt61=1;
            }
            else if ( (LA61_0==RightCurlyBracket) ) {
                int LA61_3 = input.LA(2);

                if ( (synpred22_InternalN4JSXParser()) ) {
                    alt61=1;
                }
            }
            switch (alt61) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getSemiParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAsyncNoTrailingLineBreak(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_declaredAsync_0_0=null;
        EObject this_NoLineTerminator_1 = null;


         enterRule(); 
            
        try {
            {
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==Async) ) {
                int LA62_1 = input.LA(2);

                if ( ((LA62_1>=Intersection && LA62_1<=With)||(LA62_1>=For && LA62_1<=Var)||(LA62_1>=As && LA62_1<=Of)||LA62_1==LeftSquareBracket||LA62_1==RULE_DOUBLE||LA62_1==RULE_HEX_INT||LA62_1==RULE_OCTAL_INT||LA62_1==RULE_SCIENTIFIC_INT||LA62_1==RULE_IDENTIFIER||LA62_1==RULE_STRING||LA62_1==RULE_NO_LINE_TERMINATOR||LA62_1==RULE_INT) ) {
                    alt62=1;
                }
            }
            switch (alt62) {
                case 1 :
                    {
                    {
                    {
                    lv_declaredAsync_0_0=(Token)match(input,Async,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredAsync_0_0, grammarAccess.getAsyncNoTrailingLineBreakAccess().getDeclaredAsyncAsyncKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAsyncNoTrailingLineBreakRule());
                      	        }
                             		setWithLastConsumed(current, "declaredAsync", true, "async");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAsyncNoTrailingLineBreakRule());
                      		}
                              newCompositeNode(grammarAccess.getAsyncNoTrailingLineBreakAccess().getNoLineTerminatorParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_NoLineTerminator_1=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFunctionImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token lv_generator_1_0=null;
        EObject this_FunctionHeader_2 = null;

        EObject this_FunctionBody_3 = null;

        EObject this_FunctionHeader_4 = null;

        EObject this_FunctionBody_5 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Function,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getFunctionImplAccess().getFunctionKeyword_0());
                  
            }
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==Asterisk) ) {
                alt63=1;
            }
            else if ( ((LA63_0>=Intersection && LA63_0<=Implements)||(LA63_0>=Promisify && LA63_0<=Abstract)||LA63_0==External||(LA63_0>=Private && LA63_0<=Project)||LA63_0==Public||LA63_0==Static||LA63_0==Target||(LA63_0>=Async && LA63_0<=Await)||LA63_0==Union||(LA63_0>=Yield && LA63_0<=This)||LA63_0==From||LA63_0==Type||(LA63_0>=Get && LA63_0<=Let)||(LA63_0>=Out && LA63_0<=Set)||LA63_0==As||LA63_0==Of||LA63_0==LeftParenthesis||LA63_0==LessThanSign||LA63_0==RULE_IDENTIFIER) ) {
                alt63=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }
            switch (alt63) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_1_0=(Token)match(input,Asterisk,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_1_0, grammarAccess.getFunctionImplAccess().getGeneratorAsteriskKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionImplRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionHeaderParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_25);
                    this_FunctionHeader_2=norm2_FunctionHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionHeader_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionBodyParserRuleCall_1_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionBody_3=norm1_FunctionBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionBody_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionHeaderParserRuleCall_1_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_25);
                    this_FunctionHeader_4=ruleFunctionHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionHeader_4;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionBodyParserRuleCall_1_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionBody_5=ruleFunctionBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionBody_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_FunctionImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token lv_generator_1_0=null;
        EObject this_FunctionHeader_2 = null;

        EObject this_FunctionBody_3 = null;

        EObject this_FunctionHeader_4 = null;

        EObject this_FunctionBody_5 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Function,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getFunctionImplAccess().getFunctionKeyword_0());
                  
            }
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==Asterisk) ) {
                alt64=1;
            }
            else if ( ((LA64_0>=Intersection && LA64_0<=Implements)||(LA64_0>=Promisify && LA64_0<=Abstract)||LA64_0==External||(LA64_0>=Private && LA64_0<=Project)||LA64_0==Public||LA64_0==Static||LA64_0==Target||(LA64_0>=Async && LA64_0<=Await)||LA64_0==Union||LA64_0==This||LA64_0==From||LA64_0==Type||(LA64_0>=Get && LA64_0<=Let)||(LA64_0>=Out && LA64_0<=Set)||LA64_0==As||LA64_0==Of||LA64_0==LeftParenthesis||LA64_0==LessThanSign||LA64_0==RULE_IDENTIFIER) ) {
                alt64=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }
            switch (alt64) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_1_0=(Token)match(input,Asterisk,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_1_0, grammarAccess.getFunctionImplAccess().getGeneratorAsteriskKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionImplRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionHeaderParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_25);
                    this_FunctionHeader_2=norm3_FunctionHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionHeader_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionBodyParserRuleCall_1_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionBody_3=norm1_FunctionBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionBody_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionHeaderParserRuleCall_1_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_25);
                    this_FunctionHeader_4=norm1_FunctionHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionHeader_4;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionBodyParserRuleCall_1_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionBody_5=ruleFunctionBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionBody_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm6_FunctionImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token lv_generator_1_0=null;
        EObject this_FunctionHeader_2 = null;

        EObject this_FunctionBody_3 = null;

        EObject this_FunctionHeader_4 = null;

        EObject this_FunctionBody_5 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Function,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getFunctionImplAccess().getFunctionKeyword_0());
                  
            }
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==Asterisk) ) {
                alt65=1;
            }
            else if ( ((LA65_0>=Intersection && LA65_0<=Implements)||(LA65_0>=Promisify && LA65_0<=Abstract)||LA65_0==External||(LA65_0>=Private && LA65_0<=Project)||LA65_0==Public||LA65_0==Static||LA65_0==Target||(LA65_0>=Async && LA65_0<=Await)||LA65_0==Union||(LA65_0>=Yield && LA65_0<=This)||LA65_0==From||LA65_0==Type||(LA65_0>=Get && LA65_0<=Let)||(LA65_0>=Out && LA65_0<=Set)||LA65_0==As||LA65_0==Of||LA65_0==LeftParenthesis||LA65_0==LessThanSign||LA65_0==RULE_IDENTIFIER) ) {
                alt65=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }
            switch (alt65) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_1_0=(Token)match(input,Asterisk,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_1_0, grammarAccess.getFunctionImplAccess().getGeneratorAsteriskKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionImplRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionHeaderParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_25);
                    this_FunctionHeader_2=norm3_FunctionHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionHeader_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionBodyParserRuleCall_1_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionBody_3=norm3_FunctionBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionBody_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionHeaderParserRuleCall_1_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_25);
                    this_FunctionHeader_4=ruleFunctionHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionHeader_4;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionBodyParserRuleCall_1_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionBody_5=norm2_FunctionBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionBody_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFunctionHeader(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject this_TypeVariables_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_StrictFormalParameters_2 = null;

        EObject lv_returnTypeRef_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==LessThanSign) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionHeaderAccess().getTypeVariablesParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_52);
                    this_TypeVariables_0=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( ((LA67_0>=Intersection && LA67_0<=Implements)||(LA67_0>=Promisify && LA67_0<=Abstract)||LA67_0==External||(LA67_0>=Private && LA67_0<=Project)||LA67_0==Public||LA67_0==Static||LA67_0==Target||(LA67_0>=Async && LA67_0<=Await)||LA67_0==Union||(LA67_0>=Yield && LA67_0<=This)||LA67_0==From||LA67_0==Type||(LA67_0>=Get && LA67_0<=Let)||(LA67_0>=Out && LA67_0<=Set)||LA67_0==As||LA67_0==Of||LA67_0==RULE_IDENTIFIER) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getNameBindingIdentifierParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_52);
                    lv_name_1_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionHeaderRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionHeaderAccess().getStrictFormalParametersParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_54);
            this_StrictFormalParameters_2=ruleStrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_2;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==Colon) && (synpred23_InternalN4JSXParser())) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    {
                    {
                    otherlv_3=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getFunctionHeaderAccess().getColonKeyword_3_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getReturnTypeRefTypeRefParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_returnTypeRef_4_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_FunctionHeader(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject this_TypeVariables_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_StrictFormalParameters_2 = null;

        EObject lv_returnTypeRef_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==LessThanSign) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionHeaderAccess().getTypeVariablesParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_52);
                    this_TypeVariables_0=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( ((LA70_0>=Intersection && LA70_0<=Implements)||(LA70_0>=Promisify && LA70_0<=Abstract)||LA70_0==External||(LA70_0>=Private && LA70_0<=Project)||LA70_0==Public||LA70_0==Static||LA70_0==Target||(LA70_0>=Async && LA70_0<=Await)||LA70_0==Union||LA70_0==This||LA70_0==From||LA70_0==Type||(LA70_0>=Get && LA70_0<=Let)||(LA70_0>=Out && LA70_0<=Set)||LA70_0==As||LA70_0==Of||LA70_0==RULE_IDENTIFIER) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getNameBindingIdentifierParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_52);
                    lv_name_1_0=norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionHeaderRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionHeaderAccess().getStrictFormalParametersParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_54);
            this_StrictFormalParameters_2=ruleStrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_2;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==Colon) && (synpred24_InternalN4JSXParser())) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    {
                    {
                    otherlv_3=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getFunctionHeaderAccess().getColonKeyword_3_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getReturnTypeRefTypeRefParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_returnTypeRef_4_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_FunctionHeader(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject this_TypeVariables_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_StrictFormalParameters_2 = null;

        EObject lv_returnTypeRef_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==LessThanSign) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionHeaderAccess().getTypeVariablesParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_53);
                    this_TypeVariables_0=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( ((LA73_0>=Intersection && LA73_0<=Implements)||(LA73_0>=Promisify && LA73_0<=Abstract)||LA73_0==External||(LA73_0>=Private && LA73_0<=Project)||LA73_0==Public||LA73_0==Static||LA73_0==Target||(LA73_0>=Async && LA73_0<=Await)||LA73_0==Union||(LA73_0>=Yield && LA73_0<=This)||LA73_0==From||LA73_0==Type||(LA73_0>=Get && LA73_0<=Let)||(LA73_0>=Out && LA73_0<=Set)||LA73_0==As||LA73_0==Of||LA73_0==RULE_IDENTIFIER) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getNameBindingIdentifierParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_53);
                    lv_name_1_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionHeaderRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionHeaderAccess().getStrictFormalParametersParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_54);
            this_StrictFormalParameters_2=norm1_StrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_2;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==Colon) && (synpred25_InternalN4JSXParser())) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    {
                    {
                    otherlv_3=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getFunctionHeaderAccess().getColonKeyword_3_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getReturnTypeRefTypeRefParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_returnTypeRef_4_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_FunctionHeader(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject this_TypeVariables_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_StrictFormalParameters_2 = null;

        EObject lv_returnTypeRef_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==LessThanSign) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionHeaderAccess().getTypeVariablesParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_53);
                    this_TypeVariables_0=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( ((LA76_0>=Intersection && LA76_0<=Implements)||(LA76_0>=Promisify && LA76_0<=Abstract)||LA76_0==External||(LA76_0>=Private && LA76_0<=Project)||LA76_0==Public||LA76_0==Static||LA76_0==Target||(LA76_0>=Async && LA76_0<=Await)||LA76_0==Union||LA76_0==This||LA76_0==From||LA76_0==Type||(LA76_0>=Get && LA76_0<=Let)||(LA76_0>=Out && LA76_0<=Set)||LA76_0==As||LA76_0==Of||LA76_0==RULE_IDENTIFIER) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getNameBindingIdentifierParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_53);
                    lv_name_1_0=norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionHeaderRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionHeaderAccess().getStrictFormalParametersParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_54);
            this_StrictFormalParameters_2=norm1_StrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_2;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==Colon) && (synpred26_InternalN4JSXParser())) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    {
                    {
                    otherlv_3=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getFunctionHeaderAccess().getColonKeyword_3_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getReturnTypeRefTypeRefParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_returnTypeRef_4_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFunctionBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_body_0_0 = null;


         enterRule(); 
            
        try {
            {
            int alt78=2;
            alt78 = dfa78.predict(input);
            switch (alt78) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionBodyAccess().getBodyBlockParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_0_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_0_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_FunctionBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_body_0_0 = null;


         enterRule(); 
            
        try {
            {
            int alt79=2;
            alt79 = dfa79.predict(input);
            switch (alt79) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionBodyAccess().getBodyBlockParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_0_0=norm1_Block();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_0_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_FunctionBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_body_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFunctionBodyAccess().getBodyBlockParserRuleCall_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_0_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_0_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_FunctionBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_body_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFunctionBodyAccess().getBodyBlockParserRuleCall_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_0_0=norm1_Block();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_0_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportedFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportedFunctionDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportedFunctionDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportedFunctionDeclaration=ruleExportedFunctionDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportedFunctionDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportedFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_FunctionDeclaration_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExportedFunctionDeclarationAccess().getFunctionDeclarationParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FunctionDeclaration_0=ruleFunctionDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionDeclaration_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotatedFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedFunctionDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedFunctionDeclaration=ruleAnnotatedFunctionDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedFunctionDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotatedFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject lv_annotationList_0_0 = null;

        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_AsyncNoTrailingLineBreak_2 = null;

        EObject this_FunctionImpl_3 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getAnnotationListAnnotationListParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_19);
            lv_annotationList_0_0=ruleAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAnnotatedFunctionDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"annotationList",
                      		lv_annotationList_0_0, 
                      		"eu.numberfour.n4js.N4JS.AnnotationList");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( ((LA80_0>=Protected && LA80_0<=Abstract)||LA80_0==External||(LA80_0>=Private && LA80_0<=Project)||LA80_0==Public||LA80_0==Static||LA80_0==Const) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_19);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedFunctionDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAnnotatedFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_19);
            this_AsyncNoTrailingLineBreak_2=ruleAsyncNoTrailingLineBreak(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AsyncNoTrailingLineBreak_2;
                      afterParserOrEnumRuleCall();
                  
            }
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAnnotatedFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getFunctionImplParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FunctionImpl_3=ruleFunctionImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionImpl_3;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AnnotatedFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject lv_annotationList_0_0 = null;

        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_AsyncNoTrailingLineBreak_2 = null;

        EObject this_FunctionImpl_3 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getAnnotationListAnnotationListParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_19);
            lv_annotationList_0_0=ruleAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAnnotatedFunctionDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"annotationList",
                      		lv_annotationList_0_0, 
                      		"eu.numberfour.n4js.N4JS.AnnotationList");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( ((LA81_0>=Protected && LA81_0<=Abstract)||LA81_0==External||(LA81_0>=Private && LA81_0<=Project)||LA81_0==Public||LA81_0==Static||LA81_0==Const) ) {
                    alt81=1;
                }


                switch (alt81) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_19);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedFunctionDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAnnotatedFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_50);
            this_AsyncNoTrailingLineBreak_2=ruleAsyncNoTrailingLineBreak(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AsyncNoTrailingLineBreak_2;
                      afterParserOrEnumRuleCall();
                  
            }
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAnnotatedFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getFunctionImplParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FunctionImpl_3=norm3_FunctionImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionImpl_3;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleFunctionExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionExpression=ruleFunctionExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFunctionExpression() throws RecognitionException {
        EObject current = null;

        EObject this_FunctionImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFunctionExpressionAccess().getFunctionExpressionAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionExpressionAccess().getFunctionImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FunctionImpl_1=norm6_FunctionImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAsyncFunctionExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAsyncFunctionExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAsyncFunctionExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAsyncFunctionExpression=ruleAsyncFunctionExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAsyncFunctionExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAsyncFunctionExpression() throws RecognitionException {
        EObject current = null;

        Token lv_declaredAsync_0_0=null;
        Token otherlv_2=null;
        EObject this_NoLineTerminator_1 = null;

        EObject this_FunctionHeader_3 = null;

        EObject this_FunctionBody_4 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            {
            lv_declaredAsync_0_0=(Token)match(input,Async,FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_declaredAsync_0_0, grammarAccess.getAsyncFunctionExpressionAccess().getDeclaredAsyncAsyncKeyword_0_0_0_0());
                  
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getAsyncFunctionExpressionRule());
              	        }
                     		setWithLastConsumed(current, "declaredAsync", true, "async");
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAsyncFunctionExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getAsyncFunctionExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_1()); 
                  
            }
            pushFollow(FOLLOW_57);
            this_NoLineTerminator_1=ruleNoLineTerminator(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_NoLineTerminator_1;
                      afterParserOrEnumRuleCall();
                  
            }
            otherlv_2=(Token)match(input,Function,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getAsyncFunctionExpressionAccess().getFunctionKeyword_0_0_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAsyncFunctionExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getAsyncFunctionExpressionAccess().getFunctionHeaderParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_25);
            this_FunctionHeader_3=ruleFunctionHeader(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionHeader_3;
                      afterParserOrEnumRuleCall();
                  
            }
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAsyncFunctionExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getAsyncFunctionExpressionAccess().getFunctionBodyParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FunctionBody_4=norm2_FunctionBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionBody_4;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrowExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrowExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrowExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrowExpression=ruleArrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrowExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_declaredAsync_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_17=null;
        Token lv_hasBracesAroundBody_18_0=null;
        Token otherlv_20=null;
        EObject lv_fpars_1_0 = null;

        EObject lv_fpars_3_0 = null;

        EObject lv_returnTypeRef_6_0 = null;

        EObject this_NoLineTerminator_8 = null;

        EObject lv_fpars_10_0 = null;

        EObject lv_fpars_12_0 = null;

        EObject lv_returnTypeRef_15_0 = null;

        EObject lv_fpars_16_0 = null;

        EObject lv_body_19_0 = null;

        EObject lv_body_21_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            int alt88=3;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                alt88=1;
                }
                break;
            case Async:
                {
                int LA88_2 = input.LA(2);

                if ( (LA88_2==RULE_NO_LINE_TERMINATOR) && (synpred37_InternalN4JSXParser())) {
                    alt88=2;
                }
                else if ( (LA88_2==LeftParenthesis) && (synpred37_InternalN4JSXParser())) {
                    alt88=2;
                }
                else if ( (LA88_2==EqualsSignGreaterThanSign) ) {
                    alt88=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 2, input);

                    throw nvae;
                }
                }
                break;
            case Intersection:
            case Constructor:
            case Implements:
            case Promisify:
            case Interface:
            case Protected:
            case Abstract:
            case External:
            case Private:
            case Project:
            case Public:
            case Static:
            case Target:
            case Await:
            case Union:
            case Yield:
            case This:
            case From:
            case Type:
            case Get:
            case Let:
            case Out:
            case Set:
            case As:
            case Of:
            case RULE_IDENTIFIER:
                {
                alt88=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }

            switch (alt88) {
                case 1 :
                    {
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_0_0());
                          
                    }
                    int alt83=2;
                    int LA83_0 = input.LA(1);

                    if ( ((LA83_0>=Intersection && LA83_0<=Implements)||(LA83_0>=Promisify && LA83_0<=Abstract)||LA83_0==External||(LA83_0>=Private && LA83_0<=Project)||LA83_0==Public||LA83_0==Static||LA83_0==Target||(LA83_0>=Async && LA83_0<=Await)||LA83_0==Union||(LA83_0>=Yield && LA83_0<=This)||LA83_0==From||LA83_0==This_1||(LA83_0>=Type && LA83_0<=Void)||LA83_0==FullStopFullStopFullStop||(LA83_0>=Get && LA83_0<=Let)||(LA83_0>=Out && LA83_0<=Set)||LA83_0==As||LA83_0==Of||(LA83_0>=QuestionMark && LA83_0<=LeftSquareBracket)||LA83_0==LeftCurlyBracket||LA83_0==Tilde||LA83_0==RULE_IDENTIFIER) ) {
                        alt83=1;
                    }
                    switch (alt83) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_fpars_1_0=ruleFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_1_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop82:
                            do {
                                int alt82=2;
                                int LA82_0 = input.LA(1);

                                if ( (LA82_0==Comma) ) {
                                    alt82=1;
                                }


                                switch (alt82) {
                            	case 1 :
                            	    {
                            	    otherlv_2=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_2, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_0_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_fpars_3_0=ruleFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_3_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop82;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_0_2());
                          
                    }
                    int alt84=2;
                    int LA84_0 = input.LA(1);

                    if ( (LA84_0==Colon) ) {
                        alt84=1;
                    }
                    switch (alt84) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_0_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_0_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_62);
                            lv_returnTypeRef_6_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_6_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    {
                    lv_declaredAsync_7_0=(Token)match(input,Async,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredAsync_7_0, grammarAccess.getArrowExpressionAccess().getDeclaredAsyncAsyncKeyword_0_0_0_1_0_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "declaredAsync", true, "async");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArrowExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getArrowExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_0_1_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_64);
                    this_NoLineTerminator_8=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_8;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_9=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_1_0_0_2());
                          
                    }

                    }


                    }
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( ((LA86_0>=Intersection && LA86_0<=Implements)||(LA86_0>=Promisify && LA86_0<=Abstract)||LA86_0==External||(LA86_0>=Private && LA86_0<=Project)||LA86_0==Public||LA86_0==Static||LA86_0==Target||(LA86_0>=Async && LA86_0<=Await)||LA86_0==Union||(LA86_0>=Yield && LA86_0<=This)||LA86_0==From||LA86_0==This_1||(LA86_0>=Type && LA86_0<=Void)||LA86_0==FullStopFullStopFullStop||(LA86_0>=Get && LA86_0<=Let)||(LA86_0>=Out && LA86_0<=Set)||LA86_0==As||LA86_0==Of||(LA86_0>=QuestionMark && LA86_0<=LeftSquareBracket)||LA86_0==LeftCurlyBracket||LA86_0==Tilde||LA86_0==RULE_IDENTIFIER) ) {
                        alt86=1;
                    }
                    switch (alt86) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_fpars_10_0=ruleFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_10_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop85:
                            do {
                                int alt85=2;
                                int LA85_0 = input.LA(1);

                                if ( (LA85_0==Comma) ) {
                                    alt85=1;
                                }


                                switch (alt85) {
                            	case 1 :
                            	    {
                            	    otherlv_11=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_11, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_1_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_fpars_12_0=ruleFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_12_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop85;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,RightParenthesis,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_1_2());
                          
                    }
                    int alt87=2;
                    int LA87_0 = input.LA(1);

                    if ( (LA87_0==Colon) ) {
                        alt87=1;
                    }
                    switch (alt87) {
                        case 1 :
                            {
                            otherlv_14=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_1_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_1_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_62);
                            lv_returnTypeRef_15_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_15_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsBindingIdentifierAsFormalParameterParserRuleCall_0_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_62);
                    lv_fpars_16_0=ruleBindingIdentifierAsFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_16_0, 
                              		"eu.numberfour.n4js.N4JS.BindingIdentifierAsFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_17=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_17, grammarAccess.getArrowExpressionAccess().getEqualsSignGreaterThanSignKeyword_0_0_1());
                  
            }

            }


            }
            int alt89=2;
            alt89 = dfa89.predict(input);
            switch (alt89) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_hasBracesAroundBody_18_0=(Token)match(input,LeftCurlyBracket,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_hasBracesAroundBody_18_0, grammarAccess.getArrowExpressionAccess().getHasBracesAroundBodyLeftCurlyBracketKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "hasBracesAroundBody", true, "{");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyBlockMinusBracesParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_15);
                    lv_body_19_0=ruleBlockMinusBraces();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_19_0, 
                              		"eu.numberfour.n4js.N4JS.BlockMinusBraces");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_20=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_20, grammarAccess.getArrowExpressionAccess().getRightCurlyBracketKeyword_1_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyExpressionDisguisedAsBlockParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_21_0=ruleExpressionDisguisedAsBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_21_0, 
                              		"eu.numberfour.n4js.N4JS.ExpressionDisguisedAsBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ArrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_declaredAsync_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_17=null;
        Token lv_hasBracesAroundBody_18_0=null;
        Token otherlv_20=null;
        EObject lv_fpars_1_0 = null;

        EObject lv_fpars_3_0 = null;

        EObject lv_returnTypeRef_6_0 = null;

        EObject this_NoLineTerminator_8 = null;

        EObject lv_fpars_10_0 = null;

        EObject lv_fpars_12_0 = null;

        EObject lv_returnTypeRef_15_0 = null;

        EObject lv_fpars_16_0 = null;

        EObject lv_body_19_0 = null;

        EObject lv_body_21_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            int alt96=3;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                alt96=1;
                }
                break;
            case Async:
                {
                int LA96_2 = input.LA(2);

                if ( (LA96_2==EqualsSignGreaterThanSign) ) {
                    alt96=3;
                }
                else if ( (LA96_2==RULE_NO_LINE_TERMINATOR) && (synpred41_InternalN4JSXParser())) {
                    alt96=2;
                }
                else if ( (LA96_2==LeftParenthesis) && (synpred41_InternalN4JSXParser())) {
                    alt96=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 96, 2, input);

                    throw nvae;
                }
                }
                break;
            case Intersection:
            case Constructor:
            case Implements:
            case Promisify:
            case Interface:
            case Protected:
            case Abstract:
            case External:
            case Private:
            case Project:
            case Public:
            case Static:
            case Target:
            case Await:
            case Union:
            case Yield:
            case This:
            case From:
            case Type:
            case Get:
            case Let:
            case Out:
            case Set:
            case As:
            case Of:
            case RULE_IDENTIFIER:
                {
                alt96=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 96, 0, input);

                throw nvae;
            }

            switch (alt96) {
                case 1 :
                    {
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_0_0());
                          
                    }
                    int alt91=2;
                    int LA91_0 = input.LA(1);

                    if ( ((LA91_0>=Intersection && LA91_0<=Implements)||(LA91_0>=Promisify && LA91_0<=Abstract)||LA91_0==External||(LA91_0>=Private && LA91_0<=Project)||LA91_0==Public||LA91_0==Static||LA91_0==Target||(LA91_0>=Async && LA91_0<=Await)||LA91_0==Union||(LA91_0>=Yield && LA91_0<=This)||LA91_0==From||LA91_0==This_1||(LA91_0>=Type && LA91_0<=Void)||LA91_0==FullStopFullStopFullStop||(LA91_0>=Get && LA91_0<=Let)||(LA91_0>=Out && LA91_0<=Set)||LA91_0==As||LA91_0==Of||(LA91_0>=QuestionMark && LA91_0<=LeftSquareBracket)||LA91_0==LeftCurlyBracket||LA91_0==Tilde||LA91_0==RULE_IDENTIFIER) ) {
                        alt91=1;
                    }
                    switch (alt91) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_fpars_1_0=ruleFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_1_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop90:
                            do {
                                int alt90=2;
                                int LA90_0 = input.LA(1);

                                if ( (LA90_0==Comma) ) {
                                    alt90=1;
                                }


                                switch (alt90) {
                            	case 1 :
                            	    {
                            	    otherlv_2=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_2, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_0_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_fpars_3_0=ruleFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_3_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop90;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_0_2());
                          
                    }
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( (LA92_0==Colon) ) {
                        alt92=1;
                    }
                    switch (alt92) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_0_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_0_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_62);
                            lv_returnTypeRef_6_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_6_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    {
                    lv_declaredAsync_7_0=(Token)match(input,Async,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredAsync_7_0, grammarAccess.getArrowExpressionAccess().getDeclaredAsyncAsyncKeyword_0_0_0_1_0_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "declaredAsync", true, "async");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArrowExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getArrowExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_0_1_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_64);
                    this_NoLineTerminator_8=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_8;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_9=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_1_0_0_2());
                          
                    }

                    }


                    }
                    int alt94=2;
                    int LA94_0 = input.LA(1);

                    if ( ((LA94_0>=Intersection && LA94_0<=Implements)||(LA94_0>=Promisify && LA94_0<=Abstract)||LA94_0==External||(LA94_0>=Private && LA94_0<=Project)||LA94_0==Public||LA94_0==Static||LA94_0==Target||(LA94_0>=Async && LA94_0<=Await)||LA94_0==Union||(LA94_0>=Yield && LA94_0<=This)||LA94_0==From||LA94_0==This_1||(LA94_0>=Type && LA94_0<=Void)||LA94_0==FullStopFullStopFullStop||(LA94_0>=Get && LA94_0<=Let)||(LA94_0>=Out && LA94_0<=Set)||LA94_0==As||LA94_0==Of||(LA94_0>=QuestionMark && LA94_0<=LeftSquareBracket)||LA94_0==LeftCurlyBracket||LA94_0==Tilde||LA94_0==RULE_IDENTIFIER) ) {
                        alt94=1;
                    }
                    switch (alt94) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_fpars_10_0=ruleFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_10_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop93:
                            do {
                                int alt93=2;
                                int LA93_0 = input.LA(1);

                                if ( (LA93_0==Comma) ) {
                                    alt93=1;
                                }


                                switch (alt93) {
                            	case 1 :
                            	    {
                            	    otherlv_11=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_11, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_1_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_fpars_12_0=ruleFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_12_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop93;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,RightParenthesis,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_1_2());
                          
                    }
                    int alt95=2;
                    int LA95_0 = input.LA(1);

                    if ( (LA95_0==Colon) ) {
                        alt95=1;
                    }
                    switch (alt95) {
                        case 1 :
                            {
                            otherlv_14=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_1_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_1_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_62);
                            lv_returnTypeRef_15_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_15_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsBindingIdentifierAsFormalParameterParserRuleCall_0_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_62);
                    lv_fpars_16_0=ruleBindingIdentifierAsFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_16_0, 
                              		"eu.numberfour.n4js.N4JS.BindingIdentifierAsFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_17=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_17, grammarAccess.getArrowExpressionAccess().getEqualsSignGreaterThanSignKeyword_0_0_1());
                  
            }

            }


            }
            int alt97=2;
            alt97 = dfa97.predict(input);
            switch (alt97) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_hasBracesAroundBody_18_0=(Token)match(input,LeftCurlyBracket,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_hasBracesAroundBody_18_0, grammarAccess.getArrowExpressionAccess().getHasBracesAroundBodyLeftCurlyBracketKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "hasBracesAroundBody", true, "{");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyBlockMinusBracesParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_15);
                    lv_body_19_0=ruleBlockMinusBraces();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_19_0, 
                              		"eu.numberfour.n4js.N4JS.BlockMinusBraces");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_20=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_20, grammarAccess.getArrowExpressionAccess().getRightCurlyBracketKeyword_1_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyExpressionDisguisedAsBlockParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_21_0=norm1_ExpressionDisguisedAsBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_21_0, 
                              		"eu.numberfour.n4js.N4JS.ExpressionDisguisedAsBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_ArrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_declaredAsync_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_17=null;
        Token lv_hasBracesAroundBody_18_0=null;
        Token otherlv_20=null;
        EObject lv_fpars_1_0 = null;

        EObject lv_fpars_3_0 = null;

        EObject lv_returnTypeRef_6_0 = null;

        EObject this_NoLineTerminator_8 = null;

        EObject lv_fpars_10_0 = null;

        EObject lv_fpars_12_0 = null;

        EObject lv_returnTypeRef_15_0 = null;

        EObject lv_fpars_16_0 = null;

        EObject lv_body_19_0 = null;

        EObject lv_body_21_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            int alt104=3;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                alt104=1;
                }
                break;
            case Async:
                {
                int LA104_2 = input.LA(2);

                if ( (LA104_2==RULE_NO_LINE_TERMINATOR) && (synpred45_InternalN4JSXParser())) {
                    alt104=2;
                }
                else if ( (LA104_2==LeftParenthesis) && (synpred45_InternalN4JSXParser())) {
                    alt104=2;
                }
                else if ( (LA104_2==EqualsSignGreaterThanSign) ) {
                    alt104=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 104, 2, input);

                    throw nvae;
                }
                }
                break;
            case Intersection:
            case Constructor:
            case Implements:
            case Promisify:
            case Interface:
            case Protected:
            case Abstract:
            case External:
            case Private:
            case Project:
            case Public:
            case Static:
            case Target:
            case Await:
            case Union:
            case This:
            case From:
            case Type:
            case Get:
            case Let:
            case Out:
            case Set:
            case As:
            case Of:
            case RULE_IDENTIFIER:
                {
                alt104=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 104, 0, input);

                throw nvae;
            }

            switch (alt104) {
                case 1 :
                    {
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_0_0());
                          
                    }
                    int alt99=2;
                    int LA99_0 = input.LA(1);

                    if ( ((LA99_0>=Intersection && LA99_0<=Implements)||(LA99_0>=Promisify && LA99_0<=Abstract)||LA99_0==External||(LA99_0>=Private && LA99_0<=Project)||LA99_0==Public||LA99_0==Static||LA99_0==Target||(LA99_0>=Async && LA99_0<=Await)||LA99_0==Union||LA99_0==This||LA99_0==From||LA99_0==This_1||(LA99_0>=Type && LA99_0<=Void)||LA99_0==FullStopFullStopFullStop||(LA99_0>=Get && LA99_0<=Let)||(LA99_0>=Out && LA99_0<=Set)||LA99_0==As||LA99_0==Of||(LA99_0>=QuestionMark && LA99_0<=LeftSquareBracket)||LA99_0==LeftCurlyBracket||LA99_0==Tilde||LA99_0==RULE_IDENTIFIER) ) {
                        alt99=1;
                    }
                    switch (alt99) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_fpars_1_0=norm1_FormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_1_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop98:
                            do {
                                int alt98=2;
                                int LA98_0 = input.LA(1);

                                if ( (LA98_0==Comma) ) {
                                    alt98=1;
                                }


                                switch (alt98) {
                            	case 1 :
                            	    {
                            	    otherlv_2=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_2, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_0_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_fpars_3_0=norm1_FormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_3_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop98;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_0_2());
                          
                    }
                    int alt100=2;
                    int LA100_0 = input.LA(1);

                    if ( (LA100_0==Colon) ) {
                        alt100=1;
                    }
                    switch (alt100) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_0_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_0_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_62);
                            lv_returnTypeRef_6_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_6_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    {
                    lv_declaredAsync_7_0=(Token)match(input,Async,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredAsync_7_0, grammarAccess.getArrowExpressionAccess().getDeclaredAsyncAsyncKeyword_0_0_0_1_0_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "declaredAsync", true, "async");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArrowExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getArrowExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_0_1_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_64);
                    this_NoLineTerminator_8=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_8;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_9=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_1_0_0_2());
                          
                    }

                    }


                    }
                    int alt102=2;
                    int LA102_0 = input.LA(1);

                    if ( ((LA102_0>=Intersection && LA102_0<=Implements)||(LA102_0>=Promisify && LA102_0<=Abstract)||LA102_0==External||(LA102_0>=Private && LA102_0<=Project)||LA102_0==Public||LA102_0==Static||LA102_0==Target||(LA102_0>=Async && LA102_0<=Await)||LA102_0==Union||LA102_0==This||LA102_0==From||LA102_0==This_1||(LA102_0>=Type && LA102_0<=Void)||LA102_0==FullStopFullStopFullStop||(LA102_0>=Get && LA102_0<=Let)||(LA102_0>=Out && LA102_0<=Set)||LA102_0==As||LA102_0==Of||(LA102_0>=QuestionMark && LA102_0<=LeftSquareBracket)||LA102_0==LeftCurlyBracket||LA102_0==Tilde||LA102_0==RULE_IDENTIFIER) ) {
                        alt102=1;
                    }
                    switch (alt102) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_fpars_10_0=norm1_FormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_10_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop101:
                            do {
                                int alt101=2;
                                int LA101_0 = input.LA(1);

                                if ( (LA101_0==Comma) ) {
                                    alt101=1;
                                }


                                switch (alt101) {
                            	case 1 :
                            	    {
                            	    otherlv_11=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_11, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_1_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_fpars_12_0=norm1_FormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_12_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop101;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,RightParenthesis,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_1_2());
                          
                    }
                    int alt103=2;
                    int LA103_0 = input.LA(1);

                    if ( (LA103_0==Colon) ) {
                        alt103=1;
                    }
                    switch (alt103) {
                        case 1 :
                            {
                            otherlv_14=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_1_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_1_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_62);
                            lv_returnTypeRef_15_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_15_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsBindingIdentifierAsFormalParameterParserRuleCall_0_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_62);
                    lv_fpars_16_0=norm1_BindingIdentifierAsFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_16_0, 
                              		"eu.numberfour.n4js.N4JS.BindingIdentifierAsFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_17=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_17, grammarAccess.getArrowExpressionAccess().getEqualsSignGreaterThanSignKeyword_0_0_1());
                  
            }

            }


            }
            int alt105=2;
            alt105 = dfa105.predict(input);
            switch (alt105) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_hasBracesAroundBody_18_0=(Token)match(input,LeftCurlyBracket,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_hasBracesAroundBody_18_0, grammarAccess.getArrowExpressionAccess().getHasBracesAroundBodyLeftCurlyBracketKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "hasBracesAroundBody", true, "{");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyBlockMinusBracesParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_15);
                    lv_body_19_0=norm1_BlockMinusBraces();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_19_0, 
                              		"eu.numberfour.n4js.N4JS.BlockMinusBraces");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_20=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_20, grammarAccess.getArrowExpressionAccess().getRightCurlyBracketKeyword_1_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyExpressionDisguisedAsBlockParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_21_0=ruleExpressionDisguisedAsBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_21_0, 
                              		"eu.numberfour.n4js.N4JS.ExpressionDisguisedAsBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_ArrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_declaredAsync_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_17=null;
        Token lv_hasBracesAroundBody_18_0=null;
        Token otherlv_20=null;
        EObject lv_fpars_1_0 = null;

        EObject lv_fpars_3_0 = null;

        EObject lv_returnTypeRef_6_0 = null;

        EObject this_NoLineTerminator_8 = null;

        EObject lv_fpars_10_0 = null;

        EObject lv_fpars_12_0 = null;

        EObject lv_returnTypeRef_15_0 = null;

        EObject lv_fpars_16_0 = null;

        EObject lv_body_19_0 = null;

        EObject lv_body_21_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            int alt112=3;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                alt112=1;
                }
                break;
            case Async:
                {
                int LA112_2 = input.LA(2);

                if ( (LA112_2==EqualsSignGreaterThanSign) ) {
                    alt112=3;
                }
                else if ( (LA112_2==RULE_NO_LINE_TERMINATOR) && (synpred49_InternalN4JSXParser())) {
                    alt112=2;
                }
                else if ( (LA112_2==LeftParenthesis) && (synpred49_InternalN4JSXParser())) {
                    alt112=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 112, 2, input);

                    throw nvae;
                }
                }
                break;
            case Intersection:
            case Constructor:
            case Implements:
            case Promisify:
            case Interface:
            case Protected:
            case Abstract:
            case External:
            case Private:
            case Project:
            case Public:
            case Static:
            case Target:
            case Await:
            case Union:
            case This:
            case From:
            case Type:
            case Get:
            case Let:
            case Out:
            case Set:
            case As:
            case Of:
            case RULE_IDENTIFIER:
                {
                alt112=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 112, 0, input);

                throw nvae;
            }

            switch (alt112) {
                case 1 :
                    {
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_0_0());
                          
                    }
                    int alt107=2;
                    int LA107_0 = input.LA(1);

                    if ( ((LA107_0>=Intersection && LA107_0<=Implements)||(LA107_0>=Promisify && LA107_0<=Abstract)||LA107_0==External||(LA107_0>=Private && LA107_0<=Project)||LA107_0==Public||LA107_0==Static||LA107_0==Target||(LA107_0>=Async && LA107_0<=Await)||LA107_0==Union||LA107_0==This||LA107_0==From||LA107_0==This_1||(LA107_0>=Type && LA107_0<=Void)||LA107_0==FullStopFullStopFullStop||(LA107_0>=Get && LA107_0<=Let)||(LA107_0>=Out && LA107_0<=Set)||LA107_0==As||LA107_0==Of||(LA107_0>=QuestionMark && LA107_0<=LeftSquareBracket)||LA107_0==LeftCurlyBracket||LA107_0==Tilde||LA107_0==RULE_IDENTIFIER) ) {
                        alt107=1;
                    }
                    switch (alt107) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_fpars_1_0=norm1_FormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_1_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop106:
                            do {
                                int alt106=2;
                                int LA106_0 = input.LA(1);

                                if ( (LA106_0==Comma) ) {
                                    alt106=1;
                                }


                                switch (alt106) {
                            	case 1 :
                            	    {
                            	    otherlv_2=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_2, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_0_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_fpars_3_0=norm1_FormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_3_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop106;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_0_2());
                          
                    }
                    int alt108=2;
                    int LA108_0 = input.LA(1);

                    if ( (LA108_0==Colon) ) {
                        alt108=1;
                    }
                    switch (alt108) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_0_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_0_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_62);
                            lv_returnTypeRef_6_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_6_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    {
                    lv_declaredAsync_7_0=(Token)match(input,Async,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredAsync_7_0, grammarAccess.getArrowExpressionAccess().getDeclaredAsyncAsyncKeyword_0_0_0_1_0_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "declaredAsync", true, "async");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArrowExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getArrowExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_0_1_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_64);
                    this_NoLineTerminator_8=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_8;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_9=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_1_0_0_2());
                          
                    }

                    }


                    }
                    int alt110=2;
                    int LA110_0 = input.LA(1);

                    if ( ((LA110_0>=Intersection && LA110_0<=Implements)||(LA110_0>=Promisify && LA110_0<=Abstract)||LA110_0==External||(LA110_0>=Private && LA110_0<=Project)||LA110_0==Public||LA110_0==Static||LA110_0==Target||(LA110_0>=Async && LA110_0<=Await)||LA110_0==Union||LA110_0==This||LA110_0==From||LA110_0==This_1||(LA110_0>=Type && LA110_0<=Void)||LA110_0==FullStopFullStopFullStop||(LA110_0>=Get && LA110_0<=Let)||(LA110_0>=Out && LA110_0<=Set)||LA110_0==As||LA110_0==Of||(LA110_0>=QuestionMark && LA110_0<=LeftSquareBracket)||LA110_0==LeftCurlyBracket||LA110_0==Tilde||LA110_0==RULE_IDENTIFIER) ) {
                        alt110=1;
                    }
                    switch (alt110) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_fpars_10_0=norm1_FormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_10_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop109:
                            do {
                                int alt109=2;
                                int LA109_0 = input.LA(1);

                                if ( (LA109_0==Comma) ) {
                                    alt109=1;
                                }


                                switch (alt109) {
                            	case 1 :
                            	    {
                            	    otherlv_11=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_11, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_1_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_fpars_12_0=norm1_FormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_12_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop109;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,RightParenthesis,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_1_2());
                          
                    }
                    int alt111=2;
                    int LA111_0 = input.LA(1);

                    if ( (LA111_0==Colon) ) {
                        alt111=1;
                    }
                    switch (alt111) {
                        case 1 :
                            {
                            otherlv_14=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_1_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_1_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_62);
                            lv_returnTypeRef_15_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_15_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsBindingIdentifierAsFormalParameterParserRuleCall_0_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_62);
                    lv_fpars_16_0=norm1_BindingIdentifierAsFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_16_0, 
                              		"eu.numberfour.n4js.N4JS.BindingIdentifierAsFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_17=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_17, grammarAccess.getArrowExpressionAccess().getEqualsSignGreaterThanSignKeyword_0_0_1());
                  
            }

            }


            }
            int alt113=2;
            alt113 = dfa113.predict(input);
            switch (alt113) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_hasBracesAroundBody_18_0=(Token)match(input,LeftCurlyBracket,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_hasBracesAroundBody_18_0, grammarAccess.getArrowExpressionAccess().getHasBracesAroundBodyLeftCurlyBracketKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "hasBracesAroundBody", true, "{");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyBlockMinusBracesParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_15);
                    lv_body_19_0=norm1_BlockMinusBraces();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_19_0, 
                              		"eu.numberfour.n4js.N4JS.BlockMinusBraces");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_20=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_20, grammarAccess.getArrowExpressionAccess().getRightCurlyBracketKeyword_1_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyExpressionDisguisedAsBlockParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_21_0=norm1_ExpressionDisguisedAsBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_21_0, 
                              		"eu.numberfour.n4js.N4JS.ExpressionDisguisedAsBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleStrictFormalParameters(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_fpars_1_0 = null;

        EObject lv_fpars_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getStrictFormalParametersAccess().getLeftParenthesisKeyword_0());
                  
            }
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( ((LA115_0>=Intersection && LA115_0<=Implements)||(LA115_0>=Promisify && LA115_0<=Abstract)||LA115_0==External||(LA115_0>=Private && LA115_0<=Project)||LA115_0==Public||LA115_0==Static||LA115_0==Target||(LA115_0>=Async && LA115_0<=Await)||LA115_0==Union||(LA115_0>=Yield && LA115_0<=This)||LA115_0==From||LA115_0==This_1||(LA115_0>=Type && LA115_0<=Void)||LA115_0==FullStopFullStopFullStop||(LA115_0>=Get && LA115_0<=Let)||(LA115_0>=Out && LA115_0<=Set)||LA115_0==As||LA115_0==Of||(LA115_0>=QuestionMark && LA115_0<=LeftSquareBracket)||LA115_0==LeftCurlyBracket||LA115_0==Tilde||LA115_0==RULE_IDENTIFIER) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getStrictFormalParametersAccess().getFparsFormalParameterParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_59);
                    lv_fpars_1_0=ruleFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStrictFormalParametersRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_1_0, 
                              		"eu.numberfour.n4js.N4JS.FormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop114:
                    do {
                        int alt114=2;
                        int LA114_0 = input.LA(1);

                        if ( (LA114_0==Comma) ) {
                            alt114=1;
                        }


                        switch (alt114) {
                    	case 1 :
                    	    {
                    	    otherlv_2=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getStrictFormalParametersAccess().getCommaKeyword_1_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getStrictFormalParametersAccess().getFparsFormalParameterParserRuleCall_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_59);
                    	    lv_fpars_3_0=ruleFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStrictFormalParametersRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"fpars",
                    	              		lv_fpars_3_0, 
                    	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop114;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getStrictFormalParametersAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_StrictFormalParameters(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_fpars_1_0 = null;

        EObject lv_fpars_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getStrictFormalParametersAccess().getLeftParenthesisKeyword_0());
                  
            }
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( ((LA117_0>=Intersection && LA117_0<=Implements)||(LA117_0>=Promisify && LA117_0<=Abstract)||LA117_0==External||(LA117_0>=Private && LA117_0<=Project)||LA117_0==Public||LA117_0==Static||LA117_0==Target||(LA117_0>=Async && LA117_0<=Await)||LA117_0==Union||LA117_0==This||LA117_0==From||LA117_0==This_1||(LA117_0>=Type && LA117_0<=Void)||LA117_0==FullStopFullStopFullStop||(LA117_0>=Get && LA117_0<=Let)||(LA117_0>=Out && LA117_0<=Set)||LA117_0==As||LA117_0==Of||(LA117_0>=QuestionMark && LA117_0<=LeftSquareBracket)||LA117_0==LeftCurlyBracket||LA117_0==Tilde||LA117_0==RULE_IDENTIFIER) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getStrictFormalParametersAccess().getFparsFormalParameterParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_59);
                    lv_fpars_1_0=norm1_FormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStrictFormalParametersRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_1_0, 
                              		"eu.numberfour.n4js.N4JS.FormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop116:
                    do {
                        int alt116=2;
                        int LA116_0 = input.LA(1);

                        if ( (LA116_0==Comma) ) {
                            alt116=1;
                        }


                        switch (alt116) {
                    	case 1 :
                    	    {
                    	    otherlv_2=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getStrictFormalParametersAccess().getCommaKeyword_1_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getStrictFormalParametersAccess().getFparsFormalParameterParserRuleCall_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_59);
                    	    lv_fpars_3_0=norm1_FormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStrictFormalParametersRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"fpars",
                    	              		lv_fpars_3_0, 
                    	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop116;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getStrictFormalParametersAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBindingIdentifierAsFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingIdentifierAsFormalParameter = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingIdentifierAsFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingIdentifierAsFormalParameter=ruleBindingIdentifierAsFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingIdentifierAsFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingIdentifierAsFormalParameter() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getBindingIdentifierAsFormalParameterAccess().getNameBindingIdentifierParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getBindingIdentifierAsFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BindingIdentifierAsFormalParameter() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getBindingIdentifierAsFormalParameterAccess().getNameBindingIdentifierParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getBindingIdentifierAsFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBlockMinusBraces() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBlockMinusBraces = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlockMinusBracesRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBlockMinusBraces=ruleBlockMinusBraces();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBlockMinusBraces; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBlockMinusBraces() throws RecognitionException {
        EObject current = null;

        EObject lv_statements_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBlockMinusBracesAccess().getBlockAction_0(),
                          current);
                  
            }

            }
            loop118:
            do {
                int alt118=2;
                int LA118_0 = input.LA(1);

                if ( ((LA118_0>=Intersection && LA118_0<=Implements)||(LA118_0>=Promisify && LA118_0<=Function)||(LA118_0>=Private && LA118_0<=Delete)||(LA118_0>=Public && LA118_0<=Break)||(LA118_0>=Class && LA118_0<=This)||(LA118_0>=From && LA118_0<=With)||(LA118_0>=For && LA118_0<=Var)||LA118_0==PlusSignPlusSign||LA118_0==HyphenMinusHyphenMinus||LA118_0==SolidusEqualsSign||(LA118_0>=As && LA118_0<=If)||LA118_0==Of||LA118_0==ExclamationMark||LA118_0==LeftParenthesis||LA118_0==PlusSign||LA118_0==HyphenMinus||LA118_0==Solidus||(LA118_0>=Semicolon && LA118_0<=LessThanSign)||(LA118_0>=CommercialAt && LA118_0<=LeftSquareBracket)||LA118_0==LeftCurlyBracket||LA118_0==Tilde||LA118_0==RULE_DOUBLE||(LA118_0>=RULE_HEX_INT && LA118_0<=RULE_LEGACY_OCTAL_INT)||LA118_0==RULE_SCIENTIFIC_INT||LA118_0==RULE_IDENTIFIER||LA118_0==RULE_STRING||(LA118_0>=RULE_TEMPLATE_HEAD && LA118_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA118_0==RULE_INT) ) {
                    alt118=1;
                }


                switch (alt118) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBlockMinusBracesAccess().getStatementsStatementParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_statements_1_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBlockMinusBracesRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_1_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop118;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BlockMinusBraces() throws RecognitionException {
        EObject current = null;

        EObject lv_statements_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBlockMinusBracesAccess().getBlockAction_0(),
                          current);
                  
            }

            }
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( ((LA119_0>=Intersection && LA119_0<=Implements)||(LA119_0>=Promisify && LA119_0<=Function)||(LA119_0>=Private && LA119_0<=Delete)||(LA119_0>=Public && LA119_0<=Break)||(LA119_0>=Class && LA119_0<=This)||(LA119_0>=From && LA119_0<=With)||(LA119_0>=For && LA119_0<=Var)||LA119_0==PlusSignPlusSign||LA119_0==HyphenMinusHyphenMinus||LA119_0==SolidusEqualsSign||(LA119_0>=As && LA119_0<=If)||LA119_0==Of||LA119_0==ExclamationMark||LA119_0==LeftParenthesis||LA119_0==PlusSign||LA119_0==HyphenMinus||LA119_0==Solidus||(LA119_0>=Semicolon && LA119_0<=LessThanSign)||(LA119_0>=CommercialAt && LA119_0<=LeftSquareBracket)||LA119_0==LeftCurlyBracket||LA119_0==Tilde||LA119_0==RULE_DOUBLE||(LA119_0>=RULE_HEX_INT && LA119_0<=RULE_LEGACY_OCTAL_INT)||LA119_0==RULE_SCIENTIFIC_INT||LA119_0==RULE_IDENTIFIER||LA119_0==RULE_STRING||(LA119_0>=RULE_TEMPLATE_HEAD && LA119_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA119_0==RULE_INT) ) {
                    alt119=1;
                }


                switch (alt119) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBlockMinusBracesAccess().getStatementsStatementParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_statements_1_0=norm1_Statement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBlockMinusBracesRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_1_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExpressionDisguisedAsBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionDisguisedAsBlock = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionDisguisedAsBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionDisguisedAsBlock=ruleExpressionDisguisedAsBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionDisguisedAsBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExpressionDisguisedAsBlock() throws RecognitionException {
        EObject current = null;

        EObject lv_statements_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExpressionDisguisedAsBlockAccess().getBlockAction_0(),
                          current);
                  
            }

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExpressionDisguisedAsBlockAccess().getStatementsAssignmentExpressionStatementParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statements_1_0=ruleAssignmentExpressionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExpressionDisguisedAsBlockRule());
              	        }
                     		add(
                     			current, 
                     			"statements",
                      		lv_statements_1_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpressionStatement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ExpressionDisguisedAsBlock() throws RecognitionException {
        EObject current = null;

        EObject lv_statements_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExpressionDisguisedAsBlockAccess().getBlockAction_0(),
                          current);
                  
            }

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExpressionDisguisedAsBlockAccess().getStatementsAssignmentExpressionStatementParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statements_1_0=norm1_AssignmentExpressionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExpressionDisguisedAsBlockRule());
              	        }
                     		add(
                     			current, 
                     			"statements",
                      		lv_statements_1_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpressionStatement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAssignmentExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignmentExpressionStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentExpressionStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssignmentExpressionStatement=ruleAssignmentExpressionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignmentExpressionStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAssignmentExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentExpressionStatementAccess().getExpressionAssignmentExpressionParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_0_0=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AssignmentExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentExpressionStatementAccess().getExpressionAssignmentExpressionParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_0_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedExpression=ruleAnnotatedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_ExpressionAnnotationList_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject this_ClassExtendsClause_4 = null;

        EObject this_Members_5 = null;

        EObject this_AsyncNoTrailingLineBreak_7 = null;

        EObject this_FunctionImpl_8 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getExpressionAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_66);
            this_ExpressionAnnotationList_0=ruleExpressionAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ExpressionAnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==Class) ) {
                alt122=1;
            }
            else if ( (LA122_0==Function||LA122_0==Async) ) {
                alt122=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 122, 0, input);

                throw nvae;
            }
            switch (alt122) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExpressionAccess().getN4ClassExpressionAnnotationListAction_1_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,Class,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getAnnotatedExpressionAccess().getClassKeyword_1_0_1());
                          
                    }
                    int alt120=2;
                    int LA120_0 = input.LA(1);

                    if ( ((LA120_0>=Intersection && LA120_0<=Constructor)||(LA120_0>=Promisify && LA120_0<=Abstract)||LA120_0==External||(LA120_0>=Private && LA120_0<=Project)||LA120_0==Public||LA120_0==Static||LA120_0==Target||(LA120_0>=Async && LA120_0<=Await)||LA120_0==Union||(LA120_0>=Yield && LA120_0<=This)||LA120_0==From||LA120_0==Type||(LA120_0>=Get && LA120_0<=Let)||(LA120_0>=Out && LA120_0<=Set)||LA120_0==As||LA120_0==Of||LA120_0==RULE_IDENTIFIER) ) {
                        alt120=1;
                    }
                    else if ( (LA120_0==Implements) ) {
                        int LA120_2 = input.LA(2);

                        if ( (LA120_2==Implements||LA120_2==Extends||LA120_2==LeftCurlyBracket) ) {
                            alt120=1;
                        }
                    }
                    switch (alt120) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getNameBindingIdentifierParserRuleCall_1_0_2_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_22);
                            lv_name_3_0=ruleBindingIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_3_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt121=2;
                    int LA121_0 = input.LA(1);

                    if ( (LA121_0==Implements||LA121_0==Extends) ) {
                        alt121=1;
                    }
                    switch (alt121) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getClassExtendsClauseParserRuleCall_1_0_3()); 
                                  
                            }
                            pushFollow(FOLLOW_22);
                            this_ClassExtendsClause_4=ruleClassExtendsClause(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ClassExtendsClause_4;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getMembersParserRuleCall_1_0_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Members_5=ruleMembers(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Members_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExpressionAccess().getFunctionExpressionAnnotationListAction_1_1_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getAsyncNoTrailingLineBreakParserRuleCall_1_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_57);
                    this_AsyncNoTrailingLineBreak_7=ruleAsyncNoTrailingLineBreak(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncNoTrailingLineBreak_7;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getFunctionImplParserRuleCall_1_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionImpl_8=norm6_FunctionImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionImpl_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AnnotatedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_ExpressionAnnotationList_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject this_ClassExtendsClause_4 = null;

        EObject this_Members_5 = null;

        EObject this_AsyncNoTrailingLineBreak_7 = null;

        EObject this_FunctionImpl_8 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getExpressionAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_66);
            this_ExpressionAnnotationList_0=ruleExpressionAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ExpressionAnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==Class) ) {
                alt125=1;
            }
            else if ( (LA125_0==Function||LA125_0==Async) ) {
                alt125=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 125, 0, input);

                throw nvae;
            }
            switch (alt125) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExpressionAccess().getN4ClassExpressionAnnotationListAction_1_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,Class,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getAnnotatedExpressionAccess().getClassKeyword_1_0_1());
                          
                    }
                    int alt123=2;
                    int LA123_0 = input.LA(1);

                    if ( ((LA123_0>=Intersection && LA123_0<=Constructor)||(LA123_0>=Promisify && LA123_0<=Abstract)||LA123_0==External||(LA123_0>=Private && LA123_0<=Project)||LA123_0==Public||LA123_0==Static||LA123_0==Target||(LA123_0>=Async && LA123_0<=Await)||LA123_0==Union||LA123_0==This||LA123_0==From||LA123_0==Type||(LA123_0>=Get && LA123_0<=Let)||(LA123_0>=Out && LA123_0<=Set)||LA123_0==As||LA123_0==Of||LA123_0==RULE_IDENTIFIER) ) {
                        alt123=1;
                    }
                    else if ( (LA123_0==Implements) ) {
                        int LA123_2 = input.LA(2);

                        if ( (LA123_2==Implements||LA123_2==Extends||LA123_2==LeftCurlyBracket) ) {
                            alt123=1;
                        }
                    }
                    switch (alt123) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getNameBindingIdentifierParserRuleCall_1_0_2_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_68);
                            lv_name_3_0=norm1_BindingIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_3_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt124=2;
                    int LA124_0 = input.LA(1);

                    if ( (LA124_0==Implements||LA124_0==Extends) ) {
                        alt124=1;
                    }
                    switch (alt124) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getClassExtendsClauseParserRuleCall_1_0_3()); 
                                  
                            }
                            pushFollow(FOLLOW_68);
                            this_ClassExtendsClause_4=norm1_ClassExtendsClause(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ClassExtendsClause_4;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getMembersParserRuleCall_1_0_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Members_5=norm1_Members(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Members_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExpressionAccess().getFunctionExpressionAnnotationListAction_1_1_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getAsyncNoTrailingLineBreakParserRuleCall_1_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_57);
                    this_AsyncNoTrailingLineBreak_7=ruleAsyncNoTrailingLineBreak(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncNoTrailingLineBreak_7;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getFunctionImplParserRuleCall_1_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionImpl_8=norm6_FunctionImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionImpl_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeVariable = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeVariable=ruleTypeVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeVariable() throws RecognitionException {
        EObject current = null;

        Token lv_declaredCovariant_0_0=null;
        Token lv_declaredContravariant_1_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_declaredUpperBound_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt126=3;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==Out) ) {
                alt126=1;
            }
            else if ( (LA126_0==In) ) {
                alt126=2;
            }
            switch (alt126) {
                case 1 :
                    {
                    {
                    {
                    lv_declaredCovariant_0_0=(Token)match(input,Out,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredCovariant_0_0, grammarAccess.getTypeVariableAccess().getDeclaredCovariantOutKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTypeVariableRule());
                      	        }
                             		setWithLastConsumed(current, "declaredCovariant", true, "out");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    lv_declaredContravariant_1_0=(Token)match(input,In,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredContravariant_1_0, grammarAccess.getTypeVariableAccess().getDeclaredContravariantInKeyword_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTypeVariableRule());
                      	        }
                             		setWithLastConsumed(current, "declaredContravariant", true, "in");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypeVariableAccess().getNameIdentifierOrThisParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_69);
            lv_name_2_0=ruleIdentifierOrThis();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeVariableRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierOrThis");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==Extends) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    {
                    otherlv_3=(Token)match(input,Extends,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getTypeVariableAccess().getExtendsKeyword_2_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTypeVariableAccess().getDeclaredUpperBoundTypeRefParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaredUpperBound_4_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredUpperBound",
                              		lv_declaredUpperBound_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFormalParameter = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFormalParameter=ruleFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject this_BindingElementFragment_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFormalParameterAccess().getFormalParameterAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFormalParameterRule());
              		}
                      newCompositeNode(grammarAccess.getFormalParameterAccess().getBindingElementFragmentParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_BindingElementFragment_1=ruleBindingElementFragment(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BindingElementFragment_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_FormalParameter() throws RecognitionException {
        EObject current = null;

        EObject this_BindingElementFragment_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFormalParameterAccess().getFormalParameterAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFormalParameterRule());
              		}
                      newCompositeNode(grammarAccess.getFormalParameterAccess().getBindingElementFragmentParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_BindingElementFragment_1=norm1_BindingElementFragment(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BindingElementFragment_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingElementFragment(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_variadic_3_0=null;
        Token otherlv_6=null;
        EObject lv_bindingPattern_0_0 = null;

        EObject lv_annotations_1_0 = null;

        EObject this_BogusTypeRefFragment_2 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        EObject this_ColonSepTypeRef_5 = null;

        EObject lv_initializer_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt132=2;
            alt132 = dfa132.predict(input);
            switch (alt132) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getBindingPatternBindingPatternParserRuleCall_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_70);
                    lv_bindingPattern_0_0=ruleBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"bindingPattern",
                              		lv_bindingPattern_0_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    loop128:
                    do {
                        int alt128=2;
                        int LA128_0 = input.LA(1);

                        if ( (LA128_0==CommercialAt) ) {
                            alt128=1;
                        }


                        switch (alt128) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getAnnotationsAnnotationParserRuleCall_0_1_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_71);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"annotations",
                    	              		lv_annotations_1_0, 
                    	              		"eu.numberfour.n4js.N4JS.Annotation");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop128;
                        }
                    } while (true);
                    int alt129=2;
                    alt129 = dfa129.predict(input);
                    switch (alt129) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getBindingElementFragmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getBogusTypeRefFragmentParserRuleCall_0_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_72);
                            this_BogusTypeRefFragment_2=ruleBogusTypeRefFragment(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_BogusTypeRefFragment_2;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt130=2;
                    int LA130_0 = input.LA(1);

                    if ( (LA130_0==FullStopFullStopFullStop) ) {
                        alt130=1;
                    }
                    switch (alt130) {
                        case 1 :
                            {
                            {
                            lv_variadic_3_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_variadic_3_0, grammarAccess.getBindingElementFragmentAccess().getVariadicFullStopFullStopFullStopKeyword_0_1_2_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getBindingElementFragmentRule());
                              	        }
                                     		setWithLastConsumed(current, "variadic", true, "...");
                              	    
                            }

                            }


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getNameBindingIdentifierParserRuleCall_0_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_73);
                    lv_name_4_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt131=2;
                    int LA131_0 = input.LA(1);

                    if ( (LA131_0==Colon) ) {
                        alt131=1;
                    }
                    switch (alt131) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getBindingElementFragmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getColonSepTypeRefParserRuleCall_0_1_4()); 
                                  
                            }
                            pushFollow(FOLLOW_70);
                            this_ColonSepTypeRef_5=ruleColonSepTypeRef(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ColonSepTypeRef_5;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==EqualsSign) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    {
                    otherlv_6=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getBindingElementFragmentAccess().getEqualsSignKeyword_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getInitializerAssignmentExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_initializer_7_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"initializer",
                              		lv_initializer_7_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BindingElementFragment(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_variadic_3_0=null;
        Token otherlv_6=null;
        EObject lv_bindingPattern_0_0 = null;

        EObject lv_annotations_1_0 = null;

        EObject this_BogusTypeRefFragment_2 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        EObject this_ColonSepTypeRef_5 = null;

        EObject lv_initializer_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt138=2;
            alt138 = dfa138.predict(input);
            switch (alt138) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getBindingPatternBindingPatternParserRuleCall_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_70);
                    lv_bindingPattern_0_0=norm1_BindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"bindingPattern",
                              		lv_bindingPattern_0_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    loop134:
                    do {
                        int alt134=2;
                        int LA134_0 = input.LA(1);

                        if ( (LA134_0==CommercialAt) ) {
                            alt134=1;
                        }


                        switch (alt134) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getAnnotationsAnnotationParserRuleCall_0_1_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_71);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"annotations",
                    	              		lv_annotations_1_0, 
                    	              		"eu.numberfour.n4js.N4JS.Annotation");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop134;
                        }
                    } while (true);
                    int alt135=2;
                    alt135 = dfa135.predict(input);
                    switch (alt135) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getBindingElementFragmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getBogusTypeRefFragmentParserRuleCall_0_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_72);
                            this_BogusTypeRefFragment_2=ruleBogusTypeRefFragment(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_BogusTypeRefFragment_2;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt136=2;
                    int LA136_0 = input.LA(1);

                    if ( (LA136_0==FullStopFullStopFullStop) ) {
                        alt136=1;
                    }
                    switch (alt136) {
                        case 1 :
                            {
                            {
                            lv_variadic_3_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_variadic_3_0, grammarAccess.getBindingElementFragmentAccess().getVariadicFullStopFullStopFullStopKeyword_0_1_2_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getBindingElementFragmentRule());
                              	        }
                                     		setWithLastConsumed(current, "variadic", true, "...");
                              	    
                            }

                            }


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getNameBindingIdentifierParserRuleCall_0_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_73);
                    lv_name_4_0=norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt137=2;
                    int LA137_0 = input.LA(1);

                    if ( (LA137_0==Colon) ) {
                        alt137=1;
                    }
                    switch (alt137) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getBindingElementFragmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getColonSepTypeRefParserRuleCall_0_1_4()); 
                                  
                            }
                            pushFollow(FOLLOW_70);
                            this_ColonSepTypeRef_5=ruleColonSepTypeRef(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ColonSepTypeRef_5;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==EqualsSign) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    {
                    otherlv_6=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getBindingElementFragmentAccess().getEqualsSignKeyword_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getInitializerAssignmentExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_initializer_7_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"initializer",
                              		lv_initializer_7_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleColonSepTypeRef(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject lv_declaredTypeRef_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getColonSepTypeRefAccess().getColonKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getColonSepTypeRefAccess().getDeclaredTypeRefTypeRefParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_declaredTypeRef_1_0=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getColonSepTypeRefRule());
              	        }
                     		set(
                     			current, 
                     			"declaredTypeRef",
                      		lv_declaredTypeRef_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBogusTypeRefFragment(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_bogusTypeRef_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getBogusTypeRefFragmentAccess().getBogusTypeRefBogusTypeRefParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_bogusTypeRef_0_0=ruleBogusTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getBogusTypeRefFragmentRule());
              	        }
                     		set(
                     			current, 
                     			"bogusTypeRef",
                      		lv_bogusTypeRef_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BogusTypeRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBlock = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBlock=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_statements_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBlockAccess().getBlockAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_65); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0_0_1());
                  
            }

            }


            }
            loop140:
            do {
                int alt140=2;
                int LA140_0 = input.LA(1);

                if ( ((LA140_0>=Intersection && LA140_0<=Implements)||(LA140_0>=Promisify && LA140_0<=Function)||(LA140_0>=Private && LA140_0<=Delete)||(LA140_0>=Public && LA140_0<=Break)||(LA140_0>=Class && LA140_0<=This)||(LA140_0>=From && LA140_0<=With)||(LA140_0>=For && LA140_0<=Var)||LA140_0==PlusSignPlusSign||LA140_0==HyphenMinusHyphenMinus||LA140_0==SolidusEqualsSign||(LA140_0>=As && LA140_0<=If)||LA140_0==Of||LA140_0==ExclamationMark||LA140_0==LeftParenthesis||LA140_0==PlusSign||LA140_0==HyphenMinus||LA140_0==Solidus||(LA140_0>=Semicolon && LA140_0<=LessThanSign)||(LA140_0>=CommercialAt && LA140_0<=LeftSquareBracket)||LA140_0==LeftCurlyBracket||LA140_0==Tilde||LA140_0==RULE_DOUBLE||(LA140_0>=RULE_HEX_INT && LA140_0<=RULE_LEGACY_OCTAL_INT)||LA140_0==RULE_SCIENTIFIC_INT||LA140_0==RULE_IDENTIFIER||LA140_0==RULE_STRING||(LA140_0>=RULE_TEMPLATE_HEAD && LA140_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA140_0==RULE_INT) ) {
                    alt140=1;
                }


                switch (alt140) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_statements_2_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBlockRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop140;
                }
            } while (true);

            otherlv_3=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_Block() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_statements_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBlockAccess().getBlockAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_65); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0_0_1());
                  
            }

            }


            }
            loop141:
            do {
                int alt141=2;
                int LA141_0 = input.LA(1);

                if ( ((LA141_0>=Intersection && LA141_0<=Implements)||(LA141_0>=Promisify && LA141_0<=Function)||(LA141_0>=Private && LA141_0<=Delete)||(LA141_0>=Public && LA141_0<=Break)||(LA141_0>=Class && LA141_0<=This)||(LA141_0>=From && LA141_0<=With)||(LA141_0>=For && LA141_0<=Var)||LA141_0==PlusSignPlusSign||LA141_0==HyphenMinusHyphenMinus||LA141_0==SolidusEqualsSign||(LA141_0>=As && LA141_0<=If)||LA141_0==Of||LA141_0==ExclamationMark||LA141_0==LeftParenthesis||LA141_0==PlusSign||LA141_0==HyphenMinus||LA141_0==Solidus||(LA141_0>=Semicolon && LA141_0<=LessThanSign)||(LA141_0>=CommercialAt && LA141_0<=LeftSquareBracket)||LA141_0==LeftCurlyBracket||LA141_0==Tilde||LA141_0==RULE_DOUBLE||(LA141_0>=RULE_HEX_INT && LA141_0<=RULE_LEGACY_OCTAL_INT)||LA141_0==RULE_SCIENTIFIC_INT||LA141_0==RULE_IDENTIFIER||LA141_0==RULE_STRING||(LA141_0>=RULE_TEMPLATE_HEAD && LA141_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA141_0==RULE_INT) ) {
                    alt141=1;
                }


                switch (alt141) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_statements_2_0=norm1_Statement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBlockRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop141;
                }
            } while (true);

            otherlv_3=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleRootStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRootStatement=ruleRootStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleRootStatement() throws RecognitionException {
        EObject current = null;

        EObject this_Block_0 = null;

        EObject this_FunctionDeclaration_1 = null;

        EObject this_VariableStatement_2 = null;

        EObject this_EmptyStatement_3 = null;

        EObject this_LabelledStatement_4 = null;

        EObject this_ExpressionStatement_5 = null;

        EObject this_IfStatement_6 = null;

        EObject this_IterationStatement_7 = null;

        EObject this_ContinueStatement_8 = null;

        EObject this_BreakStatement_9 = null;

        EObject this_ReturnStatement_10 = null;

        EObject this_WithStatement_11 = null;

        EObject this_SwitchStatement_12 = null;

        EObject this_ThrowStatement_13 = null;

        EObject this_TryStatement_14 = null;

        EObject this_DebuggerStatement_15 = null;


         enterRule(); 
            
        try {
            {
            int alt142=16;
            alt142 = dfa142.predict(input);
            switch (alt142) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getBlockParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Block_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Block_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getFunctionDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionDeclaration_1=ruleFunctionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getVariableStatementParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableStatement_2=norm1_VariableStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableStatement_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getEmptyStatementParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_EmptyStatement_3=ruleEmptyStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_EmptyStatement_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getLabelledStatementParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_LabelledStatement_4=ruleLabelledStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LabelledStatement_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getExpressionStatementParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionStatement_5=ruleExpressionStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExpressionStatement_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getIfStatementParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IfStatement_6=ruleIfStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IfStatement_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getIterationStatementParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IterationStatement_7=ruleIterationStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IterationStatement_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getContinueStatementParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ContinueStatement_8=ruleContinueStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ContinueStatement_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getBreakStatementParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BreakStatement_9=ruleBreakStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BreakStatement_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getReturnStatementParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ReturnStatement_10=ruleReturnStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ReturnStatement_10;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 12 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getWithStatementParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WithStatement_11=ruleWithStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_WithStatement_11;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 13 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getSwitchStatementParserRuleCall_12()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SwitchStatement_12=ruleSwitchStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SwitchStatement_12;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 14 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getThrowStatementParserRuleCall_13()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThrowStatement_13=ruleThrowStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThrowStatement_13;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 15 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getTryStatementParserRuleCall_14()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TryStatement_14=ruleTryStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TryStatement_14;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 16 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getDebuggerStatementParserRuleCall_15()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DebuggerStatement_15=ruleDebuggerStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DebuggerStatement_15;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_RootStatement() throws RecognitionException {
        EObject current = null;

        EObject this_Block_0 = null;

        EObject this_FunctionDeclaration_1 = null;

        EObject this_VariableStatement_2 = null;

        EObject this_EmptyStatement_3 = null;

        EObject this_LabelledStatement_4 = null;

        EObject this_ExpressionStatement_5 = null;

        EObject this_IfStatement_6 = null;

        EObject this_IterationStatement_7 = null;

        EObject this_ContinueStatement_8 = null;

        EObject this_BreakStatement_9 = null;

        EObject this_ReturnStatement_10 = null;

        EObject this_WithStatement_11 = null;

        EObject this_SwitchStatement_12 = null;

        EObject this_ThrowStatement_13 = null;

        EObject this_TryStatement_14 = null;

        EObject this_DebuggerStatement_15 = null;


         enterRule(); 
            
        try {
            {
            int alt143=16;
            alt143 = dfa143.predict(input);
            switch (alt143) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getBlockParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Block_0=norm1_Block();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Block_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getFunctionDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionDeclaration_1=norm1_FunctionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getVariableStatementParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableStatement_2=norm3_VariableStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableStatement_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getEmptyStatementParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_EmptyStatement_3=ruleEmptyStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_EmptyStatement_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getLabelledStatementParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_LabelledStatement_4=norm1_LabelledStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LabelledStatement_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getExpressionStatementParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionStatement_5=norm1_ExpressionStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExpressionStatement_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getIfStatementParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IfStatement_6=norm1_IfStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IfStatement_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getIterationStatementParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IterationStatement_7=norm1_IterationStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IterationStatement_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getContinueStatementParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ContinueStatement_8=norm1_ContinueStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ContinueStatement_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getBreakStatementParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BreakStatement_9=norm1_BreakStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BreakStatement_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getReturnStatementParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ReturnStatement_10=norm1_ReturnStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ReturnStatement_10;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 12 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getWithStatementParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WithStatement_11=norm1_WithStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_WithStatement_11;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 13 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getSwitchStatementParserRuleCall_12()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SwitchStatement_12=norm1_SwitchStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SwitchStatement_12;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 14 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getThrowStatementParserRuleCall_13()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThrowStatement_13=norm1_ThrowStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThrowStatement_13;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 15 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getTryStatementParserRuleCall_14()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TryStatement_14=norm1_TryStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TryStatement_14;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 16 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getDebuggerStatementParserRuleCall_15()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DebuggerStatement_15=ruleDebuggerStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DebuggerStatement_15;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedFunctionDeclaration_0 = null;

        EObject this_RootStatement_1 = null;


         enterRule(); 
            
        try {
            {
            int alt144=2;
            alt144 = dfa144.predict(input);
            switch (alt144) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getAnnotatedFunctionDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedFunctionDeclaration_0=ruleAnnotatedFunctionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedFunctionDeclaration_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getRootStatementParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_RootStatement_1=ruleRootStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_RootStatement_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_Statement() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedFunctionDeclaration_0 = null;

        EObject this_RootStatement_1 = null;


         enterRule(); 
            
        try {
            {
            int alt145=2;
            alt145 = dfa145.predict(input);
            switch (alt145) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getAnnotatedFunctionDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedFunctionDeclaration_0=norm1_AnnotatedFunctionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedFunctionDeclaration_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getRootStatementParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_RootStatement_1=norm1_RootStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_RootStatement_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_VariableStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Enumerator lv_varStmtKeyword_1_0 = null;

        EObject lv_varDeclsOrBindings_2_0 = null;

        EObject lv_varDeclsOrBindings_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableStatementAccess().getVariableStatementAction_0_0_0(),
                          current);
                  
            }

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableStatementAccess().getVarStmtKeywordVariableStatementKeywordEnumRuleCall_0_0_1_0()); 
              	    
            }
            pushFollow(FOLLOW_41);
            lv_varStmtKeyword_1_0=ruleVariableStatementKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableStatementRule());
              	        }
                     		set(
                     			current, 
                     			"varStmtKeyword",
                      		lv_varStmtKeyword_1_0, 
                      		"eu.numberfour.n4js.N4JS.VariableStatementKeyword");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_42);
            lv_varDeclsOrBindings_2_0=norm1_VariableDeclarationOrBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableStatementRule());
              	        }
                     		add(
                     			current, 
                     			"varDeclsOrBindings",
                      		lv_varDeclsOrBindings_2_0, 
                      		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop146:
            do {
                int alt146=2;
                int LA146_0 = input.LA(1);

                if ( (LA146_0==Comma) ) {
                    alt146=1;
                }


                switch (alt146) {
            	case 1 :
            	    {
            	    otherlv_3=(Token)match(input,Comma,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getVariableStatementAccess().getCommaKeyword_2_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_42);
            	    lv_varDeclsOrBindings_4_0=norm1_VariableDeclarationOrBinding();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"varDeclsOrBindings",
            	              		lv_varDeclsOrBindings_4_0, 
            	              		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop146;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getVariableStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_VariableStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Enumerator lv_varStmtKeyword_1_0 = null;

        EObject lv_varDeclsOrBindings_2_0 = null;

        EObject lv_varDeclsOrBindings_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableStatementAccess().getVariableStatementAction_0_0_0(),
                          current);
                  
            }

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableStatementAccess().getVarStmtKeywordVariableStatementKeywordEnumRuleCall_0_0_1_0()); 
              	    
            }
            pushFollow(FOLLOW_41);
            lv_varStmtKeyword_1_0=ruleVariableStatementKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableStatementRule());
              	        }
                     		set(
                     			current, 
                     			"varStmtKeyword",
                      		lv_varStmtKeyword_1_0, 
                      		"eu.numberfour.n4js.N4JS.VariableStatementKeyword");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_42);
            lv_varDeclsOrBindings_2_0=norm3_VariableDeclarationOrBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableStatementRule());
              	        }
                     		add(
                     			current, 
                     			"varDeclsOrBindings",
                      		lv_varDeclsOrBindings_2_0, 
                      		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop147:
            do {
                int alt147=2;
                int LA147_0 = input.LA(1);

                if ( (LA147_0==Comma) ) {
                    alt147=1;
                }


                switch (alt147) {
            	case 1 :
            	    {
            	    otherlv_3=(Token)match(input,Comma,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getVariableStatementAccess().getCommaKeyword_2_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_42);
            	    lv_varDeclsOrBindings_4_0=norm3_VariableDeclarationOrBinding();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"varDeclsOrBindings",
            	              		lv_varDeclsOrBindings_4_0, 
            	              		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop147;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getVariableStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportedVariableStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportedVariableStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportedVariableStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportedVariableStatement=ruleExportedVariableStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportedVariableStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportedVariableStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        Enumerator lv_varStmtKeyword_2_0 = null;

        EObject lv_varDeclsOrBindings_3_0 = null;

        EObject lv_varDeclsOrBindings_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExportedVariableStatementAccess().getExportedVariableStatementAction_0(),
                          current);
                  
            }

            }
            loop148:
            do {
                int alt148=2;
                alt148 = dfa148.predict(input);
                switch (alt148) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getExportedVariableStatementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_40);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getExportedVariableStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop148;
                }
            } while (true);
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportedVariableStatementAccess().getVarStmtKeywordVariableStatementKeywordEnumRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_41);
            lv_varStmtKeyword_2_0=ruleVariableStatementKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportedVariableStatementRule());
              	        }
                     		set(
                     			current, 
                     			"varStmtKeyword",
                      		lv_varStmtKeyword_2_0, 
                      		"eu.numberfour.n4js.N4JS.VariableStatementKeyword");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportedVariableStatementAccess().getVarDeclsOrBindingsExportedVariableDeclarationOrBindingParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_42);
            lv_varDeclsOrBindings_3_0=ruleExportedVariableDeclarationOrBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportedVariableStatementRule());
              	        }
                     		add(
                     			current, 
                     			"varDeclsOrBindings",
                      		lv_varDeclsOrBindings_3_0, 
                      		"eu.numberfour.n4js.N4JS.ExportedVariableDeclarationOrBinding");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop149:
            do {
                int alt149=2;
                int LA149_0 = input.LA(1);

                if ( (LA149_0==Comma) ) {
                    alt149=1;
                }


                switch (alt149) {
            	case 1 :
            	    {
            	    otherlv_4=(Token)match(input,Comma,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getExportedVariableStatementAccess().getCommaKeyword_4_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getExportedVariableStatementAccess().getVarDeclsOrBindingsExportedVariableDeclarationOrBindingParserRuleCall_4_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_42);
            	    lv_varDeclsOrBindings_5_0=ruleExportedVariableDeclarationOrBinding();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getExportedVariableStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"varDeclsOrBindings",
            	              		lv_varDeclsOrBindings_5_0, 
            	              		"eu.numberfour.n4js.N4JS.ExportedVariableDeclarationOrBinding");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop149;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExportedVariableStatementAccess().getSemiParserRuleCall_5()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleVariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclarationOrBinding = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationOrBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVariableDeclarationOrBinding=ruleVariableDeclarationOrBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclarationOrBinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleVariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_VariableBinding_0 = null;

        EObject this_VariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==LeftCurlyBracket) && (synpred67_InternalN4JSXParser())) {
                alt150=1;
            }
            else if ( (LA150_0==LeftSquareBracket) && (synpred67_InternalN4JSXParser())) {
                alt150=1;
            }
            else if ( ((LA150_0>=Intersection && LA150_0<=Implements)||(LA150_0>=Promisify && LA150_0<=Abstract)||LA150_0==External||(LA150_0>=Private && LA150_0<=Project)||LA150_0==Public||LA150_0==Static||LA150_0==Target||(LA150_0>=Async && LA150_0<=Await)||LA150_0==Union||(LA150_0>=Yield && LA150_0<=This)||LA150_0==From||LA150_0==Type||(LA150_0>=Get && LA150_0<=Let)||(LA150_0>=Out && LA150_0<=Set)||LA150_0==As||LA150_0==Of||LA150_0==CommercialAt||LA150_0==RULE_IDENTIFIER) ) {
                alt150=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 150, 0, input);

                throw nvae;
            }
            switch (alt150) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableBinding_0=ruleVariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableDeclaration_1=norm4_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_VariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_VariableBinding_0 = null;

        EObject this_VariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==LeftCurlyBracket) && (synpred68_InternalN4JSXParser())) {
                alt151=1;
            }
            else if ( (LA151_0==LeftSquareBracket) && (synpred68_InternalN4JSXParser())) {
                alt151=1;
            }
            else if ( ((LA151_0>=Intersection && LA151_0<=Implements)||(LA151_0>=Promisify && LA151_0<=Abstract)||LA151_0==External||(LA151_0>=Private && LA151_0<=Project)||LA151_0==Public||LA151_0==Static||LA151_0==Target||(LA151_0>=Async && LA151_0<=Await)||LA151_0==Union||(LA151_0>=Yield && LA151_0<=This)||LA151_0==From||LA151_0==Type||(LA151_0>=Get && LA151_0<=Let)||(LA151_0>=Out && LA151_0<=Set)||LA151_0==As||LA151_0==Of||LA151_0==CommercialAt||LA151_0==RULE_IDENTIFIER) ) {
                alt151=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 151, 0, input);

                throw nvae;
            }
            switch (alt151) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableBinding_0=norm1_VariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableDeclaration_1=norm5_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_VariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_VariableBinding_0 = null;

        EObject this_VariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==LeftCurlyBracket) && (synpred69_InternalN4JSXParser())) {
                alt152=1;
            }
            else if ( (LA152_0==LeftSquareBracket) && (synpred69_InternalN4JSXParser())) {
                alt152=1;
            }
            else if ( ((LA152_0>=Intersection && LA152_0<=Implements)||(LA152_0>=Promisify && LA152_0<=Abstract)||LA152_0==External||(LA152_0>=Private && LA152_0<=Project)||LA152_0==Public||LA152_0==Static||LA152_0==Target||(LA152_0>=Async && LA152_0<=Await)||LA152_0==Union||LA152_0==This||LA152_0==From||LA152_0==Type||(LA152_0>=Get && LA152_0<=Let)||(LA152_0>=Out && LA152_0<=Set)||LA152_0==As||LA152_0==Of||LA152_0==CommercialAt||LA152_0==RULE_IDENTIFIER) ) {
                alt152=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 152, 0, input);

                throw nvae;
            }
            switch (alt152) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableBinding_0=norm2_VariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableDeclaration_1=norm6_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_VariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_VariableBinding_0 = null;

        EObject this_VariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==LeftCurlyBracket) && (synpred70_InternalN4JSXParser())) {
                alt153=1;
            }
            else if ( (LA153_0==LeftSquareBracket) && (synpred70_InternalN4JSXParser())) {
                alt153=1;
            }
            else if ( ((LA153_0>=Intersection && LA153_0<=Implements)||(LA153_0>=Promisify && LA153_0<=Abstract)||LA153_0==External||(LA153_0>=Private && LA153_0<=Project)||LA153_0==Public||LA153_0==Static||LA153_0==Target||(LA153_0>=Async && LA153_0<=Await)||LA153_0==Union||LA153_0==This||LA153_0==From||LA153_0==Type||(LA153_0>=Get && LA153_0<=Let)||(LA153_0>=Out && LA153_0<=Set)||LA153_0==As||LA153_0==Of||LA153_0==CommercialAt||LA153_0==RULE_IDENTIFIER) ) {
                alt153=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 153, 0, input);

                throw nvae;
            }
            switch (alt153) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableBinding_0=norm3_VariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableDeclaration_1=norm7_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm4_VariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_VariableBinding_0 = null;

        EObject this_VariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==LeftCurlyBracket) && (synpred71_InternalN4JSXParser())) {
                alt154=1;
            }
            else if ( (LA154_0==LeftSquareBracket) && (synpred71_InternalN4JSXParser())) {
                alt154=1;
            }
            else if ( ((LA154_0>=Intersection && LA154_0<=Implements)||(LA154_0>=Promisify && LA154_0<=Abstract)||LA154_0==External||(LA154_0>=Private && LA154_0<=Project)||LA154_0==Public||LA154_0==Static||LA154_0==Target||(LA154_0>=Async && LA154_0<=Await)||LA154_0==Union||(LA154_0>=Yield && LA154_0<=This)||LA154_0==From||LA154_0==Type||(LA154_0>=Get && LA154_0<=Let)||(LA154_0>=Out && LA154_0<=Set)||LA154_0==As||LA154_0==Of||LA154_0==CommercialAt||LA154_0==RULE_IDENTIFIER) ) {
                alt154=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 154, 0, input);

                throw nvae;
            }
            switch (alt154) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableBinding_0=norm4_VariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableDeclaration_1=norm4_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm6_VariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_VariableBinding_0 = null;

        EObject this_VariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==LeftCurlyBracket) && (synpred72_InternalN4JSXParser())) {
                alt155=1;
            }
            else if ( (LA155_0==LeftSquareBracket) && (synpred72_InternalN4JSXParser())) {
                alt155=1;
            }
            else if ( ((LA155_0>=Intersection && LA155_0<=Implements)||(LA155_0>=Promisify && LA155_0<=Abstract)||LA155_0==External||(LA155_0>=Private && LA155_0<=Project)||LA155_0==Public||LA155_0==Static||LA155_0==Target||(LA155_0>=Async && LA155_0<=Await)||LA155_0==Union||LA155_0==This||LA155_0==From||LA155_0==Type||(LA155_0>=Get && LA155_0<=Let)||(LA155_0>=Out && LA155_0<=Set)||LA155_0==As||LA155_0==Of||LA155_0==CommercialAt||LA155_0==RULE_IDENTIFIER) ) {
                alt155=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 155, 0, input);

                throw nvae;
            }
            switch (alt155) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableBinding_0=norm6_VariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableDeclaration_1=norm6_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleVariableBinding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableBinding = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVariableBinding=ruleVariableBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableBinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleVariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_pattern_0_0=ruleBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            {
            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_1_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_pattern_0_0=ruleBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            {
            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_1_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_pattern_0_0=norm1_BindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            {
            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_1_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm2_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_pattern_0_0=norm1_BindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            {
            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_1_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm4_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_70);
            lv_pattern_0_0=ruleBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==EqualsSign) ) {
                alt156=1;
            }
            switch (alt156) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_0_0_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm5_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_70);
            lv_pattern_0_0=ruleBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==EqualsSign) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_0_0_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm6_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_70);
            lv_pattern_0_0=norm1_BindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==EqualsSign) ) {
                alt158=1;
            }
            switch (alt158) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_0_0_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=norm2_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm7_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_70);
            lv_pattern_0_0=norm1_BindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==EqualsSign) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_0_0_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_VariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm1_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_VariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm3_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm4_VariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm4_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm5_VariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm5_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm6_VariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm6_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm7_VariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm7_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleVariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop160:
            do {
                int alt160=2;
                alt160 = dfa160.predict(input);
                switch (alt160) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop160;
                }
            } while (true);
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_1_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_70);
            lv_name_1_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==EqualsSign) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_1_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop162:
            do {
                int alt162=2;
                alt162 = dfa162.predict(input);
                switch (alt162) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop162;
                }
            } while (true);
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_1_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_70);
            lv_name_1_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==EqualsSign) ) {
                alt163=1;
            }
            switch (alt163) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_1_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop164:
            do {
                int alt164=2;
                alt164 = dfa164.predict(input);
                switch (alt164) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop164;
                }
            } while (true);
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_1_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_70);
            lv_name_1_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==EqualsSign) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_1_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm2_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop166:
            do {
                int alt166=2;
                alt166 = dfa166.predict(input);
                switch (alt166) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop166;
                }
            } while (true);
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_1_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_70);
            lv_name_1_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==EqualsSign) ) {
                alt167=1;
            }
            switch (alt167) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_1_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm4_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_ColonSepTypeRef_2 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop168:
            do {
                int alt168=2;
                alt168 = dfa168.predict(input);
                switch (alt168) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop168;
                }
            } while (true);
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_0_0_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_73);
            lv_name_1_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==Colon) ) {
                alt169=1;
            }
            switch (alt169) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getVariableDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getColonSepTypeRefParserRuleCall_1_0_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_70);
                    this_ColonSepTypeRef_2=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==EqualsSign) ) {
                alt170=1;
            }
            switch (alt170) {
                case 1 :
                    {
                    otherlv_3=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_0_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_4_0=ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_4_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm5_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_ColonSepTypeRef_2 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop171:
            do {
                int alt171=2;
                alt171 = dfa171.predict(input);
                switch (alt171) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop171;
                }
            } while (true);
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_0_0_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_73);
            lv_name_1_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==Colon) ) {
                alt172=1;
            }
            switch (alt172) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getVariableDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getColonSepTypeRefParserRuleCall_1_0_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_70);
                    this_ColonSepTypeRef_2=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }
            int alt173=2;
            int LA173_0 = input.LA(1);

            if ( (LA173_0==EqualsSign) ) {
                alt173=1;
            }
            switch (alt173) {
                case 1 :
                    {
                    otherlv_3=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_0_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_4_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_4_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm6_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_ColonSepTypeRef_2 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop174:
            do {
                int alt174=2;
                alt174 = dfa174.predict(input);
                switch (alt174) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop174;
                }
            } while (true);
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_0_0_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_73);
            lv_name_1_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==Colon) ) {
                alt175=1;
            }
            switch (alt175) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getVariableDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getColonSepTypeRefParserRuleCall_1_0_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_70);
                    this_ColonSepTypeRef_2=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==EqualsSign) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    {
                    otherlv_3=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_0_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_4_0=norm2_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_4_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm7_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_ColonSepTypeRef_2 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop177:
            do {
                int alt177=2;
                alt177 = dfa177.predict(input);
                switch (alt177) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop177;
                }
            } while (true);
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_0_0_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_73);
            lv_name_1_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==Colon) ) {
                alt178=1;
            }
            switch (alt178) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getVariableDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getColonSepTypeRefParserRuleCall_1_0_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_70);
                    this_ColonSepTypeRef_2=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==EqualsSign) ) {
                alt179=1;
            }
            switch (alt179) {
                case 1 :
                    {
                    otherlv_3=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_0_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_4_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_4_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportedVariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportedVariableDeclarationOrBinding = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportedVariableDeclarationOrBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportedVariableDeclarationOrBinding=ruleExportedVariableDeclarationOrBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportedVariableDeclarationOrBinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportedVariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_ExportedVariableBinding_0 = null;

        EObject this_ExportedVariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==LeftCurlyBracket) && (synpred89_InternalN4JSXParser())) {
                alt180=1;
            }
            else if ( (LA180_0==LeftSquareBracket) && (synpred89_InternalN4JSXParser())) {
                alt180=1;
            }
            else if ( ((LA180_0>=Intersection && LA180_0<=Implements)||(LA180_0>=Promisify && LA180_0<=Abstract)||LA180_0==External||(LA180_0>=Private && LA180_0<=Project)||LA180_0==Public||LA180_0==Static||LA180_0==Target||(LA180_0>=Async && LA180_0<=Await)||LA180_0==Union||(LA180_0>=Yield && LA180_0<=This)||LA180_0==From||LA180_0==Type||(LA180_0>=Get && LA180_0<=Let)||(LA180_0>=Out && LA180_0<=Set)||LA180_0==As||LA180_0==Of||LA180_0==CommercialAt||LA180_0==RULE_IDENTIFIER) ) {
                alt180=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 180, 0, input);

                throw nvae;
            }
            switch (alt180) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportedVariableDeclarationOrBindingAccess().getExportedVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportedVariableBinding_0=ruleExportedVariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportedVariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportedVariableDeclarationOrBindingAccess().getExportedVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportedVariableDeclaration_1=ruleExportedVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportedVariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ExportedVariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_ExportedVariableBinding_0 = null;

        EObject this_ExportedVariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==LeftCurlyBracket) && (synpred90_InternalN4JSXParser())) {
                alt181=1;
            }
            else if ( (LA181_0==LeftSquareBracket) && (synpred90_InternalN4JSXParser())) {
                alt181=1;
            }
            else if ( ((LA181_0>=Intersection && LA181_0<=Implements)||(LA181_0>=Promisify && LA181_0<=Abstract)||LA181_0==External||(LA181_0>=Private && LA181_0<=Project)||LA181_0==Public||LA181_0==Static||LA181_0==Target||(LA181_0>=Async && LA181_0<=Await)||LA181_0==Union||LA181_0==This||LA181_0==From||LA181_0==Type||(LA181_0>=Get && LA181_0<=Let)||(LA181_0>=Out && LA181_0<=Set)||LA181_0==As||LA181_0==Of||LA181_0==CommercialAt||LA181_0==RULE_IDENTIFIER) ) {
                alt181=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 181, 0, input);

                throw nvae;
            }
            switch (alt181) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportedVariableDeclarationOrBindingAccess().getExportedVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportedVariableBinding_0=norm1_ExportedVariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportedVariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportedVariableDeclarationOrBindingAccess().getExportedVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportedVariableDeclaration_1=norm1_ExportedVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportedVariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportedVariableBinding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportedVariableBinding = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportedVariableBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportedVariableBinding=ruleExportedVariableBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportedVariableBinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportedVariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportedVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_pattern_0_0=ruleBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportedVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getExportedVariableBindingAccess().getEqualsSignKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportedVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportedVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ExportedVariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportedVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_pattern_0_0=norm1_BindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportedVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getExportedVariableBindingAccess().getEqualsSignKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportedVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportedVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportedVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportedVariableDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportedVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportedVariableDeclaration=ruleExportedVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportedVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportedVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExportedVariableDeclarationAccess().getExportedVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getExportedVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getExportedVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm5_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ExportedVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExportedVariableDeclarationAccess().getExportedVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getExportedVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getExportedVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm7_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleEmptyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyStatement=ruleEmptyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleEmptyStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getEmptyStatementAccess().getEmptyStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getEmptyStatementAccess().getSemicolonKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionStatement=ruleExpressionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_32);
            lv_expression_0_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExpressionStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpressionStatementAccess().getSemiParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_32);
            lv_expression_0_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExpressionStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpressionStatementAccess().getSemiParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleIfStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIfStatement=ruleIfStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIfStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_expression_2_0 = null;

        EObject lv_ifStmt_4_0 = null;

        EObject lv_elseStmt_6_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,If,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_2_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfStatementAccess().getIfStmtStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_77);
            lv_ifStmt_4_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
              	        }
                     		set(
                     			current, 
                     			"ifStmt",
                      		lv_ifStmt_4_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( (LA182_0==Else) ) {
                int LA182_1 = input.LA(2);

                if ( (synpred93_InternalN4JSXParser()) ) {
                    alt182=1;
                }
            }
            switch (alt182) {
                case 1 :
                    {
                    {
                    otherlv_5=(Token)match(input,Else,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getIfStatementAccess().getElseKeyword_5_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfStatementAccess().getElseStmtStatementParserRuleCall_5_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_elseStmt_6_0=ruleStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"elseStmt",
                              		lv_elseStmt_6_0, 
                              		"eu.numberfour.n4js.N4JS.Statement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_IfStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_expression_2_0 = null;

        EObject lv_ifStmt_4_0 = null;

        EObject lv_elseStmt_6_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,If,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_2_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfStatementAccess().getIfStmtStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_77);
            lv_ifStmt_4_0=norm1_Statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
              	        }
                     		set(
                     			current, 
                     			"ifStmt",
                      		lv_ifStmt_4_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==Else) ) {
                int LA183_1 = input.LA(2);

                if ( (synpred94_InternalN4JSXParser()) ) {
                    alt183=1;
                }
            }
            switch (alt183) {
                case 1 :
                    {
                    {
                    otherlv_5=(Token)match(input,Else,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getIfStatementAccess().getElseKeyword_5_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfStatementAccess().getElseStmtStatementParserRuleCall_5_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_elseStmt_6_0=norm1_Statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"elseStmt",
                              		lv_elseStmt_6_0, 
                              		"eu.numberfour.n4js.N4JS.Statement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleIterationStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIterationStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIterationStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIterationStatement=ruleIterationStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIterationStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIterationStatement() throws RecognitionException {
        EObject current = null;

        EObject this_DoStatement_0 = null;

        EObject this_WhileStatement_1 = null;

        EObject this_ForStatement_2 = null;


         enterRule(); 
            
        try {
            {
            int alt184=3;
            switch ( input.LA(1) ) {
            case Do:
                {
                alt184=1;
                }
                break;
            case While:
                {
                alt184=2;
                }
                break;
            case For:
                {
                alt184=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 184, 0, input);

                throw nvae;
            }

            switch (alt184) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIterationStatementAccess().getDoStatementParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DoStatement_0=ruleDoStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DoStatement_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIterationStatementAccess().getWhileStatementParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WhileStatement_1=ruleWhileStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_WhileStatement_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIterationStatementAccess().getForStatementParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ForStatement_2=ruleForStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ForStatement_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_IterationStatement() throws RecognitionException {
        EObject current = null;

        EObject this_DoStatement_0 = null;

        EObject this_WhileStatement_1 = null;

        EObject this_ForStatement_2 = null;


         enterRule(); 
            
        try {
            {
            int alt185=3;
            switch ( input.LA(1) ) {
            case Do:
                {
                alt185=1;
                }
                break;
            case While:
                {
                alt185=2;
                }
                break;
            case For:
                {
                alt185=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 185, 0, input);

                throw nvae;
            }

            switch (alt185) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIterationStatementAccess().getDoStatementParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DoStatement_0=norm1_DoStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DoStatement_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIterationStatementAccess().getWhileStatementParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WhileStatement_1=norm1_WhileStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_WhileStatement_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIterationStatementAccess().getForStatementParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ForStatement_2=norm1_ForStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ForStatement_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleDoStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDoStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDoStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDoStatement=ruleDoStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDoStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleDoStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_statement_1_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Do,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getDoStatementAccess().getDoKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDoStatementAccess().getStatementStatementParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_78);
            lv_statement_1_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDoStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_1_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,While,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDoStatementAccess().getWhileKeyword_2());
                  
            }
            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDoStatementAccess().getExpressionExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_4_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDoStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_4_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5());
                  
            }
            int alt186=2;
            alt186 = dfa186.predict(input);
            switch (alt186) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDoStatementAccess().getSemiParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_DoStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_statement_1_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Do,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getDoStatementAccess().getDoKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDoStatementAccess().getStatementStatementParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_78);
            lv_statement_1_0=norm1_Statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDoStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_1_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,While,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDoStatementAccess().getWhileKeyword_2());
                  
            }
            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDoStatementAccess().getExpressionExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_4_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDoStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_4_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5());
                  
            }
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( (LA187_0==Semicolon) ) {
                int LA187_1 = input.LA(2);

                if ( (synpred96_InternalN4JSXParser()) ) {
                    alt187=1;
                }
            }
            else if ( (LA187_0==EOF||LA187_0==RULE_ML_COMMENT||LA187_0==RULE_EOL) && (synpred96_InternalN4JSXParser())) {
                alt187=1;
            }
            else if ( (LA187_0==RightCurlyBracket) ) {
                int LA187_3 = input.LA(2);

                if ( (synpred96_InternalN4JSXParser()) ) {
                    alt187=1;
                }
            }
            switch (alt187) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDoStatementAccess().getSemiParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleWhileStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhileStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhileStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWhileStatement=ruleWhileStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhileStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleWhileStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expression_2_0 = null;

        EObject lv_statement_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,While,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWhileStatementAccess().getWhileKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWhileStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_2_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWhileStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWhileStatementAccess().getStatementStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_4_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWhileStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_4_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_WhileStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expression_2_0 = null;

        EObject lv_statement_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,While,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWhileStatementAccess().getWhileKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWhileStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_2_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWhileStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWhileStatementAccess().getStatementStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_4_0=norm1_Statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWhileStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_4_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleForStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForStatement=ruleForStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleForStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_forIn_4_0=null;
        Token otherlv_6=null;
        Token lv_forIn_9_0=null;
        Token lv_forOf_10_0=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token lv_forIn_19_0=null;
        Token lv_forOf_21_0=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token lv_forIn_28_0=null;
        Token lv_forOf_30_0=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        EObject lv_initExpr_3_0 = null;

        EObject lv_expression_5_0 = null;

        Enumerator lv_varStmtKeyword_7_0 = null;

        EObject lv_varDeclsOrBindings_8_0 = null;

        EObject lv_expression_11_0 = null;

        EObject lv_varDeclsOrBindings_12_0 = null;

        EObject lv_varDeclsOrBindings_14_0 = null;

        EObject lv_expression_16_0 = null;

        EObject lv_updateExpr_18_0 = null;

        EObject lv_expression_20_0 = null;

        EObject lv_expression_22_0 = null;

        EObject lv_initExpr_23_0 = null;

        EObject lv_expression_25_0 = null;

        EObject lv_updateExpr_27_0 = null;

        EObject lv_expression_29_0 = null;

        EObject lv_expression_31_0 = null;

        EObject lv_expression_33_0 = null;

        EObject lv_updateExpr_35_0 = null;

        EObject lv_statement_37_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getForStatementAccess().getForStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,For,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getForStatementAccess().getForKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_2());
                  
            }
            int alt205=2;
            alt205 = dfa205.predict(input);
            switch (alt205) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getForStatementAccess().getInitExprLetIdentifierRefParserRuleCall_3_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_80);
                    lv_initExpr_3_0=ruleLetIdentifierRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"initExpr",
                              		lv_initExpr_3_0, 
                              		"eu.numberfour.n4js.N4JS.LetIdentifierRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    {
                    lv_forIn_4_0=(Token)match(input,In,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_forIn_4_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_0_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getForStatementRule());
                      	        }
                             		setWithLastConsumed(current, "forIn", true, "in");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_75);
                    lv_expression_5_0=norm1_Expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_5_0, 
                              		"eu.numberfour.n4js.N4JS.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_3_0_0_3());
                          
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    int alt204=3;
                    alt204 = dfa204.predict(input);
                    switch (alt204) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getForStatementAccess().getVarStmtKeywordVariableStatementKeywordEnumRuleCall_3_1_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_41);
                            lv_varStmtKeyword_7_0=ruleVariableStatementKeyword();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"varStmtKeyword",
                                      		lv_varStmtKeyword_7_0, 
                                      		"eu.numberfour.n4js.N4JS.VariableStatementKeyword");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt196=2;
                            alt196 = dfa196.predict(input);
                            switch (alt196) {
                                case 1 :
                                    {
                                    {
                                    {
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getVarDeclsOrBindingsBindingIdentifierAsVariableDeclarationParserRuleCall_3_1_0_0_1_0_0_0_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_81);
                                    lv_varDeclsOrBindings_8_0=ruleBindingIdentifierAsVariableDeclaration();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		add(
                                             			current, 
                                             			"varDeclsOrBindings",
                                              		lv_varDeclsOrBindings_8_0, 
                                              		"eu.numberfour.n4js.N4JS.BindingIdentifierAsVariableDeclaration");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    int alt188=2;
                                    int LA188_0 = input.LA(1);

                                    if ( (LA188_0==In) ) {
                                        alt188=1;
                                    }
                                    else if ( (LA188_0==Of) ) {
                                        alt188=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 188, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt188) {
                                        case 1 :
                                            {
                                            {
                                            {
                                            lv_forIn_9_0=(Token)match(input,In,FOLLOW_82); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forIn_9_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_1_0_0_1_0_0_1_0_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forIn", true, "in");
                                              	    
                                            }

                                            }


                                            }


                                            }
                                            break;
                                        case 2 :
                                            {
                                            {
                                            {
                                            lv_forOf_10_0=(Token)match(input,Of,FOLLOW_82); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forOf_10_0, grammarAccess.getForStatementAccess().getForOfOfKeyword_3_1_0_0_1_0_0_1_1_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forOf", true, "of");
                                              	    
                                            }

                                            }


                                            }


                                            }
                                            break;

                                    }
                                    int alt189=2;
                                    alt189 = dfa189.predict(input);
                                    switch (alt189) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0_0_1_0_0_2_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_75);
                                            lv_expression_11_0=norm1_AssignmentExpression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_11_0, 
                                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    {
                                    {
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_3_1_0_0_1_1_0_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_83);
                                    lv_varDeclsOrBindings_12_0=norm4_VariableDeclarationOrBinding();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		add(
                                             			current, 
                                             			"varDeclsOrBindings",
                                              		lv_varDeclsOrBindings_12_0, 
                                              		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    int alt195=3;
                                    switch ( input.LA(1) ) {
                                    case Comma:
                                    case Semicolon:
                                        {
                                        alt195=1;
                                        }
                                        break;
                                    case In:
                                        {
                                        alt195=2;
                                        }
                                        break;
                                    case Of:
                                        {
                                        alt195=3;
                                        }
                                        break;
                                    default:
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 195, 0, input);

                                        throw nvae;
                                    }

                                    switch (alt195) {
                                        case 1 :
                                            {
                                            {
                                            loop190:
                                            do {
                                                int alt190=2;
                                                int LA190_0 = input.LA(1);

                                                if ( (LA190_0==Comma) ) {
                                                    alt190=1;
                                                }


                                                switch (alt190) {
                                            	case 1 :
                                            	    {
                                            	    otherlv_13=(Token)match(input,Comma,FOLLOW_41); if (state.failed) return current;
                                            	    if ( state.backtracking==0 ) {

                                            	          	newLeafNode(otherlv_13, grammarAccess.getForStatementAccess().getCommaKeyword_3_1_0_0_1_1_1_0_0_0());
                                            	          
                                            	    }
                                            	    {
                                            	    {
                                            	    if ( state.backtracking==0 ) {
                                            	       
                                            	      	        newCompositeNode(grammarAccess.getForStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_3_1_0_0_1_1_1_0_0_1_0()); 
                                            	      	    
                                            	    }
                                            	    pushFollow(FOLLOW_84);
                                            	    lv_varDeclsOrBindings_14_0=ruleVariableDeclarationOrBinding();

                                            	    state._fsp--;
                                            	    if (state.failed) return current;
                                            	    if ( state.backtracking==0 ) {

                                            	      	        if (current==null) {
                                            	      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                            	      	        }
                                            	             		add(
                                            	             			current, 
                                            	             			"varDeclsOrBindings",
                                            	              		lv_varDeclsOrBindings_14_0, 
                                            	              		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
                                            	      	        afterParserOrEnumRuleCall();
                                            	      	    
                                            	    }

                                            	    }


                                            	    }


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop190;
                                                }
                                            } while (true);

                                            otherlv_15=(Token)match(input,Semicolon,FOLLOW_85); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_15, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_0_1_1_1_0_1());
                                                  
                                            }
                                            int alt191=2;
                                            int LA191_0 = input.LA(1);

                                            if ( ((LA191_0>=Intersection && LA191_0<=Implements)||(LA191_0>=Promisify && LA191_0<=Abstract)||(LA191_0>=External && LA191_0<=Function)||(LA191_0>=Private && LA191_0<=Delete)||LA191_0==Public||LA191_0==Static||(LA191_0>=Target && LA191_0<=Await)||LA191_0==Class||(LA191_0>=False && LA191_0<=Super)||LA191_0==Union||(LA191_0>=Yield && LA191_0<=This)||(LA191_0>=From && LA191_0<=Void)||(LA191_0>=Get && LA191_0<=Set)||LA191_0==PlusSignPlusSign||LA191_0==HyphenMinusHyphenMinus||LA191_0==SolidusEqualsSign||LA191_0==As||LA191_0==Of||LA191_0==ExclamationMark||LA191_0==LeftParenthesis||LA191_0==PlusSign||LA191_0==HyphenMinus||LA191_0==Solidus||LA191_0==LessThanSign||(LA191_0>=CommercialAt && LA191_0<=LeftSquareBracket)||LA191_0==LeftCurlyBracket||LA191_0==Tilde||LA191_0==RULE_DOUBLE||(LA191_0>=RULE_HEX_INT && LA191_0<=RULE_LEGACY_OCTAL_INT)||LA191_0==RULE_SCIENTIFIC_INT||LA191_0==RULE_IDENTIFIER||LA191_0==RULE_STRING||(LA191_0>=RULE_TEMPLATE_HEAD && LA191_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA191_0==RULE_INT) ) {
                                                alt191=1;
                                            }
                                            switch (alt191) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_0_1_1_1_0_2_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_86);
                                                    lv_expression_16_0=norm1_Expression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"expression",
                                                              		lv_expression_16_0, 
                                                              		"eu.numberfour.n4js.N4JS.Expression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }

                                            otherlv_17=(Token)match(input,Semicolon,FOLLOW_82); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_17, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_0_1_1_1_0_3());
                                                  
                                            }
                                            int alt192=2;
                                            int LA192_0 = input.LA(1);

                                            if ( ((LA192_0>=Intersection && LA192_0<=Implements)||(LA192_0>=Promisify && LA192_0<=Abstract)||(LA192_0>=External && LA192_0<=Function)||(LA192_0>=Private && LA192_0<=Delete)||LA192_0==Public||LA192_0==Static||(LA192_0>=Target && LA192_0<=Await)||LA192_0==Class||(LA192_0>=False && LA192_0<=Super)||LA192_0==Union||(LA192_0>=Yield && LA192_0<=This)||(LA192_0>=From && LA192_0<=Void)||(LA192_0>=Get && LA192_0<=Set)||LA192_0==PlusSignPlusSign||LA192_0==HyphenMinusHyphenMinus||LA192_0==SolidusEqualsSign||LA192_0==As||LA192_0==Of||LA192_0==ExclamationMark||LA192_0==LeftParenthesis||LA192_0==PlusSign||LA192_0==HyphenMinus||LA192_0==Solidus||LA192_0==LessThanSign||(LA192_0>=CommercialAt && LA192_0<=LeftSquareBracket)||LA192_0==LeftCurlyBracket||LA192_0==Tilde||LA192_0==RULE_DOUBLE||(LA192_0>=RULE_HEX_INT && LA192_0<=RULE_LEGACY_OCTAL_INT)||LA192_0==RULE_SCIENTIFIC_INT||LA192_0==RULE_IDENTIFIER||LA192_0==RULE_STRING||(LA192_0>=RULE_TEMPLATE_HEAD && LA192_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA192_0==RULE_INT) ) {
                                                alt192=1;
                                            }
                                            switch (alt192) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getUpdateExprExpressionParserRuleCall_3_1_0_0_1_1_1_0_4_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_75);
                                                    lv_updateExpr_18_0=norm1_Expression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"updateExpr",
                                                              		lv_updateExpr_18_0, 
                                                              		"eu.numberfour.n4js.N4JS.Expression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }


                                            }


                                            }
                                            break;
                                        case 2 :
                                            {
                                            {
                                            {
                                            {
                                            lv_forIn_19_0=(Token)match(input,In,FOLLOW_82); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forIn_19_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_1_0_0_1_1_1_1_0_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forIn", true, "in");
                                              	    
                                            }

                                            }


                                            }
                                            int alt193=2;
                                            int LA193_0 = input.LA(1);

                                            if ( ((LA193_0>=Intersection && LA193_0<=Implements)||(LA193_0>=Promisify && LA193_0<=Abstract)||(LA193_0>=External && LA193_0<=Function)||(LA193_0>=Private && LA193_0<=Delete)||LA193_0==Public||LA193_0==Static||(LA193_0>=Target && LA193_0<=Await)||LA193_0==Class||(LA193_0>=False && LA193_0<=Super)||LA193_0==Union||(LA193_0>=Yield && LA193_0<=This)||(LA193_0>=From && LA193_0<=Void)||(LA193_0>=Get && LA193_0<=Set)||LA193_0==PlusSignPlusSign||LA193_0==HyphenMinusHyphenMinus||LA193_0==SolidusEqualsSign||LA193_0==As||LA193_0==Of||LA193_0==ExclamationMark||LA193_0==LeftParenthesis||LA193_0==PlusSign||LA193_0==HyphenMinus||LA193_0==Solidus||LA193_0==LessThanSign||(LA193_0>=CommercialAt && LA193_0<=LeftSquareBracket)||LA193_0==LeftCurlyBracket||LA193_0==Tilde||LA193_0==RULE_DOUBLE||(LA193_0>=RULE_HEX_INT && LA193_0<=RULE_LEGACY_OCTAL_INT)||LA193_0==RULE_SCIENTIFIC_INT||LA193_0==RULE_IDENTIFIER||LA193_0==RULE_STRING||(LA193_0>=RULE_TEMPLATE_HEAD && LA193_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA193_0==RULE_INT) ) {
                                                alt193=1;
                                            }
                                            switch (alt193) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_0_1_1_1_1_1_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_75);
                                                    lv_expression_20_0=norm1_Expression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"expression",
                                                              		lv_expression_20_0, 
                                                              		"eu.numberfour.n4js.N4JS.Expression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }


                                            }


                                            }
                                            break;
                                        case 3 :
                                            {
                                            {
                                            {
                                            {
                                            lv_forOf_21_0=(Token)match(input,Of,FOLLOW_82); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forOf_21_0, grammarAccess.getForStatementAccess().getForOfOfKeyword_3_1_0_0_1_1_1_2_0_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forOf", true, "of");
                                              	    
                                            }

                                            }


                                            }
                                            int alt194=2;
                                            int LA194_0 = input.LA(1);

                                            if ( ((LA194_0>=Intersection && LA194_0<=Implements)||(LA194_0>=Promisify && LA194_0<=Abstract)||(LA194_0>=External && LA194_0<=Function)||(LA194_0>=Private && LA194_0<=Delete)||LA194_0==Public||LA194_0==Static||(LA194_0>=Target && LA194_0<=Await)||LA194_0==Class||(LA194_0>=False && LA194_0<=Super)||LA194_0==Union||(LA194_0>=Yield && LA194_0<=This)||(LA194_0>=From && LA194_0<=Void)||(LA194_0>=Get && LA194_0<=Set)||LA194_0==PlusSignPlusSign||LA194_0==HyphenMinusHyphenMinus||LA194_0==SolidusEqualsSign||LA194_0==As||LA194_0==Of||LA194_0==ExclamationMark||LA194_0==LeftParenthesis||LA194_0==PlusSign||LA194_0==HyphenMinus||LA194_0==Solidus||LA194_0==LessThanSign||(LA194_0>=CommercialAt && LA194_0<=LeftSquareBracket)||LA194_0==LeftCurlyBracket||LA194_0==Tilde||LA194_0==RULE_DOUBLE||(LA194_0>=RULE_HEX_INT && LA194_0<=RULE_LEGACY_OCTAL_INT)||LA194_0==RULE_SCIENTIFIC_INT||LA194_0==RULE_IDENTIFIER||LA194_0==RULE_STRING||(LA194_0>=RULE_TEMPLATE_HEAD && LA194_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA194_0==RULE_INT) ) {
                                                alt194=1;
                                            }
                                            switch (alt194) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0_0_1_1_1_2_1_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_75);
                                                    lv_expression_22_0=norm1_AssignmentExpression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"expression",
                                                              		lv_expression_22_0, 
                                                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }


                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getForStatementAccess().getInitExprExpressionParserRuleCall_3_1_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_87);
                            lv_initExpr_23_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"initExpr",
                                      		lv_initExpr_23_0, 
                                      		"eu.numberfour.n4js.N4JS.Expression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt201=3;
                            switch ( input.LA(1) ) {
                            case Semicolon:
                                {
                                alt201=1;
                                }
                                break;
                            case In:
                                {
                                alt201=2;
                                }
                                break;
                            case Of:
                                {
                                alt201=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 201, 0, input);

                                throw nvae;
                            }

                            switch (alt201) {
                                case 1 :
                                    {
                                    {
                                    otherlv_24=(Token)match(input,Semicolon,FOLLOW_85); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_24, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_1_1_0_0());
                                          
                                    }
                                    int alt197=2;
                                    int LA197_0 = input.LA(1);

                                    if ( ((LA197_0>=Intersection && LA197_0<=Implements)||(LA197_0>=Promisify && LA197_0<=Abstract)||(LA197_0>=External && LA197_0<=Function)||(LA197_0>=Private && LA197_0<=Delete)||LA197_0==Public||LA197_0==Static||(LA197_0>=Target && LA197_0<=Await)||LA197_0==Class||(LA197_0>=False && LA197_0<=Super)||LA197_0==Union||(LA197_0>=Yield && LA197_0<=This)||(LA197_0>=From && LA197_0<=Void)||(LA197_0>=Get && LA197_0<=Set)||LA197_0==PlusSignPlusSign||LA197_0==HyphenMinusHyphenMinus||LA197_0==SolidusEqualsSign||LA197_0==As||LA197_0==Of||LA197_0==ExclamationMark||LA197_0==LeftParenthesis||LA197_0==PlusSign||LA197_0==HyphenMinus||LA197_0==Solidus||LA197_0==LessThanSign||(LA197_0>=CommercialAt && LA197_0<=LeftSquareBracket)||LA197_0==LeftCurlyBracket||LA197_0==Tilde||LA197_0==RULE_DOUBLE||(LA197_0>=RULE_HEX_INT && LA197_0<=RULE_LEGACY_OCTAL_INT)||LA197_0==RULE_SCIENTIFIC_INT||LA197_0==RULE_IDENTIFIER||LA197_0==RULE_STRING||(LA197_0>=RULE_TEMPLATE_HEAD && LA197_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA197_0==RULE_INT) ) {
                                        alt197=1;
                                    }
                                    switch (alt197) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_1_1_0_1_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_86);
                                            lv_expression_25_0=norm1_Expression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_25_0, 
                                                      		"eu.numberfour.n4js.N4JS.Expression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }

                                    otherlv_26=(Token)match(input,Semicolon,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_26, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_1_1_0_2());
                                          
                                    }
                                    int alt198=2;
                                    int LA198_0 = input.LA(1);

                                    if ( ((LA198_0>=Intersection && LA198_0<=Implements)||(LA198_0>=Promisify && LA198_0<=Abstract)||(LA198_0>=External && LA198_0<=Function)||(LA198_0>=Private && LA198_0<=Delete)||LA198_0==Public||LA198_0==Static||(LA198_0>=Target && LA198_0<=Await)||LA198_0==Class||(LA198_0>=False && LA198_0<=Super)||LA198_0==Union||(LA198_0>=Yield && LA198_0<=This)||(LA198_0>=From && LA198_0<=Void)||(LA198_0>=Get && LA198_0<=Set)||LA198_0==PlusSignPlusSign||LA198_0==HyphenMinusHyphenMinus||LA198_0==SolidusEqualsSign||LA198_0==As||LA198_0==Of||LA198_0==ExclamationMark||LA198_0==LeftParenthesis||LA198_0==PlusSign||LA198_0==HyphenMinus||LA198_0==Solidus||LA198_0==LessThanSign||(LA198_0>=CommercialAt && LA198_0<=LeftSquareBracket)||LA198_0==LeftCurlyBracket||LA198_0==Tilde||LA198_0==RULE_DOUBLE||(LA198_0>=RULE_HEX_INT && LA198_0<=RULE_LEGACY_OCTAL_INT)||LA198_0==RULE_SCIENTIFIC_INT||LA198_0==RULE_IDENTIFIER||LA198_0==RULE_STRING||(LA198_0>=RULE_TEMPLATE_HEAD && LA198_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA198_0==RULE_INT) ) {
                                        alt198=1;
                                    }
                                    switch (alt198) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getUpdateExprExpressionParserRuleCall_3_1_0_1_1_0_3_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_75);
                                            lv_updateExpr_27_0=norm1_Expression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"updateExpr",
                                                      		lv_updateExpr_27_0, 
                                                      		"eu.numberfour.n4js.N4JS.Expression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    {
                                    {
                                    {
                                    {
                                    lv_forIn_28_0=(Token)match(input,In,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_forIn_28_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_1_0_1_1_1_0_0());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getForStatementRule());
                                      	        }
                                             		setWithLastConsumed(current, "forIn", true, "in");
                                      	    
                                    }

                                    }


                                    }
                                    int alt199=2;
                                    int LA199_0 = input.LA(1);

                                    if ( ((LA199_0>=Intersection && LA199_0<=Implements)||(LA199_0>=Promisify && LA199_0<=Abstract)||(LA199_0>=External && LA199_0<=Function)||(LA199_0>=Private && LA199_0<=Delete)||LA199_0==Public||LA199_0==Static||(LA199_0>=Target && LA199_0<=Await)||LA199_0==Class||(LA199_0>=False && LA199_0<=Super)||LA199_0==Union||(LA199_0>=Yield && LA199_0<=This)||(LA199_0>=From && LA199_0<=Void)||(LA199_0>=Get && LA199_0<=Set)||LA199_0==PlusSignPlusSign||LA199_0==HyphenMinusHyphenMinus||LA199_0==SolidusEqualsSign||LA199_0==As||LA199_0==Of||LA199_0==ExclamationMark||LA199_0==LeftParenthesis||LA199_0==PlusSign||LA199_0==HyphenMinus||LA199_0==Solidus||LA199_0==LessThanSign||(LA199_0>=CommercialAt && LA199_0<=LeftSquareBracket)||LA199_0==LeftCurlyBracket||LA199_0==Tilde||LA199_0==RULE_DOUBLE||(LA199_0>=RULE_HEX_INT && LA199_0<=RULE_LEGACY_OCTAL_INT)||LA199_0==RULE_SCIENTIFIC_INT||LA199_0==RULE_IDENTIFIER||LA199_0==RULE_STRING||(LA199_0>=RULE_TEMPLATE_HEAD && LA199_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA199_0==RULE_INT) ) {
                                        alt199=1;
                                    }
                                    switch (alt199) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_1_1_1_1_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_75);
                                            lv_expression_29_0=norm1_Expression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_29_0, 
                                                      		"eu.numberfour.n4js.N4JS.Expression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;
                                case 3 :
                                    {
                                    {
                                    {
                                    {
                                    lv_forOf_30_0=(Token)match(input,Of,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_forOf_30_0, grammarAccess.getForStatementAccess().getForOfOfKeyword_3_1_0_1_1_2_0_0());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getForStatementRule());
                                      	        }
                                             		setWithLastConsumed(current, "forOf", true, "of");
                                      	    
                                    }

                                    }


                                    }
                                    int alt200=2;
                                    int LA200_0 = input.LA(1);

                                    if ( ((LA200_0>=Intersection && LA200_0<=Implements)||(LA200_0>=Promisify && LA200_0<=Abstract)||(LA200_0>=External && LA200_0<=Function)||(LA200_0>=Private && LA200_0<=Delete)||LA200_0==Public||LA200_0==Static||(LA200_0>=Target && LA200_0<=Await)||LA200_0==Class||(LA200_0>=False && LA200_0<=Super)||LA200_0==Union||(LA200_0>=Yield && LA200_0<=This)||(LA200_0>=From && LA200_0<=Void)||(LA200_0>=Get && LA200_0<=Set)||LA200_0==PlusSignPlusSign||LA200_0==HyphenMinusHyphenMinus||LA200_0==SolidusEqualsSign||LA200_0==As||LA200_0==Of||LA200_0==ExclamationMark||LA200_0==LeftParenthesis||LA200_0==PlusSign||LA200_0==HyphenMinus||LA200_0==Solidus||LA200_0==LessThanSign||(LA200_0>=CommercialAt && LA200_0<=LeftSquareBracket)||LA200_0==LeftCurlyBracket||LA200_0==Tilde||LA200_0==RULE_DOUBLE||(LA200_0>=RULE_HEX_INT && LA200_0<=RULE_LEGACY_OCTAL_INT)||LA200_0==RULE_SCIENTIFIC_INT||LA200_0==RULE_IDENTIFIER||LA200_0==RULE_STRING||(LA200_0>=RULE_TEMPLATE_HEAD && LA200_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA200_0==RULE_INT) ) {
                                        alt200=1;
                                    }
                                    switch (alt200) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0_1_1_2_1_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_75);
                                            lv_expression_31_0=norm1_AssignmentExpression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_31_0, 
                                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            {
                            {
                            otherlv_32=(Token)match(input,Semicolon,FOLLOW_85); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_32, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_2_0());
                                  
                            }
                            int alt202=2;
                            int LA202_0 = input.LA(1);

                            if ( ((LA202_0>=Intersection && LA202_0<=Implements)||(LA202_0>=Promisify && LA202_0<=Abstract)||(LA202_0>=External && LA202_0<=Function)||(LA202_0>=Private && LA202_0<=Delete)||LA202_0==Public||LA202_0==Static||(LA202_0>=Target && LA202_0<=Await)||LA202_0==Class||(LA202_0>=False && LA202_0<=Super)||LA202_0==Union||(LA202_0>=Yield && LA202_0<=This)||(LA202_0>=From && LA202_0<=Void)||(LA202_0>=Get && LA202_0<=Set)||LA202_0==PlusSignPlusSign||LA202_0==HyphenMinusHyphenMinus||LA202_0==SolidusEqualsSign||LA202_0==As||LA202_0==Of||LA202_0==ExclamationMark||LA202_0==LeftParenthesis||LA202_0==PlusSign||LA202_0==HyphenMinus||LA202_0==Solidus||LA202_0==LessThanSign||(LA202_0>=CommercialAt && LA202_0<=LeftSquareBracket)||LA202_0==LeftCurlyBracket||LA202_0==Tilde||LA202_0==RULE_DOUBLE||(LA202_0>=RULE_HEX_INT && LA202_0<=RULE_LEGACY_OCTAL_INT)||LA202_0==RULE_SCIENTIFIC_INT||LA202_0==RULE_IDENTIFIER||LA202_0==RULE_STRING||(LA202_0>=RULE_TEMPLATE_HEAD && LA202_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA202_0==RULE_INT) ) {
                                alt202=1;
                            }
                            switch (alt202) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_2_1_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_86);
                                    lv_expression_33_0=norm1_Expression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"expression",
                                              		lv_expression_33_0, 
                                              		"eu.numberfour.n4js.N4JS.Expression");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }

                            otherlv_34=(Token)match(input,Semicolon,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_34, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_2_2());
                                  
                            }
                            int alt203=2;
                            int LA203_0 = input.LA(1);

                            if ( ((LA203_0>=Intersection && LA203_0<=Implements)||(LA203_0>=Promisify && LA203_0<=Abstract)||(LA203_0>=External && LA203_0<=Function)||(LA203_0>=Private && LA203_0<=Delete)||LA203_0==Public||LA203_0==Static||(LA203_0>=Target && LA203_0<=Await)||LA203_0==Class||(LA203_0>=False && LA203_0<=Super)||LA203_0==Union||(LA203_0>=Yield && LA203_0<=This)||(LA203_0>=From && LA203_0<=Void)||(LA203_0>=Get && LA203_0<=Set)||LA203_0==PlusSignPlusSign||LA203_0==HyphenMinusHyphenMinus||LA203_0==SolidusEqualsSign||LA203_0==As||LA203_0==Of||LA203_0==ExclamationMark||LA203_0==LeftParenthesis||LA203_0==PlusSign||LA203_0==HyphenMinus||LA203_0==Solidus||LA203_0==LessThanSign||(LA203_0>=CommercialAt && LA203_0<=LeftSquareBracket)||LA203_0==LeftCurlyBracket||LA203_0==Tilde||LA203_0==RULE_DOUBLE||(LA203_0>=RULE_HEX_INT && LA203_0<=RULE_LEGACY_OCTAL_INT)||LA203_0==RULE_SCIENTIFIC_INT||LA203_0==RULE_IDENTIFIER||LA203_0==RULE_STRING||(LA203_0>=RULE_TEMPLATE_HEAD && LA203_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA203_0==RULE_INT) ) {
                                alt203=1;
                            }
                            switch (alt203) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getUpdateExprExpressionParserRuleCall_3_1_0_2_3_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_75);
                                    lv_updateExpr_35_0=norm1_Expression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"updateExpr",
                                              		lv_updateExpr_35_0, 
                                              		"eu.numberfour.n4js.N4JS.Expression");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    otherlv_36=(Token)match(input,RightParenthesis,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_36, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_3_1_1());
                          
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getForStatementAccess().getStatementStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_37_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_37_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ForStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_forIn_4_0=null;
        Token otherlv_6=null;
        Token lv_forIn_9_0=null;
        Token lv_forOf_10_0=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token lv_forIn_19_0=null;
        Token lv_forOf_21_0=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token lv_forIn_28_0=null;
        Token lv_forOf_30_0=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        EObject lv_initExpr_3_0 = null;

        EObject lv_expression_5_0 = null;

        Enumerator lv_varStmtKeyword_7_0 = null;

        EObject lv_varDeclsOrBindings_8_0 = null;

        EObject lv_expression_11_0 = null;

        EObject lv_varDeclsOrBindings_12_0 = null;

        EObject lv_varDeclsOrBindings_14_0 = null;

        EObject lv_expression_16_0 = null;

        EObject lv_updateExpr_18_0 = null;

        EObject lv_expression_20_0 = null;

        EObject lv_expression_22_0 = null;

        EObject lv_initExpr_23_0 = null;

        EObject lv_expression_25_0 = null;

        EObject lv_updateExpr_27_0 = null;

        EObject lv_expression_29_0 = null;

        EObject lv_expression_31_0 = null;

        EObject lv_expression_33_0 = null;

        EObject lv_updateExpr_35_0 = null;

        EObject lv_statement_37_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getForStatementAccess().getForStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,For,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getForStatementAccess().getForKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_2());
                  
            }
            int alt223=2;
            alt223 = dfa223.predict(input);
            switch (alt223) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getForStatementAccess().getInitExprLetIdentifierRefParserRuleCall_3_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_80);
                    lv_initExpr_3_0=ruleLetIdentifierRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"initExpr",
                              		lv_initExpr_3_0, 
                              		"eu.numberfour.n4js.N4JS.LetIdentifierRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    {
                    lv_forIn_4_0=(Token)match(input,In,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_forIn_4_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_0_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getForStatementRule());
                      	        }
                             		setWithLastConsumed(current, "forIn", true, "in");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_75);
                    lv_expression_5_0=norm3_Expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_5_0, 
                              		"eu.numberfour.n4js.N4JS.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_3_0_0_3());
                          
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    int alt222=3;
                    alt222 = dfa222.predict(input);
                    switch (alt222) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getForStatementAccess().getVarStmtKeywordVariableStatementKeywordEnumRuleCall_3_1_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_41);
                            lv_varStmtKeyword_7_0=ruleVariableStatementKeyword();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"varStmtKeyword",
                                      		lv_varStmtKeyword_7_0, 
                                      		"eu.numberfour.n4js.N4JS.VariableStatementKeyword");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt214=2;
                            alt214 = dfa214.predict(input);
                            switch (alt214) {
                                case 1 :
                                    {
                                    {
                                    {
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getVarDeclsOrBindingsBindingIdentifierAsVariableDeclarationParserRuleCall_3_1_0_0_1_0_0_0_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_81);
                                    lv_varDeclsOrBindings_8_0=norm2_BindingIdentifierAsVariableDeclaration();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		add(
                                             			current, 
                                             			"varDeclsOrBindings",
                                              		lv_varDeclsOrBindings_8_0, 
                                              		"eu.numberfour.n4js.N4JS.BindingIdentifierAsVariableDeclaration");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    int alt206=2;
                                    int LA206_0 = input.LA(1);

                                    if ( (LA206_0==In) ) {
                                        alt206=1;
                                    }
                                    else if ( (LA206_0==Of) ) {
                                        alt206=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 206, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt206) {
                                        case 1 :
                                            {
                                            {
                                            {
                                            lv_forIn_9_0=(Token)match(input,In,FOLLOW_82); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forIn_9_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_1_0_0_1_0_0_1_0_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forIn", true, "in");
                                              	    
                                            }

                                            }


                                            }


                                            }
                                            break;
                                        case 2 :
                                            {
                                            {
                                            {
                                            lv_forOf_10_0=(Token)match(input,Of,FOLLOW_82); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forOf_10_0, grammarAccess.getForStatementAccess().getForOfOfKeyword_3_1_0_0_1_0_0_1_1_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forOf", true, "of");
                                              	    
                                            }

                                            }


                                            }


                                            }
                                            break;

                                    }
                                    int alt207=2;
                                    alt207 = dfa207.predict(input);
                                    switch (alt207) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0_0_1_0_0_2_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_75);
                                            lv_expression_11_0=norm3_AssignmentExpression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_11_0, 
                                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    {
                                    {
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_3_1_0_0_1_1_0_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_83);
                                    lv_varDeclsOrBindings_12_0=norm6_VariableDeclarationOrBinding();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		add(
                                             			current, 
                                             			"varDeclsOrBindings",
                                              		lv_varDeclsOrBindings_12_0, 
                                              		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    int alt213=3;
                                    switch ( input.LA(1) ) {
                                    case Comma:
                                    case Semicolon:
                                        {
                                        alt213=1;
                                        }
                                        break;
                                    case In:
                                        {
                                        alt213=2;
                                        }
                                        break;
                                    case Of:
                                        {
                                        alt213=3;
                                        }
                                        break;
                                    default:
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 213, 0, input);

                                        throw nvae;
                                    }

                                    switch (alt213) {
                                        case 1 :
                                            {
                                            {
                                            loop208:
                                            do {
                                                int alt208=2;
                                                int LA208_0 = input.LA(1);

                                                if ( (LA208_0==Comma) ) {
                                                    alt208=1;
                                                }


                                                switch (alt208) {
                                            	case 1 :
                                            	    {
                                            	    otherlv_13=(Token)match(input,Comma,FOLLOW_41); if (state.failed) return current;
                                            	    if ( state.backtracking==0 ) {

                                            	          	newLeafNode(otherlv_13, grammarAccess.getForStatementAccess().getCommaKeyword_3_1_0_0_1_1_1_0_0_0());
                                            	          
                                            	    }
                                            	    {
                                            	    {
                                            	    if ( state.backtracking==0 ) {
                                            	       
                                            	      	        newCompositeNode(grammarAccess.getForStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_3_1_0_0_1_1_1_0_0_1_0()); 
                                            	      	    
                                            	    }
                                            	    pushFollow(FOLLOW_84);
                                            	    lv_varDeclsOrBindings_14_0=norm2_VariableDeclarationOrBinding();

                                            	    state._fsp--;
                                            	    if (state.failed) return current;
                                            	    if ( state.backtracking==0 ) {

                                            	      	        if (current==null) {
                                            	      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                            	      	        }
                                            	             		add(
                                            	             			current, 
                                            	             			"varDeclsOrBindings",
                                            	              		lv_varDeclsOrBindings_14_0, 
                                            	              		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
                                            	      	        afterParserOrEnumRuleCall();
                                            	      	    
                                            	    }

                                            	    }


                                            	    }


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop208;
                                                }
                                            } while (true);

                                            otherlv_15=(Token)match(input,Semicolon,FOLLOW_85); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_15, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_0_1_1_1_0_1());
                                                  
                                            }
                                            int alt209=2;
                                            int LA209_0 = input.LA(1);

                                            if ( ((LA209_0>=Intersection && LA209_0<=Implements)||(LA209_0>=Promisify && LA209_0<=Abstract)||(LA209_0>=External && LA209_0<=Function)||(LA209_0>=Private && LA209_0<=Delete)||LA209_0==Public||LA209_0==Static||(LA209_0>=Target && LA209_0<=Await)||LA209_0==Class||(LA209_0>=False && LA209_0<=Super)||LA209_0==Union||(LA209_0>=Yield && LA209_0<=This)||(LA209_0>=From && LA209_0<=Void)||(LA209_0>=Get && LA209_0<=Set)||LA209_0==PlusSignPlusSign||LA209_0==HyphenMinusHyphenMinus||LA209_0==SolidusEqualsSign||LA209_0==As||LA209_0==Of||LA209_0==ExclamationMark||LA209_0==LeftParenthesis||LA209_0==PlusSign||LA209_0==HyphenMinus||LA209_0==Solidus||LA209_0==LessThanSign||(LA209_0>=CommercialAt && LA209_0<=LeftSquareBracket)||LA209_0==LeftCurlyBracket||LA209_0==Tilde||LA209_0==RULE_DOUBLE||(LA209_0>=RULE_HEX_INT && LA209_0<=RULE_LEGACY_OCTAL_INT)||LA209_0==RULE_SCIENTIFIC_INT||LA209_0==RULE_IDENTIFIER||LA209_0==RULE_STRING||(LA209_0>=RULE_TEMPLATE_HEAD && LA209_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA209_0==RULE_INT) ) {
                                                alt209=1;
                                            }
                                            switch (alt209) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_0_1_1_1_0_2_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_86);
                                                    lv_expression_16_0=norm3_Expression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"expression",
                                                              		lv_expression_16_0, 
                                                              		"eu.numberfour.n4js.N4JS.Expression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }

                                            otherlv_17=(Token)match(input,Semicolon,FOLLOW_82); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_17, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_0_1_1_1_0_3());
                                                  
                                            }
                                            int alt210=2;
                                            int LA210_0 = input.LA(1);

                                            if ( ((LA210_0>=Intersection && LA210_0<=Implements)||(LA210_0>=Promisify && LA210_0<=Abstract)||(LA210_0>=External && LA210_0<=Function)||(LA210_0>=Private && LA210_0<=Delete)||LA210_0==Public||LA210_0==Static||(LA210_0>=Target && LA210_0<=Await)||LA210_0==Class||(LA210_0>=False && LA210_0<=Super)||LA210_0==Union||(LA210_0>=Yield && LA210_0<=This)||(LA210_0>=From && LA210_0<=Void)||(LA210_0>=Get && LA210_0<=Set)||LA210_0==PlusSignPlusSign||LA210_0==HyphenMinusHyphenMinus||LA210_0==SolidusEqualsSign||LA210_0==As||LA210_0==Of||LA210_0==ExclamationMark||LA210_0==LeftParenthesis||LA210_0==PlusSign||LA210_0==HyphenMinus||LA210_0==Solidus||LA210_0==LessThanSign||(LA210_0>=CommercialAt && LA210_0<=LeftSquareBracket)||LA210_0==LeftCurlyBracket||LA210_0==Tilde||LA210_0==RULE_DOUBLE||(LA210_0>=RULE_HEX_INT && LA210_0<=RULE_LEGACY_OCTAL_INT)||LA210_0==RULE_SCIENTIFIC_INT||LA210_0==RULE_IDENTIFIER||LA210_0==RULE_STRING||(LA210_0>=RULE_TEMPLATE_HEAD && LA210_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA210_0==RULE_INT) ) {
                                                alt210=1;
                                            }
                                            switch (alt210) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getUpdateExprExpressionParserRuleCall_3_1_0_0_1_1_1_0_4_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_75);
                                                    lv_updateExpr_18_0=norm3_Expression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"updateExpr",
                                                              		lv_updateExpr_18_0, 
                                                              		"eu.numberfour.n4js.N4JS.Expression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }


                                            }


                                            }
                                            break;
                                        case 2 :
                                            {
                                            {
                                            {
                                            {
                                            lv_forIn_19_0=(Token)match(input,In,FOLLOW_82); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forIn_19_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_1_0_0_1_1_1_1_0_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forIn", true, "in");
                                              	    
                                            }

                                            }


                                            }
                                            int alt211=2;
                                            int LA211_0 = input.LA(1);

                                            if ( ((LA211_0>=Intersection && LA211_0<=Implements)||(LA211_0>=Promisify && LA211_0<=Abstract)||(LA211_0>=External && LA211_0<=Function)||(LA211_0>=Private && LA211_0<=Delete)||LA211_0==Public||LA211_0==Static||(LA211_0>=Target && LA211_0<=Await)||LA211_0==Class||(LA211_0>=False && LA211_0<=Super)||LA211_0==Union||(LA211_0>=Yield && LA211_0<=This)||(LA211_0>=From && LA211_0<=Void)||(LA211_0>=Get && LA211_0<=Set)||LA211_0==PlusSignPlusSign||LA211_0==HyphenMinusHyphenMinus||LA211_0==SolidusEqualsSign||LA211_0==As||LA211_0==Of||LA211_0==ExclamationMark||LA211_0==LeftParenthesis||LA211_0==PlusSign||LA211_0==HyphenMinus||LA211_0==Solidus||LA211_0==LessThanSign||(LA211_0>=CommercialAt && LA211_0<=LeftSquareBracket)||LA211_0==LeftCurlyBracket||LA211_0==Tilde||LA211_0==RULE_DOUBLE||(LA211_0>=RULE_HEX_INT && LA211_0<=RULE_LEGACY_OCTAL_INT)||LA211_0==RULE_SCIENTIFIC_INT||LA211_0==RULE_IDENTIFIER||LA211_0==RULE_STRING||(LA211_0>=RULE_TEMPLATE_HEAD && LA211_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA211_0==RULE_INT) ) {
                                                alt211=1;
                                            }
                                            switch (alt211) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_0_1_1_1_1_1_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_75);
                                                    lv_expression_20_0=norm3_Expression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"expression",
                                                              		lv_expression_20_0, 
                                                              		"eu.numberfour.n4js.N4JS.Expression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }


                                            }


                                            }
                                            break;
                                        case 3 :
                                            {
                                            {
                                            {
                                            {
                                            lv_forOf_21_0=(Token)match(input,Of,FOLLOW_82); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forOf_21_0, grammarAccess.getForStatementAccess().getForOfOfKeyword_3_1_0_0_1_1_1_2_0_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forOf", true, "of");
                                              	    
                                            }

                                            }


                                            }
                                            int alt212=2;
                                            int LA212_0 = input.LA(1);

                                            if ( ((LA212_0>=Intersection && LA212_0<=Implements)||(LA212_0>=Promisify && LA212_0<=Abstract)||(LA212_0>=External && LA212_0<=Function)||(LA212_0>=Private && LA212_0<=Delete)||LA212_0==Public||LA212_0==Static||(LA212_0>=Target && LA212_0<=Await)||LA212_0==Class||(LA212_0>=False && LA212_0<=Super)||LA212_0==Union||(LA212_0>=Yield && LA212_0<=This)||(LA212_0>=From && LA212_0<=Void)||(LA212_0>=Get && LA212_0<=Set)||LA212_0==PlusSignPlusSign||LA212_0==HyphenMinusHyphenMinus||LA212_0==SolidusEqualsSign||LA212_0==As||LA212_0==Of||LA212_0==ExclamationMark||LA212_0==LeftParenthesis||LA212_0==PlusSign||LA212_0==HyphenMinus||LA212_0==Solidus||LA212_0==LessThanSign||(LA212_0>=CommercialAt && LA212_0<=LeftSquareBracket)||LA212_0==LeftCurlyBracket||LA212_0==Tilde||LA212_0==RULE_DOUBLE||(LA212_0>=RULE_HEX_INT && LA212_0<=RULE_LEGACY_OCTAL_INT)||LA212_0==RULE_SCIENTIFIC_INT||LA212_0==RULE_IDENTIFIER||LA212_0==RULE_STRING||(LA212_0>=RULE_TEMPLATE_HEAD && LA212_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA212_0==RULE_INT) ) {
                                                alt212=1;
                                            }
                                            switch (alt212) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0_0_1_1_1_2_1_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_75);
                                                    lv_expression_22_0=norm3_AssignmentExpression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"expression",
                                                              		lv_expression_22_0, 
                                                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }


                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getForStatementAccess().getInitExprExpressionParserRuleCall_3_1_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_87);
                            lv_initExpr_23_0=norm2_Expression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"initExpr",
                                      		lv_initExpr_23_0, 
                                      		"eu.numberfour.n4js.N4JS.Expression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt219=3;
                            switch ( input.LA(1) ) {
                            case Semicolon:
                                {
                                alt219=1;
                                }
                                break;
                            case In:
                                {
                                alt219=2;
                                }
                                break;
                            case Of:
                                {
                                alt219=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 219, 0, input);

                                throw nvae;
                            }

                            switch (alt219) {
                                case 1 :
                                    {
                                    {
                                    otherlv_24=(Token)match(input,Semicolon,FOLLOW_85); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_24, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_1_1_0_0());
                                          
                                    }
                                    int alt215=2;
                                    int LA215_0 = input.LA(1);

                                    if ( ((LA215_0>=Intersection && LA215_0<=Implements)||(LA215_0>=Promisify && LA215_0<=Abstract)||(LA215_0>=External && LA215_0<=Function)||(LA215_0>=Private && LA215_0<=Delete)||LA215_0==Public||LA215_0==Static||(LA215_0>=Target && LA215_0<=Await)||LA215_0==Class||(LA215_0>=False && LA215_0<=Super)||LA215_0==Union||(LA215_0>=Yield && LA215_0<=This)||(LA215_0>=From && LA215_0<=Void)||(LA215_0>=Get && LA215_0<=Set)||LA215_0==PlusSignPlusSign||LA215_0==HyphenMinusHyphenMinus||LA215_0==SolidusEqualsSign||LA215_0==As||LA215_0==Of||LA215_0==ExclamationMark||LA215_0==LeftParenthesis||LA215_0==PlusSign||LA215_0==HyphenMinus||LA215_0==Solidus||LA215_0==LessThanSign||(LA215_0>=CommercialAt && LA215_0<=LeftSquareBracket)||LA215_0==LeftCurlyBracket||LA215_0==Tilde||LA215_0==RULE_DOUBLE||(LA215_0>=RULE_HEX_INT && LA215_0<=RULE_LEGACY_OCTAL_INT)||LA215_0==RULE_SCIENTIFIC_INT||LA215_0==RULE_IDENTIFIER||LA215_0==RULE_STRING||(LA215_0>=RULE_TEMPLATE_HEAD && LA215_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA215_0==RULE_INT) ) {
                                        alt215=1;
                                    }
                                    switch (alt215) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_1_1_0_1_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_86);
                                            lv_expression_25_0=norm3_Expression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_25_0, 
                                                      		"eu.numberfour.n4js.N4JS.Expression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }

                                    otherlv_26=(Token)match(input,Semicolon,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_26, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_1_1_0_2());
                                          
                                    }
                                    int alt216=2;
                                    int LA216_0 = input.LA(1);

                                    if ( ((LA216_0>=Intersection && LA216_0<=Implements)||(LA216_0>=Promisify && LA216_0<=Abstract)||(LA216_0>=External && LA216_0<=Function)||(LA216_0>=Private && LA216_0<=Delete)||LA216_0==Public||LA216_0==Static||(LA216_0>=Target && LA216_0<=Await)||LA216_0==Class||(LA216_0>=False && LA216_0<=Super)||LA216_0==Union||(LA216_0>=Yield && LA216_0<=This)||(LA216_0>=From && LA216_0<=Void)||(LA216_0>=Get && LA216_0<=Set)||LA216_0==PlusSignPlusSign||LA216_0==HyphenMinusHyphenMinus||LA216_0==SolidusEqualsSign||LA216_0==As||LA216_0==Of||LA216_0==ExclamationMark||LA216_0==LeftParenthesis||LA216_0==PlusSign||LA216_0==HyphenMinus||LA216_0==Solidus||LA216_0==LessThanSign||(LA216_0>=CommercialAt && LA216_0<=LeftSquareBracket)||LA216_0==LeftCurlyBracket||LA216_0==Tilde||LA216_0==RULE_DOUBLE||(LA216_0>=RULE_HEX_INT && LA216_0<=RULE_LEGACY_OCTAL_INT)||LA216_0==RULE_SCIENTIFIC_INT||LA216_0==RULE_IDENTIFIER||LA216_0==RULE_STRING||(LA216_0>=RULE_TEMPLATE_HEAD && LA216_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA216_0==RULE_INT) ) {
                                        alt216=1;
                                    }
                                    switch (alt216) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getUpdateExprExpressionParserRuleCall_3_1_0_1_1_0_3_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_75);
                                            lv_updateExpr_27_0=norm3_Expression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"updateExpr",
                                                      		lv_updateExpr_27_0, 
                                                      		"eu.numberfour.n4js.N4JS.Expression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    {
                                    {
                                    {
                                    {
                                    lv_forIn_28_0=(Token)match(input,In,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_forIn_28_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_1_0_1_1_1_0_0());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getForStatementRule());
                                      	        }
                                             		setWithLastConsumed(current, "forIn", true, "in");
                                      	    
                                    }

                                    }


                                    }
                                    int alt217=2;
                                    int LA217_0 = input.LA(1);

                                    if ( ((LA217_0>=Intersection && LA217_0<=Implements)||(LA217_0>=Promisify && LA217_0<=Abstract)||(LA217_0>=External && LA217_0<=Function)||(LA217_0>=Private && LA217_0<=Delete)||LA217_0==Public||LA217_0==Static||(LA217_0>=Target && LA217_0<=Await)||LA217_0==Class||(LA217_0>=False && LA217_0<=Super)||LA217_0==Union||(LA217_0>=Yield && LA217_0<=This)||(LA217_0>=From && LA217_0<=Void)||(LA217_0>=Get && LA217_0<=Set)||LA217_0==PlusSignPlusSign||LA217_0==HyphenMinusHyphenMinus||LA217_0==SolidusEqualsSign||LA217_0==As||LA217_0==Of||LA217_0==ExclamationMark||LA217_0==LeftParenthesis||LA217_0==PlusSign||LA217_0==HyphenMinus||LA217_0==Solidus||LA217_0==LessThanSign||(LA217_0>=CommercialAt && LA217_0<=LeftSquareBracket)||LA217_0==LeftCurlyBracket||LA217_0==Tilde||LA217_0==RULE_DOUBLE||(LA217_0>=RULE_HEX_INT && LA217_0<=RULE_LEGACY_OCTAL_INT)||LA217_0==RULE_SCIENTIFIC_INT||LA217_0==RULE_IDENTIFIER||LA217_0==RULE_STRING||(LA217_0>=RULE_TEMPLATE_HEAD && LA217_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA217_0==RULE_INT) ) {
                                        alt217=1;
                                    }
                                    switch (alt217) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_1_1_1_1_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_75);
                                            lv_expression_29_0=norm3_Expression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_29_0, 
                                                      		"eu.numberfour.n4js.N4JS.Expression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;
                                case 3 :
                                    {
                                    {
                                    {
                                    {
                                    lv_forOf_30_0=(Token)match(input,Of,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_forOf_30_0, grammarAccess.getForStatementAccess().getForOfOfKeyword_3_1_0_1_1_2_0_0());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getForStatementRule());
                                      	        }
                                             		setWithLastConsumed(current, "forOf", true, "of");
                                      	    
                                    }

                                    }


                                    }
                                    int alt218=2;
                                    int LA218_0 = input.LA(1);

                                    if ( ((LA218_0>=Intersection && LA218_0<=Implements)||(LA218_0>=Promisify && LA218_0<=Abstract)||(LA218_0>=External && LA218_0<=Function)||(LA218_0>=Private && LA218_0<=Delete)||LA218_0==Public||LA218_0==Static||(LA218_0>=Target && LA218_0<=Await)||LA218_0==Class||(LA218_0>=False && LA218_0<=Super)||LA218_0==Union||(LA218_0>=Yield && LA218_0<=This)||(LA218_0>=From && LA218_0<=Void)||(LA218_0>=Get && LA218_0<=Set)||LA218_0==PlusSignPlusSign||LA218_0==HyphenMinusHyphenMinus||LA218_0==SolidusEqualsSign||LA218_0==As||LA218_0==Of||LA218_0==ExclamationMark||LA218_0==LeftParenthesis||LA218_0==PlusSign||LA218_0==HyphenMinus||LA218_0==Solidus||LA218_0==LessThanSign||(LA218_0>=CommercialAt && LA218_0<=LeftSquareBracket)||LA218_0==LeftCurlyBracket||LA218_0==Tilde||LA218_0==RULE_DOUBLE||(LA218_0>=RULE_HEX_INT && LA218_0<=RULE_LEGACY_OCTAL_INT)||LA218_0==RULE_SCIENTIFIC_INT||LA218_0==RULE_IDENTIFIER||LA218_0==RULE_STRING||(LA218_0>=RULE_TEMPLATE_HEAD && LA218_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA218_0==RULE_INT) ) {
                                        alt218=1;
                                    }
                                    switch (alt218) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0_1_1_2_1_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_75);
                                            lv_expression_31_0=norm3_AssignmentExpression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_31_0, 
                                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            {
                            {
                            otherlv_32=(Token)match(input,Semicolon,FOLLOW_85); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_32, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_2_0());
                                  
                            }
                            int alt220=2;
                            int LA220_0 = input.LA(1);

                            if ( ((LA220_0>=Intersection && LA220_0<=Implements)||(LA220_0>=Promisify && LA220_0<=Abstract)||(LA220_0>=External && LA220_0<=Function)||(LA220_0>=Private && LA220_0<=Delete)||LA220_0==Public||LA220_0==Static||(LA220_0>=Target && LA220_0<=Await)||LA220_0==Class||(LA220_0>=False && LA220_0<=Super)||LA220_0==Union||(LA220_0>=Yield && LA220_0<=This)||(LA220_0>=From && LA220_0<=Void)||(LA220_0>=Get && LA220_0<=Set)||LA220_0==PlusSignPlusSign||LA220_0==HyphenMinusHyphenMinus||LA220_0==SolidusEqualsSign||LA220_0==As||LA220_0==Of||LA220_0==ExclamationMark||LA220_0==LeftParenthesis||LA220_0==PlusSign||LA220_0==HyphenMinus||LA220_0==Solidus||LA220_0==LessThanSign||(LA220_0>=CommercialAt && LA220_0<=LeftSquareBracket)||LA220_0==LeftCurlyBracket||LA220_0==Tilde||LA220_0==RULE_DOUBLE||(LA220_0>=RULE_HEX_INT && LA220_0<=RULE_LEGACY_OCTAL_INT)||LA220_0==RULE_SCIENTIFIC_INT||LA220_0==RULE_IDENTIFIER||LA220_0==RULE_STRING||(LA220_0>=RULE_TEMPLATE_HEAD && LA220_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA220_0==RULE_INT) ) {
                                alt220=1;
                            }
                            switch (alt220) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_2_1_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_86);
                                    lv_expression_33_0=norm3_Expression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"expression",
                                              		lv_expression_33_0, 
                                              		"eu.numberfour.n4js.N4JS.Expression");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }

                            otherlv_34=(Token)match(input,Semicolon,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_34, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_2_2());
                                  
                            }
                            int alt221=2;
                            int LA221_0 = input.LA(1);

                            if ( ((LA221_0>=Intersection && LA221_0<=Implements)||(LA221_0>=Promisify && LA221_0<=Abstract)||(LA221_0>=External && LA221_0<=Function)||(LA221_0>=Private && LA221_0<=Delete)||LA221_0==Public||LA221_0==Static||(LA221_0>=Target && LA221_0<=Await)||LA221_0==Class||(LA221_0>=False && LA221_0<=Super)||LA221_0==Union||(LA221_0>=Yield && LA221_0<=This)||(LA221_0>=From && LA221_0<=Void)||(LA221_0>=Get && LA221_0<=Set)||LA221_0==PlusSignPlusSign||LA221_0==HyphenMinusHyphenMinus||LA221_0==SolidusEqualsSign||LA221_0==As||LA221_0==Of||LA221_0==ExclamationMark||LA221_0==LeftParenthesis||LA221_0==PlusSign||LA221_0==HyphenMinus||LA221_0==Solidus||LA221_0==LessThanSign||(LA221_0>=CommercialAt && LA221_0<=LeftSquareBracket)||LA221_0==LeftCurlyBracket||LA221_0==Tilde||LA221_0==RULE_DOUBLE||(LA221_0>=RULE_HEX_INT && LA221_0<=RULE_LEGACY_OCTAL_INT)||LA221_0==RULE_SCIENTIFIC_INT||LA221_0==RULE_IDENTIFIER||LA221_0==RULE_STRING||(LA221_0>=RULE_TEMPLATE_HEAD && LA221_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA221_0==RULE_INT) ) {
                                alt221=1;
                            }
                            switch (alt221) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getUpdateExprExpressionParserRuleCall_3_1_0_2_3_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_75);
                                    lv_updateExpr_35_0=norm3_Expression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"updateExpr",
                                              		lv_updateExpr_35_0, 
                                              		"eu.numberfour.n4js.N4JS.Expression");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    otherlv_36=(Token)match(input,RightParenthesis,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_36, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_3_1_1());
                          
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getForStatementAccess().getStatementStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_37_0=norm1_Statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_37_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLetIdentifierRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLetIdentifierRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLetIdentifierRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLetIdentifierRef=ruleLetIdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLetIdentifierRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLetIdentifierRef() throws RecognitionException {
        EObject current = null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getLetIdentifierRefRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLetIdentifierRefAccess().getIdIdentifiableElementCrossReference_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleLetAsIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleLetAsIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLetAsIdentifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLetAsIdentifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLetAsIdentifier=ruleLetAsIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLetAsIdentifier.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleLetAsIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,Let,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getLetAsIdentifierAccess().getLetKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBindingIdentifierAsVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingIdentifierAsVariableDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingIdentifierAsVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingIdentifierAsVariableDeclaration=ruleBindingIdentifierAsVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingIdentifierAsVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingIdentifierAsVariableDeclaration() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getBindingIdentifierAsVariableDeclarationAccess().getNameBindingIdentifierParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getBindingIdentifierAsVariableDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_BindingIdentifierAsVariableDeclaration() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getBindingIdentifierAsVariableDeclarationAccess().getNameBindingIdentifierParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getBindingIdentifierAsVariableDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleContinueStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleContinueStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getContinueStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleContinueStatement=ruleContinueStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleContinueStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleContinueStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getContinueStatementAccess().getContinueStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Continue,FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getContinueStatementAccess().getContinueKeyword_1());
                  
            }
            int alt224=2;
            int LA224_0 = input.LA(1);

            if ( ((LA224_0>=Intersection && LA224_0<=Implements)||(LA224_0>=Promisify && LA224_0<=Abstract)||LA224_0==External||(LA224_0>=Private && LA224_0<=Project)||LA224_0==Public||LA224_0==Static||LA224_0==Target||(LA224_0>=Async && LA224_0<=Await)||LA224_0==Union||(LA224_0>=Yield && LA224_0<=This)||LA224_0==From||LA224_0==Type||(LA224_0>=Get && LA224_0<=Let)||(LA224_0>=Out && LA224_0<=Set)||LA224_0==As||LA224_0==Of||LA224_0==RULE_IDENTIFIER) ) {
                alt224=1;
            }
            switch (alt224) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getContinueStatementRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getContinueStatementAccess().getLabelLabelledStatementCrossReference_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_32);
                    ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getContinueStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ContinueStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getContinueStatementAccess().getContinueStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Continue,FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getContinueStatementAccess().getContinueKeyword_1());
                  
            }
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( ((LA225_0>=Intersection && LA225_0<=Implements)||(LA225_0>=Promisify && LA225_0<=Abstract)||LA225_0==External||(LA225_0>=Private && LA225_0<=Project)||LA225_0==Public||LA225_0==Static||LA225_0==Target||(LA225_0>=Async && LA225_0<=Await)||LA225_0==Union||LA225_0==This||LA225_0==From||LA225_0==Type||(LA225_0>=Get && LA225_0<=Let)||(LA225_0>=Out && LA225_0<=Set)||LA225_0==As||LA225_0==Of||LA225_0==RULE_IDENTIFIER) ) {
                alt225=1;
            }
            switch (alt225) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getContinueStatementRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getContinueStatementAccess().getLabelLabelledStatementCrossReference_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_32);
                    norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getContinueStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBreakStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBreakStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBreakStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBreakStatement=ruleBreakStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBreakStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBreakStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBreakStatementAccess().getBreakStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Break,FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getBreakStatementAccess().getBreakKeyword_1());
                  
            }
            int alt226=2;
            int LA226_0 = input.LA(1);

            if ( ((LA226_0>=Intersection && LA226_0<=Implements)||(LA226_0>=Promisify && LA226_0<=Abstract)||LA226_0==External||(LA226_0>=Private && LA226_0<=Project)||LA226_0==Public||LA226_0==Static||LA226_0==Target||(LA226_0>=Async && LA226_0<=Await)||LA226_0==Union||(LA226_0>=Yield && LA226_0<=This)||LA226_0==From||LA226_0==Type||(LA226_0>=Get && LA226_0<=Let)||(LA226_0>=Out && LA226_0<=Set)||LA226_0==As||LA226_0==Of||LA226_0==RULE_IDENTIFIER) ) {
                alt226=1;
            }
            switch (alt226) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getBreakStatementRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBreakStatementAccess().getLabelLabelledStatementCrossReference_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_32);
                    ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBreakStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BreakStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBreakStatementAccess().getBreakStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Break,FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getBreakStatementAccess().getBreakKeyword_1());
                  
            }
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( ((LA227_0>=Intersection && LA227_0<=Implements)||(LA227_0>=Promisify && LA227_0<=Abstract)||LA227_0==External||(LA227_0>=Private && LA227_0<=Project)||LA227_0==Public||LA227_0==Static||LA227_0==Target||(LA227_0>=Async && LA227_0<=Await)||LA227_0==Union||LA227_0==This||LA227_0==From||LA227_0==Type||(LA227_0>=Get && LA227_0<=Let)||(LA227_0>=Out && LA227_0<=Set)||LA227_0==As||LA227_0==Of||LA227_0==RULE_IDENTIFIER) ) {
                alt227=1;
            }
            switch (alt227) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getBreakStatementRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBreakStatementAccess().getLabelLabelledStatementCrossReference_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_32);
                    norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBreakStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleReturnStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturnStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReturnStatement=ruleReturnStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturnStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleReturnStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getReturnStatementAccess().getReturnStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Return,FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getReturnStatementAccess().getReturnKeyword_1());
                  
            }
            int alt228=2;
            int LA228_0 = input.LA(1);

            if ( ((LA228_0>=Intersection && LA228_0<=Implements)||(LA228_0>=Promisify && LA228_0<=Abstract)||(LA228_0>=External && LA228_0<=Function)||(LA228_0>=Private && LA228_0<=Delete)||LA228_0==Public||LA228_0==Static||(LA228_0>=Target && LA228_0<=Await)||LA228_0==Class||(LA228_0>=False && LA228_0<=Super)||LA228_0==Union||(LA228_0>=Yield && LA228_0<=This)||(LA228_0>=From && LA228_0<=Void)||(LA228_0>=Get && LA228_0<=Set)||LA228_0==PlusSignPlusSign||LA228_0==HyphenMinusHyphenMinus||LA228_0==SolidusEqualsSign||LA228_0==As||LA228_0==Of||LA228_0==ExclamationMark||LA228_0==LeftParenthesis||LA228_0==PlusSign||LA228_0==HyphenMinus||LA228_0==Solidus||LA228_0==LessThanSign||(LA228_0>=CommercialAt && LA228_0<=LeftSquareBracket)||LA228_0==LeftCurlyBracket||LA228_0==Tilde||LA228_0==RULE_DOUBLE||(LA228_0>=RULE_HEX_INT && LA228_0<=RULE_LEGACY_OCTAL_INT)||LA228_0==RULE_SCIENTIFIC_INT||LA228_0==RULE_IDENTIFIER||LA228_0==RULE_STRING||(LA228_0>=RULE_TEMPLATE_HEAD && LA228_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA228_0==RULE_INT) ) {
                alt228=1;
            }
            switch (alt228) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_32);
                    lv_expression_2_0=norm1_Expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReturnStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"eu.numberfour.n4js.N4JS.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getReturnStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ReturnStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getReturnStatementAccess().getReturnStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Return,FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getReturnStatementAccess().getReturnKeyword_1());
                  
            }
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( ((LA229_0>=Intersection && LA229_0<=Implements)||(LA229_0>=Promisify && LA229_0<=Abstract)||(LA229_0>=External && LA229_0<=Function)||(LA229_0>=Private && LA229_0<=Delete)||LA229_0==Public||LA229_0==Static||(LA229_0>=Target && LA229_0<=Await)||LA229_0==Class||(LA229_0>=False && LA229_0<=Super)||LA229_0==Union||(LA229_0>=Yield && LA229_0<=This)||(LA229_0>=From && LA229_0<=Void)||(LA229_0>=Get && LA229_0<=Set)||LA229_0==PlusSignPlusSign||LA229_0==HyphenMinusHyphenMinus||LA229_0==SolidusEqualsSign||LA229_0==As||LA229_0==Of||LA229_0==ExclamationMark||LA229_0==LeftParenthesis||LA229_0==PlusSign||LA229_0==HyphenMinus||LA229_0==Solidus||LA229_0==LessThanSign||(LA229_0>=CommercialAt && LA229_0<=LeftSquareBracket)||LA229_0==LeftCurlyBracket||LA229_0==Tilde||LA229_0==RULE_DOUBLE||(LA229_0>=RULE_HEX_INT && LA229_0<=RULE_LEGACY_OCTAL_INT)||LA229_0==RULE_SCIENTIFIC_INT||LA229_0==RULE_IDENTIFIER||LA229_0==RULE_STRING||(LA229_0>=RULE_TEMPLATE_HEAD && LA229_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA229_0==RULE_INT) ) {
                alt229=1;
            }
            switch (alt229) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_32);
                    lv_expression_2_0=norm3_Expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReturnStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"eu.numberfour.n4js.N4JS.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getReturnStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleWithStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWithStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWithStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWithStatement=ruleWithStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWithStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleWithStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expression_2_0 = null;

        EObject lv_statement_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,With,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWithStatementAccess().getWithKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWithStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWithStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_2_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWithStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getWithStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWithStatementAccess().getStatementStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_4_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWithStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_4_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_WithStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expression_2_0 = null;

        EObject lv_statement_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,With,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWithStatementAccess().getWithKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWithStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWithStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_2_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWithStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getWithStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWithStatementAccess().getStatementStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_4_0=norm1_Statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWithStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_4_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleSwitchStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSwitchStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSwitchStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSwitchStatement=ruleSwitchStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSwitchStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleSwitchStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_8=null;
        EObject lv_expression_2_0 = null;

        EObject lv_cases_5_0 = null;

        EObject lv_cases_6_0 = null;

        EObject lv_cases_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Switch,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_2_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,LeftCurlyBracket,FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4());
                  
            }
            loop230:
            do {
                int alt230=2;
                int LA230_0 = input.LA(1);

                if ( (LA230_0==Case) ) {
                    alt230=1;
                }


                switch (alt230) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getCasesCaseClauseParserRuleCall_5_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_cases_5_0=ruleCaseClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"cases",
            	              		lv_cases_5_0, 
            	              		"eu.numberfour.n4js.N4JS.CaseClause");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop230;
                }
            } while (true);
            int alt232=2;
            int LA232_0 = input.LA(1);

            if ( (LA232_0==Default) ) {
                alt232=1;
            }
            switch (alt232) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getCasesDefaultClauseParserRuleCall_6_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_91);
                    lv_cases_6_0=ruleDefaultClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
                      	        }
                             		add(
                             			current, 
                             			"cases",
                              		lv_cases_6_0, 
                              		"eu.numberfour.n4js.N4JS.DefaultClause");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop231:
                    do {
                        int alt231=2;
                        int LA231_0 = input.LA(1);

                        if ( (LA231_0==Case) ) {
                            alt231=1;
                        }


                        switch (alt231) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getCasesCaseClauseParserRuleCall_6_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_91);
                    	    lv_cases_7_0=ruleCaseClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"cases",
                    	              		lv_cases_7_0, 
                    	              		"eu.numberfour.n4js.N4JS.CaseClause");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop231;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_7());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_SwitchStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_8=null;
        EObject lv_expression_2_0 = null;

        EObject lv_cases_5_0 = null;

        EObject lv_cases_6_0 = null;

        EObject lv_cases_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Switch,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_2_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,LeftCurlyBracket,FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4());
                  
            }
            loop233:
            do {
                int alt233=2;
                int LA233_0 = input.LA(1);

                if ( (LA233_0==Case) ) {
                    alt233=1;
                }


                switch (alt233) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getCasesCaseClauseParserRuleCall_5_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_cases_5_0=norm1_CaseClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"cases",
            	              		lv_cases_5_0, 
            	              		"eu.numberfour.n4js.N4JS.CaseClause");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop233;
                }
            } while (true);
            int alt235=2;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==Default) ) {
                alt235=1;
            }
            switch (alt235) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getCasesDefaultClauseParserRuleCall_6_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_91);
                    lv_cases_6_0=norm1_DefaultClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
                      	        }
                             		add(
                             			current, 
                             			"cases",
                              		lv_cases_6_0, 
                              		"eu.numberfour.n4js.N4JS.DefaultClause");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop234:
                    do {
                        int alt234=2;
                        int LA234_0 = input.LA(1);

                        if ( (LA234_0==Case) ) {
                            alt234=1;
                        }


                        switch (alt234) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getCasesCaseClauseParserRuleCall_6_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_91);
                    	    lv_cases_7_0=norm1_CaseClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"cases",
                    	              		lv_cases_7_0, 
                    	              		"eu.numberfour.n4js.N4JS.CaseClause");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop234;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_7());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleCaseClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCaseClause = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCaseClause=ruleCaseClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCaseClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleCaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;

        EObject lv_statements_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Case,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getCaseClauseAccess().getCaseKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCaseClauseAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_92);
            lv_expression_1_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCaseClauseRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,Colon,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getCaseClauseAccess().getColonKeyword_2());
                  
            }
            loop236:
            do {
                int alt236=2;
                int LA236_0 = input.LA(1);

                if ( ((LA236_0>=Intersection && LA236_0<=Implements)||(LA236_0>=Promisify && LA236_0<=Function)||(LA236_0>=Private && LA236_0<=Delete)||(LA236_0>=Public && LA236_0<=Break)||(LA236_0>=Class && LA236_0<=This)||(LA236_0>=From && LA236_0<=With)||(LA236_0>=For && LA236_0<=Var)||LA236_0==PlusSignPlusSign||LA236_0==HyphenMinusHyphenMinus||LA236_0==SolidusEqualsSign||(LA236_0>=As && LA236_0<=If)||LA236_0==Of||LA236_0==ExclamationMark||LA236_0==LeftParenthesis||LA236_0==PlusSign||LA236_0==HyphenMinus||LA236_0==Solidus||(LA236_0>=Semicolon && LA236_0<=LessThanSign)||(LA236_0>=CommercialAt && LA236_0<=LeftSquareBracket)||LA236_0==LeftCurlyBracket||LA236_0==Tilde||LA236_0==RULE_DOUBLE||(LA236_0>=RULE_HEX_INT && LA236_0<=RULE_LEGACY_OCTAL_INT)||LA236_0==RULE_SCIENTIFIC_INT||LA236_0==RULE_IDENTIFIER||LA236_0==RULE_STRING||(LA236_0>=RULE_TEMPLATE_HEAD && LA236_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA236_0==RULE_INT) ) {
                    alt236=1;
                }


                switch (alt236) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getCaseClauseAccess().getStatementsStatementParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_statements_3_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getCaseClauseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_3_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop236;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_CaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;

        EObject lv_statements_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Case,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getCaseClauseAccess().getCaseKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCaseClauseAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_92);
            lv_expression_1_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCaseClauseRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,Colon,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getCaseClauseAccess().getColonKeyword_2());
                  
            }
            loop237:
            do {
                int alt237=2;
                int LA237_0 = input.LA(1);

                if ( ((LA237_0>=Intersection && LA237_0<=Implements)||(LA237_0>=Promisify && LA237_0<=Function)||(LA237_0>=Private && LA237_0<=Delete)||(LA237_0>=Public && LA237_0<=Break)||(LA237_0>=Class && LA237_0<=This)||(LA237_0>=From && LA237_0<=With)||(LA237_0>=For && LA237_0<=Var)||LA237_0==PlusSignPlusSign||LA237_0==HyphenMinusHyphenMinus||LA237_0==SolidusEqualsSign||(LA237_0>=As && LA237_0<=If)||LA237_0==Of||LA237_0==ExclamationMark||LA237_0==LeftParenthesis||LA237_0==PlusSign||LA237_0==HyphenMinus||LA237_0==Solidus||(LA237_0>=Semicolon && LA237_0<=LessThanSign)||(LA237_0>=CommercialAt && LA237_0<=LeftSquareBracket)||LA237_0==LeftCurlyBracket||LA237_0==Tilde||LA237_0==RULE_DOUBLE||(LA237_0>=RULE_HEX_INT && LA237_0<=RULE_LEGACY_OCTAL_INT)||LA237_0==RULE_SCIENTIFIC_INT||LA237_0==RULE_IDENTIFIER||LA237_0==RULE_STRING||(LA237_0>=RULE_TEMPLATE_HEAD && LA237_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA237_0==RULE_INT) ) {
                    alt237=1;
                }


                switch (alt237) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getCaseClauseAccess().getStatementsStatementParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_statements_3_0=norm1_Statement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getCaseClauseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_3_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop237;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleDefaultClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefaultClause = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefaultClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefaultClause=ruleDefaultClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefaultClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleDefaultClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_statements_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getDefaultClauseAccess().getDefaultClauseAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Default,FOLLOW_92); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDefaultClauseAccess().getDefaultKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,Colon,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDefaultClauseAccess().getColonKeyword_2());
                  
            }
            loop238:
            do {
                int alt238=2;
                int LA238_0 = input.LA(1);

                if ( ((LA238_0>=Intersection && LA238_0<=Implements)||(LA238_0>=Promisify && LA238_0<=Function)||(LA238_0>=Private && LA238_0<=Delete)||(LA238_0>=Public && LA238_0<=Break)||(LA238_0>=Class && LA238_0<=This)||(LA238_0>=From && LA238_0<=With)||(LA238_0>=For && LA238_0<=Var)||LA238_0==PlusSignPlusSign||LA238_0==HyphenMinusHyphenMinus||LA238_0==SolidusEqualsSign||(LA238_0>=As && LA238_0<=If)||LA238_0==Of||LA238_0==ExclamationMark||LA238_0==LeftParenthesis||LA238_0==PlusSign||LA238_0==HyphenMinus||LA238_0==Solidus||(LA238_0>=Semicolon && LA238_0<=LessThanSign)||(LA238_0>=CommercialAt && LA238_0<=LeftSquareBracket)||LA238_0==LeftCurlyBracket||LA238_0==Tilde||LA238_0==RULE_DOUBLE||(LA238_0>=RULE_HEX_INT && LA238_0<=RULE_LEGACY_OCTAL_INT)||LA238_0==RULE_SCIENTIFIC_INT||LA238_0==RULE_IDENTIFIER||LA238_0==RULE_STRING||(LA238_0>=RULE_TEMPLATE_HEAD && LA238_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA238_0==RULE_INT) ) {
                    alt238=1;
                }


                switch (alt238) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDefaultClauseAccess().getStatementsStatementParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_statements_3_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDefaultClauseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_3_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop238;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_DefaultClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_statements_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getDefaultClauseAccess().getDefaultClauseAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Default,FOLLOW_92); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDefaultClauseAccess().getDefaultKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,Colon,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDefaultClauseAccess().getColonKeyword_2());
                  
            }
            loop239:
            do {
                int alt239=2;
                int LA239_0 = input.LA(1);

                if ( ((LA239_0>=Intersection && LA239_0<=Implements)||(LA239_0>=Promisify && LA239_0<=Function)||(LA239_0>=Private && LA239_0<=Delete)||(LA239_0>=Public && LA239_0<=Break)||(LA239_0>=Class && LA239_0<=This)||(LA239_0>=From && LA239_0<=With)||(LA239_0>=For && LA239_0<=Var)||LA239_0==PlusSignPlusSign||LA239_0==HyphenMinusHyphenMinus||LA239_0==SolidusEqualsSign||(LA239_0>=As && LA239_0<=If)||LA239_0==Of||LA239_0==ExclamationMark||LA239_0==LeftParenthesis||LA239_0==PlusSign||LA239_0==HyphenMinus||LA239_0==Solidus||(LA239_0>=Semicolon && LA239_0<=LessThanSign)||(LA239_0>=CommercialAt && LA239_0<=LeftSquareBracket)||LA239_0==LeftCurlyBracket||LA239_0==Tilde||LA239_0==RULE_DOUBLE||(LA239_0>=RULE_HEX_INT && LA239_0<=RULE_LEGACY_OCTAL_INT)||LA239_0==RULE_SCIENTIFIC_INT||LA239_0==RULE_IDENTIFIER||LA239_0==RULE_STRING||(LA239_0>=RULE_TEMPLATE_HEAD && LA239_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA239_0==RULE_INT) ) {
                    alt239=1;
                }


                switch (alt239) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDefaultClauseAccess().getStatementsStatementParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_statements_3_0=norm1_Statement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDefaultClauseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_3_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop239;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLabelledStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabelledStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabelledStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLabelledStatement=ruleLabelledStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabelledStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLabelledStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_statement_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLabelledStatementAccess().getNameBindingIdentifierParserRuleCall_0_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_92);
            lv_name_0_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLabelledStatementRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,Colon,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getLabelledStatementAccess().getColonKeyword_0_0_1());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLabelledStatementAccess().getStatementStatementParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_2_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLabelledStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_2_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_LabelledStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_statement_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLabelledStatementAccess().getNameBindingIdentifierParserRuleCall_0_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_92);
            lv_name_0_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLabelledStatementRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,Colon,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getLabelledStatementAccess().getColonKeyword_0_0_1());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLabelledStatementAccess().getStatementStatementParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_2_0=norm1_Statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLabelledStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_2_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleThrowStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThrowStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThrowStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThrowStatement=ruleThrowStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThrowStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleThrowStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Throw,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getThrowStatementAccess().getThrowKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getThrowStatementAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_32);
            lv_expression_1_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getThrowStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getThrowStatementAccess().getSemiParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ThrowStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Throw,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getThrowStatementAccess().getThrowKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getThrowStatementAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_32);
            lv_expression_1_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getThrowStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getThrowStatementAccess().getSemiParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTryStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTryStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTryStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTryStatement=ruleTryStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTryStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTryStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_block_1_0 = null;

        EObject lv_catch_2_0 = null;

        EObject lv_finally_3_0 = null;

        EObject lv_finally_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Try,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTryStatementAccess().getTryKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTryStatementAccess().getBlockBlockParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_93);
            lv_block_1_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
              	        }
                     		set(
                     			current, 
                     			"block",
                      		lv_block_1_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt241=2;
            int LA241_0 = input.LA(1);

            if ( (LA241_0==Catch) ) {
                alt241=1;
            }
            else if ( (LA241_0==Finally) ) {
                alt241=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 241, 0, input);

                throw nvae;
            }
            switch (alt241) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTryStatementAccess().getCatchCatchBlockParserRuleCall_2_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_94);
                    lv_catch_2_0=ruleCatchBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"catch",
                              		lv_catch_2_0, 
                              		"eu.numberfour.n4js.N4JS.CatchBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt240=2;
                    int LA240_0 = input.LA(1);

                    if ( (LA240_0==Finally) ) {
                        alt240=1;
                    }
                    switch (alt240) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTryStatementAccess().getFinallyFinallyBlockParserRuleCall_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_finally_3_0=ruleFinallyBlock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"finally",
                                      		lv_finally_3_0, 
                                      		"eu.numberfour.n4js.N4JS.FinallyBlock");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTryStatementAccess().getFinallyFinallyBlockParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_finally_4_0=ruleFinallyBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"finally",
                              		lv_finally_4_0, 
                              		"eu.numberfour.n4js.N4JS.FinallyBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_TryStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_block_1_0 = null;

        EObject lv_catch_2_0 = null;

        EObject lv_finally_3_0 = null;

        EObject lv_finally_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Try,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTryStatementAccess().getTryKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTryStatementAccess().getBlockBlockParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_93);
            lv_block_1_0=norm1_Block();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
              	        }
                     		set(
                     			current, 
                     			"block",
                      		lv_block_1_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt243=2;
            int LA243_0 = input.LA(1);

            if ( (LA243_0==Catch) ) {
                alt243=1;
            }
            else if ( (LA243_0==Finally) ) {
                alt243=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 243, 0, input);

                throw nvae;
            }
            switch (alt243) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTryStatementAccess().getCatchCatchBlockParserRuleCall_2_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_94);
                    lv_catch_2_0=norm1_CatchBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"catch",
                              		lv_catch_2_0, 
                              		"eu.numberfour.n4js.N4JS.CatchBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt242=2;
                    int LA242_0 = input.LA(1);

                    if ( (LA242_0==Finally) ) {
                        alt242=1;
                    }
                    switch (alt242) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTryStatementAccess().getFinallyFinallyBlockParserRuleCall_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_finally_3_0=norm1_FinallyBlock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"finally",
                                      		lv_finally_3_0, 
                                      		"eu.numberfour.n4js.N4JS.FinallyBlock");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTryStatementAccess().getFinallyFinallyBlockParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_finally_4_0=norm1_FinallyBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"finally",
                              		lv_finally_4_0, 
                              		"eu.numberfour.n4js.N4JS.FinallyBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleCatchBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCatchBlock = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCatchBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCatchBlock=ruleCatchBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCatchBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleCatchBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_catchVariable_3_0 = null;

        EObject lv_block_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getCatchBlockAccess().getCatchBlockAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Catch,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCatchBlockAccess().getCatchKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getCatchBlockAccess().getLeftParenthesisKeyword_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCatchBlockAccess().getCatchVariableCatchVariableParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_catchVariable_3_0=ruleCatchVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCatchBlockRule());
              	        }
                     		set(
                     			current, 
                     			"catchVariable",
                      		lv_catchVariable_3_0, 
                      		"eu.numberfour.n4js.N4JS.CatchVariable");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getCatchBlockAccess().getRightParenthesisKeyword_4());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCatchBlockAccess().getBlockBlockParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_block_5_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCatchBlockRule());
              	        }
                     		set(
                     			current, 
                     			"block",
                      		lv_block_5_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_CatchBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_catchVariable_3_0 = null;

        EObject lv_block_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getCatchBlockAccess().getCatchBlockAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Catch,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCatchBlockAccess().getCatchKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getCatchBlockAccess().getLeftParenthesisKeyword_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCatchBlockAccess().getCatchVariableCatchVariableParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_catchVariable_3_0=norm1_CatchVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCatchBlockRule());
              	        }
                     		set(
                     			current, 
                     			"catchVariable",
                      		lv_catchVariable_3_0, 
                      		"eu.numberfour.n4js.N4JS.CatchVariable");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getCatchBlockAccess().getRightParenthesisKeyword_4());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCatchBlockAccess().getBlockBlockParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_block_5_0=norm1_Block();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCatchBlockRule());
              	        }
                     		set(
                     			current, 
                     			"block",
                      		lv_block_5_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleCatchVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCatchVariable = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCatchVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCatchVariable=ruleCatchVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCatchVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleCatchVariable() throws RecognitionException {
        EObject current = null;

        EObject lv_bindingPattern_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_ColonSepTypeRef_2 = null;

        EObject this_BogusTypeRefFragment_3 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;


         enterRule(); 
            
        try {
            {
            int alt245=3;
            alt245 = dfa245.predict(input);
            switch (alt245) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCatchVariableAccess().getBindingPatternBindingPatternParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_bindingPattern_0_0=ruleBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCatchVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"bindingPattern",
                              		lv_bindingPattern_0_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCatchVariableAccess().getNameBindingIdentifierParserRuleCall_1_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_name_1_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCatchVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getCatchVariableRule());
                      		}
                              newCompositeNode(grammarAccess.getCatchVariableAccess().getColonSepTypeRefParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ColonSepTypeRef_2=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    int alt244=2;
                    alt244 = dfa244.predict(input);
                    switch (alt244) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getCatchVariableRule());
                              		}
                                      newCompositeNode(grammarAccess.getCatchVariableAccess().getBogusTypeRefFragmentParserRuleCall_2_0()); 
                                  
                            }
                            pushFollow(FOLLOW_5);
                            this_BogusTypeRefFragment_3=ruleBogusTypeRefFragment(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_BogusTypeRefFragment_3;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCatchVariableAccess().getNameBindingIdentifierParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_4_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCatchVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_CatchVariable() throws RecognitionException {
        EObject current = null;

        EObject lv_bindingPattern_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_ColonSepTypeRef_2 = null;

        EObject this_BogusTypeRefFragment_3 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;


         enterRule(); 
            
        try {
            {
            int alt247=3;
            alt247 = dfa247.predict(input);
            switch (alt247) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCatchVariableAccess().getBindingPatternBindingPatternParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_bindingPattern_0_0=norm1_BindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCatchVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"bindingPattern",
                              		lv_bindingPattern_0_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCatchVariableAccess().getNameBindingIdentifierParserRuleCall_1_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_name_1_0=norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCatchVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getCatchVariableRule());
                      		}
                              newCompositeNode(grammarAccess.getCatchVariableAccess().getColonSepTypeRefParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ColonSepTypeRef_2=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    int alt246=2;
                    alt246 = dfa246.predict(input);
                    switch (alt246) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getCatchVariableRule());
                              		}
                                      newCompositeNode(grammarAccess.getCatchVariableAccess().getBogusTypeRefFragmentParserRuleCall_2_0()); 
                                  
                            }
                            pushFollow(FOLLOW_5);
                            this_BogusTypeRefFragment_3=ruleBogusTypeRefFragment(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_BogusTypeRefFragment_3;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCatchVariableAccess().getNameBindingIdentifierParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_4_0=norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCatchVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleFinallyBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFinallyBlock = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFinallyBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFinallyBlock=ruleFinallyBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFinallyBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFinallyBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_block_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFinallyBlockAccess().getFinallyBlockAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Finally,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getFinallyBlockAccess().getFinallyKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFinallyBlockAccess().getBlockBlockParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_block_2_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFinallyBlockRule());
              	        }
                     		set(
                     			current, 
                     			"block",
                      		lv_block_2_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_FinallyBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_block_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFinallyBlockAccess().getFinallyBlockAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Finally,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getFinallyBlockAccess().getFinallyKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFinallyBlockAccess().getBlockBlockParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_block_2_0=norm1_Block();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFinallyBlockRule());
              	        }
                     		set(
                     			current, 
                     			"block",
                      		lv_block_2_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleDebuggerStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDebuggerStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDebuggerStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDebuggerStatement=ruleDebuggerStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDebuggerStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleDebuggerStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getDebuggerStatementAccess().getDebuggerStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Debugger,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDebuggerStatementAccess().getDebuggerKeyword_1());
                  
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getDebuggerStatementAccess().getSemiParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleParenExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParenExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParenExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParenExpression=ruleParenExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParenExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleParenExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getParenExpressionAccess().getLeftParenthesisKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParenExpressionAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_1_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParenExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getParenExpressionAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ParenExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getParenExpressionAccess().getLeftParenthesisKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParenExpressionAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_1_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParenExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getParenExpressionAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleIdentifierRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentifierRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentifierRef=ruleIdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifierRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIdentifierRef() throws RecognitionException {
        EObject current = null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getIdentifierRefRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIdentifierRefAccess().getIdIdentifiableElementCrossReference_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_IdentifierRef() throws RecognitionException {
        EObject current = null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getIdentifierRefRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIdentifierRefAccess().getIdIdentifiableElementCrossReference_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleSuperLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuperLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuperLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSuperLiteral=ruleSuperLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuperLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleSuperLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSuperLiteralAccess().getSuperLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Super,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSuperLiteralAccess().getSuperKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleThisLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThisLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThisLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThisLiteral=ruleThisLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThisLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleThisLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getThisLiteralAccess().getThisLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,This_1,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getThisLiteralAccess().getThisKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrayLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayLiteral=ruleArrayLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrayLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token lv_trailingComma_7_0=null;
        Token otherlv_9=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;

        EObject lv_elements_6_0 = null;

        EObject lv_elements_8_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayLiteralAccess().getArrayLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_96); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrayLiteralAccess().getLeftSquareBracketKeyword_1());
                  
            }
            loop248:
            do {
                int alt248=2;
                int LA248_0 = input.LA(1);

                if ( (LA248_0==Comma) ) {
                    alt248=1;
                }


                switch (alt248) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayPaddingParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_96);
            	    lv_elements_2_0=ruleArrayPadding();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"elements",
            	              		lv_elements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.ArrayPadding");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop248;
                }
            } while (true);
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( ((LA253_0>=Intersection && LA253_0<=Implements)||(LA253_0>=Promisify && LA253_0<=Abstract)||(LA253_0>=External && LA253_0<=Function)||(LA253_0>=Private && LA253_0<=Delete)||LA253_0==Public||LA253_0==Static||(LA253_0>=Target && LA253_0<=Await)||LA253_0==Class||(LA253_0>=False && LA253_0<=Super)||LA253_0==Union||(LA253_0>=Yield && LA253_0<=This)||(LA253_0>=From && LA253_0<=Void)||LA253_0==FullStopFullStopFullStop||(LA253_0>=Get && LA253_0<=Set)||LA253_0==PlusSignPlusSign||LA253_0==HyphenMinusHyphenMinus||LA253_0==SolidusEqualsSign||LA253_0==As||LA253_0==Of||LA253_0==ExclamationMark||LA253_0==LeftParenthesis||LA253_0==PlusSign||LA253_0==HyphenMinus||LA253_0==Solidus||LA253_0==LessThanSign||(LA253_0>=CommercialAt && LA253_0<=LeftSquareBracket)||LA253_0==LeftCurlyBracket||LA253_0==Tilde||LA253_0==RULE_DOUBLE||(LA253_0>=RULE_HEX_INT && LA253_0<=RULE_LEGACY_OCTAL_INT)||LA253_0==RULE_SCIENTIFIC_INT||LA253_0==RULE_IDENTIFIER||LA253_0==RULE_STRING||(LA253_0>=RULE_TEMPLATE_HEAD && LA253_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA253_0==RULE_INT) ) {
                alt253=1;
            }
            switch (alt253) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayElementParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_97);
                    lv_elements_3_0=ruleArrayElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"eu.numberfour.n4js.N4JS.ArrayElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop250:
                    do {
                        int alt250=2;
                        alt250 = dfa250.predict(input);
                        switch (alt250) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_98); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getArrayLiteralAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    loop249:
                    	    do {
                    	        int alt249=2;
                    	        int LA249_0 = input.LA(1);

                    	        if ( (LA249_0==Comma) ) {
                    	            alt249=1;
                    	        }


                    	        switch (alt249) {
                    	    	case 1 :
                    	    	    {
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayPaddingParserRuleCall_3_1_1_0()); 
                    	    	      	    
                    	    	    }
                    	    	    pushFollow(FOLLOW_98);
                    	    	    lv_elements_5_0=ruleArrayPadding();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      	        if (current==null) {
                    	    	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                    	    	      	        }
                    	    	             		add(
                    	    	             			current, 
                    	    	             			"elements",
                    	    	              		lv_elements_5_0, 
                    	    	              		"eu.numberfour.n4js.N4JS.ArrayPadding");
                    	    	      	        afterParserOrEnumRuleCall();
                    	    	      	    
                    	    	    }

                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop249;
                    	        }
                    	    } while (true);
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayElementParserRuleCall_3_1_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    lv_elements_6_0=ruleArrayElement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_6_0, 
                    	              		"eu.numberfour.n4js.N4JS.ArrayElement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop250;
                        }
                    } while (true);
                    int alt252=2;
                    int LA252_0 = input.LA(1);

                    if ( (LA252_0==Comma) ) {
                        alt252=1;
                    }
                    switch (alt252) {
                        case 1 :
                            {
                            {
                            {
                            lv_trailingComma_7_0=(Token)match(input,Comma,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_trailingComma_7_0, grammarAccess.getArrayLiteralAccess().getTrailingCommaCommaKeyword_3_2_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getArrayLiteralRule());
                              	        }
                                     		setWithLastConsumed(current, "trailingComma", true, ",");
                              	    
                            }

                            }


                            }
                            loop251:
                            do {
                                int alt251=2;
                                int LA251_0 = input.LA(1);

                                if ( (LA251_0==Comma) ) {
                                    alt251=1;
                                }


                                switch (alt251) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayPaddingParserRuleCall_3_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_97);
                            	    lv_elements_8_0=ruleArrayPadding();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"elements",
                            	              		lv_elements_8_0, 
                            	              		"eu.numberfour.n4js.N4JS.ArrayPadding");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop251;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getArrayLiteralAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ArrayLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token lv_trailingComma_7_0=null;
        Token otherlv_9=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;

        EObject lv_elements_6_0 = null;

        EObject lv_elements_8_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayLiteralAccess().getArrayLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_96); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrayLiteralAccess().getLeftSquareBracketKeyword_1());
                  
            }
            loop254:
            do {
                int alt254=2;
                int LA254_0 = input.LA(1);

                if ( (LA254_0==Comma) ) {
                    alt254=1;
                }


                switch (alt254) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayPaddingParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_96);
            	    lv_elements_2_0=ruleArrayPadding();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"elements",
            	              		lv_elements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.ArrayPadding");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop254;
                }
            } while (true);
            int alt259=2;
            int LA259_0 = input.LA(1);

            if ( ((LA259_0>=Intersection && LA259_0<=Implements)||(LA259_0>=Promisify && LA259_0<=Abstract)||(LA259_0>=External && LA259_0<=Function)||(LA259_0>=Private && LA259_0<=Delete)||LA259_0==Public||LA259_0==Static||(LA259_0>=Target && LA259_0<=Await)||LA259_0==Class||(LA259_0>=False && LA259_0<=Super)||LA259_0==Union||(LA259_0>=Yield && LA259_0<=This)||(LA259_0>=From && LA259_0<=Void)||LA259_0==FullStopFullStopFullStop||(LA259_0>=Get && LA259_0<=Set)||LA259_0==PlusSignPlusSign||LA259_0==HyphenMinusHyphenMinus||LA259_0==SolidusEqualsSign||LA259_0==As||LA259_0==Of||LA259_0==ExclamationMark||LA259_0==LeftParenthesis||LA259_0==PlusSign||LA259_0==HyphenMinus||LA259_0==Solidus||LA259_0==LessThanSign||(LA259_0>=CommercialAt && LA259_0<=LeftSquareBracket)||LA259_0==LeftCurlyBracket||LA259_0==Tilde||LA259_0==RULE_DOUBLE||(LA259_0>=RULE_HEX_INT && LA259_0<=RULE_LEGACY_OCTAL_INT)||LA259_0==RULE_SCIENTIFIC_INT||LA259_0==RULE_IDENTIFIER||LA259_0==RULE_STRING||(LA259_0>=RULE_TEMPLATE_HEAD && LA259_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA259_0==RULE_INT) ) {
                alt259=1;
            }
            switch (alt259) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayElementParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_97);
                    lv_elements_3_0=norm1_ArrayElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"eu.numberfour.n4js.N4JS.ArrayElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop256:
                    do {
                        int alt256=2;
                        alt256 = dfa256.predict(input);
                        switch (alt256) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_98); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getArrayLiteralAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    loop255:
                    	    do {
                    	        int alt255=2;
                    	        int LA255_0 = input.LA(1);

                    	        if ( (LA255_0==Comma) ) {
                    	            alt255=1;
                    	        }


                    	        switch (alt255) {
                    	    	case 1 :
                    	    	    {
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayPaddingParserRuleCall_3_1_1_0()); 
                    	    	      	    
                    	    	    }
                    	    	    pushFollow(FOLLOW_98);
                    	    	    lv_elements_5_0=ruleArrayPadding();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      	        if (current==null) {
                    	    	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                    	    	      	        }
                    	    	             		add(
                    	    	             			current, 
                    	    	             			"elements",
                    	    	              		lv_elements_5_0, 
                    	    	              		"eu.numberfour.n4js.N4JS.ArrayPadding");
                    	    	      	        afterParserOrEnumRuleCall();
                    	    	      	    
                    	    	    }

                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop255;
                    	        }
                    	    } while (true);
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayElementParserRuleCall_3_1_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    lv_elements_6_0=norm1_ArrayElement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_6_0, 
                    	              		"eu.numberfour.n4js.N4JS.ArrayElement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop256;
                        }
                    } while (true);
                    int alt258=2;
                    int LA258_0 = input.LA(1);

                    if ( (LA258_0==Comma) ) {
                        alt258=1;
                    }
                    switch (alt258) {
                        case 1 :
                            {
                            {
                            {
                            lv_trailingComma_7_0=(Token)match(input,Comma,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_trailingComma_7_0, grammarAccess.getArrayLiteralAccess().getTrailingCommaCommaKeyword_3_2_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getArrayLiteralRule());
                              	        }
                                     		setWithLastConsumed(current, "trailingComma", true, ",");
                              	    
                            }

                            }


                            }
                            loop257:
                            do {
                                int alt257=2;
                                int LA257_0 = input.LA(1);

                                if ( (LA257_0==Comma) ) {
                                    alt257=1;
                                }


                                switch (alt257) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayPaddingParserRuleCall_3_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_97);
                            	    lv_elements_8_0=ruleArrayPadding();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"elements",
                            	              		lv_elements_8_0, 
                            	              		"eu.numberfour.n4js.N4JS.ArrayPadding");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop257;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getArrayLiteralAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrayPadding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayPadding = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayPaddingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayPadding=ruleArrayPadding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayPadding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrayPadding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayPaddingAccess().getArrayPaddingAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Comma,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrayPaddingAccess().getCommaKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrayElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayElement=ruleArrayElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrayElement() throws RecognitionException {
        EObject current = null;

        Token lv_spread_1_0=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayElementAccess().getArrayElementAction_0(),
                          current);
                  
            }

            }
            int alt260=2;
            int LA260_0 = input.LA(1);

            if ( (LA260_0==FullStopFullStopFullStop) ) {
                alt260=1;
            }
            switch (alt260) {
                case 1 :
                    {
                    {
                    lv_spread_1_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_spread_1_0, grammarAccess.getArrayElementAccess().getSpreadFullStopFullStopFullStopKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrayElementRule());
                      	        }
                             		setWithLastConsumed(current, "spread", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArrayElementAccess().getExpressionAssignmentExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArrayElementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ArrayElement() throws RecognitionException {
        EObject current = null;

        Token lv_spread_1_0=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayElementAccess().getArrayElementAction_0(),
                          current);
                  
            }

            }
            int alt261=2;
            int LA261_0 = input.LA(1);

            if ( (LA261_0==FullStopFullStopFullStop) ) {
                alt261=1;
            }
            switch (alt261) {
                case 1 :
                    {
                    {
                    lv_spread_1_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_spread_1_0, grammarAccess.getArrayElementAccess().getSpreadFullStopFullStopFullStopKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrayElementRule());
                      	        }
                             		setWithLastConsumed(current, "spread", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArrayElementAccess().getExpressionAssignmentExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArrayElementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleObjectLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObjectLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObjectLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObjectLiteral=ruleObjectLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObjectLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleObjectLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_propertyAssignments_2_0 = null;

        EObject lv_propertyAssignments_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getObjectLiteralAccess().getObjectLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_99); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getObjectLiteralAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            int alt264=2;
            int LA264_0 = input.LA(1);

            if ( ((LA264_0>=Intersection && LA264_0<=With)||(LA264_0>=For && LA264_0<=Var)||(LA264_0>=As && LA264_0<=Of)||LA264_0==LeftParenthesis||LA264_0==Asterisk||LA264_0==LessThanSign||(LA264_0>=QuestionMark && LA264_0<=LeftSquareBracket)||LA264_0==LeftCurlyBracket||LA264_0==Tilde||LA264_0==RULE_DOUBLE||LA264_0==RULE_HEX_INT||LA264_0==RULE_OCTAL_INT||LA264_0==RULE_SCIENTIFIC_INT||LA264_0==RULE_IDENTIFIER||LA264_0==RULE_STRING||LA264_0==RULE_INT) ) {
                alt264=1;
            }
            switch (alt264) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getObjectLiteralAccess().getPropertyAssignmentsPropertyAssignmentParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_27);
                    lv_propertyAssignments_2_0=rulePropertyAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getObjectLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"propertyAssignments",
                              		lv_propertyAssignments_2_0, 
                              		"eu.numberfour.n4js.N4JS.PropertyAssignment");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop262:
                    do {
                        int alt262=2;
                        int LA262_0 = input.LA(1);

                        if ( (LA262_0==Comma) ) {
                            int LA262_1 = input.LA(2);

                            if ( ((LA262_1>=Intersection && LA262_1<=With)||(LA262_1>=For && LA262_1<=Var)||(LA262_1>=As && LA262_1<=Of)||LA262_1==LeftParenthesis||LA262_1==Asterisk||LA262_1==LessThanSign||(LA262_1>=QuestionMark && LA262_1<=LeftSquareBracket)||LA262_1==LeftCurlyBracket||LA262_1==Tilde||LA262_1==RULE_DOUBLE||LA262_1==RULE_HEX_INT||LA262_1==RULE_OCTAL_INT||LA262_1==RULE_SCIENTIFIC_INT||LA262_1==RULE_IDENTIFIER||LA262_1==RULE_STRING||LA262_1==RULE_INT) ) {
                                alt262=1;
                            }


                        }


                        switch (alt262) {
                    	case 1 :
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getObjectLiteralAccess().getCommaKeyword_2_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getObjectLiteralAccess().getPropertyAssignmentsPropertyAssignmentParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_propertyAssignments_4_0=rulePropertyAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getObjectLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"propertyAssignments",
                    	              		lv_propertyAssignments_4_0, 
                    	              		"eu.numberfour.n4js.N4JS.PropertyAssignment");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop262;
                        }
                    } while (true);
                    int alt263=2;
                    int LA263_0 = input.LA(1);

                    if ( (LA263_0==Comma) ) {
                        alt263=1;
                    }
                    switch (alt263) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Comma,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getObjectLiteralAccess().getCommaKeyword_2_2());
                                  
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getObjectLiteralAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ObjectLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_propertyAssignments_2_0 = null;

        EObject lv_propertyAssignments_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getObjectLiteralAccess().getObjectLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_99); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getObjectLiteralAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            int alt267=2;
            int LA267_0 = input.LA(1);

            if ( ((LA267_0>=Intersection && LA267_0<=With)||(LA267_0>=For && LA267_0<=Var)||(LA267_0>=As && LA267_0<=Of)||LA267_0==LeftParenthesis||LA267_0==Asterisk||LA267_0==LessThanSign||(LA267_0>=QuestionMark && LA267_0<=LeftSquareBracket)||LA267_0==LeftCurlyBracket||LA267_0==Tilde||LA267_0==RULE_DOUBLE||LA267_0==RULE_HEX_INT||LA267_0==RULE_OCTAL_INT||LA267_0==RULE_SCIENTIFIC_INT||LA267_0==RULE_IDENTIFIER||LA267_0==RULE_STRING||LA267_0==RULE_INT) ) {
                alt267=1;
            }
            switch (alt267) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getObjectLiteralAccess().getPropertyAssignmentsPropertyAssignmentParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_27);
                    lv_propertyAssignments_2_0=norm1_PropertyAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getObjectLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"propertyAssignments",
                              		lv_propertyAssignments_2_0, 
                              		"eu.numberfour.n4js.N4JS.PropertyAssignment");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop265:
                    do {
                        int alt265=2;
                        int LA265_0 = input.LA(1);

                        if ( (LA265_0==Comma) ) {
                            int LA265_1 = input.LA(2);

                            if ( ((LA265_1>=Intersection && LA265_1<=With)||(LA265_1>=For && LA265_1<=Var)||(LA265_1>=As && LA265_1<=Of)||LA265_1==LeftParenthesis||LA265_1==Asterisk||LA265_1==LessThanSign||(LA265_1>=QuestionMark && LA265_1<=LeftSquareBracket)||LA265_1==LeftCurlyBracket||LA265_1==Tilde||LA265_1==RULE_DOUBLE||LA265_1==RULE_HEX_INT||LA265_1==RULE_OCTAL_INT||LA265_1==RULE_SCIENTIFIC_INT||LA265_1==RULE_IDENTIFIER||LA265_1==RULE_STRING||LA265_1==RULE_INT) ) {
                                alt265=1;
                            }


                        }


                        switch (alt265) {
                    	case 1 :
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getObjectLiteralAccess().getCommaKeyword_2_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getObjectLiteralAccess().getPropertyAssignmentsPropertyAssignmentParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_propertyAssignments_4_0=norm1_PropertyAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getObjectLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"propertyAssignments",
                    	              		lv_propertyAssignments_4_0, 
                    	              		"eu.numberfour.n4js.N4JS.PropertyAssignment");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop265;
                        }
                    } while (true);
                    int alt266=2;
                    int LA266_0 = input.LA(1);

                    if ( (LA266_0==Comma) ) {
                        alt266=1;
                    }
                    switch (alt266) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Comma,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getObjectLiteralAccess().getCommaKeyword_2_2());
                                  
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getObjectLiteralAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertyAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyAssignment = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyAssignment=rulePropertyAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertyAssignment() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedPropertyAssignment_0 = null;

        EObject this_PropertyNameValuePair_1 = null;

        EObject this_PropertyGetterDeclaration_2 = null;

        EObject this_PropertySetterDeclaration_3 = null;

        EObject this_PropertyMethodDeclaration_4 = null;

        EObject this_PropertyNameValuePairSingleName_5 = null;


         enterRule(); 
            
        try {
            {
            int alt268=6;
            alt268 = dfa268.predict(input);
            switch (alt268) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getAnnotatedPropertyAssignmentParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedPropertyAssignment_0=ruleAnnotatedPropertyAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedPropertyAssignment_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyNameValuePairParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyNameValuePair_1=rulePropertyNameValuePair();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyNameValuePair_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyGetterDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyGetterDeclaration_2=rulePropertyGetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyGetterDeclaration_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertySetterDeclarationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertySetterDeclaration_3=rulePropertySetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertySetterDeclaration_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyMethodDeclarationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyMethodDeclaration_4=rulePropertyMethodDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyMethodDeclaration_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyNameValuePairSingleNameParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyNameValuePairSingleName_5=rulePropertyNameValuePairSingleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyNameValuePairSingleName_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PropertyAssignment() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedPropertyAssignment_0 = null;

        EObject this_PropertyNameValuePair_1 = null;

        EObject this_PropertyGetterDeclaration_2 = null;

        EObject this_PropertySetterDeclaration_3 = null;

        EObject this_PropertyMethodDeclaration_4 = null;

        EObject this_PropertyNameValuePairSingleName_5 = null;


         enterRule(); 
            
        try {
            {
            int alt269=6;
            alt269 = dfa269.predict(input);
            switch (alt269) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getAnnotatedPropertyAssignmentParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedPropertyAssignment_0=norm1_AnnotatedPropertyAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedPropertyAssignment_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyNameValuePairParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyNameValuePair_1=norm1_PropertyNameValuePair();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyNameValuePair_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyGetterDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyGetterDeclaration_2=norm1_PropertyGetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyGetterDeclaration_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertySetterDeclarationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertySetterDeclaration_3=norm1_PropertySetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertySetterDeclaration_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyMethodDeclarationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyMethodDeclaration_4=norm1_PropertyMethodDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyMethodDeclaration_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyNameValuePairSingleNameParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyNameValuePairSingleName_5=norm1_PropertyNameValuePairSingleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyNameValuePairSingleName_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotatedPropertyAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedPropertyAssignment = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedPropertyAssignment=ruleAnnotatedPropertyAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedPropertyAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotatedPropertyAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token lv_generator_19_0=null;
        Token otherlv_24=null;
        Token otherlv_28=null;
        EObject this_PropertyAssignmentAnnotationList_0 = null;

        EObject lv_declaredTypeRef_2_0 = null;

        EObject lv_declaredName_3_0 = null;

        EObject lv_expression_5_0 = null;

        EObject this_GetterHeader_7 = null;

        EObject lv_body_8_0 = null;

        EObject lv_declaredName_11_0 = null;

        EObject lv_fpar_13_0 = null;

        EObject lv_body_15_0 = null;

        EObject this_TypeVariables_17 = null;

        EObject lv_returnTypeRef_18_0 = null;

        EObject lv_declaredName_20_0 = null;

        EObject this_MethodParamsAndBody_21 = null;

        EObject lv_declaredName_22_0 = null;

        EObject this_MethodParamsAndBody_23 = null;

        EObject lv_declaredTypeRef_26_0 = null;

        EObject lv_identifierRef_27_0 = null;

        EObject lv_expression_29_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyAssignmentAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_101);
            this_PropertyAssignmentAnnotationList_0=rulePropertyAssignmentAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_PropertyAssignmentAnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt277=5;
            alt277 = dfa277.predict(input);
            switch (alt277) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyNameValuePairAnnotationListAction_1_0_0_0_0(),
                                  current);
                          
                    }

                    }
                    int alt270=2;
                    alt270 = dfa270.predict(input);
                    switch (alt270) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredTypeRefTypeRefWithModifiersParserRuleCall_1_0_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_102);
                            lv_declaredTypeRef_2_0=ruleTypeRefWithModifiers();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredTypeRef",
                                      		lv_declaredTypeRef_2_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_0_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_declaredName_3_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_3_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getAnnotatedPropertyAssignmentAccess().getColonKeyword_1_0_0_0_3());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_5_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_5_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyGetterDeclarationAnnotationListAction_1_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getGetterHeaderParserRuleCall_1_1_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_25);
                    this_GetterHeader_7=ruleGetterHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_GetterHeader_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getBodyBlockParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_8_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_8_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertySetterDeclarationAnnotationListAction_1_2_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_10=(Token)match(input,Set,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getAnnotatedPropertyAssignmentAccess().getSetKeyword_1_2_0_0_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_2_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_64);
                    lv_declaredName_11_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_11_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }

                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getAnnotatedPropertyAssignmentAccess().getLeftParenthesisKeyword_1_2_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getFparFormalParameterParserRuleCall_1_2_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_75);
                    lv_fpar_13_0=ruleFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"fpar",
                              		lv_fpar_13_0, 
                              		"eu.numberfour.n4js.N4JS.FormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_14=(Token)match(input,RightParenthesis,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getAnnotatedPropertyAssignmentAccess().getRightParenthesisKeyword_1_2_3());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getBodyBlockParserRuleCall_1_2_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_15_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_15_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyMethodDeclarationAnnotationListAction_1_3_0_0_0(),
                                  current);
                          
                    }

                    }
                    int alt271=2;
                    int LA271_0 = input.LA(1);

                    if ( (LA271_0==LessThanSign) ) {
                        alt271=1;
                    }
                    switch (alt271) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getTypeVariablesParserRuleCall_1_3_0_0_1()); 
                                  
                            }
                            pushFollow(FOLLOW_103);
                            this_TypeVariables_17=ruleTypeVariables(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_TypeVariables_17;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt272=2;
                    alt272 = dfa272.predict(input);
                    switch (alt272) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getReturnTypeRefTypeRefWithModifiersParserRuleCall_1_3_0_0_2_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_103);
                            lv_returnTypeRef_18_0=ruleTypeRefWithModifiers();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_18_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt273=2;
                    int LA273_0 = input.LA(1);

                    if ( (LA273_0==Asterisk) ) {
                        alt273=1;
                    }
                    else if ( ((LA273_0>=Intersection && LA273_0<=With)||(LA273_0>=For && LA273_0<=Var)||(LA273_0>=As && LA273_0<=Of)||LA273_0==LeftSquareBracket||LA273_0==RULE_DOUBLE||LA273_0==RULE_HEX_INT||LA273_0==RULE_OCTAL_INT||LA273_0==RULE_SCIENTIFIC_INT||LA273_0==RULE_IDENTIFIER||LA273_0==RULE_STRING||LA273_0==RULE_INT) ) {
                        alt273=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 273, 0, input);

                        throw nvae;
                    }
                    switch (alt273) {
                        case 1 :
                            {
                            {
                            {
                            {
                            lv_generator_19_0=(Token)match(input,Asterisk,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_generator_19_0, grammarAccess.getAnnotatedPropertyAssignmentAccess().getGeneratorAsteriskKeyword_1_3_0_0_3_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		setWithLastConsumed(current, "generator", true, "*");
                              	    
                            }

                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_3_0_0_3_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_53);
                            lv_declaredName_20_0=ruleLiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_20_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getMethodParamsAndBodyParserRuleCall_1_3_0_0_3_0_2()); 
                                  
                            }
                            pushFollow(FOLLOW_104);
                            this_MethodParamsAndBody_21=norm1_MethodParamsAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsAndBody_21;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_3_0_0_3_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_52);
                            lv_declaredName_22_0=ruleLiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_22_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getMethodParamsAndBodyParserRuleCall_1_3_0_0_3_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_104);
                            this_MethodParamsAndBody_23=ruleMethodParamsAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsAndBody_23;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    int alt274=2;
                    int LA274_0 = input.LA(1);

                    if ( (LA274_0==Semicolon) ) {
                        alt274=1;
                    }
                    switch (alt274) {
                        case 1 :
                            {
                            otherlv_24=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_24, grammarAccess.getAnnotatedPropertyAssignmentAccess().getSemicolonKeyword_1_3_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyNameValuePairSingleNameAnnotationListAction_1_4_0(),
                                  current);
                          
                    }

                    }
                    int alt275=2;
                    alt275 = dfa275.predict(input);
                    switch (alt275) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredTypeRefTypeRefParserRuleCall_1_4_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_5);
                            lv_declaredTypeRef_26_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredTypeRef",
                                      		lv_declaredTypeRef_26_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getIdentifierRefIdentifierRefParserRuleCall_1_4_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_70);
                    lv_identifierRef_27_0=ruleIdentifierRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"identifierRef",
                              		lv_identifierRef_27_0, 
                              		"eu.numberfour.n4js.N4JS.IdentifierRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt276=2;
                    int LA276_0 = input.LA(1);

                    if ( (LA276_0==EqualsSign) ) {
                        alt276=1;
                    }
                    switch (alt276) {
                        case 1 :
                            {
                            otherlv_28=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_28, grammarAccess.getAnnotatedPropertyAssignmentAccess().getEqualsSignKeyword_1_4_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getExpressionAssignmentExpressionParserRuleCall_1_4_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_29_0=norm1_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_29_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AnnotatedPropertyAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token lv_generator_19_0=null;
        Token otherlv_24=null;
        Token otherlv_28=null;
        EObject this_PropertyAssignmentAnnotationList_0 = null;

        EObject lv_declaredTypeRef_2_0 = null;

        EObject lv_declaredName_3_0 = null;

        EObject lv_expression_5_0 = null;

        EObject this_GetterHeader_7 = null;

        EObject lv_body_8_0 = null;

        EObject lv_declaredName_11_0 = null;

        EObject lv_fpar_13_0 = null;

        EObject lv_body_15_0 = null;

        EObject this_TypeVariables_17 = null;

        EObject lv_returnTypeRef_18_0 = null;

        EObject lv_declaredName_20_0 = null;

        EObject this_MethodParamsAndBody_21 = null;

        EObject lv_declaredName_22_0 = null;

        EObject this_MethodParamsAndBody_23 = null;

        EObject lv_declaredTypeRef_26_0 = null;

        EObject lv_identifierRef_27_0 = null;

        EObject lv_expression_29_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyAssignmentAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_101);
            this_PropertyAssignmentAnnotationList_0=rulePropertyAssignmentAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_PropertyAssignmentAnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt285=5;
            alt285 = dfa285.predict(input);
            switch (alt285) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyNameValuePairAnnotationListAction_1_0_0_0_0(),
                                  current);
                          
                    }

                    }
                    int alt278=2;
                    alt278 = dfa278.predict(input);
                    switch (alt278) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredTypeRefTypeRefWithModifiersParserRuleCall_1_0_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_102);
                            lv_declaredTypeRef_2_0=ruleTypeRefWithModifiers();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredTypeRef",
                                      		lv_declaredTypeRef_2_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_0_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_declaredName_3_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_3_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getAnnotatedPropertyAssignmentAccess().getColonKeyword_1_0_0_0_3());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_5_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_5_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyGetterDeclarationAnnotationListAction_1_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getGetterHeaderParserRuleCall_1_1_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_25);
                    this_GetterHeader_7=norm1_GetterHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_GetterHeader_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getBodyBlockParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_8_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_8_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertySetterDeclarationAnnotationListAction_1_2_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_10=(Token)match(input,Set,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getAnnotatedPropertyAssignmentAccess().getSetKeyword_1_2_0_0_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_2_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_64);
                    lv_declaredName_11_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_11_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }

                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getAnnotatedPropertyAssignmentAccess().getLeftParenthesisKeyword_1_2_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getFparFormalParameterParserRuleCall_1_2_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_75);
                    lv_fpar_13_0=norm1_FormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"fpar",
                              		lv_fpar_13_0, 
                              		"eu.numberfour.n4js.N4JS.FormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_14=(Token)match(input,RightParenthesis,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getAnnotatedPropertyAssignmentAccess().getRightParenthesisKeyword_1_2_3());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getBodyBlockParserRuleCall_1_2_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_15_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_15_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyMethodDeclarationAnnotationListAction_1_3_0_0_0(),
                                  current);
                          
                    }

                    }
                    int alt279=2;
                    int LA279_0 = input.LA(1);

                    if ( (LA279_0==LessThanSign) ) {
                        alt279=1;
                    }
                    switch (alt279) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getTypeVariablesParserRuleCall_1_3_0_0_1()); 
                                  
                            }
                            pushFollow(FOLLOW_103);
                            this_TypeVariables_17=ruleTypeVariables(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_TypeVariables_17;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt280=2;
                    alt280 = dfa280.predict(input);
                    switch (alt280) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getReturnTypeRefTypeRefWithModifiersParserRuleCall_1_3_0_0_2_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_103);
                            lv_returnTypeRef_18_0=ruleTypeRefWithModifiers();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_18_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt281=2;
                    int LA281_0 = input.LA(1);

                    if ( (LA281_0==Asterisk) ) {
                        alt281=1;
                    }
                    else if ( ((LA281_0>=Intersection && LA281_0<=With)||(LA281_0>=For && LA281_0<=Var)||(LA281_0>=As && LA281_0<=Of)||LA281_0==LeftSquareBracket||LA281_0==RULE_DOUBLE||LA281_0==RULE_HEX_INT||LA281_0==RULE_OCTAL_INT||LA281_0==RULE_SCIENTIFIC_INT||LA281_0==RULE_IDENTIFIER||LA281_0==RULE_STRING||LA281_0==RULE_INT) ) {
                        alt281=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 281, 0, input);

                        throw nvae;
                    }
                    switch (alt281) {
                        case 1 :
                            {
                            {
                            {
                            {
                            lv_generator_19_0=(Token)match(input,Asterisk,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_generator_19_0, grammarAccess.getAnnotatedPropertyAssignmentAccess().getGeneratorAsteriskKeyword_1_3_0_0_3_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		setWithLastConsumed(current, "generator", true, "*");
                              	    
                            }

                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_3_0_0_3_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_53);
                            lv_declaredName_20_0=norm1_LiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_20_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getMethodParamsAndBodyParserRuleCall_1_3_0_0_3_0_2()); 
                                  
                            }
                            pushFollow(FOLLOW_104);
                            this_MethodParamsAndBody_21=norm1_MethodParamsAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsAndBody_21;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_3_0_0_3_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_52);
                            lv_declaredName_22_0=norm1_LiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_22_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getMethodParamsAndBodyParserRuleCall_1_3_0_0_3_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_104);
                            this_MethodParamsAndBody_23=ruleMethodParamsAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsAndBody_23;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    int alt282=2;
                    int LA282_0 = input.LA(1);

                    if ( (LA282_0==Semicolon) ) {
                        alt282=1;
                    }
                    switch (alt282) {
                        case 1 :
                            {
                            otherlv_24=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_24, grammarAccess.getAnnotatedPropertyAssignmentAccess().getSemicolonKeyword_1_3_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyNameValuePairSingleNameAnnotationListAction_1_4_0(),
                                  current);
                          
                    }

                    }
                    int alt283=2;
                    alt283 = dfa283.predict(input);
                    switch (alt283) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredTypeRefTypeRefParserRuleCall_1_4_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_5);
                            lv_declaredTypeRef_26_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredTypeRef",
                                      		lv_declaredTypeRef_26_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getIdentifierRefIdentifierRefParserRuleCall_1_4_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_70);
                    lv_identifierRef_27_0=norm1_IdentifierRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"identifierRef",
                              		lv_identifierRef_27_0, 
                              		"eu.numberfour.n4js.N4JS.IdentifierRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt284=2;
                    int LA284_0 = input.LA(1);

                    if ( (LA284_0==EqualsSign) ) {
                        alt284=1;
                    }
                    switch (alt284) {
                        case 1 :
                            {
                            otherlv_28=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_28, grammarAccess.getAnnotatedPropertyAssignmentAccess().getEqualsSignKeyword_1_4_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getExpressionAssignmentExpressionParserRuleCall_1_4_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_29_0=norm3_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_29_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertyMethodDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyMethodDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyMethodDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyMethodDeclaration=rulePropertyMethodDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyMethodDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertyMethodDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_generator_3_0=null;
        Token otherlv_8=null;
        EObject this_TypeVariables_1 = null;

        EObject lv_returnTypeRef_2_0 = null;

        EObject lv_declaredName_4_0 = null;

        EObject this_MethodParamsAndBody_5 = null;

        EObject lv_declaredName_6_0 = null;

        EObject this_MethodParamsAndBody_7 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyMethodDeclarationAccess().getPropertyMethodDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            int alt286=2;
            int LA286_0 = input.LA(1);

            if ( (LA286_0==LessThanSign) ) {
                alt286=1;
            }
            switch (alt286) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getTypeVariablesParserRuleCall_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_103);
                    this_TypeVariables_1=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt287=2;
            alt287 = dfa287.predict(input);
            switch (alt287) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getReturnTypeRefTypeRefWithModifiersParserRuleCall_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_103);
                    lv_returnTypeRef_2_0=ruleTypeRefWithModifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt288=2;
            int LA288_0 = input.LA(1);

            if ( (LA288_0==Asterisk) ) {
                alt288=1;
            }
            else if ( ((LA288_0>=Intersection && LA288_0<=With)||(LA288_0>=For && LA288_0<=Var)||(LA288_0>=As && LA288_0<=Of)||LA288_0==LeftSquareBracket||LA288_0==RULE_DOUBLE||LA288_0==RULE_HEX_INT||LA288_0==RULE_OCTAL_INT||LA288_0==RULE_SCIENTIFIC_INT||LA288_0==RULE_IDENTIFIER||LA288_0==RULE_STRING||LA288_0==RULE_INT) ) {
                alt288=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 288, 0, input);

                throw nvae;
            }
            switch (alt288) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_3_0=(Token)match(input,Asterisk,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_3_0, grammarAccess.getPropertyMethodDeclarationAccess().getGeneratorAsteriskKeyword_0_0_3_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_3_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_53);
                    lv_declaredName_4_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_4_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getMethodParamsAndBodyParserRuleCall_0_0_3_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_104);
                    this_MethodParamsAndBody_5=norm1_MethodParamsAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsAndBody_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_3_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_52);
                    lv_declaredName_6_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_6_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getMethodParamsAndBodyParserRuleCall_0_0_3_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_104);
                    this_MethodParamsAndBody_7=ruleMethodParamsAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsAndBody_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }
            int alt289=2;
            int LA289_0 = input.LA(1);

            if ( (LA289_0==Semicolon) ) {
                alt289=1;
            }
            switch (alt289) {
                case 1 :
                    {
                    otherlv_8=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getPropertyMethodDeclarationAccess().getSemicolonKeyword_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PropertyMethodDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_generator_3_0=null;
        Token otherlv_8=null;
        EObject this_TypeVariables_1 = null;

        EObject lv_returnTypeRef_2_0 = null;

        EObject lv_declaredName_4_0 = null;

        EObject this_MethodParamsAndBody_5 = null;

        EObject lv_declaredName_6_0 = null;

        EObject this_MethodParamsAndBody_7 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyMethodDeclarationAccess().getPropertyMethodDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            int alt290=2;
            int LA290_0 = input.LA(1);

            if ( (LA290_0==LessThanSign) ) {
                alt290=1;
            }
            switch (alt290) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getTypeVariablesParserRuleCall_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_103);
                    this_TypeVariables_1=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt291=2;
            alt291 = dfa291.predict(input);
            switch (alt291) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getReturnTypeRefTypeRefWithModifiersParserRuleCall_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_103);
                    lv_returnTypeRef_2_0=ruleTypeRefWithModifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt292=2;
            int LA292_0 = input.LA(1);

            if ( (LA292_0==Asterisk) ) {
                alt292=1;
            }
            else if ( ((LA292_0>=Intersection && LA292_0<=With)||(LA292_0>=For && LA292_0<=Var)||(LA292_0>=As && LA292_0<=Of)||LA292_0==LeftSquareBracket||LA292_0==RULE_DOUBLE||LA292_0==RULE_HEX_INT||LA292_0==RULE_OCTAL_INT||LA292_0==RULE_SCIENTIFIC_INT||LA292_0==RULE_IDENTIFIER||LA292_0==RULE_STRING||LA292_0==RULE_INT) ) {
                alt292=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 292, 0, input);

                throw nvae;
            }
            switch (alt292) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_3_0=(Token)match(input,Asterisk,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_3_0, grammarAccess.getPropertyMethodDeclarationAccess().getGeneratorAsteriskKeyword_0_0_3_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_3_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_53);
                    lv_declaredName_4_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_4_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getMethodParamsAndBodyParserRuleCall_0_0_3_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_104);
                    this_MethodParamsAndBody_5=norm1_MethodParamsAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsAndBody_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_3_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_52);
                    lv_declaredName_6_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_6_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getMethodParamsAndBodyParserRuleCall_0_0_3_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_104);
                    this_MethodParamsAndBody_7=ruleMethodParamsAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsAndBody_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }
            int alt293=2;
            int LA293_0 = input.LA(1);

            if ( (LA293_0==Semicolon) ) {
                alt293=1;
            }
            switch (alt293) {
                case 1 :
                    {
                    otherlv_8=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getPropertyMethodDeclarationAccess().getSemicolonKeyword_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertyNameValuePair() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyNameValuePair = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyNameValuePairRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyNameValuePair=rulePropertyNameValuePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyNameValuePair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertyNameValuePair() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_declaredTypeRef_1_0 = null;

        EObject lv_declaredName_2_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyNameValuePairAccess().getPropertyNameValuePairAction_0_0_0(),
                          current);
                  
            }

            }
            int alt294=2;
            alt294 = dfa294.predict(input);
            switch (alt294) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyNameValuePairAccess().getDeclaredTypeRefTypeRefWithModifiersParserRuleCall_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_102);
                    lv_declaredTypeRef_1_0=ruleTypeRefWithModifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredTypeRef",
                              		lv_declaredTypeRef_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyNameValuePairAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_92);
            lv_declaredName_2_0=ruleLiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,Colon,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getPropertyNameValuePairAccess().getColonKeyword_0_0_3());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyNameValuePairAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_4_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_4_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PropertyNameValuePair() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_declaredTypeRef_1_0 = null;

        EObject lv_declaredName_2_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyNameValuePairAccess().getPropertyNameValuePairAction_0_0_0(),
                          current);
                  
            }

            }
            int alt295=2;
            alt295 = dfa295.predict(input);
            switch (alt295) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyNameValuePairAccess().getDeclaredTypeRefTypeRefWithModifiersParserRuleCall_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_102);
                    lv_declaredTypeRef_1_0=ruleTypeRefWithModifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredTypeRef",
                              		lv_declaredTypeRef_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyNameValuePairAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_92);
            lv_declaredName_2_0=norm1_LiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,Colon,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getPropertyNameValuePairAccess().getColonKeyword_0_0_3());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyNameValuePairAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_4_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_4_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertyNameValuePairSingleName() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyNameValuePairSingleName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyNameValuePairSingleName=rulePropertyNameValuePairSingleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyNameValuePairSingleName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertyNameValuePairSingleName() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_declaredTypeRef_0_0 = null;

        EObject lv_identifierRef_1_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt296=2;
            alt296 = dfa296.predict(input);
            switch (alt296) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameAccess().getDeclaredTypeRefTypeRefParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_5);
                    lv_declaredTypeRef_0_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairSingleNameRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredTypeRef",
                              		lv_declaredTypeRef_0_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameAccess().getIdentifierRefIdentifierRefParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_70);
            lv_identifierRef_1_0=ruleIdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairSingleNameRule());
              	        }
                     		set(
                     			current, 
                     			"identifierRef",
                      		lv_identifierRef_1_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt297=2;
            int LA297_0 = input.LA(1);

            if ( (LA297_0==EqualsSign) ) {
                alt297=1;
            }
            switch (alt297) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getPropertyNameValuePairSingleNameAccess().getEqualsSignKeyword_2_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameAccess().getExpressionAssignmentExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairSingleNameRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PropertyNameValuePairSingleName() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_declaredTypeRef_0_0 = null;

        EObject lv_identifierRef_1_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt298=2;
            alt298 = dfa298.predict(input);
            switch (alt298) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameAccess().getDeclaredTypeRefTypeRefParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_5);
                    lv_declaredTypeRef_0_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairSingleNameRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredTypeRef",
                              		lv_declaredTypeRef_0_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameAccess().getIdentifierRefIdentifierRefParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_70);
            lv_identifierRef_1_0=norm1_IdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairSingleNameRule());
              	        }
                     		set(
                     			current, 
                     			"identifierRef",
                      		lv_identifierRef_1_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt299=2;
            int LA299_0 = input.LA(1);

            if ( (LA299_0==EqualsSign) ) {
                alt299=1;
            }
            switch (alt299) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getPropertyNameValuePairSingleNameAccess().getEqualsSignKeyword_2_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameAccess().getExpressionAssignmentExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairSingleNameRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertyGetterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyGetterDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyGetterDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyGetterDeclaration=rulePropertyGetterDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyGetterDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertyGetterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_GetterHeader_1 = null;

        EObject lv_body_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyGetterDeclarationAccess().getPropertyGetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getPropertyGetterDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getPropertyGetterDeclarationAccess().getGetterHeaderParserRuleCall_0_0_1()); 
                  
            }
            pushFollow(FOLLOW_25);
            this_GetterHeader_1=ruleGetterHeader(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_GetterHeader_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyGetterDeclarationAccess().getBodyBlockParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_2_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyGetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_2_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PropertyGetterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_GetterHeader_1 = null;

        EObject lv_body_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyGetterDeclarationAccess().getPropertyGetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getPropertyGetterDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getPropertyGetterDeclarationAccess().getGetterHeaderParserRuleCall_0_0_1()); 
                  
            }
            pushFollow(FOLLOW_25);
            this_GetterHeader_1=norm1_GetterHeader(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_GetterHeader_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyGetterDeclarationAccess().getBodyBlockParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_2_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyGetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_2_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertySetterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertySetterDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertySetterDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertySetterDeclaration=rulePropertySetterDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertySetterDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertySetterDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_declaredName_2_0 = null;

        EObject lv_fpar_4_0 = null;

        EObject lv_body_6_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertySetterDeclarationAccess().getPropertySetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Set,FOLLOW_102); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPropertySetterDeclarationAccess().getSetKeyword_0_0_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertySetterDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_declaredName_2_0=ruleLiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertySetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getPropertySetterDeclarationAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertySetterDeclarationAccess().getFparFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_fpar_4_0=ruleFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertySetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"fpar",
                      		lv_fpar_4_0, 
                      		"eu.numberfour.n4js.N4JS.FormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getPropertySetterDeclarationAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertySetterDeclarationAccess().getBodyBlockParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_6_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertySetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_6_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PropertySetterDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_declaredName_2_0 = null;

        EObject lv_fpar_4_0 = null;

        EObject lv_body_6_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertySetterDeclarationAccess().getPropertySetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Set,FOLLOW_102); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPropertySetterDeclarationAccess().getSetKeyword_0_0_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertySetterDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_declaredName_2_0=norm1_LiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertySetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getPropertySetterDeclarationAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertySetterDeclarationAccess().getFparFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_fpar_4_0=norm1_FormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertySetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"fpar",
                      		lv_fpar_4_0, 
                      		"eu.numberfour.n4js.N4JS.FormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getPropertySetterDeclarationAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertySetterDeclarationAccess().getBodyBlockParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_6_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertySetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_6_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleParameterizedCallExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterizedCallExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterizedCallExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterizedCallExpression=ruleParameterizedCallExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterizedCallExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleParameterizedCallExpression() throws RecognitionException {
        EObject current = null;

        EObject this_TypeArguments_0 = null;

        EObject lv_target_1_0 = null;

        EObject this_ArgumentsWithParentheses_2 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getParameterizedCallExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getParameterizedCallExpressionAccess().getTypeArgumentsParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_5);
            this_TypeArguments_0=ruleTypeArguments(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypeArguments_0;
                      afterParserOrEnumRuleCall();
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedCallExpressionAccess().getTargetIdentifierRefParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_target_1_0=ruleIdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterizedCallExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"target",
                      		lv_target_1_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getParameterizedCallExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getParameterizedCallExpressionAccess().getArgumentsWithParenthesesParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_ArgumentsWithParentheses_2=ruleArgumentsWithParentheses(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ArgumentsWithParentheses_2;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ParameterizedCallExpression() throws RecognitionException {
        EObject current = null;

        EObject this_TypeArguments_0 = null;

        EObject lv_target_1_0 = null;

        EObject this_ArgumentsWithParentheses_2 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getParameterizedCallExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getParameterizedCallExpressionAccess().getTypeArgumentsParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_5);
            this_TypeArguments_0=ruleTypeArguments(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypeArguments_0;
                      afterParserOrEnumRuleCall();
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedCallExpressionAccess().getTargetIdentifierRefParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_target_1_0=norm1_IdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterizedCallExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"target",
                      		lv_target_1_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getParameterizedCallExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getParameterizedCallExpressionAccess().getArgumentsWithParenthesesParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_ArgumentsWithParentheses_2=norm1_ArgumentsWithParentheses(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ArgumentsWithParentheses_2;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLeftHandSideExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLeftHandSideExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLeftHandSideExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLeftHandSideExpression=ruleLeftHandSideExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLeftHandSideExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLeftHandSideExpression() throws RecognitionException {
        EObject current = null;

        EObject this_MemberExpression_0 = null;

        EObject this_ArgumentsWithParentheses_2 = null;

        EObject this_ArgumentsWithParentheses_4 = null;

        EObject this_IndexedAccessExpressionTail_6 = null;

        EObject this_ParameterizedPropertyAccessExpressionTail_8 = null;

        EObject lv_template_10_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getMemberExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_105);
            this_MemberExpression_0=ruleMemberExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_MemberExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt301=2;
            int LA301_0 = input.LA(1);

            if ( (LA301_0==LeftParenthesis) ) {
                alt301=1;
            }
            switch (alt301) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getLeftHandSideExpressionAccess().getParameterizedCallExpressionTargetAction_1_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getArgumentsWithParenthesesParserRuleCall_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_106);
                    this_ArgumentsWithParentheses_2=ruleArgumentsWithParentheses(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArgumentsWithParentheses_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    loop300:
                    do {
                        int alt300=5;
                        int LA300_0 = input.LA(1);

                        if ( (LA300_0==LeftParenthesis) ) {
                            alt300=1;
                        }
                        else if ( (LA300_0==LeftSquareBracket) ) {
                            alt300=2;
                        }
                        else if ( (LA300_0==FullStop) ) {
                            alt300=3;
                        }
                        else if ( (LA300_0==RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) && (synpred163_InternalN4JSXParser())) {
                            alt300=4;
                        }
                        else if ( (LA300_0==RULE_TEMPLATE_HEAD) && (synpred163_InternalN4JSXParser())) {
                            alt300=4;
                        }


                        switch (alt300) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getParameterizedCallExpressionTargetAction_1_2_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getArgumentsWithParenthesesParserRuleCall_1_2_0_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    this_ArgumentsWithParentheses_4=ruleArgumentsWithParentheses(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_ArgumentsWithParentheses_4;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getIndexedAccessExpressionTargetAction_1_2_1_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getIndexedAccessExpressionTailParserRuleCall_1_2_1_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    this_IndexedAccessExpressionTail_6=ruleIndexedAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_IndexedAccessExpressionTail_6;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getParameterizedPropertyAccessExpressionTargetAction_1_2_2_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getParameterizedPropertyAccessExpressionTailParserRuleCall_1_2_2_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    this_ParameterizedPropertyAccessExpressionTail_8=ruleParameterizedPropertyAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_ParameterizedPropertyAccessExpressionTail_8;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    {
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getTaggedTemplateStringTargetAction_1_2_3_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getTemplateTemplateLiteralParserRuleCall_1_2_3_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    lv_template_10_0=ruleTemplateLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getLeftHandSideExpressionRule());
                    	      	        }
                    	             		set(
                    	             			current, 
                    	             			"template",
                    	              		lv_template_10_0, 
                    	              		"eu.numberfour.n4js.N4JS.TemplateLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop300;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_LeftHandSideExpression() throws RecognitionException {
        EObject current = null;

        EObject this_MemberExpression_0 = null;

        EObject this_ArgumentsWithParentheses_2 = null;

        EObject this_ArgumentsWithParentheses_4 = null;

        EObject this_IndexedAccessExpressionTail_6 = null;

        EObject this_ParameterizedPropertyAccessExpressionTail_8 = null;

        EObject lv_template_10_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getMemberExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_105);
            this_MemberExpression_0=norm1_MemberExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_MemberExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt303=2;
            int LA303_0 = input.LA(1);

            if ( (LA303_0==LeftParenthesis) ) {
                alt303=1;
            }
            switch (alt303) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getLeftHandSideExpressionAccess().getParameterizedCallExpressionTargetAction_1_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getArgumentsWithParenthesesParserRuleCall_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_106);
                    this_ArgumentsWithParentheses_2=norm1_ArgumentsWithParentheses(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArgumentsWithParentheses_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    loop302:
                    do {
                        int alt302=5;
                        int LA302_0 = input.LA(1);

                        if ( (LA302_0==LeftParenthesis) ) {
                            alt302=1;
                        }
                        else if ( (LA302_0==LeftSquareBracket) ) {
                            alt302=2;
                        }
                        else if ( (LA302_0==FullStop) ) {
                            alt302=3;
                        }
                        else if ( (LA302_0==RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) && (synpred164_InternalN4JSXParser())) {
                            alt302=4;
                        }
                        else if ( (LA302_0==RULE_TEMPLATE_HEAD) && (synpred164_InternalN4JSXParser())) {
                            alt302=4;
                        }


                        switch (alt302) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getParameterizedCallExpressionTargetAction_1_2_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getArgumentsWithParenthesesParserRuleCall_1_2_0_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    this_ArgumentsWithParentheses_4=norm1_ArgumentsWithParentheses(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_ArgumentsWithParentheses_4;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getIndexedAccessExpressionTargetAction_1_2_1_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getIndexedAccessExpressionTailParserRuleCall_1_2_1_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    this_IndexedAccessExpressionTail_6=norm1_IndexedAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_IndexedAccessExpressionTail_6;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getParameterizedPropertyAccessExpressionTargetAction_1_2_2_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getParameterizedPropertyAccessExpressionTailParserRuleCall_1_2_2_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    this_ParameterizedPropertyAccessExpressionTail_8=norm1_ParameterizedPropertyAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_ParameterizedPropertyAccessExpressionTail_8;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    {
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getTaggedTemplateStringTargetAction_1_2_3_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getTemplateTemplateLiteralParserRuleCall_1_2_3_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    lv_template_10_0=norm1_TemplateLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getLeftHandSideExpressionRule());
                    	      	        }
                    	             		set(
                    	             			current, 
                    	             			"template",
                    	              		lv_template_10_0, 
                    	              		"eu.numberfour.n4js.N4JS.TemplateLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop302;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArgumentsWithParentheses(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_Arguments_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_107); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getArgumentsWithParenthesesAccess().getLeftParenthesisKeyword_0());
                  
            }
            int alt304=2;
            int LA304_0 = input.LA(1);

            if ( ((LA304_0>=Intersection && LA304_0<=Implements)||(LA304_0>=Promisify && LA304_0<=Abstract)||(LA304_0>=External && LA304_0<=Function)||(LA304_0>=Private && LA304_0<=Delete)||LA304_0==Public||LA304_0==Static||(LA304_0>=Target && LA304_0<=Await)||LA304_0==Class||(LA304_0>=False && LA304_0<=Super)||LA304_0==Union||(LA304_0>=Yield && LA304_0<=This)||(LA304_0>=From && LA304_0<=Void)||LA304_0==FullStopFullStopFullStop||(LA304_0>=Get && LA304_0<=Set)||LA304_0==PlusSignPlusSign||LA304_0==HyphenMinusHyphenMinus||LA304_0==SolidusEqualsSign||LA304_0==As||LA304_0==Of||LA304_0==ExclamationMark||LA304_0==LeftParenthesis||LA304_0==PlusSign||LA304_0==HyphenMinus||LA304_0==Solidus||LA304_0==LessThanSign||(LA304_0>=CommercialAt && LA304_0<=LeftSquareBracket)||LA304_0==LeftCurlyBracket||LA304_0==Tilde||LA304_0==RULE_DOUBLE||(LA304_0>=RULE_HEX_INT && LA304_0<=RULE_LEGACY_OCTAL_INT)||LA304_0==RULE_SCIENTIFIC_INT||LA304_0==RULE_IDENTIFIER||LA304_0==RULE_STRING||(LA304_0>=RULE_TEMPLATE_HEAD && LA304_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA304_0==RULE_INT) ) {
                alt304=1;
            }
            switch (alt304) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArgumentsWithParenthesesRule());
                      		}
                              newCompositeNode(grammarAccess.getArgumentsWithParenthesesAccess().getArgumentsParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_75);
                    this_Arguments_1=ruleArguments(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Arguments_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getArgumentsWithParenthesesAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ArgumentsWithParentheses(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_Arguments_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_107); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getArgumentsWithParenthesesAccess().getLeftParenthesisKeyword_0());
                  
            }
            int alt305=2;
            int LA305_0 = input.LA(1);

            if ( ((LA305_0>=Intersection && LA305_0<=Implements)||(LA305_0>=Promisify && LA305_0<=Abstract)||(LA305_0>=External && LA305_0<=Function)||(LA305_0>=Private && LA305_0<=Delete)||LA305_0==Public||LA305_0==Static||(LA305_0>=Target && LA305_0<=Await)||LA305_0==Class||(LA305_0>=False && LA305_0<=Super)||LA305_0==Union||(LA305_0>=Yield && LA305_0<=This)||(LA305_0>=From && LA305_0<=Void)||LA305_0==FullStopFullStopFullStop||(LA305_0>=Get && LA305_0<=Set)||LA305_0==PlusSignPlusSign||LA305_0==HyphenMinusHyphenMinus||LA305_0==SolidusEqualsSign||LA305_0==As||LA305_0==Of||LA305_0==ExclamationMark||LA305_0==LeftParenthesis||LA305_0==PlusSign||LA305_0==HyphenMinus||LA305_0==Solidus||LA305_0==LessThanSign||(LA305_0>=CommercialAt && LA305_0<=LeftSquareBracket)||LA305_0==LeftCurlyBracket||LA305_0==Tilde||LA305_0==RULE_DOUBLE||(LA305_0>=RULE_HEX_INT && LA305_0<=RULE_LEGACY_OCTAL_INT)||LA305_0==RULE_SCIENTIFIC_INT||LA305_0==RULE_IDENTIFIER||LA305_0==RULE_STRING||(LA305_0>=RULE_TEMPLATE_HEAD && LA305_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA305_0==RULE_INT) ) {
                alt305=1;
            }
            switch (alt305) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArgumentsWithParenthesesRule());
                      		}
                              newCompositeNode(grammarAccess.getArgumentsWithParenthesesAccess().getArgumentsParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_75);
                    this_Arguments_1=norm1_Arguments(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Arguments_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getArgumentsWithParenthesesAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArguments(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_arguments_0_0 = null;

        EObject lv_arguments_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_44);
            lv_arguments_0_0=ruleArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArgumentsRule());
              	        }
                     		add(
                     			current, 
                     			"arguments",
                      		lv_arguments_0_0, 
                      		"eu.numberfour.n4js.N4JS.Argument");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop306:
            do {
                int alt306=2;
                int LA306_0 = input.LA(1);

                if ( (LA306_0==Comma) ) {
                    alt306=1;
                }


                switch (alt306) {
            	case 1 :
            	    {
            	    otherlv_1=(Token)match(input,Comma,FOLLOW_108); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getArgumentsAccess().getCommaKeyword_1_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_arguments_2_0=ruleArgument();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArgumentsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"arguments",
            	              		lv_arguments_2_0, 
            	              		"eu.numberfour.n4js.N4JS.Argument");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop306;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_Arguments(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_arguments_0_0 = null;

        EObject lv_arguments_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_44);
            lv_arguments_0_0=norm1_Argument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArgumentsRule());
              	        }
                     		add(
                     			current, 
                     			"arguments",
                      		lv_arguments_0_0, 
                      		"eu.numberfour.n4js.N4JS.Argument");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop307:
            do {
                int alt307=2;
                int LA307_0 = input.LA(1);

                if ( (LA307_0==Comma) ) {
                    alt307=1;
                }


                switch (alt307) {
            	case 1 :
            	    {
            	    otherlv_1=(Token)match(input,Comma,FOLLOW_108); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getArgumentsAccess().getCommaKeyword_1_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_arguments_2_0=norm1_Argument();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArgumentsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"arguments",
            	              		lv_arguments_2_0, 
            	              		"eu.numberfour.n4js.N4JS.Argument");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop307;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArgument = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArgument=ruleArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArgument() throws RecognitionException {
        EObject current = null;

        Token lv_spread_0_0=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt308=2;
            int LA308_0 = input.LA(1);

            if ( (LA308_0==FullStopFullStopFullStop) ) {
                alt308=1;
            }
            switch (alt308) {
                case 1 :
                    {
                    {
                    lv_spread_0_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_spread_0_0, grammarAccess.getArgumentAccess().getSpreadFullStopFullStopFullStopKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArgumentRule());
                      	        }
                             		setWithLastConsumed(current, "spread", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArgumentAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_1_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArgumentRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_Argument() throws RecognitionException {
        EObject current = null;

        Token lv_spread_0_0=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt309=2;
            int LA309_0 = input.LA(1);

            if ( (LA309_0==FullStopFullStopFullStop) ) {
                alt309=1;
            }
            switch (alt309) {
                case 1 :
                    {
                    {
                    lv_spread_0_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_spread_0_0, grammarAccess.getArgumentAccess().getSpreadFullStopFullStopFullStopKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArgumentRule());
                      	        }
                             		setWithLastConsumed(current, "spread", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArgumentAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_1_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArgumentRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeArguments(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_typeArgs_1_0 = null;

        EObject lv_typeArgs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LessThanSign,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTypeArgumentsAccess().getLessThanSignKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypeArgumentsAccess().getTypeArgsTypeRefParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_29);
            lv_typeArgs_1_0=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeArgumentsRule());
              	        }
                     		add(
                     			current, 
                     			"typeArgs",
                      		lv_typeArgs_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop310:
            do {
                int alt310=2;
                int LA310_0 = input.LA(1);

                if ( (LA310_0==Comma) ) {
                    alt310=1;
                }


                switch (alt310) {
            	case 1 :
            	    {
            	    otherlv_2=(Token)match(input,Comma,FOLLOW_55); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getTypeArgumentsAccess().getCommaKeyword_2_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTypeArgumentsAccess().getTypeArgsTypeRefParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_29);
            	    lv_typeArgs_3_0=ruleTypeRef();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTypeArgumentsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"typeArgs",
            	              		lv_typeArgs_3_0, 
            	              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop310;
                }
            } while (true);

            otherlv_4=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getTypeArgumentsAccess().getGreaterThanSignKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleMemberExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMemberExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMemberExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMemberExpression=ruleMemberExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMemberExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleMemberExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_withArgs_8_0=null;
        Token otherlv_10=null;
        EObject lv_callee_6_0 = null;

        EObject this_TypeArguments_7 = null;

        EObject this_Arguments_9 = null;

        EObject this_IndexedAccessExpressionTail_12 = null;

        EObject this_ParameterizedPropertyAccessExpressionTail_14 = null;

        EObject lv_template_16_0 = null;

        EObject this_PrimaryExpression_17 = null;

        EObject this_IndexedAccessExpressionTail_19 = null;

        EObject this_ParameterizedPropertyAccessExpressionTail_21 = null;

        EObject lv_template_23_0 = null;


         enterRule(); 
            
        try {
            {
            int alt316=3;
            alt316 = dfa316.predict(input);
            switch (alt316) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getMemberExpressionAccess().getNewTargetAction_0_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,New,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMemberExpressionAccess().getNewKeyword_0_0_0_1());
                          
                    }
                    otherlv_2=(Token)match(input,FullStop,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getMemberExpressionAccess().getFullStopKeyword_0_0_0_2());
                          
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,Target,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getMemberExpressionAccess().getTargetKeyword_0_1());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getMemberExpressionAccess().getNewExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_5=(Token)match(input,New,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getMemberExpressionAccess().getNewKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMemberExpressionAccess().getCalleeMemberExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_111);
                    lv_callee_6_0=ruleMemberExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMemberExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"callee",
                              		lv_callee_6_0, 
                              		"eu.numberfour.n4js.N4JS.MemberExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt311=2;
                    int LA311_0 = input.LA(1);

                    if ( (LA311_0==LessThanSign) ) {
                        int LA311_1 = input.LA(2);

                        if ( (synpred167_InternalN4JSXParser()) ) {
                            alt311=1;
                        }
                    }
                    switch (alt311) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getMemberExpressionRule());
                              		}
                                      newCompositeNode(grammarAccess.getMemberExpressionAccess().getTypeArgumentsParserRuleCall_1_2()); 
                                  
                            }
                            pushFollow(FOLLOW_105);
                            this_TypeArguments_7=ruleTypeArguments(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_TypeArguments_7;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt314=2;
                    int LA314_0 = input.LA(1);

                    if ( (LA314_0==LeftParenthesis) ) {
                        int LA314_1 = input.LA(2);

                        if ( (synpred168_InternalN4JSXParser()) ) {
                            alt314=1;
                        }
                    }
                    switch (alt314) {
                        case 1 :
                            {
                            {
                            {
                            lv_withArgs_8_0=(Token)match(input,LeftParenthesis,FOLLOW_107); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_withArgs_8_0, grammarAccess.getMemberExpressionAccess().getWithArgsLeftParenthesisKeyword_1_3_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMemberExpressionRule());
                              	        }
                                     		setWithLastConsumed(current, "withArgs", true, "(");
                              	    
                            }

                            }


                            }
                            int alt312=2;
                            int LA312_0 = input.LA(1);

                            if ( ((LA312_0>=Intersection && LA312_0<=Implements)||(LA312_0>=Promisify && LA312_0<=Abstract)||(LA312_0>=External && LA312_0<=Function)||(LA312_0>=Private && LA312_0<=Delete)||LA312_0==Public||LA312_0==Static||(LA312_0>=Target && LA312_0<=Await)||LA312_0==Class||(LA312_0>=False && LA312_0<=Super)||LA312_0==Union||(LA312_0>=Yield && LA312_0<=This)||(LA312_0>=From && LA312_0<=Void)||LA312_0==FullStopFullStopFullStop||(LA312_0>=Get && LA312_0<=Set)||LA312_0==PlusSignPlusSign||LA312_0==HyphenMinusHyphenMinus||LA312_0==SolidusEqualsSign||LA312_0==As||LA312_0==Of||LA312_0==ExclamationMark||LA312_0==LeftParenthesis||LA312_0==PlusSign||LA312_0==HyphenMinus||LA312_0==Solidus||LA312_0==LessThanSign||(LA312_0>=CommercialAt && LA312_0<=LeftSquareBracket)||LA312_0==LeftCurlyBracket||LA312_0==Tilde||LA312_0==RULE_DOUBLE||(LA312_0>=RULE_HEX_INT && LA312_0<=RULE_LEGACY_OCTAL_INT)||LA312_0==RULE_SCIENTIFIC_INT||LA312_0==RULE_IDENTIFIER||LA312_0==RULE_STRING||(LA312_0>=RULE_TEMPLATE_HEAD && LA312_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA312_0==RULE_INT) ) {
                                alt312=1;
                            }
                            switch (alt312) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                                      		}
                                              newCompositeNode(grammarAccess.getMemberExpressionAccess().getArgumentsParserRuleCall_1_3_1()); 
                                          
                                    }
                                    pushFollow(FOLLOW_75);
                                    this_Arguments_9=ruleArguments(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_Arguments_9;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }

                            otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_112); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_10, grammarAccess.getMemberExpressionAccess().getRightParenthesisKeyword_1_3_2());
                                  
                            }
                            loop313:
                            do {
                                int alt313=4;
                                switch ( input.LA(1) ) {
                                case LeftSquareBracket:
                                    {
                                    alt313=1;
                                    }
                                    break;
                                case FullStop:
                                    {
                                    alt313=2;
                                    }
                                    break;
                                case RULE_TEMPLATE_HEAD:
                                case RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL:
                                    {
                                    alt313=3;
                                    }
                                    break;

                                }

                                switch (alt313) {
                            	case 1 :
                            	    {
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	              current = forceCreateModelElementAndSet(
                            	                  grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTargetAction_1_3_3_0_0(),
                            	                  current);
                            	          
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {
                            	       
                            	      		if (current==null) {
                            	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                            	      		}
                            	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTailParserRuleCall_1_3_3_0_1()); 
                            	          
                            	    }
                            	    pushFollow(FOLLOW_112);
                            	    this_IndexedAccessExpressionTail_12=ruleIndexedAccessExpressionTail(current);

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	              current = this_IndexedAccessExpressionTail_12;
                            	              afterParserOrEnumRuleCall();
                            	          
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    {
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	              current = forceCreateModelElementAndSet(
                            	                  grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTargetAction_1_3_3_1_0(),
                            	                  current);
                            	          
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {
                            	       
                            	      		if (current==null) {
                            	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                            	      		}
                            	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTailParserRuleCall_1_3_3_1_1()); 
                            	          
                            	    }
                            	    pushFollow(FOLLOW_112);
                            	    this_ParameterizedPropertyAccessExpressionTail_14=ruleParameterizedPropertyAccessExpressionTail(current);

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	              current = this_ParameterizedPropertyAccessExpressionTail_14;
                            	              afterParserOrEnumRuleCall();
                            	          
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    {
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	              current = forceCreateModelElementAndSet(
                            	                  grammarAccess.getMemberExpressionAccess().getTaggedTemplateStringTargetAction_1_3_3_2_0(),
                            	                  current);
                            	          
                            	    }

                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberExpressionAccess().getTemplateTemplateLiteralParserRuleCall_1_3_3_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_112);
                            	    lv_template_16_0=ruleTemplateLiteral();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberExpressionRule());
                            	      	        }
                            	             		set(
                            	             			current, 
                            	             			"template",
                            	              		lv_template_16_0, 
                            	              		"eu.numberfour.n4js.N4JS.TemplateLiteral");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop313;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getMemberExpressionAccess().getPrimaryExpressionParserRuleCall_2_0()); 
                          
                    }
                    pushFollow(FOLLOW_112);
                    this_PrimaryExpression_17=rulePrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrimaryExpression_17;
                              afterParserOrEnumRuleCall();
                          
                    }
                    loop315:
                    do {
                        int alt315=4;
                        switch ( input.LA(1) ) {
                        case LeftSquareBracket:
                            {
                            alt315=1;
                            }
                            break;
                        case FullStop:
                            {
                            alt315=2;
                            }
                            break;
                        case RULE_TEMPLATE_HEAD:
                        case RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL:
                            {
                            alt315=3;
                            }
                            break;

                        }

                        switch (alt315) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTargetAction_2_1_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTailParserRuleCall_2_1_0_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_112);
                    	    this_IndexedAccessExpressionTail_19=ruleIndexedAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_IndexedAccessExpressionTail_19;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTargetAction_2_1_1_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTailParserRuleCall_2_1_1_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_112);
                    	    this_ParameterizedPropertyAccessExpressionTail_21=ruleParameterizedPropertyAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_ParameterizedPropertyAccessExpressionTail_21;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getMemberExpressionAccess().getTaggedTemplateStringTargetAction_2_1_2_0(),
                    	                  current);
                    	          
                    	    }

                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberExpressionAccess().getTemplateTemplateLiteralParserRuleCall_2_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_112);
                    	    lv_template_23_0=ruleTemplateLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberExpressionRule());
                    	      	        }
                    	             		set(
                    	             			current, 
                    	             			"template",
                    	              		lv_template_23_0, 
                    	              		"eu.numberfour.n4js.N4JS.TemplateLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop315;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_MemberExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_withArgs_8_0=null;
        Token otherlv_10=null;
        EObject lv_callee_6_0 = null;

        EObject this_TypeArguments_7 = null;

        EObject this_Arguments_9 = null;

        EObject this_IndexedAccessExpressionTail_12 = null;

        EObject this_ParameterizedPropertyAccessExpressionTail_14 = null;

        EObject lv_template_16_0 = null;

        EObject this_PrimaryExpression_17 = null;

        EObject this_IndexedAccessExpressionTail_19 = null;

        EObject this_ParameterizedPropertyAccessExpressionTail_21 = null;

        EObject lv_template_23_0 = null;


         enterRule(); 
            
        try {
            {
            int alt322=3;
            alt322 = dfa322.predict(input);
            switch (alt322) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getMemberExpressionAccess().getNewTargetAction_0_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,New,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMemberExpressionAccess().getNewKeyword_0_0_0_1());
                          
                    }
                    otherlv_2=(Token)match(input,FullStop,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getMemberExpressionAccess().getFullStopKeyword_0_0_0_2());
                          
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,Target,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getMemberExpressionAccess().getTargetKeyword_0_1());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getMemberExpressionAccess().getNewExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_5=(Token)match(input,New,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getMemberExpressionAccess().getNewKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMemberExpressionAccess().getCalleeMemberExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_111);
                    lv_callee_6_0=norm1_MemberExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMemberExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"callee",
                              		lv_callee_6_0, 
                              		"eu.numberfour.n4js.N4JS.MemberExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt317=2;
                    int LA317_0 = input.LA(1);

                    if ( (LA317_0==LessThanSign) ) {
                        int LA317_1 = input.LA(2);

                        if ( (synpred171_InternalN4JSXParser()) ) {
                            alt317=1;
                        }
                    }
                    switch (alt317) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getMemberExpressionRule());
                              		}
                                      newCompositeNode(grammarAccess.getMemberExpressionAccess().getTypeArgumentsParserRuleCall_1_2()); 
                                  
                            }
                            pushFollow(FOLLOW_105);
                            this_TypeArguments_7=ruleTypeArguments(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_TypeArguments_7;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt320=2;
                    int LA320_0 = input.LA(1);

                    if ( (LA320_0==LeftParenthesis) ) {
                        int LA320_1 = input.LA(2);

                        if ( (synpred172_InternalN4JSXParser()) ) {
                            alt320=1;
                        }
                    }
                    switch (alt320) {
                        case 1 :
                            {
                            {
                            {
                            lv_withArgs_8_0=(Token)match(input,LeftParenthesis,FOLLOW_107); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_withArgs_8_0, grammarAccess.getMemberExpressionAccess().getWithArgsLeftParenthesisKeyword_1_3_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMemberExpressionRule());
                              	        }
                                     		setWithLastConsumed(current, "withArgs", true, "(");
                              	    
                            }

                            }


                            }
                            int alt318=2;
                            int LA318_0 = input.LA(1);

                            if ( ((LA318_0>=Intersection && LA318_0<=Implements)||(LA318_0>=Promisify && LA318_0<=Abstract)||(LA318_0>=External && LA318_0<=Function)||(LA318_0>=Private && LA318_0<=Delete)||LA318_0==Public||LA318_0==Static||(LA318_0>=Target && LA318_0<=Await)||LA318_0==Class||(LA318_0>=False && LA318_0<=Super)||LA318_0==Union||(LA318_0>=Yield && LA318_0<=This)||(LA318_0>=From && LA318_0<=Void)||LA318_0==FullStopFullStopFullStop||(LA318_0>=Get && LA318_0<=Set)||LA318_0==PlusSignPlusSign||LA318_0==HyphenMinusHyphenMinus||LA318_0==SolidusEqualsSign||LA318_0==As||LA318_0==Of||LA318_0==ExclamationMark||LA318_0==LeftParenthesis||LA318_0==PlusSign||LA318_0==HyphenMinus||LA318_0==Solidus||LA318_0==LessThanSign||(LA318_0>=CommercialAt && LA318_0<=LeftSquareBracket)||LA318_0==LeftCurlyBracket||LA318_0==Tilde||LA318_0==RULE_DOUBLE||(LA318_0>=RULE_HEX_INT && LA318_0<=RULE_LEGACY_OCTAL_INT)||LA318_0==RULE_SCIENTIFIC_INT||LA318_0==RULE_IDENTIFIER||LA318_0==RULE_STRING||(LA318_0>=RULE_TEMPLATE_HEAD && LA318_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA318_0==RULE_INT) ) {
                                alt318=1;
                            }
                            switch (alt318) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                                      		}
                                              newCompositeNode(grammarAccess.getMemberExpressionAccess().getArgumentsParserRuleCall_1_3_1()); 
                                          
                                    }
                                    pushFollow(FOLLOW_75);
                                    this_Arguments_9=norm1_Arguments(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_Arguments_9;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }

                            otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_112); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_10, grammarAccess.getMemberExpressionAccess().getRightParenthesisKeyword_1_3_2());
                                  
                            }
                            loop319:
                            do {
                                int alt319=4;
                                switch ( input.LA(1) ) {
                                case LeftSquareBracket:
                                    {
                                    alt319=1;
                                    }
                                    break;
                                case FullStop:
                                    {
                                    alt319=2;
                                    }
                                    break;
                                case RULE_TEMPLATE_HEAD:
                                case RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL:
                                    {
                                    alt319=3;
                                    }
                                    break;

                                }

                                switch (alt319) {
                            	case 1 :
                            	    {
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	              current = forceCreateModelElementAndSet(
                            	                  grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTargetAction_1_3_3_0_0(),
                            	                  current);
                            	          
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {
                            	       
                            	      		if (current==null) {
                            	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                            	      		}
                            	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTailParserRuleCall_1_3_3_0_1()); 
                            	          
                            	    }
                            	    pushFollow(FOLLOW_112);
                            	    this_IndexedAccessExpressionTail_12=norm1_IndexedAccessExpressionTail(current);

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	              current = this_IndexedAccessExpressionTail_12;
                            	              afterParserOrEnumRuleCall();
                            	          
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    {
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	              current = forceCreateModelElementAndSet(
                            	                  grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTargetAction_1_3_3_1_0(),
                            	                  current);
                            	          
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {
                            	       
                            	      		if (current==null) {
                            	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                            	      		}
                            	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTailParserRuleCall_1_3_3_1_1()); 
                            	          
                            	    }
                            	    pushFollow(FOLLOW_112);
                            	    this_ParameterizedPropertyAccessExpressionTail_14=norm1_ParameterizedPropertyAccessExpressionTail(current);

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	              current = this_ParameterizedPropertyAccessExpressionTail_14;
                            	              afterParserOrEnumRuleCall();
                            	          
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    {
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	              current = forceCreateModelElementAndSet(
                            	                  grammarAccess.getMemberExpressionAccess().getTaggedTemplateStringTargetAction_1_3_3_2_0(),
                            	                  current);
                            	          
                            	    }

                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberExpressionAccess().getTemplateTemplateLiteralParserRuleCall_1_3_3_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_112);
                            	    lv_template_16_0=norm1_TemplateLiteral();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberExpressionRule());
                            	      	        }
                            	             		set(
                            	             			current, 
                            	             			"template",
                            	              		lv_template_16_0, 
                            	              		"eu.numberfour.n4js.N4JS.TemplateLiteral");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop319;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getMemberExpressionAccess().getPrimaryExpressionParserRuleCall_2_0()); 
                          
                    }
                    pushFollow(FOLLOW_112);
                    this_PrimaryExpression_17=norm1_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrimaryExpression_17;
                              afterParserOrEnumRuleCall();
                          
                    }
                    loop321:
                    do {
                        int alt321=4;
                        switch ( input.LA(1) ) {
                        case LeftSquareBracket:
                            {
                            alt321=1;
                            }
                            break;
                        case FullStop:
                            {
                            alt321=2;
                            }
                            break;
                        case RULE_TEMPLATE_HEAD:
                        case RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL:
                            {
                            alt321=3;
                            }
                            break;

                        }

                        switch (alt321) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTargetAction_2_1_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTailParserRuleCall_2_1_0_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_112);
                    	    this_IndexedAccessExpressionTail_19=norm1_IndexedAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_IndexedAccessExpressionTail_19;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTargetAction_2_1_1_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTailParserRuleCall_2_1_1_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_112);
                    	    this_ParameterizedPropertyAccessExpressionTail_21=norm1_ParameterizedPropertyAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_ParameterizedPropertyAccessExpressionTail_21;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getMemberExpressionAccess().getTaggedTemplateStringTargetAction_2_1_2_0(),
                    	                  current);
                    	          
                    	    }

                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberExpressionAccess().getTemplateTemplateLiteralParserRuleCall_2_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_112);
                    	    lv_template_23_0=norm1_TemplateLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberExpressionRule());
                    	      	        }
                    	             		set(
                    	             			current, 
                    	             			"template",
                    	              		lv_template_23_0, 
                    	              		"eu.numberfour.n4js.N4JS.TemplateLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop321;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIndexedAccessExpressionTail(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_index_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftSquareBracket,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIndexedAccessExpressionTailAccess().getLeftSquareBracketKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIndexedAccessExpressionTailAccess().getIndexExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_113);
            lv_index_1_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIndexedAccessExpressionTailRule());
              	        }
                     		set(
                     			current, 
                     			"index",
                      		lv_index_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getIndexedAccessExpressionTailAccess().getRightSquareBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_IndexedAccessExpressionTail(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_index_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftSquareBracket,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIndexedAccessExpressionTailAccess().getLeftSquareBracketKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIndexedAccessExpressionTailAccess().getIndexExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_113);
            lv_index_1_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIndexedAccessExpressionTailRule());
              	        }
                     		set(
                     			current, 
                     			"index",
                      		lv_index_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getIndexedAccessExpressionTailAccess().getRightSquareBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleParameterizedPropertyAccessExpressionTail(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject this_TypeArguments_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,FullStop,FOLLOW_114); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getParameterizedPropertyAccessExpressionTailAccess().getFullStopKeyword_0());
                  
            }
            int alt323=2;
            int LA323_0 = input.LA(1);

            if ( (LA323_0==LessThanSign) ) {
                alt323=1;
            }
            switch (alt323) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getParameterizedPropertyAccessExpressionTailRule());
                      		}
                              newCompositeNode(grammarAccess.getParameterizedPropertyAccessExpressionTailAccess().getTypeArgumentsParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_38);
                    this_TypeArguments_1=ruleTypeArguments(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeArguments_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getParameterizedPropertyAccessExpressionTailRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedPropertyAccessExpressionTailAccess().getPropertyIdentifiableElementCrossReference_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ParameterizedPropertyAccessExpressionTail(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject this_TypeArguments_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,FullStop,FOLLOW_114); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getParameterizedPropertyAccessExpressionTailAccess().getFullStopKeyword_0());
                  
            }
            int alt324=2;
            int LA324_0 = input.LA(1);

            if ( (LA324_0==LessThanSign) ) {
                alt324=1;
            }
            switch (alt324) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getParameterizedPropertyAccessExpressionTailRule());
                      		}
                              newCompositeNode(grammarAccess.getParameterizedPropertyAccessExpressionTailAccess().getTypeArgumentsParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_38);
                    this_TypeArguments_1=ruleTypeArguments(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeArguments_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getParameterizedPropertyAccessExpressionTailRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedPropertyAccessExpressionTailAccess().getPropertyIdentifiableElementCrossReference_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePostfixExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostfixExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostfixExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePostfixExpression=rulePostfixExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostfixExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePostfixExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LeftHandSideExpression_0 = null;

        Enumerator lv_op_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getPostfixExpressionAccess().getLeftHandSideExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_115);
            this_LeftHandSideExpression_0=ruleLeftHandSideExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               if (input.LA(1) == PlusSignPlusSign || input.LA(1) == HyphenMinusHyphenMinus) promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                      current = this_LeftHandSideExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt325=2;
            int LA325_0 = input.LA(1);

            if ( (LA325_0==PlusSignPlusSign) && (synpred173_InternalN4JSXParser())) {
                alt325=1;
            }
            else if ( (LA325_0==HyphenMinusHyphenMinus) && (synpred173_InternalN4JSXParser())) {
                alt325=1;
            }
            switch (alt325) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getPostfixExpressionAccess().getPostfixExpressionExpressionAction_1_0_0(),
                                  current);
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPostfixExpressionAccess().getOpPostfixOperatorEnumRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_op_2_0=rulePostfixOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"op",
                              		lv_op_2_0, 
                              		"eu.numberfour.n4js.N4JS.PostfixOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PostfixExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LeftHandSideExpression_0 = null;

        Enumerator lv_op_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getPostfixExpressionAccess().getLeftHandSideExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_115);
            this_LeftHandSideExpression_0=norm1_LeftHandSideExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LeftHandSideExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt326=2;
            int LA326_0 = input.LA(1);

            if ( (LA326_0==PlusSignPlusSign) && (synpred174_InternalN4JSXParser())) {
                alt326=1;
            }
            else if ( (LA326_0==HyphenMinusHyphenMinus) && (synpred174_InternalN4JSXParser())) {
                alt326=1;
            }
            switch (alt326) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getPostfixExpressionAccess().getPostfixExpressionExpressionAction_1_0_0(),
                                  current);
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPostfixExpressionAccess().getOpPostfixOperatorEnumRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_op_2_0=rulePostfixOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"op",
                              		lv_op_2_0, 
                              		"eu.numberfour.n4js.N4JS.PostfixOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleCastExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCastExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCastExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCastExpression=ruleCastExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCastExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleCastExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_PostfixExpression_0 = null;

        EObject lv_targetTypeRef_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getCastExpressionAccess().getPostfixExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_37);
            this_PostfixExpression_0=rulePostfixExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_PostfixExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt327=2;
            int LA327_0 = input.LA(1);

            if ( (LA327_0==As) && (synpred175_InternalN4JSXParser())) {
                alt327=1;
            }
            switch (alt327) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getCastExpressionAccess().getCastExpressionExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,As,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getCastExpressionAccess().getAsKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCastExpressionAccess().getTargetTypeRefTypeRefForCastParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_targetTypeRef_3_0=ruleTypeRefForCast();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCastExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"targetTypeRef",
                              		lv_targetTypeRef_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefForCast");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_CastExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_PostfixExpression_0 = null;

        EObject lv_targetTypeRef_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getCastExpressionAccess().getPostfixExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_37);
            this_PostfixExpression_0=norm1_PostfixExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_PostfixExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt328=2;
            int LA328_0 = input.LA(1);

            if ( (LA328_0==As) && (synpred176_InternalN4JSXParser())) {
                alt328=1;
            }
            switch (alt328) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getCastExpressionAccess().getCastExpressionExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,As,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getCastExpressionAccess().getAsKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCastExpressionAccess().getTargetTypeRefTypeRefForCastParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_targetTypeRef_3_0=ruleTypeRefForCast();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCastExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"targetTypeRef",
                              		lv_targetTypeRef_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefForCast");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleUnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpression=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleUnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_CastExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt329=2;
            int LA329_0 = input.LA(1);

            if ( ((LA329_0>=Intersection && LA329_0<=Implements)||(LA329_0>=Promisify && LA329_0<=Abstract)||(LA329_0>=External && LA329_0<=Function)||(LA329_0>=Private && LA329_0<=Project)||LA329_0==Public||LA329_0==Static||LA329_0==Target||(LA329_0>=Async && LA329_0<=Await)||LA329_0==Class||(LA329_0>=False && LA329_0<=Super)||LA329_0==Union||(LA329_0>=Yield && LA329_0<=This)||(LA329_0>=From && LA329_0<=Type)||(LA329_0>=Get && LA329_0<=Set)||LA329_0==SolidusEqualsSign||LA329_0==As||LA329_0==Of||LA329_0==LeftParenthesis||LA329_0==Solidus||LA329_0==LessThanSign||(LA329_0>=CommercialAt && LA329_0<=LeftSquareBracket)||LA329_0==LeftCurlyBracket||LA329_0==RULE_DOUBLE||(LA329_0>=RULE_HEX_INT && LA329_0<=RULE_LEGACY_OCTAL_INT)||LA329_0==RULE_SCIENTIFIC_INT||LA329_0==RULE_IDENTIFIER||LA329_0==RULE_STRING||(LA329_0>=RULE_TEMPLATE_HEAD && LA329_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA329_0==RULE_INT) ) {
                alt329=1;
            }
            else if ( (LA329_0==Delete||LA329_0==Typeof||LA329_0==Void||LA329_0==PlusSignPlusSign||LA329_0==HyphenMinusHyphenMinus||LA329_0==ExclamationMark||LA329_0==PlusSign||LA329_0==HyphenMinus||LA329_0==Tilde) ) {
                alt329=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 329, 0, input);

                throw nvae;
            }
            switch (alt329) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getUnaryExpressionAccess().getCastExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_CastExpression_0=ruleCastExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CastExpression_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                                  current);
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_14);
                    lv_op_2_0=ruleUnaryOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"op",
                              		lv_op_2_0, 
                              		"eu.numberfour.n4js.N4JS.UnaryOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExpressionUnaryExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=ruleUnaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.UnaryExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_UnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_CastExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt330=2;
            int LA330_0 = input.LA(1);

            if ( ((LA330_0>=Intersection && LA330_0<=Implements)||(LA330_0>=Promisify && LA330_0<=Abstract)||(LA330_0>=External && LA330_0<=Function)||(LA330_0>=Private && LA330_0<=Project)||LA330_0==Public||LA330_0==Static||LA330_0==Target||(LA330_0>=Async && LA330_0<=Await)||LA330_0==Class||(LA330_0>=False && LA330_0<=Super)||LA330_0==Union||LA330_0==This||(LA330_0>=From && LA330_0<=Type)||(LA330_0>=Get && LA330_0<=Set)||LA330_0==SolidusEqualsSign||LA330_0==As||LA330_0==Of||LA330_0==LeftParenthesis||LA330_0==Solidus||LA330_0==LessThanSign||(LA330_0>=CommercialAt && LA330_0<=LeftSquareBracket)||LA330_0==LeftCurlyBracket||LA330_0==RULE_DOUBLE||(LA330_0>=RULE_HEX_INT && LA330_0<=RULE_LEGACY_OCTAL_INT)||LA330_0==RULE_SCIENTIFIC_INT||LA330_0==RULE_IDENTIFIER||LA330_0==RULE_STRING||(LA330_0>=RULE_TEMPLATE_HEAD && LA330_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA330_0==RULE_INT) ) {
                alt330=1;
            }
            else if ( (LA330_0==Delete||LA330_0==Typeof||LA330_0==Void||LA330_0==PlusSignPlusSign||LA330_0==HyphenMinusHyphenMinus||LA330_0==ExclamationMark||LA330_0==PlusSign||LA330_0==HyphenMinus||LA330_0==Tilde) ) {
                alt330=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 330, 0, input);

                throw nvae;
            }
            switch (alt330) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getUnaryExpressionAccess().getCastExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_CastExpression_0=norm1_CastExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CastExpression_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                                  current);
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_14);
                    lv_op_2_0=ruleUnaryOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"op",
                              		lv_op_2_0, 
                              		"eu.numberfour.n4js.N4JS.UnaryOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExpressionUnaryExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm1_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.UnaryExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicativeExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_UnaryExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getUnaryExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_117);
            this_UnaryExpression_0=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_UnaryExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop331:
            do {
                int alt331=2;
                int LA331_0 = input.LA(1);

                if ( (LA331_0==Asterisk) && (synpred177_InternalN4JSXParser())) {
                    alt331=1;
                }
                else if ( (LA331_0==Solidus) && (synpred177_InternalN4JSXParser())) {
                    alt331=1;
                }
                else if ( (LA331_0==PercentSign) && (synpred177_InternalN4JSXParser())) {
                    alt331=1;
                }


                switch (alt331) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOpMultiplicativeOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleMultiplicativeOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.MultiplicativeOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRhsUnaryExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_117);
            	    lv_rhs_3_0=ruleUnaryExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.UnaryExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop331;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_MultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_UnaryExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getUnaryExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_117);
            this_UnaryExpression_0=norm1_UnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_UnaryExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop332:
            do {
                int alt332=2;
                int LA332_0 = input.LA(1);

                if ( (LA332_0==Asterisk) && (synpred178_InternalN4JSXParser())) {
                    alt332=1;
                }
                else if ( (LA332_0==Solidus) && (synpred178_InternalN4JSXParser())) {
                    alt332=1;
                }
                else if ( (LA332_0==PercentSign) && (synpred178_InternalN4JSXParser())) {
                    alt332=1;
                }


                switch (alt332) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOpMultiplicativeOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleMultiplicativeOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.MultiplicativeOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRhsUnaryExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_117);
            	    lv_rhs_3_0=norm1_UnaryExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.UnaryExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop332;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAdditiveExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAdditiveExpression=ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_MultiplicativeExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_118);
            this_MultiplicativeExpression_0=ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_MultiplicativeExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop333:
            do {
                int alt333=2;
                int LA333_0 = input.LA(1);

                if ( (LA333_0==PlusSign) && (synpred179_InternalN4JSXParser())) {
                    alt333=1;
                }
                else if ( (LA333_0==HyphenMinus) && (synpred179_InternalN4JSXParser())) {
                    alt333=1;
                }


                switch (alt333) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOpAdditiveOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleAdditiveOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.AdditiveOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRhsMultiplicativeExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_118);
            	    lv_rhs_3_0=ruleMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.MultiplicativeExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop333;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_MultiplicativeExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_118);
            this_MultiplicativeExpression_0=norm1_MultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_MultiplicativeExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop334:
            do {
                int alt334=2;
                int LA334_0 = input.LA(1);

                if ( (LA334_0==PlusSign) && (synpred180_InternalN4JSXParser())) {
                    alt334=1;
                }
                else if ( (LA334_0==HyphenMinus) && (synpred180_InternalN4JSXParser())) {
                    alt334=1;
                }


                switch (alt334) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOpAdditiveOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleAdditiveOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.AdditiveOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRhsMultiplicativeExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_118);
            	    lv_rhs_3_0=norm1_MultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.MultiplicativeExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop334;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleShiftExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleShiftExpression=ruleShiftExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleShiftExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AdditiveExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_119);
            this_AdditiveExpression_0=ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AdditiveExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop335:
            do {
                int alt335=2;
                alt335 = dfa335.predict(input);
                switch (alt335) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getShiftExpressionAccess().getShiftExpressionLhsAction_1_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getShiftExpressionAccess().getOpShiftOperatorParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleShiftOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.ShiftOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getShiftExpressionAccess().getRhsAdditiveExpressionParserRuleCall_1_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_119);
            	    lv_rhs_3_0=ruleAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.AdditiveExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop335;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ShiftExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AdditiveExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_119);
            this_AdditiveExpression_0=norm1_AdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AdditiveExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop336:
            do {
                int alt336=2;
                alt336 = dfa336.predict(input);
                switch (alt336) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getShiftExpressionAccess().getShiftExpressionLhsAction_1_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getShiftExpressionAccess().getOpShiftOperatorParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleShiftOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.ShiftOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getShiftExpressionAccess().getRhsAdditiveExpressionParserRuleCall_1_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_119);
            	    lv_rhs_3_0=norm1_AdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.AdditiveExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop336;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleShiftOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleShiftOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleShiftOperator=ruleShiftOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleShiftOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt338=2;
            int LA338_0 = input.LA(1);

            if ( (LA338_0==GreaterThanSign) ) {
                alt338=1;
            }
            else if ( (LA338_0==LessThanSignLessThanSign) ) {
                alt338=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 338, 0, input);

                throw nvae;
            }
            switch (alt338) {
                case 1 :
                    {
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getShiftOperatorAccess().getGreaterThanSignKeyword_0_0()); 
                          
                    }
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getShiftOperatorAccess().getGreaterThanSignKeyword_0_1()); 
                          
                    }
                    int alt337=2;
                    int LA337_0 = input.LA(1);

                    if ( (LA337_0==GreaterThanSign) ) {
                        alt337=1;
                    }
                    switch (alt337) {
                        case 1 :
                            {
                            kw=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getShiftOperatorAccess().getGreaterThanSignKeyword_0_2()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,LessThanSignLessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getShiftOperatorAccess().getLessThanSignLessThanSignKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationalExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationalExpression=ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ShiftExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_121);
            this_ShiftExpression_0=ruleShiftExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ShiftExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop339:
            do {
                int alt339=2;
                alt339 = dfa339.predict(input);
                switch (alt339) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLhsAction_1_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpRelationalOperatorParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleRelationalOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRhsShiftExpressionParserRuleCall_1_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_rhs_3_0=ruleShiftExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.ShiftExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop339;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ShiftExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_122);
            this_ShiftExpression_0=ruleShiftExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ShiftExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop340:
            do {
                int alt340=2;
                alt340 = dfa340.predict(input);
                switch (alt340) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLhsAction_1_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpRelationalOperatorParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=norm1_RelationalOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRhsShiftExpressionParserRuleCall_1_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_122);
            	    lv_rhs_3_0=ruleShiftExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.ShiftExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop340;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ShiftExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_121);
            this_ShiftExpression_0=norm1_ShiftExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ShiftExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop341:
            do {
                int alt341=2;
                alt341 = dfa341.predict(input);
                switch (alt341) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLhsAction_1_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpRelationalOperatorParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleRelationalOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRhsShiftExpressionParserRuleCall_1_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_rhs_3_0=norm1_ShiftExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.ShiftExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop341;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ShiftExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_122);
            this_ShiftExpression_0=norm1_ShiftExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ShiftExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop342:
            do {
                int alt342=2;
                alt342 = dfa342.predict(input);
                switch (alt342) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLhsAction_1_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpRelationalOperatorParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=norm1_RelationalOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRhsShiftExpressionParserRuleCall_1_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_122);
            	    lv_rhs_3_0=norm1_ShiftExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.ShiftExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop342;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleRelationalOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRelationalOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationalOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationalOperator=ruleRelationalOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationalOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleRelationalOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt343=5;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt343=1;
                }
                break;
            case GreaterThanSign:
                {
                alt343=2;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt343=3;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt343=4;
                }
                break;
            case Instanceof:
                {
                alt343=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 343, 0, input);

                throw nvae;
            }

            switch (alt343) {
                case 1 :
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    kw=(Token)match(input,Instanceof,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getInstanceofKeyword_4()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken norm1_RelationalOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt344=6;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt344=1;
                }
                break;
            case GreaterThanSign:
                {
                alt344=2;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt344=3;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt344=4;
                }
                break;
            case Instanceof:
                {
                alt344=5;
                }
                break;
            case In:
                {
                alt344=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 344, 0, input);

                throw nvae;
            }

            switch (alt344) {
                case 1 :
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    kw=(Token)match(input,Instanceof,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getInstanceofKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    kw=(Token)match(input,In,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getInKeyword_5_0()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityExpression=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_123);
            this_RelationalExpression_0=ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_RelationalExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop345:
            do {
                int alt345=2;
                int LA345_0 = input.LA(1);

                if ( (LA345_0==EqualsSignEqualsSignEqualsSign) && (synpred191_InternalN4JSXParser())) {
                    alt345=1;
                }
                else if ( (LA345_0==ExclamationMarkEqualsSignEqualsSign) && (synpred191_InternalN4JSXParser())) {
                    alt345=1;
                }
                else if ( (LA345_0==EqualsSignEqualsSign) && (synpred191_InternalN4JSXParser())) {
                    alt345=1;
                }
                else if ( (LA345_0==ExclamationMarkEqualsSign) && (synpred191_InternalN4JSXParser())) {
                    alt345=1;
                }


                switch (alt345) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleEqualityOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRhsRelationalExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_rhs_3_0=ruleRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop345;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_123);
            this_RelationalExpression_0=norm1_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_RelationalExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop346:
            do {
                int alt346=2;
                int LA346_0 = input.LA(1);

                if ( (LA346_0==EqualsSignEqualsSignEqualsSign) && (synpred192_InternalN4JSXParser())) {
                    alt346=1;
                }
                else if ( (LA346_0==ExclamationMarkEqualsSignEqualsSign) && (synpred192_InternalN4JSXParser())) {
                    alt346=1;
                }
                else if ( (LA346_0==EqualsSignEqualsSign) && (synpred192_InternalN4JSXParser())) {
                    alt346=1;
                }
                else if ( (LA346_0==ExclamationMarkEqualsSign) && (synpred192_InternalN4JSXParser())) {
                    alt346=1;
                }


                switch (alt346) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleEqualityOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRhsRelationalExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_rhs_3_0=norm1_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop346;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_123);
            this_RelationalExpression_0=norm2_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_RelationalExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop347:
            do {
                int alt347=2;
                int LA347_0 = input.LA(1);

                if ( (LA347_0==EqualsSignEqualsSignEqualsSign) && (synpred193_InternalN4JSXParser())) {
                    alt347=1;
                }
                else if ( (LA347_0==ExclamationMarkEqualsSignEqualsSign) && (synpred193_InternalN4JSXParser())) {
                    alt347=1;
                }
                else if ( (LA347_0==EqualsSignEqualsSign) && (synpred193_InternalN4JSXParser())) {
                    alt347=1;
                }
                else if ( (LA347_0==ExclamationMarkEqualsSign) && (synpred193_InternalN4JSXParser())) {
                    alt347=1;
                }


                switch (alt347) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleEqualityOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRhsRelationalExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_rhs_3_0=norm2_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop347;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_123);
            this_RelationalExpression_0=norm3_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_RelationalExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop348:
            do {
                int alt348=2;
                int LA348_0 = input.LA(1);

                if ( (LA348_0==EqualsSignEqualsSignEqualsSign) && (synpred194_InternalN4JSXParser())) {
                    alt348=1;
                }
                else if ( (LA348_0==ExclamationMarkEqualsSignEqualsSign) && (synpred194_InternalN4JSXParser())) {
                    alt348=1;
                }
                else if ( (LA348_0==EqualsSignEqualsSign) && (synpred194_InternalN4JSXParser())) {
                    alt348=1;
                }
                else if ( (LA348_0==ExclamationMarkEqualsSign) && (synpred194_InternalN4JSXParser())) {
                    alt348=1;
                }


                switch (alt348) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleEqualityOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRhsRelationalExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_rhs_3_0=norm3_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop348;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBitwiseANDExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseANDExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseANDExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseANDExpression=ruleBitwiseANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseANDExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBitwiseANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getEqualityExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_124);
            this_EqualityExpression_0=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_EqualityExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop349:
            do {
                int alt349=2;
                int LA349_0 = input.LA(1);

                if ( (LA349_0==Ampersand) && (synpred195_InternalN4JSXParser())) {
                    alt349=1;
                }


                switch (alt349) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseANDExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getOpBitwiseANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleBitwiseANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getRhsEqualityExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_124);
            	    lv_rhs_3_0=ruleEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop349;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BitwiseANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getEqualityExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_124);
            this_EqualityExpression_0=norm1_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_EqualityExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop350:
            do {
                int alt350=2;
                int LA350_0 = input.LA(1);

                if ( (LA350_0==Ampersand) && (synpred196_InternalN4JSXParser())) {
                    alt350=1;
                }


                switch (alt350) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseANDExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getOpBitwiseANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleBitwiseANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getRhsEqualityExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_124);
            	    lv_rhs_3_0=norm1_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop350;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_BitwiseANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getEqualityExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_124);
            this_EqualityExpression_0=norm2_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_EqualityExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop351:
            do {
                int alt351=2;
                int LA351_0 = input.LA(1);

                if ( (LA351_0==Ampersand) && (synpred197_InternalN4JSXParser())) {
                    alt351=1;
                }


                switch (alt351) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseANDExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getOpBitwiseANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleBitwiseANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getRhsEqualityExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_124);
            	    lv_rhs_3_0=norm2_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop351;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_BitwiseANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getEqualityExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_124);
            this_EqualityExpression_0=norm3_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_EqualityExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop352:
            do {
                int alt352=2;
                int LA352_0 = input.LA(1);

                if ( (LA352_0==Ampersand) && (synpred198_InternalN4JSXParser())) {
                    alt352=1;
                }


                switch (alt352) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseANDExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getOpBitwiseANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleBitwiseANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getRhsEqualityExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_124);
            	    lv_rhs_3_0=norm3_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop352;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleBitwiseANDOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBitwiseANDOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseANDOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseANDOperator=ruleBitwiseANDOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseANDOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleBitwiseANDOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,Ampersand,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getBitwiseANDOperatorAccess().getAmpersandKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBitwiseXORExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseXORExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseXORExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseXORExpression=ruleBitwiseXORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseXORExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBitwiseXORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getBitwiseANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_125);
            this_BitwiseANDExpression_0=ruleBitwiseANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop353:
            do {
                int alt353=2;
                int LA353_0 = input.LA(1);

                if ( (LA353_0==CircumflexAccent) && (synpred199_InternalN4JSXParser())) {
                    alt353=1;
                }


                switch (alt353) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseXORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getOpBitwiseXOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleBitwiseXOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getRhsBitwiseANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_125);
            	    lv_rhs_3_0=ruleBitwiseANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop353;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BitwiseXORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getBitwiseANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_125);
            this_BitwiseANDExpression_0=norm1_BitwiseANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop354:
            do {
                int alt354=2;
                int LA354_0 = input.LA(1);

                if ( (LA354_0==CircumflexAccent) && (synpred200_InternalN4JSXParser())) {
                    alt354=1;
                }


                switch (alt354) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseXORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getOpBitwiseXOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleBitwiseXOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getRhsBitwiseANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_125);
            	    lv_rhs_3_0=norm1_BitwiseANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop354;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_BitwiseXORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getBitwiseANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_125);
            this_BitwiseANDExpression_0=norm2_BitwiseANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop355:
            do {
                int alt355=2;
                int LA355_0 = input.LA(1);

                if ( (LA355_0==CircumflexAccent) && (synpred201_InternalN4JSXParser())) {
                    alt355=1;
                }


                switch (alt355) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseXORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getOpBitwiseXOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleBitwiseXOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getRhsBitwiseANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_125);
            	    lv_rhs_3_0=norm2_BitwiseANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop355;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_BitwiseXORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getBitwiseANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_125);
            this_BitwiseANDExpression_0=norm3_BitwiseANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop356:
            do {
                int alt356=2;
                int LA356_0 = input.LA(1);

                if ( (LA356_0==CircumflexAccent) && (synpred202_InternalN4JSXParser())) {
                    alt356=1;
                }


                switch (alt356) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseXORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getOpBitwiseXOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleBitwiseXOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getRhsBitwiseANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_125);
            	    lv_rhs_3_0=norm3_BitwiseANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop356;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleBitwiseXOROperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBitwiseXOROperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseXOROperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseXOROperator=ruleBitwiseXOROperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseXOROperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleBitwiseXOROperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,CircumflexAccent,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getBitwiseXOROperatorAccess().getCircumflexAccentKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBitwiseORExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseORExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseORExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseORExpression=ruleBitwiseORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseORExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBitwiseORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseXORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getBitwiseXORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_126);
            this_BitwiseXORExpression_0=ruleBitwiseXORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseXORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop357:
            do {
                int alt357=2;
                int LA357_0 = input.LA(1);

                if ( (LA357_0==VerticalLine) && (synpred203_InternalN4JSXParser())) {
                    alt357=1;
                }


                switch (alt357) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getOpBitwiseOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleBitwiseOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getRhsBitwiseXORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_rhs_3_0=ruleBitwiseXORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop357;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BitwiseORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseXORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getBitwiseXORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_126);
            this_BitwiseXORExpression_0=norm1_BitwiseXORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseXORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop358:
            do {
                int alt358=2;
                int LA358_0 = input.LA(1);

                if ( (LA358_0==VerticalLine) && (synpred204_InternalN4JSXParser())) {
                    alt358=1;
                }


                switch (alt358) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getOpBitwiseOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleBitwiseOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getRhsBitwiseXORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_rhs_3_0=norm1_BitwiseXORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop358;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_BitwiseORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseXORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getBitwiseXORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_126);
            this_BitwiseXORExpression_0=norm2_BitwiseXORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseXORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop359:
            do {
                int alt359=2;
                int LA359_0 = input.LA(1);

                if ( (LA359_0==VerticalLine) && (synpred205_InternalN4JSXParser())) {
                    alt359=1;
                }


                switch (alt359) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getOpBitwiseOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleBitwiseOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getRhsBitwiseXORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_rhs_3_0=norm2_BitwiseXORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop359;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_BitwiseORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseXORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getBitwiseXORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_126);
            this_BitwiseXORExpression_0=norm3_BitwiseXORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseXORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop360:
            do {
                int alt360=2;
                int LA360_0 = input.LA(1);

                if ( (LA360_0==VerticalLine) && (synpred206_InternalN4JSXParser())) {
                    alt360=1;
                }


                switch (alt360) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getOpBitwiseOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleBitwiseOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getRhsBitwiseXORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_rhs_3_0=norm3_BitwiseXORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop360;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleBitwiseOROperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBitwiseOROperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseOROperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseOROperator=ruleBitwiseOROperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseOROperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleBitwiseOROperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,VerticalLine,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getBitwiseOROperatorAccess().getVerticalLineKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLogicalANDExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalANDExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalANDExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLogicalANDExpression=ruleLogicalANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalANDExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLogicalANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getBitwiseORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_127);
            this_BitwiseORExpression_0=ruleBitwiseORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop361:
            do {
                int alt361=2;
                int LA361_0 = input.LA(1);

                if ( (LA361_0==AmpersandAmpersand) && (synpred207_InternalN4JSXParser())) {
                    alt361=1;
                }


                switch (alt361) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalANDExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getOpLogicalANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleLogicalANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getRhsBitwiseORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_rhs_3_0=ruleBitwiseORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop361;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_LogicalANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getBitwiseORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_127);
            this_BitwiseORExpression_0=norm1_BitwiseORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop362:
            do {
                int alt362=2;
                int LA362_0 = input.LA(1);

                if ( (LA362_0==AmpersandAmpersand) && (synpred208_InternalN4JSXParser())) {
                    alt362=1;
                }


                switch (alt362) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalANDExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getOpLogicalANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleLogicalANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getRhsBitwiseORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_rhs_3_0=norm1_BitwiseORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop362;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_LogicalANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getBitwiseORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_127);
            this_BitwiseORExpression_0=norm2_BitwiseORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop363:
            do {
                int alt363=2;
                int LA363_0 = input.LA(1);

                if ( (LA363_0==AmpersandAmpersand) && (synpred209_InternalN4JSXParser())) {
                    alt363=1;
                }


                switch (alt363) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalANDExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getOpLogicalANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleLogicalANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getRhsBitwiseORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_rhs_3_0=norm2_BitwiseORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop363;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_LogicalANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getBitwiseORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_127);
            this_BitwiseORExpression_0=norm3_BitwiseORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop364:
            do {
                int alt364=2;
                int LA364_0 = input.LA(1);

                if ( (LA364_0==AmpersandAmpersand) && (synpred210_InternalN4JSXParser())) {
                    alt364=1;
                }


                switch (alt364) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalANDExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getOpLogicalANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleLogicalANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getRhsBitwiseORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_rhs_3_0=norm3_BitwiseORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop364;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleLogicalANDOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLogicalANDOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalANDOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLogicalANDOperator=ruleLogicalANDOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalANDOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleLogicalANDOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,AmpersandAmpersand,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getLogicalANDOperatorAccess().getAmpersandAmpersandKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLogicalORExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalORExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalORExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLogicalORExpression=ruleLogicalORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalORExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLogicalORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getLogicalANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_128);
            this_LogicalANDExpression_0=ruleLogicalANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop365:
            do {
                int alt365=2;
                int LA365_0 = input.LA(1);

                if ( (LA365_0==VerticalLineVerticalLine) && (synpred211_InternalN4JSXParser())) {
                    alt365=1;
                }


                switch (alt365) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalORExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getOpLogicalOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleLogicalOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getRhsLogicalANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_rhs_3_0=ruleLogicalANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop365;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_LogicalORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getLogicalANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_128);
            this_LogicalANDExpression_0=norm1_LogicalANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop366:
            do {
                int alt366=2;
                int LA366_0 = input.LA(1);

                if ( (LA366_0==VerticalLineVerticalLine) && (synpred212_InternalN4JSXParser())) {
                    alt366=1;
                }


                switch (alt366) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalORExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getOpLogicalOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleLogicalOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getRhsLogicalANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_rhs_3_0=norm1_LogicalANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop366;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_LogicalORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getLogicalANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_128);
            this_LogicalANDExpression_0=norm2_LogicalANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop367:
            do {
                int alt367=2;
                int LA367_0 = input.LA(1);

                if ( (LA367_0==VerticalLineVerticalLine) && (synpred213_InternalN4JSXParser())) {
                    alt367=1;
                }


                switch (alt367) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalORExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getOpLogicalOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleLogicalOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getRhsLogicalANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_rhs_3_0=norm2_LogicalANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop367;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_LogicalORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getLogicalANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_128);
            this_LogicalANDExpression_0=norm3_LogicalANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop368:
            do {
                int alt368=2;
                int LA368_0 = input.LA(1);

                if ( (LA368_0==VerticalLineVerticalLine) && (synpred214_InternalN4JSXParser())) {
                    alt368=1;
                }


                switch (alt368) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalORExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getOpLogicalOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_op_2_0=ruleLogicalOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getRhsLogicalANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_rhs_3_0=norm3_LogicalANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop368;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleLogicalOROperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLogicalOROperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalOROperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLogicalOROperator=ruleLogicalOROperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalOROperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleLogicalOROperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getLogicalOROperatorAccess().getVerticalLineVerticalLineKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleConditionalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionalExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalExpression=ruleConditionalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleConditionalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_LogicalORExpression_0 = null;

        EObject lv_trueExpression_3_0 = null;

        EObject lv_falseExpression_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getConditionalExpressionAccess().getLogicalORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_129);
            this_LogicalORExpression_0=ruleLogicalORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt369=2;
            int LA369_0 = input.LA(1);

            if ( (LA369_0==QuestionMark) && (synpred215_InternalN4JSXParser())) {
                alt369=1;
            }
            switch (alt369) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getConditionalExpressionAccess().getConditionalExpressionExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,QuestionMark,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getTrueExpressionAssignmentExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_trueExpression_3_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"trueExpression",
                              		lv_trueExpression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getFalseExpressionAssignmentExpressionParserRuleCall_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_falseExpression_5_0=ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"falseExpression",
                              		lv_falseExpression_5_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ConditionalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_LogicalORExpression_0 = null;

        EObject lv_trueExpression_3_0 = null;

        EObject lv_falseExpression_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getConditionalExpressionAccess().getLogicalORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_129);
            this_LogicalORExpression_0=norm1_LogicalORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt370=2;
            int LA370_0 = input.LA(1);

            if ( (LA370_0==QuestionMark) && (synpred216_InternalN4JSXParser())) {
                alt370=1;
            }
            switch (alt370) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getConditionalExpressionAccess().getConditionalExpressionExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,QuestionMark,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getTrueExpressionAssignmentExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_trueExpression_3_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"trueExpression",
                              		lv_trueExpression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getFalseExpressionAssignmentExpressionParserRuleCall_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_falseExpression_5_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"falseExpression",
                              		lv_falseExpression_5_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_ConditionalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_LogicalORExpression_0 = null;

        EObject lv_trueExpression_3_0 = null;

        EObject lv_falseExpression_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getConditionalExpressionAccess().getLogicalORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_129);
            this_LogicalORExpression_0=norm2_LogicalORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt371=2;
            int LA371_0 = input.LA(1);

            if ( (LA371_0==QuestionMark) && (synpred217_InternalN4JSXParser())) {
                alt371=1;
            }
            switch (alt371) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getConditionalExpressionAccess().getConditionalExpressionExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,QuestionMark,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getTrueExpressionAssignmentExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_trueExpression_3_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"trueExpression",
                              		lv_trueExpression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getFalseExpressionAssignmentExpressionParserRuleCall_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_falseExpression_5_0=norm2_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"falseExpression",
                              		lv_falseExpression_5_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_ConditionalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_LogicalORExpression_0 = null;

        EObject lv_trueExpression_3_0 = null;

        EObject lv_falseExpression_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getConditionalExpressionAccess().getLogicalORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_129);
            this_LogicalORExpression_0=norm3_LogicalORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt372=2;
            int LA372_0 = input.LA(1);

            if ( (LA372_0==QuestionMark) && (synpred218_InternalN4JSXParser())) {
                alt372=1;
            }
            switch (alt372) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getConditionalExpressionAccess().getConditionalExpressionExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,QuestionMark,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getTrueExpressionAssignmentExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_trueExpression_3_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"trueExpression",
                              		lv_trueExpression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getFalseExpressionAssignmentExpressionParserRuleCall_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_falseExpression_5_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"falseExpression",
                              		lv_falseExpression_5_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignmentExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssignmentExpression=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignmentExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AwaitExpression_0 = null;

        EObject this_PromisifyExpression_1 = null;

        EObject this_ArrowExpression_2 = null;

        EObject this_ConditionalExpression_3 = null;

        AntlrDatatypeRuleToken lv_op_5_0 = null;

        EObject lv_rhs_6_0 = null;


         enterRule(); 
            
        try {
            {
            int alt374=4;
            alt374 = dfa374.predict(input);
            switch (alt374) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAwaitExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AwaitExpression_0=ruleAwaitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AwaitExpression_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getPromisifyExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PromisifyExpression_1=rulePromisifyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PromisifyExpression_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getArrowExpressionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrowExpression_2=ruleArrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrowExpression_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getConditionalExpressionParserRuleCall_4_0()); 
                          
                    }
                    pushFollow(FOLLOW_130);
                    this_ConditionalExpression_3=ruleConditionalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ConditionalExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }
                    int alt373=2;
                    alt373 = dfa373.predict(input);
                    switch (alt373) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLhsAction_4_1_0_0_0(),
                                          current);
                                  
                            }

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getOpAssignmentOperatorParserRuleCall_4_1_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_14);
                            lv_op_5_0=ruleAssignmentOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"op",
                                      		lv_op_5_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentOperator");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRhsAssignmentExpressionParserRuleCall_4_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_rhs_6_0=ruleAssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"rhs",
                                      		lv_rhs_6_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AwaitExpression_0 = null;

        EObject this_PromisifyExpression_1 = null;

        EObject this_ArrowExpression_2 = null;

        EObject this_ConditionalExpression_3 = null;

        AntlrDatatypeRuleToken lv_op_5_0 = null;

        EObject lv_rhs_6_0 = null;


         enterRule(); 
            
        try {
            {
            int alt376=4;
            alt376 = dfa376.predict(input);
            switch (alt376) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAwaitExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AwaitExpression_0=norm1_AwaitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AwaitExpression_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getPromisifyExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PromisifyExpression_1=norm1_PromisifyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PromisifyExpression_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getArrowExpressionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrowExpression_2=norm1_ArrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrowExpression_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getConditionalExpressionParserRuleCall_4_0()); 
                          
                    }
                    pushFollow(FOLLOW_130);
                    this_ConditionalExpression_3=norm1_ConditionalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ConditionalExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }
                    int alt375=2;
                    alt375 = dfa375.predict(input);
                    switch (alt375) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLhsAction_4_1_0_0_0(),
                                          current);
                                  
                            }

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getOpAssignmentOperatorParserRuleCall_4_1_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_14);
                            lv_op_5_0=ruleAssignmentOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"op",
                                      		lv_op_5_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentOperator");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRhsAssignmentExpressionParserRuleCall_4_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_rhs_6_0=norm1_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"rhs",
                                      		lv_rhs_6_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_AssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AwaitExpression_0 = null;

        EObject this_PromisifyExpression_1 = null;

        EObject this_ArrowExpression_2 = null;

        EObject this_YieldExpression_3 = null;

        EObject this_ConditionalExpression_4 = null;

        AntlrDatatypeRuleToken lv_op_6_0 = null;

        EObject lv_rhs_7_0 = null;


         enterRule(); 
            
        try {
            {
            int alt378=5;
            alt378 = dfa378.predict(input);
            switch (alt378) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAwaitExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AwaitExpression_0=norm2_AwaitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AwaitExpression_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getPromisifyExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PromisifyExpression_1=norm2_PromisifyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PromisifyExpression_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getArrowExpressionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrowExpression_2=norm2_ArrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrowExpression_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getYieldExpressionParserRuleCall_3_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_YieldExpression_3=ruleYieldExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_YieldExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getConditionalExpressionParserRuleCall_4_0()); 
                          
                    }
                    pushFollow(FOLLOW_130);
                    this_ConditionalExpression_4=norm2_ConditionalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ConditionalExpression_4;
                              afterParserOrEnumRuleCall();
                          
                    }
                    int alt377=2;
                    alt377 = dfa377.predict(input);
                    switch (alt377) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLhsAction_4_1_0_0_0(),
                                          current);
                                  
                            }

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getOpAssignmentOperatorParserRuleCall_4_1_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_14);
                            lv_op_6_0=ruleAssignmentOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"op",
                                      		lv_op_6_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentOperator");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRhsAssignmentExpressionParserRuleCall_4_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_rhs_7_0=norm2_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"rhs",
                                      		lv_rhs_7_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_AssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AwaitExpression_0 = null;

        EObject this_PromisifyExpression_1 = null;

        EObject this_ArrowExpression_2 = null;

        EObject this_YieldExpression_3 = null;

        EObject this_ConditionalExpression_4 = null;

        AntlrDatatypeRuleToken lv_op_6_0 = null;

        EObject lv_rhs_7_0 = null;


         enterRule(); 
            
        try {
            {
            int alt380=5;
            alt380 = dfa380.predict(input);
            switch (alt380) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAwaitExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AwaitExpression_0=norm3_AwaitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AwaitExpression_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getPromisifyExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PromisifyExpression_1=norm3_PromisifyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PromisifyExpression_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getArrowExpressionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrowExpression_2=norm3_ArrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrowExpression_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getYieldExpressionParserRuleCall_3_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_YieldExpression_3=norm1_YieldExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_YieldExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getConditionalExpressionParserRuleCall_4_0()); 
                          
                    }
                    pushFollow(FOLLOW_130);
                    this_ConditionalExpression_4=norm3_ConditionalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ConditionalExpression_4;
                              afterParserOrEnumRuleCall();
                          
                    }
                    int alt379=2;
                    alt379 = dfa379.predict(input);
                    switch (alt379) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLhsAction_4_1_0_0_0(),
                                          current);
                                  
                            }

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getOpAssignmentOperatorParserRuleCall_4_1_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_14);
                            lv_op_6_0=ruleAssignmentOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"op",
                                      		lv_op_6_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentOperator");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRhsAssignmentExpressionParserRuleCall_4_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_rhs_7_0=norm3_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"rhs",
                                      		lv_rhs_7_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleYieldExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleYieldExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getYieldExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleYieldExpression=ruleYieldExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleYieldExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleYieldExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_many_2_0=null;
        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getYieldExpressionAccess().getYieldExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Yield,FOLLOW_131); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getYieldExpressionAccess().getYieldKeyword_1());
                  
            }
            int alt381=2;
            int LA381_0 = input.LA(1);

            if ( (LA381_0==Asterisk) && (synpred239_InternalN4JSXParser())) {
                alt381=1;
            }
            switch (alt381) {
                case 1 :
                    {
                    {
                    lv_many_2_0=(Token)match(input,Asterisk,FOLLOW_132); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_many_2_0, grammarAccess.getYieldExpressionAccess().getManyAsteriskKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getYieldExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "many", true, "*");
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt382=2;
            alt382 = dfa382.predict(input);
            switch (alt382) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getYieldExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm2_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getYieldExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_YieldExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_many_2_0=null;
        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getYieldExpressionAccess().getYieldExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Yield,FOLLOW_131); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getYieldExpressionAccess().getYieldKeyword_1());
                  
            }
            int alt383=2;
            int LA383_0 = input.LA(1);

            if ( (LA383_0==Asterisk) && (synpred241_InternalN4JSXParser())) {
                alt383=1;
            }
            switch (alt383) {
                case 1 :
                    {
                    {
                    lv_many_2_0=(Token)match(input,Asterisk,FOLLOW_132); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_many_2_0, grammarAccess.getYieldExpressionAccess().getManyAsteriskKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getYieldExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "many", true, "*");
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt384=2;
            alt384 = dfa384.predict(input);
            switch (alt384) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getYieldExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getYieldExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleAssignmentOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAssignmentOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssignmentOperator=ruleAssignmentOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignmentOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleAssignmentOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt386=11;
            switch ( input.LA(1) ) {
            case EqualsSign:
                {
                alt386=1;
                }
                break;
            case AsteriskEqualsSign:
                {
                alt386=2;
                }
                break;
            case SolidusEqualsSign:
                {
                alt386=3;
                }
                break;
            case PercentSignEqualsSign:
                {
                alt386=4;
                }
                break;
            case PlusSignEqualsSign:
                {
                alt386=5;
                }
                break;
            case HyphenMinusEqualsSign:
                {
                alt386=6;
                }
                break;
            case LessThanSignLessThanSignEqualsSign:
                {
                alt386=7;
                }
                break;
            case GreaterThanSign:
                {
                alt386=8;
                }
                break;
            case AmpersandEqualsSign:
                {
                alt386=9;
                }
                break;
            case CircumflexAccentEqualsSign:
                {
                alt386=10;
                }
                break;
            case VerticalLineEqualsSign:
                {
                alt386=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 386, 0, input);

                throw nvae;
            }

            switch (alt386) {
                case 1 :
                    {
                    kw=(Token)match(input,EqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,AsteriskEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,SolidusEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,PercentSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    kw=(Token)match(input,PlusSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    kw=(Token)match(input,HyphenMinusEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    kw=(Token)match(input,LessThanSignLessThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getLessThanSignLessThanSignEqualsSignKeyword_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_133); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignKeyword_7_0()); 
                          
                    }
                    int alt385=2;
                    int LA385_0 = input.LA(1);

                    if ( (LA385_0==GreaterThanSign) ) {
                        alt385=1;
                    }
                    switch (alt385) {
                        case 1 :
                            {
                            kw=(Token)match(input,GreaterThanSign,FOLLOW_134); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignKeyword_7_1()); 
                                  
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignEqualsSignKeyword_7_2()); 
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    {
                    kw=(Token)match(input,AmpersandEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getAmpersandEqualsSignKeyword_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    kw=(Token)match(input,CircumflexAccentEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getCircumflexAccentEqualsSignKeyword_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    kw=(Token)match(input,VerticalLineEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getVerticalLineEqualsSignKeyword_10()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAwaitExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAwaitExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAwaitExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAwaitExpression=ruleAwaitExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAwaitExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAwaitExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAwaitExpressionAccess().getAwaitExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Await,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAwaitExpressionAccess().getAwaitKeyword_0_0_1());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAwaitExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAwaitExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AwaitExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAwaitExpressionAccess().getAwaitExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Await,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAwaitExpressionAccess().getAwaitKeyword_0_0_1());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAwaitExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAwaitExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_AwaitExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAwaitExpressionAccess().getAwaitExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Await,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAwaitExpressionAccess().getAwaitKeyword_0_0_1());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAwaitExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm2_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAwaitExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_AwaitExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAwaitExpressionAccess().getAwaitExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Await,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAwaitExpressionAccess().getAwaitKeyword_0_0_1());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAwaitExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAwaitExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePromisifyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePromisifyExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPromisifyExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePromisifyExpression=rulePromisifyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePromisifyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePromisifyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPromisifyExpressionAccess().getPromisifyExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,CommercialAt,FOLLOW_135); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPromisifyExpressionAccess().getCommercialAtKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,Promisify,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getPromisifyExpressionAccess().getPromisifyKeyword_0_0_2());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPromisifyExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_3_0=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPromisifyExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_3_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PromisifyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPromisifyExpressionAccess().getPromisifyExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,CommercialAt,FOLLOW_135); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPromisifyExpressionAccess().getCommercialAtKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,Promisify,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getPromisifyExpressionAccess().getPromisifyKeyword_0_0_2());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPromisifyExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_3_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPromisifyExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_3_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_PromisifyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPromisifyExpressionAccess().getPromisifyExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,CommercialAt,FOLLOW_135); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPromisifyExpressionAccess().getCommercialAtKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,Promisify,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getPromisifyExpressionAccess().getPromisifyKeyword_0_0_2());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPromisifyExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_3_0=norm2_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPromisifyExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_3_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_PromisifyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPromisifyExpressionAccess().getPromisifyExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,CommercialAt,FOLLOW_135); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPromisifyExpressionAccess().getCommercialAtKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,Promisify,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getPromisifyExpressionAccess().getPromisifyKeyword_0_0_2());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPromisifyExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_3_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPromisifyExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_3_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_AssignmentExpression_0 = null;

        EObject lv_exprs_3_0 = null;

        EObject lv_exprs_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_44);
            this_AssignmentExpression_0=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AssignmentExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt388=2;
            int LA388_0 = input.LA(1);

            if ( (LA388_0==Comma) ) {
                alt388=1;
            }
            switch (alt388) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getExpressionAccess().getCommaExpressionExprsAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,Comma,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getExpressionAccess().getCommaKeyword_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_44);
                    lv_exprs_3_0=ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"exprs",
                              		lv_exprs_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop387:
                    do {
                        int alt387=2;
                        int LA387_0 = input.LA(1);

                        if ( (LA387_0==Comma) ) {
                            alt387=1;
                        }


                        switch (alt387) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getExpressionAccess().getCommaKeyword_1_3_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_44);
                    	    lv_exprs_5_0=ruleAssignmentExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"exprs",
                    	              		lv_exprs_5_0, 
                    	              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop387;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_Expression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_AssignmentExpression_0 = null;

        EObject lv_exprs_3_0 = null;

        EObject lv_exprs_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_44);
            this_AssignmentExpression_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AssignmentExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt390=2;
            int LA390_0 = input.LA(1);

            if ( (LA390_0==Comma) ) {
                alt390=1;
            }
            switch (alt390) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getExpressionAccess().getCommaExpressionExprsAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,Comma,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getExpressionAccess().getCommaKeyword_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_44);
                    lv_exprs_3_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"exprs",
                              		lv_exprs_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop389:
                    do {
                        int alt389=2;
                        int LA389_0 = input.LA(1);

                        if ( (LA389_0==Comma) ) {
                            alt389=1;
                        }


                        switch (alt389) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getExpressionAccess().getCommaKeyword_1_3_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_44);
                    	    lv_exprs_5_0=norm1_AssignmentExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"exprs",
                    	              		lv_exprs_5_0, 
                    	              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop389;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_Expression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_AssignmentExpression_0 = null;

        EObject lv_exprs_3_0 = null;

        EObject lv_exprs_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_44);
            this_AssignmentExpression_0=norm2_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AssignmentExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt392=2;
            int LA392_0 = input.LA(1);

            if ( (LA392_0==Comma) ) {
                alt392=1;
            }
            switch (alt392) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getExpressionAccess().getCommaExpressionExprsAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,Comma,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getExpressionAccess().getCommaKeyword_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_44);
                    lv_exprs_3_0=norm2_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"exprs",
                              		lv_exprs_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop391:
                    do {
                        int alt391=2;
                        int LA391_0 = input.LA(1);

                        if ( (LA391_0==Comma) ) {
                            alt391=1;
                        }


                        switch (alt391) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getExpressionAccess().getCommaKeyword_1_3_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_44);
                    	    lv_exprs_5_0=norm2_AssignmentExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"exprs",
                    	              		lv_exprs_5_0, 
                    	              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop391;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_Expression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_AssignmentExpression_0 = null;

        EObject lv_exprs_3_0 = null;

        EObject lv_exprs_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_44);
            this_AssignmentExpression_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AssignmentExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt394=2;
            int LA394_0 = input.LA(1);

            if ( (LA394_0==Comma) ) {
                alt394=1;
            }
            switch (alt394) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getExpressionAccess().getCommaExpressionExprsAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,Comma,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getExpressionAccess().getCommaKeyword_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_44);
                    lv_exprs_3_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"exprs",
                              		lv_exprs_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop393:
                    do {
                        int alt393=2;
                        int LA393_0 = input.LA(1);

                        if ( (LA393_0==Comma) ) {
                            alt393=1;
                        }


                        switch (alt393) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getExpressionAccess().getCommaKeyword_1_3_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_44);
                    	    lv_exprs_5_0=norm3_AssignmentExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"exprs",
                    	              		lv_exprs_5_0, 
                    	              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop393;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTemplateLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateLiteral=ruleTemplateLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTemplateLiteral() throws RecognitionException {
        EObject current = null;

        EObject lv_segments_1_0 = null;

        EObject lv_segments_2_0 = null;

        EObject lv_segments_3_0 = null;

        EObject lv_segments_5_0 = null;

        EObject lv_segments_6_0 = null;

        EObject lv_segments_8_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTemplateLiteralAccess().getTemplateLiteralAction_0(),
                          current);
                  
            }

            }
            int alt398=2;
            int LA398_0 = input.LA(1);

            if ( (LA398_0==RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) ) {
                alt398=1;
            }
            else if ( (LA398_0==RULE_TEMPLATE_HEAD) ) {
                alt398=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 398, 0, input);

                throw nvae;
            }
            switch (alt398) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsNoSubstitutionTemplateParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_segments_1_0=ruleNoSubstitutionTemplate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"segments",
                              		lv_segments_1_0, 
                              		"eu.numberfour.n4js.N4JS.NoSubstitutionTemplate");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsTemplateHeadParserRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_136);
                    lv_segments_2_0=ruleTemplateHead();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"segments",
                              		lv_segments_2_0, 
                              		"eu.numberfour.n4js.N4JS.TemplateHead");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt395=2;
                    int LA395_0 = input.LA(1);

                    if ( ((LA395_0>=Intersection && LA395_0<=Implements)||(LA395_0>=Promisify && LA395_0<=Abstract)||(LA395_0>=External && LA395_0<=Function)||(LA395_0>=Private && LA395_0<=Delete)||LA395_0==Public||LA395_0==Static||(LA395_0>=Target && LA395_0<=Await)||LA395_0==Class||(LA395_0>=False && LA395_0<=Super)||LA395_0==Union||(LA395_0>=Yield && LA395_0<=This)||(LA395_0>=From && LA395_0<=Void)||(LA395_0>=Get && LA395_0<=Set)||LA395_0==PlusSignPlusSign||LA395_0==HyphenMinusHyphenMinus||LA395_0==SolidusEqualsSign||LA395_0==As||LA395_0==Of||LA395_0==ExclamationMark||LA395_0==LeftParenthesis||LA395_0==PlusSign||LA395_0==HyphenMinus||LA395_0==Solidus||LA395_0==LessThanSign||(LA395_0>=CommercialAt && LA395_0<=LeftSquareBracket)||LA395_0==LeftCurlyBracket||LA395_0==Tilde||LA395_0==RULE_DOUBLE||(LA395_0>=RULE_HEX_INT && LA395_0<=RULE_LEGACY_OCTAL_INT)||LA395_0==RULE_SCIENTIFIC_INT||LA395_0==RULE_IDENTIFIER||LA395_0==RULE_STRING||(LA395_0>=RULE_TEMPLATE_HEAD && LA395_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA395_0==RULE_INT) ) {
                        alt395=1;
                    }
                    switch (alt395) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsExpressionParserRuleCall_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_136);
                            lv_segments_3_0=norm1_Expression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"segments",
                                      		lv_segments_3_0, 
                                      		"eu.numberfour.n4js.N4JS.Expression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateLiteralAccess().getTemplateExpressionEndParserRuleCall_1_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_137);
                    ruleTemplateExpressionEnd();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }
                    loop397:
                    do {
                        int alt397=2;
                        int LA397_0 = input.LA(1);

                        if ( (LA397_0==RULE_TEMPLATE_MIDDLE) ) {
                            alt397=1;
                        }


                        switch (alt397) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsTemplateMiddleParserRuleCall_1_1_3_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_136);
                    	    lv_segments_5_0=ruleTemplateMiddle();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"segments",
                    	              		lv_segments_5_0, 
                    	              		"eu.numberfour.n4js.N4JS.TemplateMiddle");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    int alt396=2;
                    	    int LA396_0 = input.LA(1);

                    	    if ( ((LA396_0>=Intersection && LA396_0<=Implements)||(LA396_0>=Promisify && LA396_0<=Abstract)||(LA396_0>=External && LA396_0<=Function)||(LA396_0>=Private && LA396_0<=Delete)||LA396_0==Public||LA396_0==Static||(LA396_0>=Target && LA396_0<=Await)||LA396_0==Class||(LA396_0>=False && LA396_0<=Super)||LA396_0==Union||(LA396_0>=Yield && LA396_0<=This)||(LA396_0>=From && LA396_0<=Void)||(LA396_0>=Get && LA396_0<=Set)||LA396_0==PlusSignPlusSign||LA396_0==HyphenMinusHyphenMinus||LA396_0==SolidusEqualsSign||LA396_0==As||LA396_0==Of||LA396_0==ExclamationMark||LA396_0==LeftParenthesis||LA396_0==PlusSign||LA396_0==HyphenMinus||LA396_0==Solidus||LA396_0==LessThanSign||(LA396_0>=CommercialAt && LA396_0<=LeftSquareBracket)||LA396_0==LeftCurlyBracket||LA396_0==Tilde||LA396_0==RULE_DOUBLE||(LA396_0>=RULE_HEX_INT && LA396_0<=RULE_LEGACY_OCTAL_INT)||LA396_0==RULE_SCIENTIFIC_INT||LA396_0==RULE_IDENTIFIER||LA396_0==RULE_STRING||(LA396_0>=RULE_TEMPLATE_HEAD && LA396_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA396_0==RULE_INT) ) {
                    	        alt396=1;
                    	    }
                    	    switch (alt396) {
                    	        case 1 :
                    	            {
                    	            {
                    	            if ( state.backtracking==0 ) {
                    	               
                    	              	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsExpressionParserRuleCall_1_1_3_1_0()); 
                    	              	    
                    	            }
                    	            pushFollow(FOLLOW_136);
                    	            lv_segments_6_0=norm1_Expression();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                    	              	        }
                    	                     		add(
                    	                     			current, 
                    	                     			"segments",
                    	                      		lv_segments_6_0, 
                    	                      		"eu.numberfour.n4js.N4JS.Expression");
                    	              	        afterParserOrEnumRuleCall();
                    	              	    
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	              newCompositeNode(grammarAccess.getTemplateLiteralAccess().getTemplateExpressionEndParserRuleCall_1_1_3_2()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_137);
                    	    ruleTemplateExpressionEnd();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop397;
                        }
                    } while (true);
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsTemplateTailParserRuleCall_1_1_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_segments_8_0=ruleTemplateTail();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"segments",
                              		lv_segments_8_0, 
                              		"eu.numberfour.n4js.N4JS.TemplateTail");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_TemplateLiteral() throws RecognitionException {
        EObject current = null;

        EObject lv_segments_1_0 = null;

        EObject lv_segments_2_0 = null;

        EObject lv_segments_3_0 = null;

        EObject lv_segments_5_0 = null;

        EObject lv_segments_6_0 = null;

        EObject lv_segments_8_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTemplateLiteralAccess().getTemplateLiteralAction_0(),
                          current);
                  
            }

            }
            int alt402=2;
            int LA402_0 = input.LA(1);

            if ( (LA402_0==RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) ) {
                alt402=1;
            }
            else if ( (LA402_0==RULE_TEMPLATE_HEAD) ) {
                alt402=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 402, 0, input);

                throw nvae;
            }
            switch (alt402) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsNoSubstitutionTemplateParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_segments_1_0=ruleNoSubstitutionTemplate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"segments",
                              		lv_segments_1_0, 
                              		"eu.numberfour.n4js.N4JS.NoSubstitutionTemplate");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsTemplateHeadParserRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_136);
                    lv_segments_2_0=ruleTemplateHead();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"segments",
                              		lv_segments_2_0, 
                              		"eu.numberfour.n4js.N4JS.TemplateHead");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt399=2;
                    int LA399_0 = input.LA(1);

                    if ( ((LA399_0>=Intersection && LA399_0<=Implements)||(LA399_0>=Promisify && LA399_0<=Abstract)||(LA399_0>=External && LA399_0<=Function)||(LA399_0>=Private && LA399_0<=Delete)||LA399_0==Public||LA399_0==Static||(LA399_0>=Target && LA399_0<=Await)||LA399_0==Class||(LA399_0>=False && LA399_0<=Super)||LA399_0==Union||(LA399_0>=Yield && LA399_0<=This)||(LA399_0>=From && LA399_0<=Void)||(LA399_0>=Get && LA399_0<=Set)||LA399_0==PlusSignPlusSign||LA399_0==HyphenMinusHyphenMinus||LA399_0==SolidusEqualsSign||LA399_0==As||LA399_0==Of||LA399_0==ExclamationMark||LA399_0==LeftParenthesis||LA399_0==PlusSign||LA399_0==HyphenMinus||LA399_0==Solidus||LA399_0==LessThanSign||(LA399_0>=CommercialAt && LA399_0<=LeftSquareBracket)||LA399_0==LeftCurlyBracket||LA399_0==Tilde||LA399_0==RULE_DOUBLE||(LA399_0>=RULE_HEX_INT && LA399_0<=RULE_LEGACY_OCTAL_INT)||LA399_0==RULE_SCIENTIFIC_INT||LA399_0==RULE_IDENTIFIER||LA399_0==RULE_STRING||(LA399_0>=RULE_TEMPLATE_HEAD && LA399_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA399_0==RULE_INT) ) {
                        alt399=1;
                    }
                    switch (alt399) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsExpressionParserRuleCall_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_136);
                            lv_segments_3_0=norm3_Expression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"segments",
                                      		lv_segments_3_0, 
                                      		"eu.numberfour.n4js.N4JS.Expression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateLiteralAccess().getTemplateExpressionEndParserRuleCall_1_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_137);
                    ruleTemplateExpressionEnd();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }
                    loop401:
                    do {
                        int alt401=2;
                        int LA401_0 = input.LA(1);

                        if ( (LA401_0==RULE_TEMPLATE_MIDDLE) ) {
                            alt401=1;
                        }


                        switch (alt401) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsTemplateMiddleParserRuleCall_1_1_3_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_136);
                    	    lv_segments_5_0=ruleTemplateMiddle();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"segments",
                    	              		lv_segments_5_0, 
                    	              		"eu.numberfour.n4js.N4JS.TemplateMiddle");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    int alt400=2;
                    	    int LA400_0 = input.LA(1);

                    	    if ( ((LA400_0>=Intersection && LA400_0<=Implements)||(LA400_0>=Promisify && LA400_0<=Abstract)||(LA400_0>=External && LA400_0<=Function)||(LA400_0>=Private && LA400_0<=Delete)||LA400_0==Public||LA400_0==Static||(LA400_0>=Target && LA400_0<=Await)||LA400_0==Class||(LA400_0>=False && LA400_0<=Super)||LA400_0==Union||(LA400_0>=Yield && LA400_0<=This)||(LA400_0>=From && LA400_0<=Void)||(LA400_0>=Get && LA400_0<=Set)||LA400_0==PlusSignPlusSign||LA400_0==HyphenMinusHyphenMinus||LA400_0==SolidusEqualsSign||LA400_0==As||LA400_0==Of||LA400_0==ExclamationMark||LA400_0==LeftParenthesis||LA400_0==PlusSign||LA400_0==HyphenMinus||LA400_0==Solidus||LA400_0==LessThanSign||(LA400_0>=CommercialAt && LA400_0<=LeftSquareBracket)||LA400_0==LeftCurlyBracket||LA400_0==Tilde||LA400_0==RULE_DOUBLE||(LA400_0>=RULE_HEX_INT && LA400_0<=RULE_LEGACY_OCTAL_INT)||LA400_0==RULE_SCIENTIFIC_INT||LA400_0==RULE_IDENTIFIER||LA400_0==RULE_STRING||(LA400_0>=RULE_TEMPLATE_HEAD && LA400_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA400_0==RULE_INT) ) {
                    	        alt400=1;
                    	    }
                    	    switch (alt400) {
                    	        case 1 :
                    	            {
                    	            {
                    	            if ( state.backtracking==0 ) {
                    	               
                    	              	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsExpressionParserRuleCall_1_1_3_1_0()); 
                    	              	    
                    	            }
                    	            pushFollow(FOLLOW_136);
                    	            lv_segments_6_0=norm3_Expression();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                    	              	        }
                    	                     		add(
                    	                     			current, 
                    	                     			"segments",
                    	                      		lv_segments_6_0, 
                    	                      		"eu.numberfour.n4js.N4JS.Expression");
                    	              	        afterParserOrEnumRuleCall();
                    	              	    
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	              newCompositeNode(grammarAccess.getTemplateLiteralAccess().getTemplateExpressionEndParserRuleCall_1_1_3_2()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_137);
                    	    ruleTemplateExpressionEnd();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop401;
                        }
                    } while (true);
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsTemplateTailParserRuleCall_1_1_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_segments_8_0=ruleTemplateTail();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"segments",
                              		lv_segments_8_0, 
                              		"eu.numberfour.n4js.N4JS.TemplateTail");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleTemplateExpressionEnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTemplateExpressionEnd = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateExpressionEndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateExpressionEnd=ruleTemplateExpressionEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateExpressionEnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleTemplateExpressionEnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); setInTemplateSegment();
            
        try {
            {
            kw=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getTemplateExpressionEndAccess().getRightCurlyBracketKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleNoSubstitutionTemplate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNoSubstitutionTemplate = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNoSubstitutionTemplateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNoSubstitutionTemplate=ruleNoSubstitutionTemplate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNoSubstitutionTemplate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleNoSubstitutionTemplate() throws RecognitionException {
        EObject current = null;

        Token lv_rawValue_1_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getNoSubstitutionTemplateAccess().getTemplateSegmentAction_0(),
                          current);
                  
            }

            }
            {
            {
            lv_rawValue_1_0=(Token)match(input,RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_rawValue_1_0, grammarAccess.getNoSubstitutionTemplateAccess().getRawValueNO_SUBSTITUTION_TEMPLATE_LITERALTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getNoSubstitutionTemplateRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"rawValue",
                      		lv_rawValue_1_0, 
                      		"eu.numberfour.n4js.N4JS.NO_SUBSTITUTION_TEMPLATE_LITERAL");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTemplateHead() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateHead = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateHeadRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateHead=ruleTemplateHead();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateHead; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTemplateHead() throws RecognitionException {
        EObject current = null;

        Token lv_rawValue_1_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTemplateHeadAccess().getTemplateSegmentAction_0(),
                          current);
                  
            }

            }
            {
            {
            lv_rawValue_1_0=(Token)match(input,RULE_TEMPLATE_HEAD,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_rawValue_1_0, grammarAccess.getTemplateHeadAccess().getRawValueTEMPLATE_HEADTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTemplateHeadRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"rawValue",
                      		lv_rawValue_1_0, 
                      		"eu.numberfour.n4js.N4JS.TEMPLATE_HEAD");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTemplateTail() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateTail = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateTailRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateTail=ruleTemplateTail();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateTail; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTemplateTail() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_rawValue_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTemplateTailAccess().getTemplateSegmentAction_0(),
                          current);
                  
            }

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTemplateTailAccess().getRawValueTemplateTailLiteralParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_rawValue_1_0=ruleTemplateTailLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTemplateTailRule());
              	        }
                     		set(
                     			current, 
                     			"rawValue",
                      		lv_rawValue_1_0, 
                      		"eu.numberfour.n4js.N4JS.TemplateTailLiteral");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTemplateMiddle() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateMiddle = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateMiddleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateMiddle=ruleTemplateMiddle();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateMiddle; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTemplateMiddle() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_rawValue_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTemplateMiddleAccess().getTemplateSegmentAction_0(),
                          current);
                  
            }

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTemplateMiddleAccess().getRawValueTemplateMiddleLiteralParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_rawValue_1_0=ruleTemplateMiddleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTemplateMiddleRule());
              	        }
                     		set(
                     			current, 
                     			"rawValue",
                      		lv_rawValue_1_0, 
                      		"eu.numberfour.n4js.N4JS.TemplateMiddleLiteral");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteral=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_NumericLiteral_0 = null;

        EObject this_BooleanLiteral_1 = null;

        EObject this_StringLiteral_2 = null;

        EObject this_NullLiteral_3 = null;

        EObject this_RegularExpressionLiteral_4 = null;


         enterRule(); 
            
        try {
            {
            int alt403=5;
            switch ( input.LA(1) ) {
            case RULE_DOUBLE:
            case RULE_HEX_INT:
            case RULE_BINARY_INT:
            case RULE_OCTAL_INT:
            case RULE_LEGACY_OCTAL_INT:
            case RULE_SCIENTIFIC_INT:
            case RULE_INT:
                {
                alt403=1;
                }
                break;
            case False:
            case True:
                {
                alt403=2;
                }
                break;
            case RULE_STRING:
                {
                alt403=3;
                }
                break;
            case Null:
                {
                alt403=4;
                }
                break;
            case SolidusEqualsSign:
            case Solidus:
                {
                alt403=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 403, 0, input);

                throw nvae;
            }

            switch (alt403) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLiteralAccess().getNumericLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_NumericLiteral_0=ruleNumericLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NumericLiteral_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BooleanLiteral_1=ruleBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BooleanLiteral_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_StringLiteral_2=ruleStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_StringLiteral_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_NullLiteral_3=ruleNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NullLiteral_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLiteralAccess().getRegularExpressionLiteralParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_RegularExpressionLiteral_4=ruleRegularExpressionLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_RegularExpressionLiteral_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNullLiteral=ruleNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleNullLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getNullLiteralAccess().getNullLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Null,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getNullLiteralAccess().getNullKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBooleanLiteral=ruleBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_true_1_0=null;
        Token otherlv_2=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0(),
                          current);
                  
            }

            }
            int alt404=2;
            int LA404_0 = input.LA(1);

            if ( (LA404_0==True) ) {
                alt404=1;
            }
            else if ( (LA404_0==False) ) {
                alt404=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 404, 0, input);

                throw nvae;
            }
            switch (alt404) {
                case 1 :
                    {
                    {
                    {
                    lv_true_1_0=(Token)match(input,True,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_true_1_0, grammarAccess.getBooleanLiteralAccess().getTrueTrueKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBooleanLiteralRule());
                      	        }
                             		setWithLastConsumed(current, "true", true, "true");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    otherlv_2=(Token)match(input,False,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStringLiteral=ruleStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getStringLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.STRING");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleNumericLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumericLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumericLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumericLiteral=ruleNumericLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumericLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleNumericLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_DoubleLiteral_0 = null;

        EObject this_IntLiteral_1 = null;

        EObject this_BinaryIntLiteral_2 = null;

        EObject this_OctalIntLiteral_3 = null;

        EObject this_LegacyOctalIntLiteral_4 = null;

        EObject this_HexIntLiteral_5 = null;

        EObject this_ScientificIntLiteral_6 = null;


         enterRule(); 
            
        try {
            {
            int alt405=7;
            switch ( input.LA(1) ) {
            case RULE_DOUBLE:
                {
                alt405=1;
                }
                break;
            case RULE_INT:
                {
                alt405=2;
                }
                break;
            case RULE_BINARY_INT:
                {
                alt405=3;
                }
                break;
            case RULE_OCTAL_INT:
                {
                alt405=4;
                }
                break;
            case RULE_LEGACY_OCTAL_INT:
                {
                alt405=5;
                }
                break;
            case RULE_HEX_INT:
                {
                alt405=6;
                }
                break;
            case RULE_SCIENTIFIC_INT:
                {
                alt405=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 405, 0, input);

                throw nvae;
            }

            switch (alt405) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getDoubleLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DoubleLiteral_0=ruleDoubleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DoubleLiteral_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getIntLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IntLiteral_1=ruleIntLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IntLiteral_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getBinaryIntLiteralParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BinaryIntLiteral_2=ruleBinaryIntLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BinaryIntLiteral_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getOctalIntLiteralParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_OctalIntLiteral_3=ruleOctalIntLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_OctalIntLiteral_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getLegacyOctalIntLiteralParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_LegacyOctalIntLiteral_4=ruleLegacyOctalIntLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LegacyOctalIntLiteral_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getHexIntLiteralParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_HexIntLiteral_5=ruleHexIntLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_HexIntLiteral_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getScientificIntLiteralParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ScientificIntLiteral_6=ruleScientificIntLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ScientificIntLiteral_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleDoubleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDoubleLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDoubleLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDoubleLiteral=ruleDoubleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDoubleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleDoubleLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_DOUBLE,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getDoubleLiteralAccess().getValueDOUBLETerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDoubleLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.DOUBLE");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleIntLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntLiteral=ruleIntLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIntLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getIntLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleOctalIntLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOctalIntLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOctalIntLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOctalIntLiteral=ruleOctalIntLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOctalIntLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleOctalIntLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_OCTAL_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getOctalIntLiteralAccess().getValueOCTAL_INTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getOctalIntLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.OCTAL_INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLegacyOctalIntLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLegacyOctalIntLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLegacyOctalIntLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLegacyOctalIntLiteral=ruleLegacyOctalIntLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLegacyOctalIntLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLegacyOctalIntLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_LEGACY_OCTAL_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getLegacyOctalIntLiteralAccess().getValueLEGACY_OCTAL_INTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getLegacyOctalIntLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.LEGACY_OCTAL_INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleHexIntLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHexIntLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHexIntLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHexIntLiteral=ruleHexIntLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHexIntLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleHexIntLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_HEX_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getHexIntLiteralAccess().getValueHEX_INTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getHexIntLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.HEX_INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBinaryIntLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBinaryIntLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBinaryIntLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBinaryIntLiteral=ruleBinaryIntLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBinaryIntLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBinaryIntLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_BINARY_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getBinaryIntLiteralAccess().getValueBINARY_INTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getBinaryIntLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.BINARY_INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleScientificIntLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScientificIntLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScientificIntLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleScientificIntLiteral=ruleScientificIntLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScientificIntLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleScientificIntLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_SCIENTIFIC_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getScientificIntLiteralAccess().getValueSCIENTIFIC_INTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getScientificIntLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.SCIENTIFIC_INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleRegularExpressionLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRegularExpressionLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRegularExpressionLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRegularExpressionLiteral=ruleRegularExpressionLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRegularExpressionLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleRegularExpressionLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRegularExpressionLiteralAccess().getValueREGEX_LITERALParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_value_0_0=ruleREGEX_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRegularExpressionLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.REGEX_LITERAL");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleNumericLiteralAsString() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumericLiteralAsString = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumericLiteralAsStringRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumericLiteralAsString=ruleNumericLiteralAsString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumericLiteralAsString.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleNumericLiteralAsString() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_DOUBLE_0=null;
        Token this_INT_1=null;
        Token this_OCTAL_INT_2=null;
        Token this_HEX_INT_3=null;
        Token this_SCIENTIFIC_INT_4=null;

         enterRule(); 
            
        try {
            {
            int alt406=5;
            switch ( input.LA(1) ) {
            case RULE_DOUBLE:
                {
                alt406=1;
                }
                break;
            case RULE_INT:
                {
                alt406=2;
                }
                break;
            case RULE_OCTAL_INT:
                {
                alt406=3;
                }
                break;
            case RULE_HEX_INT:
                {
                alt406=4;
                }
                break;
            case RULE_SCIENTIFIC_INT:
                {
                alt406=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 406, 0, input);

                throw nvae;
            }

            switch (alt406) {
                case 1 :
                    {
                    this_DOUBLE_0=(Token)match(input,RULE_DOUBLE,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_DOUBLE_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_DOUBLE_0, grammarAccess.getNumericLiteralAsStringAccess().getDOUBLETerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    this_INT_1=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_INT_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_INT_1, grammarAccess.getNumericLiteralAsStringAccess().getINTTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    this_OCTAL_INT_2=(Token)match(input,RULE_OCTAL_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OCTAL_INT_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_OCTAL_INT_2, grammarAccess.getNumericLiteralAsStringAccess().getOCTAL_INTTerminalRuleCall_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    this_HEX_INT_3=(Token)match(input,RULE_HEX_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_HEX_INT_3);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_HEX_INT_3, grammarAccess.getNumericLiteralAsStringAccess().getHEX_INTTerminalRuleCall_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    this_SCIENTIFIC_INT_4=(Token)match(input,RULE_SCIENTIFIC_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_SCIENTIFIC_INT_4);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_SCIENTIFIC_INT_4, grammarAccess.getNumericLiteralAsStringAccess().getSCIENTIFIC_INTTerminalRuleCall_4()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleIdentifierOrThis() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdentifierOrThis = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierOrThisRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentifierOrThis=ruleIdentifierOrThis();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifierOrThis.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleIdentifierOrThis() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENTIFIER_0=null;
        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt407=4;
            switch ( input.LA(1) ) {
            case RULE_IDENTIFIER:
                {
                alt407=1;
                }
                break;
            case This:
                {
                alt407=2;
                }
                break;
            case Promisify:
                {
                alt407=3;
                }
                break;
            case Target:
                {
                alt407=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 407, 0, input);

                throw nvae;
            }

            switch (alt407) {
                case 1 :
                    {
                    this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENTIFIER_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENTIFIER_0, grammarAccess.getIdentifierOrThisAccess().getIDENTIFIERTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,This,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIdentifierOrThisAccess().getThisKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,Promisify,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIdentifierOrThisAccess().getPromisifyKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,Target,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIdentifierOrThisAccess().getTargetKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleAnnotationName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAnnotationName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotationName=ruleAnnotationName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleAnnotationName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENTIFIER_0=null;
        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt408=3;
            switch ( input.LA(1) ) {
            case RULE_IDENTIFIER:
                {
                alt408=1;
                }
                break;
            case This:
                {
                alt408=2;
                }
                break;
            case Target:
                {
                alt408=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 408, 0, input);

                throw nvae;
            }

            switch (alt408) {
                case 1 :
                    {
                    this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENTIFIER_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENTIFIER_0, grammarAccess.getAnnotationNameAccess().getIDENTIFIERTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,This,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAnnotationNameAccess().getThisKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,Target,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAnnotationNameAccess().getTargetKeyword_2()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleREGEX_LITERAL() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleREGEX_LITERAL = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getREGEX_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleREGEX_LITERAL=ruleREGEX_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleREGEX_LITERAL.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleREGEX_LITERAL() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_REGEX_TAIL_2=null;

         enterRule(); setInRegularExpression();
            
        try {
            {
            {
            int alt409=2;
            int LA409_0 = input.LA(1);

            if ( (LA409_0==Solidus) ) {
                alt409=1;
            }
            else if ( (LA409_0==SolidusEqualsSign) ) {
                alt409=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 409, 0, input);

                throw nvae;
            }
            switch (alt409) {
                case 1 :
                    {
                    kw=(Token)match(input,Solidus,FOLLOW_138); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getREGEX_LITERALAccess().getSolidusKeyword_0_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,SolidusEqualsSign,FOLLOW_138); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getREGEX_LITERALAccess().getSolidusEqualsSignKeyword_0_1()); 
                          
                    }

                    }
                    break;

            }
            int alt410=2;
            int LA410_0 = input.LA(1);

            if ( (LA410_0==RULE_REGEX_TAIL) ) {
                alt410=1;
            }
            switch (alt410) {
                case 1 :
                    {
                    this_REGEX_TAIL_2=(Token)match(input,RULE_REGEX_TAIL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_REGEX_TAIL_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_REGEX_TAIL_2, grammarAccess.getREGEX_LITERALAccess().getREGEX_TAILTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleTemplateTailLiteral() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTemplateTailLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateTailLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateTailLiteral=ruleTemplateTailLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateTailLiteral.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleTemplateTailLiteral() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_TEMPLATE_END_0=null;

         enterRule(); 
            
        try {
            {
            int alt411=2;
            int LA411_0 = input.LA(1);

            if ( (LA411_0==RULE_TEMPLATE_END) ) {
                alt411=1;
            }
            switch (alt411) {
                case 1 :
                    {
                    this_TEMPLATE_END_0=(Token)match(input,RULE_TEMPLATE_END,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_TEMPLATE_END_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_TEMPLATE_END_0, grammarAccess.getTemplateTailLiteralAccess().getTEMPLATE_ENDTerminalRuleCall()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleTemplateMiddleLiteral() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTemplateMiddleLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateMiddleLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateMiddleLiteral=ruleTemplateMiddleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateMiddleLiteral.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleTemplateMiddleLiteral() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_TEMPLATE_MIDDLE_0=null;

         enterRule(); 
            
        try {
            {
            this_TEMPLATE_MIDDLE_0=(Token)match(input,RULE_TEMPLATE_MIDDLE,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_TEMPLATE_MIDDLE_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_TEMPLATE_MIDDLE_0, grammarAccess.getTemplateMiddleLiteralAccess().getTEMPLATE_MIDDLETerminalRuleCall()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleSemi() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSemi = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSemiRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSemi=ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSemi.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleSemi() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
        		int marker = input.mark();
        		promoteEOL();    
        try {
            int alt412=3;
            switch ( input.LA(1) ) {
            case Semicolon:
                {
                alt412=1;
                }
                break;
            case EOF:
            case RULE_ML_COMMENT:
            case RULE_EOL:
                {
                alt412=2;
                }
                break;
            case RightCurlyBracket:
                {
                alt412=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 412, 0, input);

                throw nvae;
            }

            switch (alt412) {
                case 1 :
                    {
                    kw=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getSemiAccess().getSemicolonKeyword()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)input.LT(1);
                    if ( input.LA(1)==EOF||input.LA(1)==RULE_ML_COMMENT||input.LA(1)==RULE_EOL ) {
                        input.consume();
                        state.errorRecovery=false;state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }

                    if ( state.backtracking==0 ) {

                              addASIMessage();
                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getSemiAccess().getSemicolonKeyword()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( !(( forcedRewind(marker) )) ) {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        throw new FailedPredicateException(input, "ruleSemi", " forcedRewind(marker) ");
                    }

                    }
                    break;

            }
            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
   // REPLACEMENT ruleNoLineTerminator.java.replacement START
 public final EObject ruleNoLineTerminator(EObject in_current) throws RecognitionException {
    	EObject current = in_current;
    	if (state.backtracking==0) {
    		promoteEOL();
    	}
    	if (hasDisallowedEOL()) { 
        	if (state.backtracking==0) {
        		NoViableAltException nvae = new NoViableAltException("", 0, 0, input);
                reportError(nvae);
                throw nvae;
        	}
        	state.failed=true; 
        	return current;
        }
        return current;
    }
// REPLACEMENT ruleNoLineTerminator.java.replacement END
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_AnnotationNoAtSign_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,CommercialAt,FOLLOW_139); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotationAccess().getAnnotationNoAtSignParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_AnnotationNoAtSign_1=ruleAnnotationNoAtSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AnnotationNoAtSign_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleScriptAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScriptAnnotation = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScriptAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleScriptAnnotation=ruleScriptAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScriptAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleScriptAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_AnnotationNoAtSign_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,CommercialAtCommercialAt,FOLLOW_139); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getScriptAnnotationAccess().getCommercialAtCommercialAtKeyword_0());
                  
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getScriptAnnotationAccess().getAnnotationNoAtSignParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_AnnotationNoAtSign_1=ruleAnnotationNoAtSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AnnotationNoAtSign_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotationNoAtSign() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotationNoAtSign = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationNoAtSignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotationNoAtSign=ruleAnnotationNoAtSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationNoAtSign; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotationNoAtSign() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_args_2_0 = null;

        EObject lv_args_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAnnotationNoAtSignAccess().getNameAnnotationNameParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_105);
            lv_name_0_0=ruleAnnotationName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAnnotationNoAtSignRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.N4JS.AnnotationName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt416=2;
            alt416 = dfa416.predict(input);
            switch (alt416) {
                case 1 :
                    {
                    {
                    otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getAnnotationNoAtSignAccess().getLeftParenthesisKeyword_1_0());
                          
                    }

                    }
                    int alt415=2;
                    int LA415_0 = input.LA(1);

                    if ( ((LA415_0>=Intersection && LA415_0<=Constructor)||LA415_0==Promisify||LA415_0==Target||LA415_0==Await||LA415_0==False||LA415_0==Union||LA415_0==This||(LA415_0>=Null && LA415_0<=Void)||LA415_0==SolidusEqualsSign||LA415_0==LeftParenthesis||LA415_0==Solidus||LA415_0==QuestionMark||LA415_0==LeftSquareBracket||LA415_0==LeftCurlyBracket||LA415_0==Tilde||LA415_0==RULE_DOUBLE||(LA415_0>=RULE_HEX_INT && LA415_0<=RULE_LEGACY_OCTAL_INT)||LA415_0==RULE_SCIENTIFIC_INT||LA415_0==RULE_IDENTIFIER||LA415_0==RULE_STRING||LA415_0==RULE_INT) ) {
                        alt415=1;
                    }
                    switch (alt415) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotationNoAtSignAccess().getArgsAnnotationArgumentParserRuleCall_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_args_2_0=ruleAnnotationArgument();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotationNoAtSignRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"args",
                                      		lv_args_2_0, 
                                      		"eu.numberfour.n4js.N4JS.AnnotationArgument");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop414:
                            do {
                                int alt414=2;
                                int LA414_0 = input.LA(1);

                                if ( (LA414_0==Comma) ) {
                                    alt414=1;
                                }


                                switch (alt414) {
                            	case 1 :
                            	    {
                            	    otherlv_3=(Token)match(input,Comma,FOLLOW_141); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_3, grammarAccess.getAnnotationNoAtSignAccess().getCommaKeyword_1_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotationNoAtSignAccess().getArgsAnnotationArgumentParserRuleCall_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_args_4_0=ruleAnnotationArgument();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotationNoAtSignRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"args",
                            	              		lv_args_4_0, 
                            	              		"eu.numberfour.n4js.N4JS.AnnotationArgument");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop414;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getAnnotationNoAtSignAccess().getRightParenthesisKeyword_1_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotationArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotationArgument = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotationArgument=ruleAnnotationArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotationArgument() throws RecognitionException {
        EObject current = null;

        EObject this_LiteralAnnotationArgument_0 = null;

        EObject this_TypeRefAnnotationArgument_1 = null;


         enterRule(); 
            
        try {
            {
            int alt417=2;
            int LA417_0 = input.LA(1);

            if ( (LA417_0==False||LA417_0==Null||LA417_0==True||LA417_0==SolidusEqualsSign||LA417_0==Solidus||LA417_0==RULE_DOUBLE||(LA417_0>=RULE_HEX_INT && LA417_0<=RULE_LEGACY_OCTAL_INT)||LA417_0==RULE_SCIENTIFIC_INT||LA417_0==RULE_STRING||LA417_0==RULE_INT) ) {
                alt417=1;
            }
            else if ( ((LA417_0>=Intersection && LA417_0<=Constructor)||LA417_0==Promisify||LA417_0==Target||LA417_0==Await||LA417_0==Union||LA417_0==This||LA417_0==This_1||(LA417_0>=Type && LA417_0<=Void)||LA417_0==LeftParenthesis||LA417_0==QuestionMark||LA417_0==LeftSquareBracket||LA417_0==LeftCurlyBracket||LA417_0==Tilde||LA417_0==RULE_IDENTIFIER) ) {
                alt417=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 417, 0, input);

                throw nvae;
            }
            switch (alt417) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotationArgumentAccess().getLiteralAnnotationArgumentParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralAnnotationArgument_0=ruleLiteralAnnotationArgument();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LiteralAnnotationArgument_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotationArgumentAccess().getTypeRefAnnotationArgumentParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeRefAnnotationArgument_1=ruleTypeRefAnnotationArgument();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeRefAnnotationArgument_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLiteralAnnotationArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralAnnotationArgument = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralAnnotationArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralAnnotationArgument=ruleLiteralAnnotationArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralAnnotationArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLiteralAnnotationArgument() throws RecognitionException {
        EObject current = null;

        EObject lv_literal_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLiteralAnnotationArgumentAccess().getLiteralLiteralParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_literal_0_0=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLiteralAnnotationArgumentRule());
              	        }
                     		set(
                     			current, 
                     			"literal",
                      		lv_literal_0_0, 
                      		"eu.numberfour.n4js.N4JS.Literal");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeRefAnnotationArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRefAnnotationArgument = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefAnnotationArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeRefAnnotationArgument=ruleTypeRefAnnotationArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRefAnnotationArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeRefAnnotationArgument() throws RecognitionException {
        EObject current = null;

        EObject lv_typeRef_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypeRefAnnotationArgumentAccess().getTypeRefTypeRefParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_typeRef_0_0=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeRefAnnotationArgumentRule());
              	        }
                     		set(
                     			current, 
                     			"typeRef",
                      		lv_typeRef_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotationList = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotationList=ruleAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotationList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_2_0 = null;

        EObject lv_annotations_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAnnotationListAccess().getAnnotationListAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,CommercialAt,FOLLOW_139); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAnnotationListAccess().getCommercialAtKeyword_0_0_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAnnotationListAccess().getAnnotationsAnnotationNoAtSignParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_142);
            lv_annotations_2_0=ruleAnnotationNoAtSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAnnotationListRule());
              	        }
                     		add(
                     			current, 
                     			"annotations",
                      		lv_annotations_2_0, 
                      		"eu.numberfour.n4js.N4JS.AnnotationNoAtSign");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }
            loop418:
            do {
                int alt418=2;
                int LA418_0 = input.LA(1);

                if ( (LA418_0==CommercialAt) ) {
                    alt418=1;
                }


                switch (alt418) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAnnotationListAccess().getAnnotationsAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_annotations_3_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAnnotationListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_3_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop418;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExpressionAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionAnnotationList = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionAnnotationListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionAnnotationList=ruleExpressionAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionAnnotationList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExpressionAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExpressionAnnotationListAccess().getExpressionAnnotationListAction_0(),
                          current);
                  
            }

            }
            int cnt419=0;
            loop419:
            do {
                int alt419=2;
                int LA419_0 = input.LA(1);

                if ( (LA419_0==CommercialAt) ) {
                    alt419=1;
                }


                switch (alt419) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getExpressionAnnotationListAccess().getAnnotationsAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getExpressionAnnotationListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt419 >= 1 ) break loop419;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(419, input);
                        throw eee;
                }
                cnt419++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertyAssignmentAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyAssignmentAnnotationList = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyAssignmentAnnotationListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyAssignmentAnnotationList=rulePropertyAssignmentAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyAssignmentAnnotationList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertyAssignmentAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyAssignmentAnnotationListAccess().getPropertyAssignmentAnnotationListAction_0(),
                          current);
                  
            }

            }
            int cnt420=0;
            loop420:
            do {
                int alt420=2;
                int LA420_0 = input.LA(1);

                if ( (LA420_0==CommercialAt) ) {
                    alt420=1;
                }


                switch (alt420) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPropertyAssignmentAnnotationListAccess().getAnnotationsAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPropertyAssignmentAnnotationListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt420 >= 1 ) break loop420;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(420, input);
                        throw eee;
                }
                cnt420++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4MemberAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4MemberAnnotationList = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4MemberAnnotationListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4MemberAnnotationList=ruleN4MemberAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4MemberAnnotationList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4MemberAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4MemberAnnotationListAccess().getN4MemberAnnotationListAction_0(),
                          current);
                  
            }

            }
            int cnt421=0;
            loop421:
            do {
                int alt421=2;
                int LA421_0 = input.LA(1);

                if ( (LA421_0==CommercialAt) ) {
                    alt421=1;
                }


                switch (alt421) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4MemberAnnotationListAccess().getAnnotationsAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_142);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4MemberAnnotationListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt421 >= 1 ) break loop421;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(421, input);
                        throw eee;
                }
                cnt421++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleTypeReferenceName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTypeReferenceName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeReferenceNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeReferenceName=ruleTypeReferenceName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeReferenceName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleTypeReferenceName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedTypeReferenceName_5 = null;


         enterRule(); 
            
        try {
            {
            int alt422=6;
            switch ( input.LA(1) ) {
            case Void:
                {
                alt422=1;
                }
                break;
            case This:
                {
                alt422=2;
                }
                break;
            case Await:
                {
                alt422=3;
                }
                break;
            case Promisify:
                {
                alt422=4;
                }
                break;
            case Target:
                {
                alt422=5;
                }
                break;
            case RULE_IDENTIFIER:
                {
                alt422=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 422, 0, input);

                throw nvae;
            }

            switch (alt422) {
                case 1 :
                    {
                    kw=(Token)match(input,Void,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeReferenceNameAccess().getVoidKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,This,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeReferenceNameAccess().getThisKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,Await,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeReferenceNameAccess().getAwaitKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,Promisify,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeReferenceNameAccess().getPromisifyKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    kw=(Token)match(input,Target,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeReferenceNameAccess().getTargetKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeReferenceNameAccess().getQualifiedTypeReferenceNameParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_QualifiedTypeReferenceName_5=ruleQualifiedTypeReferenceName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_QualifiedTypeReferenceName_5);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleQualifiedTypeReferenceName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedTypeReferenceName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedTypeReferenceNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedTypeReferenceName=ruleQualifiedTypeReferenceName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedTypeReferenceName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleQualifiedTypeReferenceName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENTIFIER_0=null;
        Token kw=null;
        Token this_IDENTIFIER_2=null;

         enterRule(); 
            
        try {
            {
            {
            this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_IDENTIFIER_0, grammarAccess.getQualifiedTypeReferenceNameAccess().getIDENTIFIERTerminalRuleCall_0()); 
                  
            }
            int alt423=2;
            int LA423_0 = input.LA(1);

            if ( (LA423_0==FullStop) ) {
                alt423=1;
            }
            switch (alt423) {
                case 1 :
                    {
                    kw=(Token)match(input,FullStop,FOLLOW_143); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQualifiedTypeReferenceNameAccess().getFullStopKeyword_1_0()); 
                          
                    }
                    this_IDENTIFIER_2=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENTIFIER_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENTIFIER_2, grammarAccess.getQualifiedTypeReferenceNameAccess().getIDENTIFIERTerminalRuleCall_1_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4ClassDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4ClassDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4ClassDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4ClassDeclaration=ruleN4ClassDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4ClassDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4ClassDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        AntlrDatatypeRuleToken lv_typingStrategy_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        EObject this_TypeVariables_5 = null;

        EObject this_ClassExtendsClause_6 = null;

        EObject this_Members_7 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4ClassDeclarationAccess().getN4ClassDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop424:
            do {
                int alt424=2;
                int LA424_0 = input.LA(1);

                if ( ((LA424_0>=Protected && LA424_0<=Abstract)||LA424_0==External||(LA424_0>=Private && LA424_0<=Project)||LA424_0==Public||LA424_0==Static||LA424_0==Const) ) {
                    alt424=1;
                }


                switch (alt424) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4ClassDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_20);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4ClassDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop424;
                }
            } while (true);

            otherlv_2=(Token)match(input,Class,FOLLOW_144); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getN4ClassDeclarationAccess().getClassKeyword_0_0_2());
                  
            }
            int alt425=2;
            int LA425_0 = input.LA(1);

            if ( (LA425_0==Tilde) ) {
                alt425=1;
            }
            switch (alt425) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4ClassDeclarationAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_67);
                    lv_typingStrategy_3_0=ruleTypingStrategyDefSiteOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4ClassDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"typingStrategy",
                              		lv_typingStrategy_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyDefSiteOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt426=2;
            int LA426_0 = input.LA(1);

            if ( ((LA426_0>=Intersection && LA426_0<=Constructor)||(LA426_0>=Promisify && LA426_0<=Abstract)||LA426_0==External||(LA426_0>=Private && LA426_0<=Project)||LA426_0==Public||LA426_0==Static||LA426_0==Target||(LA426_0>=Async && LA426_0<=Await)||LA426_0==Union||(LA426_0>=Yield && LA426_0<=This)||LA426_0==From||LA426_0==Type||(LA426_0>=Get && LA426_0<=Let)||(LA426_0>=Out && LA426_0<=Set)||LA426_0==As||LA426_0==Of||LA426_0==RULE_IDENTIFIER) ) {
                alt426=1;
            }
            else if ( (LA426_0==Implements) ) {
                int LA426_2 = input.LA(2);

                if ( (LA426_2==Implements||LA426_2==Extends||LA426_2==LessThanSign||LA426_2==LeftCurlyBracket) ) {
                    alt426=1;
                }
            }
            switch (alt426) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4ClassDeclarationAccess().getNameBindingIdentifierParserRuleCall_0_0_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_22);
                    lv_name_4_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4ClassDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }
            int alt427=2;
            int LA427_0 = input.LA(1);

            if ( (LA427_0==LessThanSign) ) {
                alt427=1;
            }
            switch (alt427) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4ClassDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4ClassDeclarationAccess().getTypeVariablesParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_22);
                    this_TypeVariables_5=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt428=2;
            int LA428_0 = input.LA(1);

            if ( (LA428_0==Implements||LA428_0==Extends) ) {
                alt428=1;
            }
            switch (alt428) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4ClassDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4ClassDeclarationAccess().getClassExtendsClauseParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_22);
                    this_ClassExtendsClause_6=ruleClassExtendsClause(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ClassExtendsClause_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4ClassDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4ClassDeclarationAccess().getMembersParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_Members_7=ruleMembers(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_Members_7;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleMembers(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedMembersRaw_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftCurlyBracket,FOLLOW_99); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getMembersAccess().getLeftCurlyBracketKeyword_0());
                  
            }
            loop429:
            do {
                int alt429=2;
                int LA429_0 = input.LA(1);

                if ( ((LA429_0>=Intersection && LA429_0<=With)||(LA429_0>=For && LA429_0<=Var)||(LA429_0>=As && LA429_0<=Of)||LA429_0==LeftParenthesis||LA429_0==Asterisk||LA429_0==LessThanSign||(LA429_0>=QuestionMark && LA429_0<=LeftSquareBracket)||LA429_0==LeftCurlyBracket||LA429_0==Tilde||LA429_0==RULE_DOUBLE||LA429_0==RULE_HEX_INT||LA429_0==RULE_OCTAL_INT||LA429_0==RULE_SCIENTIFIC_INT||LA429_0==RULE_IDENTIFIER||LA429_0==RULE_STRING||LA429_0==RULE_INT) ) {
                    alt429=1;
                }


                switch (alt429) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMembersAccess().getOwnedMembersRawN4MemberDeclarationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_99);
            	    lv_ownedMembersRaw_1_0=ruleN4MemberDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMembersRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"ownedMembersRaw",
            	              		lv_ownedMembersRaw_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4MemberDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop429;
                }
            } while (true);

            otherlv_2=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getMembersAccess().getRightCurlyBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_Members(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedMembersRaw_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftCurlyBracket,FOLLOW_99); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getMembersAccess().getLeftCurlyBracketKeyword_0());
                  
            }
            loop430:
            do {
                int alt430=2;
                int LA430_0 = input.LA(1);

                if ( ((LA430_0>=Intersection && LA430_0<=With)||(LA430_0>=For && LA430_0<=Var)||(LA430_0>=As && LA430_0<=Of)||LA430_0==LeftParenthesis||LA430_0==Asterisk||LA430_0==LessThanSign||(LA430_0>=QuestionMark && LA430_0<=LeftSquareBracket)||LA430_0==LeftCurlyBracket||LA430_0==Tilde||LA430_0==RULE_DOUBLE||LA430_0==RULE_HEX_INT||LA430_0==RULE_OCTAL_INT||LA430_0==RULE_SCIENTIFIC_INT||LA430_0==RULE_IDENTIFIER||LA430_0==RULE_STRING||LA430_0==RULE_INT) ) {
                    alt430=1;
                }


                switch (alt430) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMembersAccess().getOwnedMembersRawN4MemberDeclarationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_99);
            	    lv_ownedMembersRaw_1_0=norm1_N4MemberDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMembersRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"ownedMembersRaw",
            	              		lv_ownedMembersRaw_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4MemberDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop430;
                }
            } while (true);

            otherlv_2=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getMembersAccess().getRightCurlyBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleClassExtendsClause(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        EObject lv_superClassRef_1_0 = null;

        EObject this_ClassImplementsList_4 = null;

        EObject lv_superClassExpression_5_0 = null;

        EObject this_ClassImplementsList_7 = null;


         enterRule(); 
            
        try {
            {
            int alt434=2;
            int LA434_0 = input.LA(1);

            if ( (LA434_0==Extends) ) {
                alt434=1;
            }
            else if ( (LA434_0==Implements) ) {
                alt434=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 434, 0, input);

                throw nvae;
            }
            switch (alt434) {
                case 1 :
                    {
                    {
                    otherlv_0=(Token)match(input,Extends,FOLLOW_145); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getClassExtendsClauseAccess().getExtendsKeyword_0_0());
                          
                    }
                    int alt433=2;
                    int LA433_0 = input.LA(1);

                    if ( (LA433_0==Void) && (synpred255_InternalN4JSXParser())) {
                        alt433=1;
                    }
                    else if ( (LA433_0==This) ) {
                        int LA433_2 = input.LA(2);

                        if ( (synpred255_InternalN4JSXParser()) ) {
                            alt433=1;
                        }
                        else if ( (true) ) {
                            alt433=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 433, 2, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA433_0==Await) ) {
                        int LA433_3 = input.LA(2);

                        if ( (synpred255_InternalN4JSXParser()) ) {
                            alt433=1;
                        }
                        else if ( (true) ) {
                            alt433=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 433, 3, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA433_0==Promisify) ) {
                        int LA433_4 = input.LA(2);

                        if ( (synpred255_InternalN4JSXParser()) ) {
                            alt433=1;
                        }
                        else if ( (true) ) {
                            alt433=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 433, 4, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA433_0==Target) ) {
                        int LA433_5 = input.LA(2);

                        if ( (synpred255_InternalN4JSXParser()) ) {
                            alt433=1;
                        }
                        else if ( (true) ) {
                            alt433=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 433, 5, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA433_0==RULE_IDENTIFIER) ) {
                        int LA433_6 = input.LA(2);

                        if ( (synpred255_InternalN4JSXParser()) ) {
                            alt433=1;
                        }
                        else if ( (true) ) {
                            alt433=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 433, 6, input);

                            throw nvae;
                        }
                    }
                    else if ( ((LA433_0>=Intersection && LA433_0<=Implements)||(LA433_0>=Interface && LA433_0<=Abstract)||(LA433_0>=External && LA433_0<=Function)||(LA433_0>=Private && LA433_0<=Project)||LA433_0==Public||LA433_0==Static||LA433_0==Async||LA433_0==Class||(LA433_0>=False && LA433_0<=Super)||LA433_0==Union||LA433_0==Yield||(LA433_0>=From && LA433_0<=Type)||(LA433_0>=Get && LA433_0<=Set)||LA433_0==SolidusEqualsSign||LA433_0==As||LA433_0==Of||LA433_0==LeftParenthesis||LA433_0==Solidus||LA433_0==LessThanSign||(LA433_0>=CommercialAt && LA433_0<=LeftSquareBracket)||LA433_0==LeftCurlyBracket||LA433_0==RULE_DOUBLE||(LA433_0>=RULE_HEX_INT && LA433_0<=RULE_LEGACY_OCTAL_INT)||LA433_0==RULE_SCIENTIFIC_INT||LA433_0==RULE_STRING||(LA433_0>=RULE_TEMPLATE_HEAD && LA433_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA433_0==RULE_INT) ) {
                        alt433=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 433, 0, input);

                        throw nvae;
                    }
                    switch (alt433) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getSuperClassRefParameterizedTypeRefNominalParserRuleCall_0_1_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_146);
                            lv_superClassRef_1_0=ruleParameterizedTypeRefNominal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getClassExtendsClauseRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"superClassRef",
                                      		lv_superClassRef_1_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.ParameterizedTypeRefNominal");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt432=2;
                            int LA432_0 = input.LA(1);

                            if ( (LA432_0==Implements||LA432_0==Extends) ) {
                                alt432=1;
                            }
                            switch (alt432) {
                                case 1 :
                                    {
                                    int alt431=2;
                                    int LA431_0 = input.LA(1);

                                    if ( (LA431_0==Implements) ) {
                                        alt431=1;
                                    }
                                    else if ( (LA431_0==Extends) ) {
                                        alt431=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 431, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt431) {
                                        case 1 :
                                            {
                                            otherlv_2=(Token)match(input,Implements,FOLLOW_147); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_2, grammarAccess.getClassExtendsClauseAccess().getImplementsKeyword_0_1_0_1_0_0());
                                                  
                                            }

                                            }
                                            break;
                                        case 2 :
                                            {
                                            otherlv_3=(Token)match(input,Extends,FOLLOW_147); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_3, grammarAccess.getClassExtendsClauseAccess().getExtendsKeyword_0_1_0_1_0_1());
                                                  
                                            }

                                            }
                                            break;

                                    }

                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getClassExtendsClauseRule());
                                      		}
                                              newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getClassImplementsListParserRuleCall_0_1_0_1_1()); 
                                          
                                    }
                                    pushFollow(FOLLOW_2);
                                    this_ClassImplementsList_4=ruleClassImplementsList(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_ClassImplementsList_4;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getSuperClassExpressionLeftHandSideExpressionParserRuleCall_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_superClassExpression_5_0=ruleLeftHandSideExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getClassExtendsClauseRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"superClassExpression",
                                      		lv_superClassExpression_5_0, 
                                      		"eu.numberfour.n4js.N4JS.LeftHandSideExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    otherlv_6=(Token)match(input,Implements,FOLLOW_147); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getClassExtendsClauseAccess().getImplementsKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getClassExtendsClauseRule());
                      		}
                              newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getClassImplementsListParserRuleCall_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ClassImplementsList_7=ruleClassImplementsList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ClassImplementsList_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ClassExtendsClause(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        EObject lv_superClassRef_1_0 = null;

        EObject this_ClassImplementsList_4 = null;

        EObject lv_superClassExpression_5_0 = null;

        EObject this_ClassImplementsList_7 = null;


         enterRule(); 
            
        try {
            {
            int alt438=2;
            int LA438_0 = input.LA(1);

            if ( (LA438_0==Extends) ) {
                alt438=1;
            }
            else if ( (LA438_0==Implements) ) {
                alt438=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 438, 0, input);

                throw nvae;
            }
            switch (alt438) {
                case 1 :
                    {
                    {
                    otherlv_0=(Token)match(input,Extends,FOLLOW_145); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getClassExtendsClauseAccess().getExtendsKeyword_0_0());
                          
                    }
                    int alt437=2;
                    int LA437_0 = input.LA(1);

                    if ( (LA437_0==Void) && (synpred256_InternalN4JSXParser())) {
                        alt437=1;
                    }
                    else if ( (LA437_0==This) ) {
                        int LA437_2 = input.LA(2);

                        if ( (synpred256_InternalN4JSXParser()) ) {
                            alt437=1;
                        }
                        else if ( (true) ) {
                            alt437=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 437, 2, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA437_0==Await) ) {
                        int LA437_3 = input.LA(2);

                        if ( (synpred256_InternalN4JSXParser()) ) {
                            alt437=1;
                        }
                        else if ( (true) ) {
                            alt437=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 437, 3, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA437_0==Promisify) ) {
                        int LA437_4 = input.LA(2);

                        if ( (synpred256_InternalN4JSXParser()) ) {
                            alt437=1;
                        }
                        else if ( (true) ) {
                            alt437=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 437, 4, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA437_0==Target) ) {
                        int LA437_5 = input.LA(2);

                        if ( (synpred256_InternalN4JSXParser()) ) {
                            alt437=1;
                        }
                        else if ( (true) ) {
                            alt437=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 437, 5, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA437_0==RULE_IDENTIFIER) ) {
                        int LA437_6 = input.LA(2);

                        if ( (synpred256_InternalN4JSXParser()) ) {
                            alt437=1;
                        }
                        else if ( (true) ) {
                            alt437=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 437, 6, input);

                            throw nvae;
                        }
                    }
                    else if ( ((LA437_0>=Intersection && LA437_0<=Implements)||(LA437_0>=Interface && LA437_0<=Abstract)||(LA437_0>=External && LA437_0<=Function)||(LA437_0>=Private && LA437_0<=Project)||LA437_0==Public||LA437_0==Static||LA437_0==Async||LA437_0==Class||(LA437_0>=False && LA437_0<=Super)||LA437_0==Union||(LA437_0>=From && LA437_0<=Type)||(LA437_0>=Get && LA437_0<=Set)||LA437_0==SolidusEqualsSign||LA437_0==As||LA437_0==Of||LA437_0==LeftParenthesis||LA437_0==Solidus||LA437_0==LessThanSign||(LA437_0>=CommercialAt && LA437_0<=LeftSquareBracket)||LA437_0==LeftCurlyBracket||LA437_0==RULE_DOUBLE||(LA437_0>=RULE_HEX_INT && LA437_0<=RULE_LEGACY_OCTAL_INT)||LA437_0==RULE_SCIENTIFIC_INT||LA437_0==RULE_STRING||(LA437_0>=RULE_TEMPLATE_HEAD && LA437_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA437_0==RULE_INT) ) {
                        alt437=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 437, 0, input);

                        throw nvae;
                    }
                    switch (alt437) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getSuperClassRefParameterizedTypeRefNominalParserRuleCall_0_1_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_146);
                            lv_superClassRef_1_0=ruleParameterizedTypeRefNominal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getClassExtendsClauseRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"superClassRef",
                                      		lv_superClassRef_1_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.ParameterizedTypeRefNominal");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt436=2;
                            int LA436_0 = input.LA(1);

                            if ( (LA436_0==Implements||LA436_0==Extends) ) {
                                alt436=1;
                            }
                            switch (alt436) {
                                case 1 :
                                    {
                                    int alt435=2;
                                    int LA435_0 = input.LA(1);

                                    if ( (LA435_0==Implements) ) {
                                        alt435=1;
                                    }
                                    else if ( (LA435_0==Extends) ) {
                                        alt435=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 435, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt435) {
                                        case 1 :
                                            {
                                            otherlv_2=(Token)match(input,Implements,FOLLOW_147); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_2, grammarAccess.getClassExtendsClauseAccess().getImplementsKeyword_0_1_0_1_0_0());
                                                  
                                            }

                                            }
                                            break;
                                        case 2 :
                                            {
                                            otherlv_3=(Token)match(input,Extends,FOLLOW_147); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_3, grammarAccess.getClassExtendsClauseAccess().getExtendsKeyword_0_1_0_1_0_1());
                                                  
                                            }

                                            }
                                            break;

                                    }

                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getClassExtendsClauseRule());
                                      		}
                                              newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getClassImplementsListParserRuleCall_0_1_0_1_1()); 
                                          
                                    }
                                    pushFollow(FOLLOW_2);
                                    this_ClassImplementsList_4=ruleClassImplementsList(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_ClassImplementsList_4;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getSuperClassExpressionLeftHandSideExpressionParserRuleCall_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_superClassExpression_5_0=norm1_LeftHandSideExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getClassExtendsClauseRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"superClassExpression",
                                      		lv_superClassExpression_5_0, 
                                      		"eu.numberfour.n4js.N4JS.LeftHandSideExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    otherlv_6=(Token)match(input,Implements,FOLLOW_147); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getClassExtendsClauseAccess().getImplementsKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getClassExtendsClauseRule());
                      		}
                              newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getClassImplementsListParserRuleCall_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ClassImplementsList_7=ruleClassImplementsList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ClassImplementsList_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleClassImplementsList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        EObject lv_implementedInterfaceRefs_0_0 = null;

        EObject lv_implementedInterfaceRefs_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getClassImplementsListAccess().getImplementedInterfaceRefsParameterizedTypeRefNominalParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_148);
            lv_implementedInterfaceRefs_0_0=ruleParameterizedTypeRefNominal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getClassImplementsListRule());
              	        }
                     		add(
                     			current, 
                     			"implementedInterfaceRefs",
                      		lv_implementedInterfaceRefs_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.ParameterizedTypeRefNominal");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop440:
            do {
                int alt440=2;
                int LA440_0 = input.LA(1);

                if ( (LA440_0==Implements||LA440_0==Extends||LA440_0==Comma) ) {
                    alt440=1;
                }


                switch (alt440) {
            	case 1 :
            	    {
            	    int alt439=3;
            	    switch ( input.LA(1) ) {
            	    case Comma:
            	        {
            	        alt439=1;
            	        }
            	        break;
            	    case Implements:
            	        {
            	        alt439=2;
            	        }
            	        break;
            	    case Extends:
            	        {
            	        alt439=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 439, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt439) {
            	        case 1 :
            	            {
            	            otherlv_1=(Token)match(input,Comma,FOLLOW_147); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_1, grammarAccess.getClassImplementsListAccess().getCommaKeyword_1_0_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            {
            	            otherlv_2=(Token)match(input,Implements,FOLLOW_147); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_2, grammarAccess.getClassImplementsListAccess().getImplementsKeyword_1_0_1());
            	                  
            	            }

            	            }
            	            break;
            	        case 3 :
            	            {
            	            otherlv_3=(Token)match(input,Extends,FOLLOW_147); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_3, grammarAccess.getClassImplementsListAccess().getExtendsKeyword_1_0_2());
            	                  
            	            }

            	            }
            	            break;

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getClassImplementsListAccess().getImplementedInterfaceRefsParameterizedTypeRefNominalParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_148);
            	    lv_implementedInterfaceRefs_4_0=ruleParameterizedTypeRefNominal();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getClassImplementsListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"implementedInterfaceRefs",
            	              		lv_implementedInterfaceRefs_4_0, 
            	              		"eu.numberfour.n4js.ts.TypeExpressions.ParameterizedTypeRefNominal");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop440;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4ClassExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4ClassExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4ClassExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4ClassExpression=ruleN4ClassExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4ClassExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4ClassExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject this_ClassExtendsClause_3 = null;

        EObject this_Members_4 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4ClassExpressionAccess().getN4ClassExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Class,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getN4ClassExpressionAccess().getClassKeyword_1());
                  
            }
            int alt441=2;
            int LA441_0 = input.LA(1);

            if ( ((LA441_0>=Intersection && LA441_0<=Constructor)||(LA441_0>=Promisify && LA441_0<=Abstract)||LA441_0==External||(LA441_0>=Private && LA441_0<=Project)||LA441_0==Public||LA441_0==Static||LA441_0==Target||(LA441_0>=Async && LA441_0<=Await)||LA441_0==Union||(LA441_0>=Yield && LA441_0<=This)||LA441_0==From||LA441_0==Type||(LA441_0>=Get && LA441_0<=Let)||(LA441_0>=Out && LA441_0<=Set)||LA441_0==As||LA441_0==Of||LA441_0==RULE_IDENTIFIER) ) {
                alt441=1;
            }
            else if ( (LA441_0==Implements) ) {
                int LA441_2 = input.LA(2);

                if ( (LA441_2==Implements||LA441_2==Extends||LA441_2==LeftCurlyBracket) ) {
                    alt441=1;
                }
            }
            switch (alt441) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4ClassExpressionAccess().getNameBindingIdentifierParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_22);
                    lv_name_2_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4ClassExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt442=2;
            int LA442_0 = input.LA(1);

            if ( (LA442_0==Implements||LA442_0==Extends) ) {
                alt442=1;
            }
            switch (alt442) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4ClassExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getN4ClassExpressionAccess().getClassExtendsClauseParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_22);
                    this_ClassExtendsClause_3=ruleClassExtendsClause(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ClassExtendsClause_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4ClassExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getN4ClassExpressionAccess().getMembersParserRuleCall_4()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_Members_4=ruleMembers(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_Members_4;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4ClassExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject this_ClassExtendsClause_3 = null;

        EObject this_Members_4 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4ClassExpressionAccess().getN4ClassExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Class,FOLLOW_68); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getN4ClassExpressionAccess().getClassKeyword_1());
                  
            }
            int alt443=2;
            int LA443_0 = input.LA(1);

            if ( ((LA443_0>=Intersection && LA443_0<=Constructor)||(LA443_0>=Promisify && LA443_0<=Abstract)||LA443_0==External||(LA443_0>=Private && LA443_0<=Project)||LA443_0==Public||LA443_0==Static||LA443_0==Target||(LA443_0>=Async && LA443_0<=Await)||LA443_0==Union||LA443_0==This||LA443_0==From||LA443_0==Type||(LA443_0>=Get && LA443_0<=Let)||(LA443_0>=Out && LA443_0<=Set)||LA443_0==As||LA443_0==Of||LA443_0==RULE_IDENTIFIER) ) {
                alt443=1;
            }
            else if ( (LA443_0==Implements) ) {
                int LA443_2 = input.LA(2);

                if ( (LA443_2==Implements||LA443_2==Extends||LA443_2==LeftCurlyBracket) ) {
                    alt443=1;
                }
            }
            switch (alt443) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4ClassExpressionAccess().getNameBindingIdentifierParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_68);
                    lv_name_2_0=norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4ClassExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt444=2;
            int LA444_0 = input.LA(1);

            if ( (LA444_0==Implements||LA444_0==Extends) ) {
                alt444=1;
            }
            switch (alt444) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4ClassExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getN4ClassExpressionAccess().getClassExtendsClauseParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_68);
                    this_ClassExtendsClause_3=norm1_ClassExtendsClause(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ClassExtendsClause_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4ClassExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getN4ClassExpressionAccess().getMembersParserRuleCall_4()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_Members_4=norm1_Members(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_Members_4;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4InterfaceDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4InterfaceDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4InterfaceDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4InterfaceDeclaration=ruleN4InterfaceDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4InterfaceDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4InterfaceDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        AntlrDatatypeRuleToken lv_typingStrategy_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        EObject this_TypeVariables_5 = null;

        EObject this_InterfaceImplementsList_6 = null;

        EObject this_Members_7 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4InterfaceDeclarationAccess().getN4InterfaceDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop445:
            do {
                int alt445=2;
                int LA445_0 = input.LA(1);

                if ( ((LA445_0>=Protected && LA445_0<=Abstract)||LA445_0==External||(LA445_0>=Private && LA445_0<=Project)||LA445_0==Public||LA445_0==Static||LA445_0==Const) ) {
                    alt445=1;
                }


                switch (alt445) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4InterfaceDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_23);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4InterfaceDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop445;
                }
            } while (true);

            otherlv_2=(Token)match(input,Interface,FOLLOW_144); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getN4InterfaceDeclarationAccess().getInterfaceKeyword_0_0_2());
                  
            }
            int alt446=2;
            int LA446_0 = input.LA(1);

            if ( (LA446_0==Tilde) ) {
                alt446=1;
            }
            switch (alt446) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4InterfaceDeclarationAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_67);
                    lv_typingStrategy_3_0=ruleTypingStrategyDefSiteOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4InterfaceDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"typingStrategy",
                              		lv_typingStrategy_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyDefSiteOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt447=2;
            int LA447_0 = input.LA(1);

            if ( ((LA447_0>=Intersection && LA447_0<=Constructor)||(LA447_0>=Promisify && LA447_0<=Abstract)||LA447_0==External||(LA447_0>=Private && LA447_0<=Project)||LA447_0==Public||LA447_0==Static||LA447_0==Target||(LA447_0>=Async && LA447_0<=Await)||LA447_0==Union||(LA447_0>=Yield && LA447_0<=This)||LA447_0==From||LA447_0==Type||(LA447_0>=Get && LA447_0<=Let)||(LA447_0>=Out && LA447_0<=Set)||LA447_0==As||LA447_0==Of||LA447_0==RULE_IDENTIFIER) ) {
                alt447=1;
            }
            else if ( (LA447_0==Implements) ) {
                int LA447_2 = input.LA(2);

                if ( (LA447_2==Implements||LA447_2==Extends||LA447_2==LessThanSign||LA447_2==LeftCurlyBracket) ) {
                    alt447=1;
                }
            }
            switch (alt447) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4InterfaceDeclarationAccess().getNameBindingIdentifierParserRuleCall_0_0_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_22);
                    lv_name_4_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4InterfaceDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }
            int alt448=2;
            int LA448_0 = input.LA(1);

            if ( (LA448_0==LessThanSign) ) {
                alt448=1;
            }
            switch (alt448) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4InterfaceDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4InterfaceDeclarationAccess().getTypeVariablesParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_22);
                    this_TypeVariables_5=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt449=2;
            int LA449_0 = input.LA(1);

            if ( (LA449_0==Implements||LA449_0==Extends) ) {
                alt449=1;
            }
            switch (alt449) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4InterfaceDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4InterfaceDeclarationAccess().getInterfaceImplementsListParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_22);
                    this_InterfaceImplementsList_6=ruleInterfaceImplementsList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_InterfaceImplementsList_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4InterfaceDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4InterfaceDeclarationAccess().getMembersParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_Members_7=ruleMembers(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_Members_7;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleInterfaceImplementsList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_superInterfaceRefs_2_0 = null;

        EObject lv_superInterfaceRefs_6_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt450=2;
            int LA450_0 = input.LA(1);

            if ( (LA450_0==Extends) ) {
                alt450=1;
            }
            else if ( (LA450_0==Implements) ) {
                alt450=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 450, 0, input);

                throw nvae;
            }
            switch (alt450) {
                case 1 :
                    {
                    otherlv_0=(Token)match(input,Extends,FOLLOW_147); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getInterfaceImplementsListAccess().getExtendsKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    otherlv_1=(Token)match(input,Implements,FOLLOW_147); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getInterfaceImplementsListAccess().getImplementsKeyword_0_1());
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInterfaceImplementsListAccess().getSuperInterfaceRefsParameterizedTypeRefNominalParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_148);
            lv_superInterfaceRefs_2_0=ruleParameterizedTypeRefNominal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInterfaceImplementsListRule());
              	        }
                     		add(
                     			current, 
                     			"superInterfaceRefs",
                      		lv_superInterfaceRefs_2_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.ParameterizedTypeRefNominal");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop452:
            do {
                int alt452=2;
                int LA452_0 = input.LA(1);

                if ( (LA452_0==Implements||LA452_0==Extends||LA452_0==Comma) ) {
                    alt452=1;
                }


                switch (alt452) {
            	case 1 :
            	    {
            	    int alt451=3;
            	    switch ( input.LA(1) ) {
            	    case Comma:
            	        {
            	        alt451=1;
            	        }
            	        break;
            	    case Implements:
            	        {
            	        alt451=2;
            	        }
            	        break;
            	    case Extends:
            	        {
            	        alt451=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 451, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt451) {
            	        case 1 :
            	            {
            	            otherlv_3=(Token)match(input,Comma,FOLLOW_147); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_3, grammarAccess.getInterfaceImplementsListAccess().getCommaKeyword_2_0_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            {
            	            otherlv_4=(Token)match(input,Implements,FOLLOW_147); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_4, grammarAccess.getInterfaceImplementsListAccess().getImplementsKeyword_2_0_1());
            	                  
            	            }

            	            }
            	            break;
            	        case 3 :
            	            {
            	            otherlv_5=(Token)match(input,Extends,FOLLOW_147); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_5, grammarAccess.getInterfaceImplementsListAccess().getExtendsKeyword_2_0_2());
            	                  
            	            }

            	            }
            	            break;

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getInterfaceImplementsListAccess().getSuperInterfaceRefsParameterizedTypeRefNominalParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_148);
            	    lv_superInterfaceRefs_6_0=ruleParameterizedTypeRefNominal();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getInterfaceImplementsListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"superInterfaceRefs",
            	              		lv_superInterfaceRefs_6_0, 
            	              		"eu.numberfour.n4js.ts.TypeExpressions.ParameterizedTypeRefNominal");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop452;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4EnumDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4EnumDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4EnumDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4EnumDeclaration=ruleN4EnumDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4EnumDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4EnumDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_literals_5_0 = null;

        EObject lv_literals_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4EnumDeclarationAccess().getN4EnumDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop453:
            do {
                int alt453=2;
                int LA453_0 = input.LA(1);

                if ( ((LA453_0>=Protected && LA453_0<=Abstract)||LA453_0==External||(LA453_0>=Private && LA453_0<=Project)||LA453_0==Public||LA453_0==Static||LA453_0==Const) ) {
                    alt453=1;
                }


                switch (alt453) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4EnumDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4EnumDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop453;
                }
            } while (true);

            otherlv_2=(Token)match(input,Enum,FOLLOW_149); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getN4EnumDeclarationAccess().getEnumKeyword_0_0_2());
                  
            }
            int alt454=2;
            int LA454_0 = input.LA(1);

            if ( ((LA454_0>=Intersection && LA454_0<=Implements)||(LA454_0>=Promisify && LA454_0<=Abstract)||LA454_0==External||(LA454_0>=Private && LA454_0<=Project)||LA454_0==Public||LA454_0==Static||LA454_0==Target||(LA454_0>=Async && LA454_0<=Await)||LA454_0==Union||(LA454_0>=Yield && LA454_0<=This)||LA454_0==From||LA454_0==Type||(LA454_0>=Get && LA454_0<=Let)||(LA454_0>=Out && LA454_0<=Set)||LA454_0==As||LA454_0==Of||LA454_0==RULE_IDENTIFIER) ) {
                alt454=1;
            }
            switch (alt454) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4EnumDeclarationAccess().getNameBindingIdentifierParserRuleCall_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_25);
                    lv_name_3_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4EnumDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            otherlv_4=(Token)match(input,LeftCurlyBracket,FOLLOW_150); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getN4EnumDeclarationAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            int alt456=2;
            int LA456_0 = input.LA(1);

            if ( (LA456_0==Promisify||LA456_0==Target||LA456_0==This||LA456_0==RULE_IDENTIFIER) ) {
                alt456=1;
            }
            switch (alt456) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4EnumDeclarationAccess().getLiteralsN4EnumLiteralParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_27);
                    lv_literals_5_0=ruleN4EnumLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4EnumDeclarationRule());
                      	        }
                             		add(
                             			current, 
                             			"literals",
                              		lv_literals_5_0, 
                              		"eu.numberfour.n4js.N4JS.N4EnumLiteral");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop455:
                    do {
                        int alt455=2;
                        int LA455_0 = input.LA(1);

                        if ( (LA455_0==Comma) ) {
                            alt455=1;
                        }


                        switch (alt455) {
                    	case 1 :
                    	    {
                    	    otherlv_6=(Token)match(input,Comma,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getN4EnumDeclarationAccess().getCommaKeyword_2_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getN4EnumDeclarationAccess().getLiteralsN4EnumLiteralParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_literals_7_0=ruleN4EnumLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getN4EnumDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"literals",
                    	              		lv_literals_7_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4EnumLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop455;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getN4EnumDeclarationAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4EnumLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4EnumLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4EnumLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4EnumLiteral=ruleN4EnumLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4EnumLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4EnumLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_value_2_0=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getN4EnumLiteralAccess().getNameIdentifierOrThisParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_54);
            lv_name_0_0=ruleIdentifierOrThis();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getN4EnumLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierOrThis");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt457=2;
            int LA457_0 = input.LA(1);

            if ( (LA457_0==Colon) ) {
                alt457=1;
            }
            switch (alt457) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Colon,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getN4EnumLiteralAccess().getColonKeyword_1_0());
                          
                    }
                    {
                    {
                    lv_value_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_2_0, grammarAccess.getN4EnumLiteralAccess().getValueSTRINGTerminalRuleCall_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getN4EnumLiteralRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_2_0, 
                              		"eu.numberfour.n4js.N4JS.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4MemberDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4MemberDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4MemberDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4MemberDeclaration=ruleN4MemberDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4MemberDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4MemberDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedN4MemberDeclaration_0 = null;

        EObject this_N4GetterDeclaration_1 = null;

        EObject this_N4SetterDeclaration_2 = null;

        EObject this_N4MethodDeclaration_3 = null;

        EObject this_N4FieldDeclaration_4 = null;

        EObject this_N4CallableConstructorDeclaration_5 = null;


         enterRule(); 
            
        try {
            {
            int alt458=6;
            alt458 = dfa458.predict(input);
            switch (alt458) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getAnnotatedN4MemberDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedN4MemberDeclaration_0=ruleAnnotatedN4MemberDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedN4MemberDeclaration_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4GetterDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4GetterDeclaration_1=ruleN4GetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4GetterDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4SetterDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4SetterDeclaration_2=ruleN4SetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4SetterDeclaration_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4MethodDeclarationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4MethodDeclaration_3=ruleN4MethodDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4MethodDeclaration_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4FieldDeclarationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4FieldDeclaration_4=ruleN4FieldDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4FieldDeclaration_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4CallableConstructorDeclarationParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4CallableConstructorDeclaration_5=ruleN4CallableConstructorDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4CallableConstructorDeclaration_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4MemberDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedN4MemberDeclaration_0 = null;

        EObject this_N4GetterDeclaration_1 = null;

        EObject this_N4SetterDeclaration_2 = null;

        EObject this_N4MethodDeclaration_3 = null;

        EObject this_N4FieldDeclaration_4 = null;

        EObject this_N4CallableConstructorDeclaration_5 = null;


         enterRule(); 
            
        try {
            {
            int alt459=6;
            alt459 = dfa459.predict(input);
            switch (alt459) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getAnnotatedN4MemberDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedN4MemberDeclaration_0=norm1_AnnotatedN4MemberDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedN4MemberDeclaration_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4GetterDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4GetterDeclaration_1=norm1_N4GetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4GetterDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4SetterDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4SetterDeclaration_2=norm1_N4SetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4SetterDeclaration_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4MethodDeclarationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4MethodDeclaration_3=norm1_N4MethodDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4MethodDeclaration_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4FieldDeclarationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4FieldDeclaration_4=norm1_N4FieldDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4FieldDeclaration_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4CallableConstructorDeclarationParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4CallableConstructorDeclaration_5=norm1_N4CallableConstructorDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4CallableConstructorDeclaration_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotatedN4MemberDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedN4MemberDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedN4MemberDeclaration=ruleAnnotatedN4MemberDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedN4MemberDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotatedN4MemberDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token lv_generator_19_0=null;
        Token otherlv_25=null;
        EObject this_N4MemberAnnotationList_0 = null;

        Enumerator lv_declaredModifiers_2_0 = null;

        EObject this_GetterHeader_3 = null;

        EObject lv_body_4_0 = null;

        Enumerator lv_declaredModifiers_7_0 = null;

        EObject lv_declaredName_9_0 = null;

        EObject lv_fpar_11_0 = null;

        EObject lv_body_13_0 = null;

        Enumerator lv_declaredModifiers_16_0 = null;

        EObject this_TypeVariables_17 = null;

        EObject this_BogusTypeRefFragment_18 = null;

        EObject lv_declaredName_20_0 = null;

        EObject this_MethodParamsReturnAndBody_21 = null;

        EObject this_AsyncNoTrailingLineBreak_22 = null;

        EObject lv_declaredName_23_0 = null;

        EObject this_MethodParamsReturnAndBody_24 = null;

        EObject this_FieldDeclarationImpl_27 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4MemberAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_151);
            this_N4MemberAnnotationList_0=ruleN4MemberAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_N4MemberAnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt471=4;
            alt471 = dfa471.predict(input);
            switch (alt471) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4GetterDeclarationAnnotationListAction_1_0_0_0_0(),
                                  current);
                          
                    }

                    }
                    loop460:
                    do {
                        int alt460=2;
                        int LA460_0 = input.LA(1);

                        if ( ((LA460_0>=Protected && LA460_0<=Abstract)||LA460_0==External||(LA460_0>=Private && LA460_0<=Project)||LA460_0==Public||LA460_0==Static||LA460_0==Const) ) {
                            alt460=1;
                        }


                        switch (alt460) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_0_0_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_152);
                    	    lv_declaredModifiers_2_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_2_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop460;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getGetterHeaderParserRuleCall_1_0_0_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_153);
                    this_GetterHeader_3=ruleGetterHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_GetterHeader_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    int alt461=2;
                    alt461 = dfa461.predict(input);
                    switch (alt461) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getBodyBlockParserRuleCall_1_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_104);
                            lv_body_4_0=ruleBlock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"body",
                                      		lv_body_4_0, 
                                      		"eu.numberfour.n4js.N4JS.Block");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt462=2;
                    int LA462_0 = input.LA(1);

                    if ( (LA462_0==Semicolon) ) {
                        alt462=1;
                    }
                    switch (alt462) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSemicolonKeyword_1_0_2());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4SetterDeclarationAnnotationListAction_1_1_0_0_0(),
                                  current);
                          
                    }

                    }
                    loop463:
                    do {
                        int alt463=2;
                        int LA463_0 = input.LA(1);

                        if ( ((LA463_0>=Protected && LA463_0<=Abstract)||LA463_0==External||(LA463_0>=Private && LA463_0<=Project)||LA463_0==Public||LA463_0==Static||LA463_0==Const) ) {
                            alt463=1;
                        }


                        switch (alt463) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_1_0_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_154);
                    	    lv_declaredModifiers_7_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_7_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop463;
                        }
                    } while (true);

                    otherlv_8=(Token)match(input,Set,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSetKeyword_1_1_0_0_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_1_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_64);
                    lv_declaredName_9_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_9_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }

                    otherlv_10=(Token)match(input,LeftParenthesis,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getLeftParenthesisKeyword_1_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getFparFormalParameterParserRuleCall_1_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_75);
                    lv_fpar_11_0=ruleFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"fpar",
                              		lv_fpar_11_0, 
                              		"eu.numberfour.n4js.N4JS.FormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,RightParenthesis,FOLLOW_153); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getRightParenthesisKeyword_1_1_3());
                          
                    }
                    int alt464=2;
                    alt464 = dfa464.predict(input);
                    switch (alt464) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getBodyBlockParserRuleCall_1_1_4_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_104);
                            lv_body_13_0=ruleBlock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"body",
                                      		lv_body_13_0, 
                                      		"eu.numberfour.n4js.N4JS.Block");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt465=2;
                    int LA465_0 = input.LA(1);

                    if ( (LA465_0==Semicolon) ) {
                        alt465=1;
                    }
                    switch (alt465) {
                        case 1 :
                            {
                            otherlv_14=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSemicolonKeyword_1_1_5());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4MethodDeclarationAnnotationListAction_1_2_0_0_0(),
                                  current);
                          
                    }

                    }
                    loop466:
                    do {
                        int alt466=2;
                        alt466 = dfa466.predict(input);
                        switch (alt466) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_2_0_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_151);
                    	    lv_declaredModifiers_16_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_16_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop466;
                        }
                    } while (true);
                    int alt467=2;
                    int LA467_0 = input.LA(1);

                    if ( (LA467_0==LessThanSign) ) {
                        alt467=1;
                    }
                    switch (alt467) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getTypeVariablesParserRuleCall_1_2_0_0_2()); 
                                  
                            }
                            pushFollow(FOLLOW_103);
                            this_TypeVariables_17=ruleTypeVariables(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_TypeVariables_17;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt468=2;
                    alt468 = dfa468.predict(input);
                    switch (alt468) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getBogusTypeRefFragmentParserRuleCall_1_2_0_0_3()); 
                                  
                            }
                            pushFollow(FOLLOW_103);
                            this_BogusTypeRefFragment_18=ruleBogusTypeRefFragment(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_BogusTypeRefFragment_18;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt469=2;
                    int LA469_0 = input.LA(1);

                    if ( (LA469_0==Asterisk) ) {
                        alt469=1;
                    }
                    else if ( ((LA469_0>=Intersection && LA469_0<=With)||(LA469_0>=For && LA469_0<=Var)||(LA469_0>=As && LA469_0<=Of)||LA469_0==LeftSquareBracket||LA469_0==RULE_DOUBLE||LA469_0==RULE_HEX_INT||LA469_0==RULE_OCTAL_INT||LA469_0==RULE_SCIENTIFIC_INT||LA469_0==RULE_IDENTIFIER||LA469_0==RULE_STRING||LA469_0==RULE_INT) ) {
                        alt469=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 469, 0, input);

                        throw nvae;
                    }
                    switch (alt469) {
                        case 1 :
                            {
                            {
                            {
                            {
                            lv_generator_19_0=(Token)match(input,Asterisk,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_generator_19_0, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getGeneratorAsteriskKeyword_1_2_0_0_4_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "generator", true, "*");
                              	    
                            }

                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_2_0_0_4_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_53);
                            lv_declaredName_20_0=ruleLiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_20_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_1_2_0_0_4_0_2()); 
                                  
                            }
                            pushFollow(FOLLOW_104);
                            this_MethodParamsReturnAndBody_21=norm1_MethodParamsReturnAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsReturnAndBody_21;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_1_2_0_0_4_1_0()); 
                                  
                            }
                            pushFollow(FOLLOW_102);
                            this_AsyncNoTrailingLineBreak_22=ruleAsyncNoTrailingLineBreak(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_AsyncNoTrailingLineBreak_22;
                                      afterParserOrEnumRuleCall();
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_2_0_0_4_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_100);
                            lv_declaredName_23_0=ruleLiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_23_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_1_2_0_0_4_1_2()); 
                                  
                            }
                            pushFollow(FOLLOW_104);
                            this_MethodParamsReturnAndBody_24=ruleMethodParamsReturnAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsReturnAndBody_24;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    int alt470=2;
                    int LA470_0 = input.LA(1);

                    if ( (LA470_0==Semicolon) ) {
                        alt470=1;
                    }
                    switch (alt470) {
                        case 1 :
                            {
                            otherlv_25=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_25, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSemicolonKeyword_1_2_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4FieldDeclarationAnnotationListAction_1_3_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getFieldDeclarationImplParserRuleCall_1_3_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FieldDeclarationImpl_27=ruleFieldDeclarationImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FieldDeclarationImpl_27;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AnnotatedN4MemberDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token lv_generator_19_0=null;
        Token otherlv_25=null;
        EObject this_N4MemberAnnotationList_0 = null;

        Enumerator lv_declaredModifiers_2_0 = null;

        EObject this_GetterHeader_3 = null;

        EObject lv_body_4_0 = null;

        Enumerator lv_declaredModifiers_7_0 = null;

        EObject lv_declaredName_9_0 = null;

        EObject lv_fpar_11_0 = null;

        EObject lv_body_13_0 = null;

        Enumerator lv_declaredModifiers_16_0 = null;

        EObject this_TypeVariables_17 = null;

        EObject this_BogusTypeRefFragment_18 = null;

        EObject lv_declaredName_20_0 = null;

        EObject this_MethodParamsReturnAndBody_21 = null;

        EObject this_AsyncNoTrailingLineBreak_22 = null;

        EObject lv_declaredName_23_0 = null;

        EObject this_MethodParamsReturnAndBody_24 = null;

        EObject this_FieldDeclarationImpl_27 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4MemberAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_151);
            this_N4MemberAnnotationList_0=ruleN4MemberAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_N4MemberAnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt483=4;
            alt483 = dfa483.predict(input);
            switch (alt483) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4GetterDeclarationAnnotationListAction_1_0_0_0_0(),
                                  current);
                          
                    }

                    }
                    loop472:
                    do {
                        int alt472=2;
                        int LA472_0 = input.LA(1);

                        if ( ((LA472_0>=Protected && LA472_0<=Abstract)||LA472_0==External||(LA472_0>=Private && LA472_0<=Project)||LA472_0==Public||LA472_0==Static||LA472_0==Const) ) {
                            alt472=1;
                        }


                        switch (alt472) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_0_0_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_152);
                    	    lv_declaredModifiers_2_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_2_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop472;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getGetterHeaderParserRuleCall_1_0_0_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_153);
                    this_GetterHeader_3=norm1_GetterHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_GetterHeader_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    int alt473=2;
                    alt473 = dfa473.predict(input);
                    switch (alt473) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getBodyBlockParserRuleCall_1_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_104);
                            lv_body_4_0=norm1_Block();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"body",
                                      		lv_body_4_0, 
                                      		"eu.numberfour.n4js.N4JS.Block");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt474=2;
                    int LA474_0 = input.LA(1);

                    if ( (LA474_0==Semicolon) ) {
                        alt474=1;
                    }
                    switch (alt474) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSemicolonKeyword_1_0_2());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4SetterDeclarationAnnotationListAction_1_1_0_0_0(),
                                  current);
                          
                    }

                    }
                    loop475:
                    do {
                        int alt475=2;
                        int LA475_0 = input.LA(1);

                        if ( ((LA475_0>=Protected && LA475_0<=Abstract)||LA475_0==External||(LA475_0>=Private && LA475_0<=Project)||LA475_0==Public||LA475_0==Static||LA475_0==Const) ) {
                            alt475=1;
                        }


                        switch (alt475) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_1_0_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_154);
                    	    lv_declaredModifiers_7_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_7_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop475;
                        }
                    } while (true);

                    otherlv_8=(Token)match(input,Set,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSetKeyword_1_1_0_0_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_1_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_64);
                    lv_declaredName_9_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_9_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }

                    otherlv_10=(Token)match(input,LeftParenthesis,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getLeftParenthesisKeyword_1_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getFparFormalParameterParserRuleCall_1_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_75);
                    lv_fpar_11_0=norm1_FormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"fpar",
                              		lv_fpar_11_0, 
                              		"eu.numberfour.n4js.N4JS.FormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,RightParenthesis,FOLLOW_153); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getRightParenthesisKeyword_1_1_3());
                          
                    }
                    int alt476=2;
                    alt476 = dfa476.predict(input);
                    switch (alt476) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getBodyBlockParserRuleCall_1_1_4_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_104);
                            lv_body_13_0=norm1_Block();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"body",
                                      		lv_body_13_0, 
                                      		"eu.numberfour.n4js.N4JS.Block");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt477=2;
                    int LA477_0 = input.LA(1);

                    if ( (LA477_0==Semicolon) ) {
                        alt477=1;
                    }
                    switch (alt477) {
                        case 1 :
                            {
                            otherlv_14=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSemicolonKeyword_1_1_5());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4MethodDeclarationAnnotationListAction_1_2_0_0_0(),
                                  current);
                          
                    }

                    }
                    loop478:
                    do {
                        int alt478=2;
                        alt478 = dfa478.predict(input);
                        switch (alt478) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_2_0_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_151);
                    	    lv_declaredModifiers_16_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_16_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop478;
                        }
                    } while (true);
                    int alt479=2;
                    int LA479_0 = input.LA(1);

                    if ( (LA479_0==LessThanSign) ) {
                        alt479=1;
                    }
                    switch (alt479) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getTypeVariablesParserRuleCall_1_2_0_0_2()); 
                                  
                            }
                            pushFollow(FOLLOW_103);
                            this_TypeVariables_17=ruleTypeVariables(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_TypeVariables_17;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt480=2;
                    alt480 = dfa480.predict(input);
                    switch (alt480) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getBogusTypeRefFragmentParserRuleCall_1_2_0_0_3()); 
                                  
                            }
                            pushFollow(FOLLOW_103);
                            this_BogusTypeRefFragment_18=ruleBogusTypeRefFragment(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_BogusTypeRefFragment_18;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt481=2;
                    int LA481_0 = input.LA(1);

                    if ( (LA481_0==Asterisk) ) {
                        alt481=1;
                    }
                    else if ( ((LA481_0>=Intersection && LA481_0<=With)||(LA481_0>=For && LA481_0<=Var)||(LA481_0>=As && LA481_0<=Of)||LA481_0==LeftSquareBracket||LA481_0==RULE_DOUBLE||LA481_0==RULE_HEX_INT||LA481_0==RULE_OCTAL_INT||LA481_0==RULE_SCIENTIFIC_INT||LA481_0==RULE_IDENTIFIER||LA481_0==RULE_STRING||LA481_0==RULE_INT) ) {
                        alt481=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 481, 0, input);

                        throw nvae;
                    }
                    switch (alt481) {
                        case 1 :
                            {
                            {
                            {
                            {
                            lv_generator_19_0=(Token)match(input,Asterisk,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_generator_19_0, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getGeneratorAsteriskKeyword_1_2_0_0_4_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "generator", true, "*");
                              	    
                            }

                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_2_0_0_4_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_53);
                            lv_declaredName_20_0=norm1_LiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_20_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_1_2_0_0_4_0_2()); 
                                  
                            }
                            pushFollow(FOLLOW_104);
                            this_MethodParamsReturnAndBody_21=norm1_MethodParamsReturnAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsReturnAndBody_21;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_1_2_0_0_4_1_0()); 
                                  
                            }
                            pushFollow(FOLLOW_102);
                            this_AsyncNoTrailingLineBreak_22=ruleAsyncNoTrailingLineBreak(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_AsyncNoTrailingLineBreak_22;
                                      afterParserOrEnumRuleCall();
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_2_0_0_4_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_100);
                            lv_declaredName_23_0=norm1_LiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_23_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_1_2_0_0_4_1_2()); 
                                  
                            }
                            pushFollow(FOLLOW_104);
                            this_MethodParamsReturnAndBody_24=ruleMethodParamsReturnAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsReturnAndBody_24;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    int alt482=2;
                    int LA482_0 = input.LA(1);

                    if ( (LA482_0==Semicolon) ) {
                        alt482=1;
                    }
                    switch (alt482) {
                        case 1 :
                            {
                            otherlv_25=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_25, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSemicolonKeyword_1_2_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4FieldDeclarationAnnotationListAction_1_3_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getFieldDeclarationImplParserRuleCall_1_3_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FieldDeclarationImpl_27=norm1_FieldDeclarationImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FieldDeclarationImpl_27;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFieldDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_4=null;
        Enumerator lv_declaredModifiers_0_0 = null;

        EObject this_BogusTypeRefFragment_1 = null;

        EObject lv_declaredName_2_0 = null;

        EObject this_ColonSepTypeRef_3 = null;

        EObject lv_expression_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop484:
            do {
                int alt484=2;
                alt484 = dfa484.predict(input);
                switch (alt484) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_declaredModifiers_0_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getFieldDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_0_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop484;
                }
            } while (true);
            int alt485=2;
            alt485 = dfa485.predict(input);
            switch (alt485) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFieldDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getBogusTypeRefFragmentParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_102);
                    this_BogusTypeRefFragment_1=ruleBogusTypeRefFragment(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BogusTypeRefFragment_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_155);
            lv_declaredName_2_0=ruleLiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFieldDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt486=2;
            int LA486_0 = input.LA(1);

            if ( (LA486_0==Colon) ) {
                alt486=1;
            }
            switch (alt486) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFieldDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getColonSepTypeRefParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_156);
                    this_ColonSepTypeRef_3=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt487=2;
            int LA487_0 = input.LA(1);

            if ( (LA487_0==EqualsSign) ) {
                alt487=1;
            }
            switch (alt487) {
                case 1 :
                    {
                    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getFieldDeclarationImplAccess().getEqualsSignKeyword_4_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getExpressionExpressionParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_32);
                    lv_expression_5_0=norm1_Expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFieldDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_5_0, 
                              		"eu.numberfour.n4js.N4JS.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getSemiParserRuleCall_5()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_FieldDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_4=null;
        Enumerator lv_declaredModifiers_0_0 = null;

        EObject this_BogusTypeRefFragment_1 = null;

        EObject lv_declaredName_2_0 = null;

        EObject this_ColonSepTypeRef_3 = null;

        EObject lv_expression_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop488:
            do {
                int alt488=2;
                alt488 = dfa488.predict(input);
                switch (alt488) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_declaredModifiers_0_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getFieldDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_0_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop488;
                }
            } while (true);
            int alt489=2;
            alt489 = dfa489.predict(input);
            switch (alt489) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFieldDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getBogusTypeRefFragmentParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_102);
                    this_BogusTypeRefFragment_1=ruleBogusTypeRefFragment(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BogusTypeRefFragment_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_155);
            lv_declaredName_2_0=norm1_LiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFieldDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt490=2;
            int LA490_0 = input.LA(1);

            if ( (LA490_0==Colon) ) {
                alt490=1;
            }
            switch (alt490) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFieldDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getColonSepTypeRefParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_156);
                    this_ColonSepTypeRef_3=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt491=2;
            int LA491_0 = input.LA(1);

            if ( (LA491_0==EqualsSign) ) {
                alt491=1;
            }
            switch (alt491) {
                case 1 :
                    {
                    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getFieldDeclarationImplAccess().getEqualsSignKeyword_4_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getExpressionExpressionParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_32);
                    lv_expression_5_0=norm3_Expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFieldDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_5_0, 
                              		"eu.numberfour.n4js.N4JS.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getSemiParserRuleCall_5()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4FieldDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4FieldDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4FieldDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4FieldDeclaration=ruleN4FieldDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4FieldDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4FieldDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_FieldDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4FieldDeclarationAccess().getN4FieldDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4FieldDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4FieldDeclarationAccess().getFieldDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FieldDeclarationImpl_1=ruleFieldDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FieldDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4FieldDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_FieldDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4FieldDeclarationAccess().getN4FieldDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4FieldDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4FieldDeclarationAccess().getFieldDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FieldDeclarationImpl_1=norm1_FieldDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FieldDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4MethodDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4MethodDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4MethodDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4MethodDeclaration=ruleN4MethodDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4MethodDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4MethodDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_generator_4_0=null;
        Token otherlv_10=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_TypeVariables_2 = null;

        EObject this_BogusTypeRefFragment_3 = null;

        EObject lv_declaredName_5_0 = null;

        EObject this_MethodParamsReturnAndBody_6 = null;

        EObject this_AsyncNoTrailingLineBreak_7 = null;

        EObject lv_declaredName_8_0 = null;

        EObject this_MethodParamsReturnAndBody_9 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4MethodDeclarationAccess().getN4MethodDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop492:
            do {
                int alt492=2;
                alt492 = dfa492.predict(input);
                switch (alt492) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_151);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4MethodDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop492;
                }
            } while (true);
            int alt493=2;
            int LA493_0 = input.LA(1);

            if ( (LA493_0==LessThanSign) ) {
                alt493=1;
            }
            switch (alt493) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getTypeVariablesParserRuleCall_0_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_103);
                    this_TypeVariables_2=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt494=2;
            alt494 = dfa494.predict(input);
            switch (alt494) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getBogusTypeRefFragmentParserRuleCall_0_0_3()); 
                          
                    }
                    pushFollow(FOLLOW_103);
                    this_BogusTypeRefFragment_3=ruleBogusTypeRefFragment(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BogusTypeRefFragment_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt495=2;
            int LA495_0 = input.LA(1);

            if ( (LA495_0==Asterisk) ) {
                alt495=1;
            }
            else if ( ((LA495_0>=Intersection && LA495_0<=With)||(LA495_0>=For && LA495_0<=Var)||(LA495_0>=As && LA495_0<=Of)||LA495_0==LeftSquareBracket||LA495_0==RULE_DOUBLE||LA495_0==RULE_HEX_INT||LA495_0==RULE_OCTAL_INT||LA495_0==RULE_SCIENTIFIC_INT||LA495_0==RULE_IDENTIFIER||LA495_0==RULE_STRING||LA495_0==RULE_INT) ) {
                alt495=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 495, 0, input);

                throw nvae;
            }
            switch (alt495) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_4_0=(Token)match(input,Asterisk,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_4_0, grammarAccess.getN4MethodDeclarationAccess().getGeneratorAsteriskKeyword_0_0_4_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_4_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_53);
                    lv_declaredName_5_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4MethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_5_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_0_0_4_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_104);
                    this_MethodParamsReturnAndBody_6=norm1_MethodParamsReturnAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsReturnAndBody_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_0_0_4_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_102);
                    this_AsyncNoTrailingLineBreak_7=ruleAsyncNoTrailingLineBreak(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncNoTrailingLineBreak_7;
                              afterParserOrEnumRuleCall();
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_4_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_100);
                    lv_declaredName_8_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4MethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_8_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_0_0_4_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_104);
                    this_MethodParamsReturnAndBody_9=ruleMethodParamsReturnAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsReturnAndBody_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }
            int alt496=2;
            int LA496_0 = input.LA(1);

            if ( (LA496_0==Semicolon) ) {
                alt496=1;
            }
            switch (alt496) {
                case 1 :
                    {
                    otherlv_10=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getN4MethodDeclarationAccess().getSemicolonKeyword_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4MethodDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_generator_4_0=null;
        Token otherlv_10=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_TypeVariables_2 = null;

        EObject this_BogusTypeRefFragment_3 = null;

        EObject lv_declaredName_5_0 = null;

        EObject this_MethodParamsReturnAndBody_6 = null;

        EObject this_AsyncNoTrailingLineBreak_7 = null;

        EObject lv_declaredName_8_0 = null;

        EObject this_MethodParamsReturnAndBody_9 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4MethodDeclarationAccess().getN4MethodDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop497:
            do {
                int alt497=2;
                alt497 = dfa497.predict(input);
                switch (alt497) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_151);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4MethodDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop497;
                }
            } while (true);
            int alt498=2;
            int LA498_0 = input.LA(1);

            if ( (LA498_0==LessThanSign) ) {
                alt498=1;
            }
            switch (alt498) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getTypeVariablesParserRuleCall_0_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_103);
                    this_TypeVariables_2=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt499=2;
            alt499 = dfa499.predict(input);
            switch (alt499) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getBogusTypeRefFragmentParserRuleCall_0_0_3()); 
                          
                    }
                    pushFollow(FOLLOW_103);
                    this_BogusTypeRefFragment_3=ruleBogusTypeRefFragment(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BogusTypeRefFragment_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt500=2;
            int LA500_0 = input.LA(1);

            if ( (LA500_0==Asterisk) ) {
                alt500=1;
            }
            else if ( ((LA500_0>=Intersection && LA500_0<=With)||(LA500_0>=For && LA500_0<=Var)||(LA500_0>=As && LA500_0<=Of)||LA500_0==LeftSquareBracket||LA500_0==RULE_DOUBLE||LA500_0==RULE_HEX_INT||LA500_0==RULE_OCTAL_INT||LA500_0==RULE_SCIENTIFIC_INT||LA500_0==RULE_IDENTIFIER||LA500_0==RULE_STRING||LA500_0==RULE_INT) ) {
                alt500=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 500, 0, input);

                throw nvae;
            }
            switch (alt500) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_4_0=(Token)match(input,Asterisk,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_4_0, grammarAccess.getN4MethodDeclarationAccess().getGeneratorAsteriskKeyword_0_0_4_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_4_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_53);
                    lv_declaredName_5_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4MethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_5_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_0_0_4_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_104);
                    this_MethodParamsReturnAndBody_6=norm1_MethodParamsReturnAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsReturnAndBody_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_0_0_4_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_102);
                    this_AsyncNoTrailingLineBreak_7=ruleAsyncNoTrailingLineBreak(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncNoTrailingLineBreak_7;
                              afterParserOrEnumRuleCall();
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_4_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_100);
                    lv_declaredName_8_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4MethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_8_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_0_0_4_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_104);
                    this_MethodParamsReturnAndBody_9=ruleMethodParamsReturnAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsReturnAndBody_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }
            int alt501=2;
            int LA501_0 = input.LA(1);

            if ( (LA501_0==Semicolon) ) {
                alt501=1;
            }
            switch (alt501) {
                case 1 :
                    {
                    otherlv_10=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getN4MethodDeclarationAccess().getSemicolonKeyword_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4CallableConstructorDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4CallableConstructorDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4CallableConstructorDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4CallableConstructorDeclaration=ruleN4CallableConstructorDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4CallableConstructorDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4CallableConstructorDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_MethodParamsReturnAndBody_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4CallableConstructorDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4CallableConstructorDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_104);
            this_MethodParamsReturnAndBody_0=ruleMethodParamsReturnAndBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_MethodParamsReturnAndBody_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt502=2;
            int LA502_0 = input.LA(1);

            if ( (LA502_0==Semicolon) ) {
                alt502=1;
            }
            switch (alt502) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getN4CallableConstructorDeclarationAccess().getSemicolonKeyword_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4CallableConstructorDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_MethodParamsReturnAndBody_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4CallableConstructorDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4CallableConstructorDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_104);
            this_MethodParamsReturnAndBody_0=ruleMethodParamsReturnAndBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_MethodParamsReturnAndBody_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt503=2;
            int LA503_0 = input.LA(1);

            if ( (LA503_0==Semicolon) ) {
                alt503=1;
            }
            switch (alt503) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getN4CallableConstructorDeclarationAccess().getSemicolonKeyword_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleMethodParamsAndBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_StrictFormalParameters_0 = null;

        EObject lv_body_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getMethodParamsAndBodyRule());
              		}
                      newCompositeNode(grammarAccess.getMethodParamsAndBodyAccess().getStrictFormalParametersParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_157);
            this_StrictFormalParameters_0=ruleStrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt504=2;
            int LA504_0 = input.LA(1);

            if ( (LA504_0==LeftCurlyBracket) && (synpred287_InternalN4JSXParser())) {
                alt504=1;
            }
            switch (alt504) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodParamsAndBodyAccess().getBodyBlockParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_1_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodParamsAndBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_1_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_MethodParamsAndBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_StrictFormalParameters_0 = null;

        EObject lv_body_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getMethodParamsAndBodyRule());
              		}
                      newCompositeNode(grammarAccess.getMethodParamsAndBodyAccess().getStrictFormalParametersParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_157);
            this_StrictFormalParameters_0=norm1_StrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt505=2;
            int LA505_0 = input.LA(1);

            if ( (LA505_0==LeftCurlyBracket) && (synpred288_InternalN4JSXParser())) {
                alt505=1;
            }
            switch (alt505) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodParamsAndBodyAccess().getBodyBlockParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_1_0=norm1_Block();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodParamsAndBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_1_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleMethodParamsReturnAndBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_StrictFormalParameters_0 = null;

        EObject lv_returnTypeRef_2_0 = null;

        EObject lv_body_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getMethodParamsReturnAndBodyRule());
              		}
                      newCompositeNode(grammarAccess.getMethodParamsReturnAndBodyAccess().getStrictFormalParametersParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_158);
            this_StrictFormalParameters_0=ruleStrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt506=2;
            int LA506_0 = input.LA(1);

            if ( (LA506_0==Colon) ) {
                alt506=1;
            }
            switch (alt506) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMethodParamsReturnAndBodyAccess().getColonKeyword_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodParamsReturnAndBodyAccess().getReturnTypeRefTypeRefParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_157);
                    lv_returnTypeRef_2_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodParamsReturnAndBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }
            int alt507=2;
            alt507 = dfa507.predict(input);
            switch (alt507) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodParamsReturnAndBodyAccess().getBodyBlockParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_3_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodParamsReturnAndBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_3_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_MethodParamsReturnAndBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_StrictFormalParameters_0 = null;

        EObject lv_returnTypeRef_2_0 = null;

        EObject lv_body_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getMethodParamsReturnAndBodyRule());
              		}
                      newCompositeNode(grammarAccess.getMethodParamsReturnAndBodyAccess().getStrictFormalParametersParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_158);
            this_StrictFormalParameters_0=norm1_StrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt508=2;
            int LA508_0 = input.LA(1);

            if ( (LA508_0==Colon) ) {
                alt508=1;
            }
            switch (alt508) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMethodParamsReturnAndBodyAccess().getColonKeyword_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodParamsReturnAndBodyAccess().getReturnTypeRefTypeRefParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_157);
                    lv_returnTypeRef_2_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodParamsReturnAndBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }
            int alt509=2;
            alt509 = dfa509.predict(input);
            switch (alt509) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodParamsReturnAndBodyAccess().getBodyBlockParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_3_0=norm1_Block();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodParamsReturnAndBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_3_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4GetterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4GetterDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4GetterDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4GetterDeclaration=ruleN4GetterDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4GetterDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4GetterDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_GetterHeader_2 = null;

        EObject lv_body_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4GetterDeclarationAccess().getN4GetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop510:
            do {
                int alt510=2;
                int LA510_0 = input.LA(1);

                if ( ((LA510_0>=Protected && LA510_0<=Abstract)||LA510_0==External||(LA510_0>=Private && LA510_0<=Project)||LA510_0==Public||LA510_0==Static||LA510_0==Const) ) {
                    alt510=1;
                }


                switch (alt510) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4GetterDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_152);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4GetterDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop510;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4GetterDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4GetterDeclarationAccess().getGetterHeaderParserRuleCall_0_0_2()); 
                  
            }
            pushFollow(FOLLOW_153);
            this_GetterHeader_2=ruleGetterHeader(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_GetterHeader_2;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }
            int alt511=2;
            alt511 = dfa511.predict(input);
            switch (alt511) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4GetterDeclarationAccess().getBodyBlockParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_104);
                    lv_body_3_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4GetterDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_3_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt512=2;
            int LA512_0 = input.LA(1);

            if ( (LA512_0==Semicolon) ) {
                alt512=1;
            }
            switch (alt512) {
                case 1 :
                    {
                    otherlv_4=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getN4GetterDeclarationAccess().getSemicolonKeyword_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4GetterDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_GetterHeader_2 = null;

        EObject lv_body_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4GetterDeclarationAccess().getN4GetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop513:
            do {
                int alt513=2;
                int LA513_0 = input.LA(1);

                if ( ((LA513_0>=Protected && LA513_0<=Abstract)||LA513_0==External||(LA513_0>=Private && LA513_0<=Project)||LA513_0==Public||LA513_0==Static||LA513_0==Const) ) {
                    alt513=1;
                }


                switch (alt513) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4GetterDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_152);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4GetterDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop513;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4GetterDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4GetterDeclarationAccess().getGetterHeaderParserRuleCall_0_0_2()); 
                  
            }
            pushFollow(FOLLOW_153);
            this_GetterHeader_2=norm1_GetterHeader(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_GetterHeader_2;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }
            int alt514=2;
            alt514 = dfa514.predict(input);
            switch (alt514) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4GetterDeclarationAccess().getBodyBlockParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_104);
                    lv_body_3_0=norm1_Block();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4GetterDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_3_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt515=2;
            int LA515_0 = input.LA(1);

            if ( (LA515_0==Semicolon) ) {
                alt515=1;
            }
            switch (alt515) {
                case 1 :
                    {
                    otherlv_4=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getN4GetterDeclarationAccess().getSemicolonKeyword_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleGetterHeader(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject this_BogusTypeRefFragment_0 = null;

        EObject lv_declaredName_2_0 = null;

        EObject this_ColonSepTypeRef_5 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt516=2;
            int LA516_0 = input.LA(1);

            if ( ((LA516_0>=Intersection && LA516_0<=Constructor)||LA516_0==Promisify||LA516_0==Target||LA516_0==Await||LA516_0==Union||LA516_0==This||LA516_0==This_1||(LA516_0>=Type && LA516_0<=Void)||LA516_0==QuestionMark||LA516_0==LeftCurlyBracket||LA516_0==Tilde||LA516_0==RULE_IDENTIFIER) ) {
                alt516=1;
            }
            switch (alt516) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getGetterHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getGetterHeaderAccess().getBogusTypeRefFragmentParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_159);
                    this_BogusTypeRefFragment_0=ruleBogusTypeRefFragment(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BogusTypeRefFragment_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,Get,FOLLOW_102); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getGetterHeaderAccess().getGetKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGetterHeaderAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_declaredName_2_0=ruleLiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGetterHeaderRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getGetterHeaderAccess().getLeftParenthesisKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getGetterHeaderAccess().getRightParenthesisKeyword_4());
                  
            }
            int alt517=2;
            int LA517_0 = input.LA(1);

            if ( (LA517_0==Colon) ) {
                alt517=1;
            }
            switch (alt517) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getGetterHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getGetterHeaderAccess().getColonSepTypeRefParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ColonSepTypeRef_5=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_GetterHeader(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject this_BogusTypeRefFragment_0 = null;

        EObject lv_declaredName_2_0 = null;

        EObject this_ColonSepTypeRef_5 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt518=2;
            int LA518_0 = input.LA(1);

            if ( ((LA518_0>=Intersection && LA518_0<=Constructor)||LA518_0==Promisify||LA518_0==Target||LA518_0==Await||LA518_0==Union||LA518_0==This||LA518_0==This_1||(LA518_0>=Type && LA518_0<=Void)||LA518_0==QuestionMark||LA518_0==LeftCurlyBracket||LA518_0==Tilde||LA518_0==RULE_IDENTIFIER) ) {
                alt518=1;
            }
            switch (alt518) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getGetterHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getGetterHeaderAccess().getBogusTypeRefFragmentParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_159);
                    this_BogusTypeRefFragment_0=ruleBogusTypeRefFragment(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BogusTypeRefFragment_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,Get,FOLLOW_102); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getGetterHeaderAccess().getGetKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGetterHeaderAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_declaredName_2_0=norm1_LiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGetterHeaderRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getGetterHeaderAccess().getLeftParenthesisKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getGetterHeaderAccess().getRightParenthesisKeyword_4());
                  
            }
            int alt519=2;
            int LA519_0 = input.LA(1);

            if ( (LA519_0==Colon) ) {
                alt519=1;
            }
            switch (alt519) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getGetterHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getGetterHeaderAccess().getColonSepTypeRefParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ColonSepTypeRef_5=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4SetterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4SetterDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4SetterDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4SetterDeclaration=ruleN4SetterDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4SetterDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4SetterDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        EObject lv_declaredName_3_0 = null;

        EObject lv_fpar_5_0 = null;

        EObject lv_body_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4SetterDeclarationAccess().getN4SetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop520:
            do {
                int alt520=2;
                int LA520_0 = input.LA(1);

                if ( ((LA520_0>=Protected && LA520_0<=Abstract)||LA520_0==External||(LA520_0>=Private && LA520_0<=Project)||LA520_0==Public||LA520_0==Static||LA520_0==Const) ) {
                    alt520=1;
                }


                switch (alt520) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_154);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop520;
                }
            } while (true);

            otherlv_2=(Token)match(input,Set,FOLLOW_102); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getN4SetterDeclarationAccess().getSetKeyword_0_0_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_3_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_declaredName_3_0=ruleLiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_3_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            otherlv_4=(Token)match(input,LeftParenthesis,FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getN4SetterDeclarationAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getFparFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_fpar_5_0=ruleFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"fpar",
                      		lv_fpar_5_0, 
                      		"eu.numberfour.n4js.N4JS.FormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_153); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getN4SetterDeclarationAccess().getRightParenthesisKeyword_3());
                  
            }
            int alt521=2;
            alt521 = dfa521.predict(input);
            switch (alt521) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getBodyBlockParserRuleCall_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_104);
                    lv_body_7_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_7_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt522=2;
            int LA522_0 = input.LA(1);

            if ( (LA522_0==Semicolon) ) {
                alt522=1;
            }
            switch (alt522) {
                case 1 :
                    {
                    otherlv_8=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getN4SetterDeclarationAccess().getSemicolonKeyword_5());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4SetterDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        EObject lv_declaredName_3_0 = null;

        EObject lv_fpar_5_0 = null;

        EObject lv_body_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4SetterDeclarationAccess().getN4SetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop523:
            do {
                int alt523=2;
                int LA523_0 = input.LA(1);

                if ( ((LA523_0>=Protected && LA523_0<=Abstract)||LA523_0==External||(LA523_0>=Private && LA523_0<=Project)||LA523_0==Public||LA523_0==Static||LA523_0==Const) ) {
                    alt523=1;
                }


                switch (alt523) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_154);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop523;
                }
            } while (true);

            otherlv_2=(Token)match(input,Set,FOLLOW_102); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getN4SetterDeclarationAccess().getSetKeyword_0_0_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_3_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_declaredName_3_0=norm1_LiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_3_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            otherlv_4=(Token)match(input,LeftParenthesis,FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getN4SetterDeclarationAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getFparFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_fpar_5_0=norm1_FormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"fpar",
                      		lv_fpar_5_0, 
                      		"eu.numberfour.n4js.N4JS.FormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_153); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getN4SetterDeclarationAccess().getRightParenthesisKeyword_3());
                  
            }
            int alt524=2;
            alt524 = dfa524.predict(input);
            switch (alt524) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getBodyBlockParserRuleCall_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_104);
                    lv_body_7_0=norm1_Block();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_7_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt525=2;
            int LA525_0 = input.LA(1);

            if ( (LA525_0==Semicolon) ) {
                alt525=1;
            }
            switch (alt525) {
                case 1 :
                    {
                    otherlv_8=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getN4SetterDeclarationAccess().getSemicolonKeyword_5());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBindingPattern() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingPattern = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingPatternRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingPattern=ruleBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingPattern; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingPattern() throws RecognitionException {
        EObject current = null;

        EObject this_ObjectBindingPattern_0 = null;

        EObject this_ArrayBindingPattern_1 = null;


         enterRule(); 
            
        try {
            {
            int alt526=2;
            int LA526_0 = input.LA(1);

            if ( (LA526_0==LeftCurlyBracket) ) {
                alt526=1;
            }
            else if ( (LA526_0==LeftSquareBracket) ) {
                alt526=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 526, 0, input);

                throw nvae;
            }
            switch (alt526) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBindingPatternAccess().getObjectBindingPatternParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ObjectBindingPattern_0=ruleObjectBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ObjectBindingPattern_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBindingPatternAccess().getArrayBindingPatternParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayBindingPattern_1=ruleArrayBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayBindingPattern_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BindingPattern() throws RecognitionException {
        EObject current = null;

        EObject this_ObjectBindingPattern_0 = null;

        EObject this_ArrayBindingPattern_1 = null;


         enterRule(); 
            
        try {
            {
            int alt527=2;
            int LA527_0 = input.LA(1);

            if ( (LA527_0==LeftCurlyBracket) ) {
                alt527=1;
            }
            else if ( (LA527_0==LeftSquareBracket) ) {
                alt527=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 527, 0, input);

                throw nvae;
            }
            switch (alt527) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBindingPatternAccess().getObjectBindingPatternParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ObjectBindingPattern_0=norm1_ObjectBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ObjectBindingPattern_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBindingPatternAccess().getArrayBindingPatternParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayBindingPattern_1=norm1_ArrayBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayBindingPattern_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleObjectBindingPattern() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObjectBindingPattern = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObjectBindingPatternRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObjectBindingPattern=ruleObjectBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObjectBindingPattern; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleObjectBindingPattern() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_properties_2_0 = null;

        EObject lv_properties_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getObjectBindingPatternAccess().getBindingPatternAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_160); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getObjectBindingPatternAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            int alt529=2;
            int LA529_0 = input.LA(1);

            if ( ((LA529_0>=Intersection && LA529_0<=With)||(LA529_0>=For && LA529_0<=Var)||(LA529_0>=As && LA529_0<=Of)||(LA529_0>=CommercialAt && LA529_0<=LeftSquareBracket)||LA529_0==RULE_DOUBLE||LA529_0==RULE_HEX_INT||LA529_0==RULE_OCTAL_INT||LA529_0==RULE_SCIENTIFIC_INT||LA529_0==RULE_IDENTIFIER||LA529_0==RULE_STRING||LA529_0==RULE_INT) ) {
                alt529=1;
            }
            switch (alt529) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getObjectBindingPatternAccess().getPropertiesBindingPropertyParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_27);
                    lv_properties_2_0=ruleBindingProperty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getObjectBindingPatternRule());
                      	        }
                             		add(
                             			current, 
                             			"properties",
                              		lv_properties_2_0, 
                              		"eu.numberfour.n4js.N4JS.BindingProperty");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop528:
                    do {
                        int alt528=2;
                        int LA528_0 = input.LA(1);

                        if ( (LA528_0==Comma) ) {
                            alt528=1;
                        }


                        switch (alt528) {
                    	case 1 :
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_161); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getObjectBindingPatternAccess().getCommaKeyword_2_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getObjectBindingPatternAccess().getPropertiesBindingPropertyParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_properties_4_0=ruleBindingProperty();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getObjectBindingPatternRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"properties",
                    	              		lv_properties_4_0, 
                    	              		"eu.numberfour.n4js.N4JS.BindingProperty");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop528;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getObjectBindingPatternAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ObjectBindingPattern() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_properties_2_0 = null;

        EObject lv_properties_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getObjectBindingPatternAccess().getBindingPatternAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_160); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getObjectBindingPatternAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            int alt531=2;
            int LA531_0 = input.LA(1);

            if ( ((LA531_0>=Intersection && LA531_0<=With)||(LA531_0>=For && LA531_0<=Var)||(LA531_0>=As && LA531_0<=Of)||(LA531_0>=CommercialAt && LA531_0<=LeftSquareBracket)||LA531_0==RULE_DOUBLE||LA531_0==RULE_HEX_INT||LA531_0==RULE_OCTAL_INT||LA531_0==RULE_SCIENTIFIC_INT||LA531_0==RULE_IDENTIFIER||LA531_0==RULE_STRING||LA531_0==RULE_INT) ) {
                alt531=1;
            }
            switch (alt531) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getObjectBindingPatternAccess().getPropertiesBindingPropertyParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_27);
                    lv_properties_2_0=norm1_BindingProperty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getObjectBindingPatternRule());
                      	        }
                             		add(
                             			current, 
                             			"properties",
                              		lv_properties_2_0, 
                              		"eu.numberfour.n4js.N4JS.BindingProperty");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop530:
                    do {
                        int alt530=2;
                        int LA530_0 = input.LA(1);

                        if ( (LA530_0==Comma) ) {
                            alt530=1;
                        }


                        switch (alt530) {
                    	case 1 :
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_161); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getObjectBindingPatternAccess().getCommaKeyword_2_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getObjectBindingPatternAccess().getPropertiesBindingPropertyParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_properties_4_0=norm1_BindingProperty();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getObjectBindingPatternRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"properties",
                    	              		lv_properties_4_0, 
                    	              		"eu.numberfour.n4js.N4JS.BindingProperty");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop530;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getObjectBindingPatternAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrayBindingPattern() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayBindingPattern = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayBindingPatternRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayBindingPattern=ruleArrayBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBindingPattern; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrayBindingPattern() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;

        EObject lv_elements_6_0 = null;

        EObject lv_elements_8_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayBindingPatternAccess().getBindingPatternAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_162); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrayBindingPatternAccess().getLeftSquareBracketKeyword_1());
                  
            }
            loop532:
            do {
                int alt532=2;
                int LA532_0 = input.LA(1);

                if ( (LA532_0==Comma) ) {
                    alt532=1;
                }


                switch (alt532) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsElisionParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_162);
            	    lv_elements_2_0=ruleElision();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"elements",
            	              		lv_elements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.Elision");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop532;
                }
            } while (true);
            int alt537=2;
            int LA537_0 = input.LA(1);

            if ( ((LA537_0>=Intersection && LA537_0<=Implements)||(LA537_0>=Promisify && LA537_0<=Abstract)||LA537_0==External||(LA537_0>=Private && LA537_0<=Project)||LA537_0==Public||LA537_0==Static||LA537_0==Target||(LA537_0>=Async && LA537_0<=Await)||LA537_0==Union||(LA537_0>=Yield && LA537_0<=This)||LA537_0==From||LA537_0==Type||LA537_0==FullStopFullStopFullStop||(LA537_0>=Get && LA537_0<=Let)||(LA537_0>=Out && LA537_0<=Set)||LA537_0==As||LA537_0==Of||(LA537_0>=CommercialAt && LA537_0<=LeftSquareBracket)||LA537_0==LeftCurlyBracket||LA537_0==RULE_IDENTIFIER) ) {
                alt537=1;
            }
            switch (alt537) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsBindingRestElementParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_97);
                    lv_elements_3_0=ruleBindingRestElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"eu.numberfour.n4js.N4JS.BindingRestElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop534:
                    do {
                        int alt534=2;
                        alt534 = dfa534.predict(input);
                        switch (alt534) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_163); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getArrayBindingPatternAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    loop533:
                    	    do {
                    	        int alt533=2;
                    	        int LA533_0 = input.LA(1);

                    	        if ( (LA533_0==Comma) ) {
                    	            alt533=1;
                    	        }


                    	        switch (alt533) {
                    	    	case 1 :
                    	    	    {
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsElisionParserRuleCall_3_1_1_0()); 
                    	    	      	    
                    	    	    }
                    	    	    pushFollow(FOLLOW_163);
                    	    	    lv_elements_5_0=ruleElision();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      	        if (current==null) {
                    	    	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                    	    	      	        }
                    	    	             		add(
                    	    	             			current, 
                    	    	             			"elements",
                    	    	              		lv_elements_5_0, 
                    	    	              		"eu.numberfour.n4js.N4JS.Elision");
                    	    	      	        afterParserOrEnumRuleCall();
                    	    	      	    
                    	    	    }

                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop533;
                    	        }
                    	    } while (true);
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsBindingRestElementParserRuleCall_3_1_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    lv_elements_6_0=ruleBindingRestElement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_6_0, 
                    	              		"eu.numberfour.n4js.N4JS.BindingRestElement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop534;
                        }
                    } while (true);
                    int alt536=2;
                    int LA536_0 = input.LA(1);

                    if ( (LA536_0==Comma) ) {
                        alt536=1;
                    }
                    switch (alt536) {
                        case 1 :
                            {
                            otherlv_7=(Token)match(input,Comma,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_7, grammarAccess.getArrayBindingPatternAccess().getCommaKeyword_3_2_0());
                                  
                            }
                            loop535:
                            do {
                                int alt535=2;
                                int LA535_0 = input.LA(1);

                                if ( (LA535_0==Comma) ) {
                                    alt535=1;
                                }


                                switch (alt535) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsElisionParserRuleCall_3_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_97);
                            	    lv_elements_8_0=ruleElision();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"elements",
                            	              		lv_elements_8_0, 
                            	              		"eu.numberfour.n4js.N4JS.Elision");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop535;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getArrayBindingPatternAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ArrayBindingPattern() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;

        EObject lv_elements_6_0 = null;

        EObject lv_elements_8_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayBindingPatternAccess().getBindingPatternAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_162); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrayBindingPatternAccess().getLeftSquareBracketKeyword_1());
                  
            }
            loop538:
            do {
                int alt538=2;
                int LA538_0 = input.LA(1);

                if ( (LA538_0==Comma) ) {
                    alt538=1;
                }


                switch (alt538) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsElisionParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_162);
            	    lv_elements_2_0=ruleElision();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"elements",
            	              		lv_elements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.Elision");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop538;
                }
            } while (true);
            int alt543=2;
            int LA543_0 = input.LA(1);

            if ( ((LA543_0>=Intersection && LA543_0<=Implements)||(LA543_0>=Promisify && LA543_0<=Abstract)||LA543_0==External||(LA543_0>=Private && LA543_0<=Project)||LA543_0==Public||LA543_0==Static||LA543_0==Target||(LA543_0>=Async && LA543_0<=Await)||LA543_0==Union||LA543_0==This||LA543_0==From||LA543_0==Type||LA543_0==FullStopFullStopFullStop||(LA543_0>=Get && LA543_0<=Let)||(LA543_0>=Out && LA543_0<=Set)||LA543_0==As||LA543_0==Of||(LA543_0>=CommercialAt && LA543_0<=LeftSquareBracket)||LA543_0==LeftCurlyBracket||LA543_0==RULE_IDENTIFIER) ) {
                alt543=1;
            }
            switch (alt543) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsBindingRestElementParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_97);
                    lv_elements_3_0=norm1_BindingRestElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"eu.numberfour.n4js.N4JS.BindingRestElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop540:
                    do {
                        int alt540=2;
                        alt540 = dfa540.predict(input);
                        switch (alt540) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_163); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getArrayBindingPatternAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    loop539:
                    	    do {
                    	        int alt539=2;
                    	        int LA539_0 = input.LA(1);

                    	        if ( (LA539_0==Comma) ) {
                    	            alt539=1;
                    	        }


                    	        switch (alt539) {
                    	    	case 1 :
                    	    	    {
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsElisionParserRuleCall_3_1_1_0()); 
                    	    	      	    
                    	    	    }
                    	    	    pushFollow(FOLLOW_163);
                    	    	    lv_elements_5_0=ruleElision();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      	        if (current==null) {
                    	    	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                    	    	      	        }
                    	    	             		add(
                    	    	             			current, 
                    	    	             			"elements",
                    	    	              		lv_elements_5_0, 
                    	    	              		"eu.numberfour.n4js.N4JS.Elision");
                    	    	      	        afterParserOrEnumRuleCall();
                    	    	      	    
                    	    	    }

                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop539;
                    	        }
                    	    } while (true);
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsBindingRestElementParserRuleCall_3_1_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    lv_elements_6_0=norm1_BindingRestElement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_6_0, 
                    	              		"eu.numberfour.n4js.N4JS.BindingRestElement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop540;
                        }
                    } while (true);
                    int alt542=2;
                    int LA542_0 = input.LA(1);

                    if ( (LA542_0==Comma) ) {
                        alt542=1;
                    }
                    switch (alt542) {
                        case 1 :
                            {
                            otherlv_7=(Token)match(input,Comma,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_7, grammarAccess.getArrayBindingPatternAccess().getCommaKeyword_3_2_0());
                                  
                            }
                            loop541:
                            do {
                                int alt541=2;
                                int LA541_0 = input.LA(1);

                                if ( (LA541_0==Comma) ) {
                                    alt541=1;
                                }


                                switch (alt541) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsElisionParserRuleCall_3_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_97);
                            	    lv_elements_8_0=ruleElision();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"elements",
                            	              		lv_elements_8_0, 
                            	              		"eu.numberfour.n4js.N4JS.Elision");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop541;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getArrayBindingPatternAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBindingProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingProperty = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingPropertyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingProperty=ruleBindingProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingProperty; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingProperty() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_declaredName_0_0 = null;

        EObject lv_value_2_0 = null;

        EObject lv_value_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt544=2;
            alt544 = dfa544.predict(input);
            switch (alt544) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingPropertyAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_declaredName_0_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_0_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,Colon,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getBindingPropertyAccess().getColonKeyword_0_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingPropertyAccess().getValueBindingElementParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_2_0=ruleBindingElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_2_0, 
                              		"eu.numberfour.n4js.N4JS.BindingElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingPropertyAccess().getValueSingleNameBindingParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=ruleSingleNameBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_3_0, 
                              		"eu.numberfour.n4js.N4JS.SingleNameBinding");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BindingProperty() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_declaredName_0_0 = null;

        EObject lv_value_2_0 = null;

        EObject lv_value_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt545=2;
            alt545 = dfa545.predict(input);
            switch (alt545) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingPropertyAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_declaredName_0_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_0_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,Colon,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getBindingPropertyAccess().getColonKeyword_0_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingPropertyAccess().getValueBindingElementParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_2_0=norm1_BindingElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_2_0, 
                              		"eu.numberfour.n4js.N4JS.BindingElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingPropertyAccess().getValueSingleNameBindingParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=norm1_SingleNameBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_3_0, 
                              		"eu.numberfour.n4js.N4JS.SingleNameBinding");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleSingleNameBinding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSingleNameBinding = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSingleNameBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSingleNameBinding=ruleSingleNameBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSingleNameBinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleSingleNameBinding() throws RecognitionException {
        EObject current = null;

        EObject lv_varDecl_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSingleNameBindingAccess().getVarDeclVariableDeclarationParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_varDecl_0_0=norm1_VariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSingleNameBindingRule());
              	        }
                     		set(
                     			current, 
                     			"varDecl",
                      		lv_varDecl_0_0, 
                      		"eu.numberfour.n4js.N4JS.VariableDeclaration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_SingleNameBinding() throws RecognitionException {
        EObject current = null;

        EObject lv_varDecl_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSingleNameBindingAccess().getVarDeclVariableDeclarationParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_varDecl_0_0=norm3_VariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSingleNameBindingRule());
              	        }
                     		set(
                     			current, 
                     			"varDecl",
                      		lv_varDecl_0_0, 
                      		"eu.numberfour.n4js.N4JS.VariableDeclaration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_SingleNameBinding() throws RecognitionException {
        EObject current = null;

        EObject lv_varDecl_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSingleNameBindingAccess().getVarDeclVariableDeclarationParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_varDecl_0_0=norm5_VariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSingleNameBindingRule());
              	        }
                     		set(
                     			current, 
                     			"varDecl",
                      		lv_varDecl_0_0, 
                      		"eu.numberfour.n4js.N4JS.VariableDeclaration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_SingleNameBinding() throws RecognitionException {
        EObject current = null;

        EObject lv_varDecl_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSingleNameBindingAccess().getVarDeclVariableDeclarationParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_varDecl_0_0=norm7_VariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSingleNameBindingRule());
              	        }
                     		set(
                     			current, 
                     			"varDecl",
                      		lv_varDecl_0_0, 
                      		"eu.numberfour.n4js.N4JS.VariableDeclaration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBindingElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingElement=ruleBindingElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_nestedPattern_0_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_varDecl_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt547=2;
            int LA547_0 = input.LA(1);

            if ( (LA547_0==LeftCurlyBracket) && (synpred305_InternalN4JSXParser())) {
                alt547=1;
            }
            else if ( (LA547_0==LeftSquareBracket) && (synpred305_InternalN4JSXParser())) {
                alt547=1;
            }
            else if ( ((LA547_0>=Intersection && LA547_0<=Implements)||(LA547_0>=Promisify && LA547_0<=Abstract)||LA547_0==External||(LA547_0>=Private && LA547_0<=Project)||LA547_0==Public||LA547_0==Static||LA547_0==Target||(LA547_0>=Async && LA547_0<=Await)||LA547_0==Union||(LA547_0>=Yield && LA547_0<=This)||LA547_0==From||LA547_0==Type||(LA547_0>=Get && LA547_0<=Let)||(LA547_0>=Out && LA547_0<=Set)||LA547_0==As||LA547_0==Of||LA547_0==CommercialAt||LA547_0==RULE_IDENTIFIER) ) {
                alt547=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 547, 0, input);

                throw nvae;
            }
            switch (alt547) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementAccess().getNestedPatternBindingPatternParserRuleCall_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_70);
                    lv_nestedPattern_0_0=ruleBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementRule());
                      	        }
                             		set(
                             			current, 
                             			"nestedPattern",
                              		lv_nestedPattern_0_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    int alt546=2;
                    int LA546_0 = input.LA(1);

                    if ( (LA546_0==EqualsSign) ) {
                        alt546=1;
                    }
                    switch (alt546) {
                        case 1 :
                            {
                            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_1, grammarAccess.getBindingElementAccess().getEqualsSignKeyword_0_1_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getBindingElementAccess().getExpressionAssignmentExpressionParserRuleCall_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_2_0=norm1_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getBindingElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_2_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementAccess().getVarDeclVariableDeclarationParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_varDecl_3_0=norm5_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementRule());
                      	        }
                             		set(
                             			current, 
                             			"varDecl",
                              		lv_varDecl_3_0, 
                              		"eu.numberfour.n4js.N4JS.VariableDeclaration");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BindingElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_nestedPattern_0_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_varDecl_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt549=2;
            int LA549_0 = input.LA(1);

            if ( (LA549_0==LeftCurlyBracket) && (synpred306_InternalN4JSXParser())) {
                alt549=1;
            }
            else if ( (LA549_0==LeftSquareBracket) && (synpred306_InternalN4JSXParser())) {
                alt549=1;
            }
            else if ( ((LA549_0>=Intersection && LA549_0<=Implements)||(LA549_0>=Promisify && LA549_0<=Abstract)||LA549_0==External||(LA549_0>=Private && LA549_0<=Project)||LA549_0==Public||LA549_0==Static||LA549_0==Target||(LA549_0>=Async && LA549_0<=Await)||LA549_0==Union||LA549_0==This||LA549_0==From||LA549_0==Type||(LA549_0>=Get && LA549_0<=Let)||(LA549_0>=Out && LA549_0<=Set)||LA549_0==As||LA549_0==Of||LA549_0==CommercialAt||LA549_0==RULE_IDENTIFIER) ) {
                alt549=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 549, 0, input);

                throw nvae;
            }
            switch (alt549) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementAccess().getNestedPatternBindingPatternParserRuleCall_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_70);
                    lv_nestedPattern_0_0=norm1_BindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementRule());
                      	        }
                             		set(
                             			current, 
                             			"nestedPattern",
                              		lv_nestedPattern_0_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    int alt548=2;
                    int LA548_0 = input.LA(1);

                    if ( (LA548_0==EqualsSign) ) {
                        alt548=1;
                    }
                    switch (alt548) {
                        case 1 :
                            {
                            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_1, grammarAccess.getBindingElementAccess().getEqualsSignKeyword_0_1_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getBindingElementAccess().getExpressionAssignmentExpressionParserRuleCall_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_2_0=norm3_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getBindingElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_2_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementAccess().getVarDeclVariableDeclarationParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_varDecl_3_0=norm7_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementRule());
                      	        }
                             		set(
                             			current, 
                             			"varDecl",
                              		lv_varDecl_3_0, 
                              		"eu.numberfour.n4js.N4JS.VariableDeclaration");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBindingRestElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingRestElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingRestElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingRestElement=ruleBindingRestElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingRestElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingRestElement() throws RecognitionException {
        EObject current = null;

        Token lv_rest_0_0=null;
        Token otherlv_2=null;
        EObject lv_nestedPattern_1_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_varDecl_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt550=2;
            int LA550_0 = input.LA(1);

            if ( (LA550_0==FullStopFullStopFullStop) ) {
                alt550=1;
            }
            switch (alt550) {
                case 1 :
                    {
                    {
                    lv_rest_0_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_rest_0_0, grammarAccess.getBindingRestElementAccess().getRestFullStopFullStopFullStopKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBindingRestElementRule());
                      	        }
                             		setWithLastConsumed(current, "rest", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt552=2;
            int LA552_0 = input.LA(1);

            if ( (LA552_0==LeftCurlyBracket) && (synpred307_InternalN4JSXParser())) {
                alt552=1;
            }
            else if ( (LA552_0==LeftSquareBracket) && (synpred307_InternalN4JSXParser())) {
                alt552=1;
            }
            else if ( ((LA552_0>=Intersection && LA552_0<=Implements)||(LA552_0>=Promisify && LA552_0<=Abstract)||LA552_0==External||(LA552_0>=Private && LA552_0<=Project)||LA552_0==Public||LA552_0==Static||LA552_0==Target||(LA552_0>=Async && LA552_0<=Await)||LA552_0==Union||(LA552_0>=Yield && LA552_0<=This)||LA552_0==From||LA552_0==Type||(LA552_0>=Get && LA552_0<=Let)||(LA552_0>=Out && LA552_0<=Set)||LA552_0==As||LA552_0==Of||LA552_0==CommercialAt||LA552_0==RULE_IDENTIFIER) ) {
                alt552=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 552, 0, input);

                throw nvae;
            }
            switch (alt552) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingRestElementAccess().getNestedPatternBindingPatternParserRuleCall_1_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_70);
                    lv_nestedPattern_1_0=ruleBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingRestElementRule());
                      	        }
                             		set(
                             			current, 
                             			"nestedPattern",
                              		lv_nestedPattern_1_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    int alt551=2;
                    int LA551_0 = input.LA(1);

                    if ( (LA551_0==EqualsSign) ) {
                        alt551=1;
                    }
                    switch (alt551) {
                        case 1 :
                            {
                            otherlv_2=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getBindingRestElementAccess().getEqualsSignKeyword_1_0_1_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getBindingRestElementAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_3_0=norm1_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getBindingRestElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_3_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingRestElementAccess().getVarDeclVariableDeclarationParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_varDecl_4_0=norm5_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingRestElementRule());
                      	        }
                             		set(
                             			current, 
                             			"varDecl",
                              		lv_varDecl_4_0, 
                              		"eu.numberfour.n4js.N4JS.VariableDeclaration");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BindingRestElement() throws RecognitionException {
        EObject current = null;

        Token lv_rest_0_0=null;
        Token otherlv_2=null;
        EObject lv_nestedPattern_1_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_varDecl_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt553=2;
            int LA553_0 = input.LA(1);

            if ( (LA553_0==FullStopFullStopFullStop) ) {
                alt553=1;
            }
            switch (alt553) {
                case 1 :
                    {
                    {
                    lv_rest_0_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_rest_0_0, grammarAccess.getBindingRestElementAccess().getRestFullStopFullStopFullStopKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBindingRestElementRule());
                      	        }
                             		setWithLastConsumed(current, "rest", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt555=2;
            int LA555_0 = input.LA(1);

            if ( (LA555_0==LeftCurlyBracket) && (synpred308_InternalN4JSXParser())) {
                alt555=1;
            }
            else if ( (LA555_0==LeftSquareBracket) && (synpred308_InternalN4JSXParser())) {
                alt555=1;
            }
            else if ( ((LA555_0>=Intersection && LA555_0<=Implements)||(LA555_0>=Promisify && LA555_0<=Abstract)||LA555_0==External||(LA555_0>=Private && LA555_0<=Project)||LA555_0==Public||LA555_0==Static||LA555_0==Target||(LA555_0>=Async && LA555_0<=Await)||LA555_0==Union||LA555_0==This||LA555_0==From||LA555_0==Type||(LA555_0>=Get && LA555_0<=Let)||(LA555_0>=Out && LA555_0<=Set)||LA555_0==As||LA555_0==Of||LA555_0==CommercialAt||LA555_0==RULE_IDENTIFIER) ) {
                alt555=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 555, 0, input);

                throw nvae;
            }
            switch (alt555) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingRestElementAccess().getNestedPatternBindingPatternParserRuleCall_1_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_70);
                    lv_nestedPattern_1_0=norm1_BindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingRestElementRule());
                      	        }
                             		set(
                             			current, 
                             			"nestedPattern",
                              		lv_nestedPattern_1_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    int alt554=2;
                    int LA554_0 = input.LA(1);

                    if ( (LA554_0==EqualsSign) ) {
                        alt554=1;
                    }
                    switch (alt554) {
                        case 1 :
                            {
                            otherlv_2=(Token)match(input,EqualsSign,FOLLOW_14); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getBindingRestElementAccess().getEqualsSignKeyword_1_0_1_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getBindingRestElementAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_3_0=norm3_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getBindingRestElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_3_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingRestElementAccess().getVarDeclVariableDeclarationParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_varDecl_4_0=norm7_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingRestElementRule());
                      	        }
                             		set(
                             			current, 
                             			"varDecl",
                              		lv_varDecl_4_0, 
                              		"eu.numberfour.n4js.N4JS.VariableDeclaration");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleElision() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElision = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElisionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElision=ruleElision();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElision; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleElision() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getElisionAccess().getBindingElementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Comma,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getElisionAccess().getCommaKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLiteralOrComputedPropertyName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralOrComputedPropertyName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralOrComputedPropertyName=ruleLiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralOrComputedPropertyName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLiteralOrComputedPropertyName() throws RecognitionException {
        EObject current = null;

        Token lv_literalName_1_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_literalName_0_0 = null;

        AntlrDatatypeRuleToken lv_literalName_2_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            int alt556=4;
            switch ( input.LA(1) ) {
            case Intersection:
            case Constructor:
            case Implements:
            case Instanceof:
            case Promisify:
            case Interface:
            case Protected:
            case Abstract:
            case Continue:
            case Debugger:
            case External:
            case Function:
            case Default:
            case Extends:
            case Finally:
            case Private:
            case Project:
            case Delete:
            case Export:
            case Import:
            case Public:
            case Return:
            case Static:
            case Switch:
            case Target:
            case Typeof:
            case Async:
            case Await:
            case Break:
            case Catch:
            case Class:
            case Const:
            case False:
            case Super:
            case Throw:
            case Union:
            case While:
            case Yield:
            case This:
            case Case:
            case Else:
            case Enum:
            case From:
            case Null:
            case This_1:
            case True:
            case Type:
            case Void:
            case With:
            case For:
            case Get:
            case Let:
            case New:
            case Out:
            case Set:
            case Try:
            case Var:
            case As:
            case Do:
            case If:
            case In:
            case Of:
            case RULE_IDENTIFIER:
                {
                alt556=1;
                }
                break;
            case RULE_STRING:
                {
                alt556=2;
                }
                break;
            case RULE_DOUBLE:
            case RULE_HEX_INT:
            case RULE_OCTAL_INT:
            case RULE_SCIENTIFIC_INT:
            case RULE_INT:
                {
                alt556=3;
                }
                break;
            case LeftSquareBracket:
                {
                alt556=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 556, 0, input);

                throw nvae;
            }

            switch (alt556) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameAccess().getLiteralNameIdentifierNameParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_literalName_0_0=ruleIdentifierName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		set(
                             			current, 
                             			"literalName",
                              		lv_literalName_0_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    lv_literalName_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_literalName_1_0, grammarAccess.getLiteralOrComputedPropertyNameAccess().getLiteralNameSTRINGTerminalRuleCall_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"literalName",
                              		lv_literalName_1_0, 
                              		"eu.numberfour.n4js.N4JS.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameAccess().getLiteralNameNumericLiteralAsStringParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_literalName_2_0=ruleNumericLiteralAsString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		set(
                             			current, 
                             			"literalName",
                              		lv_literalName_2_0, 
                              		"eu.numberfour.n4js.N4JS.NumericLiteralAsString");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    otherlv_3=(Token)match(input,LeftSquareBracket,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getLiteralOrComputedPropertyNameAccess().getLeftSquareBracketKeyword_3_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_113);
                    lv_expression_4_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_4_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getLiteralOrComputedPropertyNameAccess().getRightSquareBracketKeyword_3_2());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_LiteralOrComputedPropertyName() throws RecognitionException {
        EObject current = null;

        Token lv_literalName_1_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_literalName_0_0 = null;

        AntlrDatatypeRuleToken lv_literalName_2_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            int alt557=4;
            switch ( input.LA(1) ) {
            case Intersection:
            case Constructor:
            case Implements:
            case Instanceof:
            case Promisify:
            case Interface:
            case Protected:
            case Abstract:
            case Continue:
            case Debugger:
            case External:
            case Function:
            case Default:
            case Extends:
            case Finally:
            case Private:
            case Project:
            case Delete:
            case Export:
            case Import:
            case Public:
            case Return:
            case Static:
            case Switch:
            case Target:
            case Typeof:
            case Async:
            case Await:
            case Break:
            case Catch:
            case Class:
            case Const:
            case False:
            case Super:
            case Throw:
            case Union:
            case While:
            case Yield:
            case This:
            case Case:
            case Else:
            case Enum:
            case From:
            case Null:
            case This_1:
            case True:
            case Type:
            case Void:
            case With:
            case For:
            case Get:
            case Let:
            case New:
            case Out:
            case Set:
            case Try:
            case Var:
            case As:
            case Do:
            case If:
            case In:
            case Of:
            case RULE_IDENTIFIER:
                {
                alt557=1;
                }
                break;
            case RULE_STRING:
                {
                alt557=2;
                }
                break;
            case RULE_DOUBLE:
            case RULE_HEX_INT:
            case RULE_OCTAL_INT:
            case RULE_SCIENTIFIC_INT:
            case RULE_INT:
                {
                alt557=3;
                }
                break;
            case LeftSquareBracket:
                {
                alt557=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 557, 0, input);

                throw nvae;
            }

            switch (alt557) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameAccess().getLiteralNameIdentifierNameParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_literalName_0_0=ruleIdentifierName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		set(
                             			current, 
                             			"literalName",
                              		lv_literalName_0_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    lv_literalName_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_literalName_1_0, grammarAccess.getLiteralOrComputedPropertyNameAccess().getLiteralNameSTRINGTerminalRuleCall_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"literalName",
                              		lv_literalName_1_0, 
                              		"eu.numberfour.n4js.N4JS.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameAccess().getLiteralNameNumericLiteralAsStringParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_literalName_2_0=ruleNumericLiteralAsString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		set(
                             			current, 
                             			"literalName",
                              		lv_literalName_2_0, 
                              		"eu.numberfour.n4js.N4JS.NumericLiteralAsString");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    otherlv_3=(Token)match(input,LeftSquareBracket,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getLiteralOrComputedPropertyNameAccess().getLeftSquareBracketKeyword_3_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_113);
                    lv_expression_4_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_4_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getLiteralOrComputedPropertyNameAccess().getRightSquareBracketKeyword_3_2());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeRef=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeRef() throws RecognitionException {
        EObject current = null;

        EObject this_UnionTypeExpression_0 = null;


         enterRule(); 
            
        try {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getTypeRefAccess().getUnionTypeExpressionParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_UnionTypeExpression_0=ruleUnionTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_UnionTypeExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleUnionTypeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnionTypeExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnionTypeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnionTypeExpression=ruleUnionTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnionTypeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleUnionTypeExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_IntersectionTypeExpression_0 = null;

        EObject lv_typeRefs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getUnionTypeExpressionAccess().getIntersectionTypeExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_126);
            this_IntersectionTypeExpression_0=ruleIntersectionTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_IntersectionTypeExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt559=2;
            int LA559_0 = input.LA(1);

            if ( (LA559_0==VerticalLine) ) {
                alt559=1;
            }
            switch (alt559) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getUnionTypeExpressionAccess().getUnionTypeExpressionTypeRefsAction_1_0(),
                                  current);
                          
                    }

                    }
                    int cnt558=0;
                    loop558:
                    do {
                        int alt558=2;
                        int LA558_0 = input.LA(1);

                        if ( (LA558_0==VerticalLine) ) {
                            alt558=1;
                        }


                        switch (alt558) {
                    	case 1 :
                    	    {
                    	    otherlv_2=(Token)match(input,VerticalLine,FOLLOW_55); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getUnionTypeExpressionAccess().getVerticalLineKeyword_1_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getUnionTypeExpressionAccess().getTypeRefsIntersectionTypeExpressionParserRuleCall_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_126);
                    	    lv_typeRefs_3_0=ruleIntersectionTypeExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getUnionTypeExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeRefs",
                    	              		lv_typeRefs_3_0, 
                    	              		"eu.numberfour.n4js.ts.TypeExpressions.IntersectionTypeExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt558 >= 1 ) break loop558;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(558, input);
                                throw eee;
                        }
                        cnt558++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleIntersectionTypeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntersectionTypeExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntersectionTypeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntersectionTypeExpression=ruleIntersectionTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntersectionTypeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIntersectionTypeExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_PrimaryTypeExpression_0 = null;

        EObject lv_typeRefs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getIntersectionTypeExpressionAccess().getPrimaryTypeExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_124);
            this_PrimaryTypeExpression_0=rulePrimaryTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_PrimaryTypeExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt561=2;
            int LA561_0 = input.LA(1);

            if ( (LA561_0==Ampersand) ) {
                alt561=1;
            }
            switch (alt561) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getIntersectionTypeExpressionAccess().getIntersectionTypeExpressionTypeRefsAction_1_0(),
                                  current);
                          
                    }

                    }
                    int cnt560=0;
                    loop560:
                    do {
                        int alt560=2;
                        int LA560_0 = input.LA(1);

                        if ( (LA560_0==Ampersand) ) {
                            alt560=1;
                        }


                        switch (alt560) {
                    	case 1 :
                    	    {
                    	    otherlv_2=(Token)match(input,Ampersand,FOLLOW_55); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getIntersectionTypeExpressionAccess().getAmpersandKeyword_1_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getIntersectionTypeExpressionAccess().getTypeRefsPrimaryTypeExpressionParserRuleCall_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_124);
                    	    lv_typeRefs_3_0=rulePrimaryTypeExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getIntersectionTypeExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeRefs",
                    	              		lv_typeRefs_3_0, 
                    	              		"eu.numberfour.n4js.ts.TypeExpressions.PrimaryTypeExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt560 >= 1 ) break loop560;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(560, input);
                                throw eee;
                        }
                        cnt560++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePrimaryTypeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryTypeExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryTypeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryTypeExpression=rulePrimaryTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryTypeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePrimaryTypeExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject this_TAnonymousFormalParameterList_2 = null;

        EObject lv_returnTypeRef_5_0 = null;

        EObject this_ArrayTypeRef_6 = null;

        EObject this_TypeRefWithModifiers_7 = null;

        EObject this_TypeRef_9 = null;


         enterRule(); 
            
        try {
            {
            int alt562=4;
            alt562 = dfa562.predict(input);
            switch (alt562) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPrimaryTypeExpressionAccess().getFunctionTypeExpressionAction_0_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_164); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getPrimaryTypeExpressionAccess().getLeftParenthesisKeyword_0_0_0_1());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPrimaryTypeExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getPrimaryTypeExpressionAccess().getTAnonymousFormalParameterListParserRuleCall_0_0_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_75);
                    this_TAnonymousFormalParameterList_2=ruleTAnonymousFormalParameterList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TAnonymousFormalParameterList_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getPrimaryTypeExpressionAccess().getRightParenthesisKeyword_0_0_0_3());
                          
                    }
                    otherlv_4=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getPrimaryTypeExpressionAccess().getEqualsSignGreaterThanSignKeyword_0_0_0_4());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPrimaryTypeExpressionAccess().getReturnTypeRefPrimaryTypeExpressionParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_returnTypeRef_5_0=rulePrimaryTypeExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrimaryTypeExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_5_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.PrimaryTypeExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryTypeExpressionAccess().getArrayTypeRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayTypeRef_6=ruleArrayTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayTypeRef_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryTypeExpressionAccess().getTypeRefWithModifiersParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeRefWithModifiers_7=ruleTypeRefWithModifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeRefWithModifiers_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    {
                    otherlv_8=(Token)match(input,LeftParenthesis,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getPrimaryTypeExpressionAccess().getLeftParenthesisKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryTypeExpressionAccess().getTypeRefParserRuleCall_3_1()); 
                          
                    }
                    pushFollow(FOLLOW_75);
                    this_TypeRef_9=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeRef_9;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getPrimaryTypeExpressionAccess().getRightParenthesisKeyword_3_2());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBogusTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBogusTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBogusTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBogusTypeRef=ruleBogusTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBogusTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBogusTypeRef() throws RecognitionException {
        EObject current = null;

        EObject this_TypeRefWithModifiers_0 = null;


         enterRule(); 
            
        try {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBogusTypeRefAccess().getTypeRefWithModifiersParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_TypeRefWithModifiers_0=ruleTypeRefWithModifiers();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypeRefWithModifiers_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeRefWithModifiers() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRefWithModifiers = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefWithModifiersRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeRefWithModifiers=ruleTypeRefWithModifiers();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRefWithModifiers; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeRefWithModifiers() throws RecognitionException {
        EObject current = null;

        EObject this_TypeRefWithoutModifiers_0 = null;

        AntlrDatatypeRuleToken lv_undefModifier_1_0 = null;

        AntlrDatatypeRuleToken lv_undefModifier_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt564=2;
            int LA564_0 = input.LA(1);

            if ( ((LA564_0>=Intersection && LA564_0<=Constructor)||LA564_0==Promisify||LA564_0==Target||LA564_0==Await||LA564_0==Union||LA564_0==This||LA564_0==This_1||(LA564_0>=Type && LA564_0<=Void)||LA564_0==LeftCurlyBracket||LA564_0==Tilde||LA564_0==RULE_IDENTIFIER) ) {
                alt564=1;
            }
            else if ( (LA564_0==QuestionMark) ) {
                alt564=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 564, 0, input);

                throw nvae;
            }
            switch (alt564) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefWithModifiersAccess().getTypeRefWithoutModifiersParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FOLLOW_165);
                    this_TypeRefWithoutModifiers_0=ruleTypeRefWithoutModifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeRefWithoutModifiers_0;
                              afterParserOrEnumRuleCall();
                          
                    }
                    int alt563=2;
                    int LA563_0 = input.LA(1);

                    if ( (LA563_0==QuestionMark) ) {
                        int LA563_1 = input.LA(2);

                        if ( (synpred310_InternalN4JSXParser()) ) {
                            alt563=1;
                        }
                    }
                    switch (alt563) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTypeRefWithModifiersAccess().getUndefModifierUndefModifierTokenParserRuleCall_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_undefModifier_1_0=ruleUndefModifierToken();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTypeRefWithModifiersRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"undefModifier",
                                      		lv_undefModifier_1_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.UndefModifierToken");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getTypeRefWithModifiersAccess().getParameterizedTypeRefAction_1_0(),
                                  current);
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTypeRefWithModifiersAccess().getUndefModifierUndefModifierTokenParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_undefModifier_3_0=ruleUndefModifierToken();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeRefWithModifiersRule());
                      	        }
                             		set(
                             			current, 
                             			"undefModifier",
                              		lv_undefModifier_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.UndefModifierToken");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeRefWithoutModifiers() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRefWithoutModifiers = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefWithoutModifiersRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeRefWithoutModifiers=ruleTypeRefWithoutModifiers();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRefWithoutModifiers; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeRefWithoutModifiers() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_2_0=null;
        EObject this_ParameterizedTypeRef_0 = null;

        EObject this_ThisTypeRef_1 = null;

        EObject this_TypeTypeRef_3 = null;

        EObject this_FunctionTypeExpressionOLD_4 = null;

        EObject this_UnionTypeExpressionOLD_5 = null;

        EObject this_IntersectionTypeExpressionOLD_6 = null;


         enterRule(); 
            
        try {
            {
            int alt567=5;
            switch ( input.LA(1) ) {
            case Promisify:
            case Target:
            case Await:
            case This:
            case This_1:
            case Void:
            case Tilde:
            case RULE_IDENTIFIER:
                {
                alt567=1;
                }
                break;
            case Constructor:
            case Type:
                {
                alt567=2;
                }
                break;
            case LeftCurlyBracket:
                {
                alt567=3;
                }
                break;
            case Union:
                {
                alt567=4;
                }
                break;
            case Intersection:
                {
                alt567=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 567, 0, input);

                throw nvae;
            }

            switch (alt567) {
                case 1 :
                    {
                    {
                    int alt565=2;
                    switch ( input.LA(1) ) {
                    case Promisify:
                    case Target:
                    case Await:
                    case This:
                    case Void:
                    case RULE_IDENTIFIER:
                        {
                        alt565=1;
                        }
                        break;
                    case Tilde:
                        {
                        switch ( input.LA(2) ) {
                        case Tilde:
                            {
                            int LA565_4 = input.LA(3);

                            if ( (LA565_4==This_1) ) {
                                alt565=2;
                            }
                            else if ( (LA565_4==Promisify||LA565_4==Target||LA565_4==Await||LA565_4==This||LA565_4==Void||LA565_4==RULE_IDENTIFIER) ) {
                                alt565=1;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 565, 4, input);

                                throw nvae;
                            }
                            }
                            break;
                        case RULE_STRUCTMODSUFFIX:
                            {
                            int LA565_5 = input.LA(3);

                            if ( (LA565_5==Promisify||LA565_5==Target||LA565_5==Await||LA565_5==This||LA565_5==Void||LA565_5==RULE_IDENTIFIER) ) {
                                alt565=1;
                            }
                            else if ( (LA565_5==This_1) ) {
                                alt565=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 565, 5, input);

                                throw nvae;
                            }
                            }
                            break;
                        case This_1:
                            {
                            alt565=2;
                            }
                            break;
                        case Promisify:
                        case Target:
                        case Await:
                        case This:
                        case Void:
                        case RULE_IDENTIFIER:
                            {
                            alt565=1;
                            }
                            break;
                        default:
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 565, 2, input);

                            throw nvae;
                        }

                        }
                        break;
                    case This_1:
                        {
                        alt565=2;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 565, 0, input);

                        throw nvae;
                    }

                    switch (alt565) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                                      newCompositeNode(grammarAccess.getTypeRefWithoutModifiersAccess().getParameterizedTypeRefParserRuleCall_0_0_0()); 
                                  
                            }
                            pushFollow(FOLLOW_48);
                            this_ParameterizedTypeRef_0=ruleParameterizedTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ParameterizedTypeRef_0;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;
                        case 2 :
                            {
                            if ( state.backtracking==0 ) {
                               
                                      newCompositeNode(grammarAccess.getTypeRefWithoutModifiersAccess().getThisTypeRefParserRuleCall_0_0_1()); 
                                  
                            }
                            pushFollow(FOLLOW_48);
                            this_ThisTypeRef_1=ruleThisTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ThisTypeRef_1;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt566=2;
                    alt566 = dfa566.predict(input);
                    switch (alt566) {
                        case 1 :
                            {
                            {
                            lv_dynamic_2_0=(Token)match(input,PlusSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_dynamic_2_0, grammarAccess.getTypeRefWithoutModifiersAccess().getDynamicPlusSignKeyword_0_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getTypeRefWithoutModifiersRule());
                              	        }
                                     		setWithLastConsumed(current, "dynamic", true, "+");
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefWithoutModifiersAccess().getTypeTypeRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeTypeRef_3=ruleTypeTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeTypeRef_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefWithoutModifiersAccess().getFunctionTypeExpressionOLDParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionTypeExpressionOLD_4=ruleFunctionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionTypeExpressionOLD_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefWithoutModifiersAccess().getUnionTypeExpressionOLDParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_UnionTypeExpressionOLD_5=ruleUnionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_UnionTypeExpressionOLD_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefWithoutModifiersAccess().getIntersectionTypeExpressionOLDParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IntersectionTypeExpressionOLD_6=ruleIntersectionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IntersectionTypeExpressionOLD_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeRefFunctionTypeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRefFunctionTypeExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefFunctionTypeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeRefFunctionTypeExpression=ruleTypeRefFunctionTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRefFunctionTypeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeRefFunctionTypeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ParameterizedTypeRef_0 = null;

        EObject this_ArrayTypeRef_1 = null;

        EObject this_TypeTypeRef_2 = null;

        EObject this_UnionTypeExpressionOLD_3 = null;

        EObject this_IntersectionTypeExpressionOLD_4 = null;


         enterRule(); 
            
        try {
            {
            int alt568=5;
            switch ( input.LA(1) ) {
            case Promisify:
            case Target:
            case Await:
            case This:
            case Void:
            case Tilde:
            case RULE_IDENTIFIER:
                {
                alt568=1;
                }
                break;
            case LeftSquareBracket:
                {
                alt568=2;
                }
                break;
            case Constructor:
            case Type:
                {
                alt568=3;
                }
                break;
            case Union:
                {
                alt568=4;
                }
                break;
            case Intersection:
                {
                alt568=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 568, 0, input);

                throw nvae;
            }

            switch (alt568) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getParameterizedTypeRefParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedTypeRef_0=ruleParameterizedTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedTypeRef_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getArrayTypeRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayTypeRef_1=ruleArrayTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayTypeRef_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getTypeTypeRefParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeTypeRef_2=ruleTypeTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getUnionTypeExpressionOLDParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_UnionTypeExpressionOLD_3=ruleUnionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_UnionTypeExpressionOLD_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getIntersectionTypeExpressionOLDParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IntersectionTypeExpressionOLD_4=ruleIntersectionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IntersectionTypeExpressionOLD_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeRefForCast() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRefForCast = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefForCastRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeRefForCast=ruleTypeRefForCast();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRefForCast; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeRefForCast() throws RecognitionException {
        EObject current = null;

        EObject this_ParameterizedTypeRef_0 = null;

        EObject this_ArrayTypeRef_1 = null;

        EObject this_ThisTypeRef_2 = null;

        EObject this_TypeTypeRef_3 = null;

        EObject this_FunctionTypeExpressionOLD_4 = null;

        EObject this_ArrowFunctionTypeExpression_5 = null;

        EObject this_UnionTypeExpressionOLD_6 = null;

        EObject this_IntersectionTypeExpressionOLD_7 = null;


         enterRule(); 
            
        try {
            {
            int alt569=8;
            alt569 = dfa569.predict(input);
            switch (alt569) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getParameterizedTypeRefParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedTypeRef_0=ruleParameterizedTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedTypeRef_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getArrayTypeRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayTypeRef_1=ruleArrayTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayTypeRef_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getThisTypeRefParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThisTypeRef_2=ruleThisTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThisTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getTypeTypeRefParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeTypeRef_3=ruleTypeTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeTypeRef_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getFunctionTypeExpressionOLDParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionTypeExpressionOLD_4=ruleFunctionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionTypeExpressionOLD_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getArrowFunctionTypeExpressionParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrowFunctionTypeExpression_5=ruleArrowFunctionTypeExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrowFunctionTypeExpression_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getUnionTypeExpressionOLDParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_UnionTypeExpressionOLD_6=ruleUnionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_UnionTypeExpressionOLD_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getIntersectionTypeExpressionOLDParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IntersectionTypeExpressionOLD_7=ruleIntersectionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IntersectionTypeExpressionOLD_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeArgInTypeTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeArgInTypeTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeArgInTypeTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeArgInTypeTypeRef=ruleTypeArgInTypeTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeArgInTypeTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeArgInTypeTypeRef() throws RecognitionException {
        EObject current = null;

        EObject this_ParameterizedTypeRefNominal_0 = null;

        EObject this_ThisTypeRefNominal_1 = null;

        EObject this_Wildcard_2 = null;


         enterRule(); 
            
        try {
            {
            int alt570=3;
            int LA570_0 = input.LA(1);

            if ( (LA570_0==Promisify||LA570_0==Target||LA570_0==Await||LA570_0==This||LA570_0==Void||LA570_0==RULE_IDENTIFIER) ) {
                alt570=1;
            }
            else if ( (LA570_0==This_1) ) {
                alt570=2;
            }
            else if ( (LA570_0==QuestionMark) && (synpred312_InternalN4JSXParser())) {
                alt570=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 570, 0, input);

                throw nvae;
            }
            switch (alt570) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeArgInTypeTypeRefAccess().getParameterizedTypeRefNominalParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedTypeRefNominal_0=ruleParameterizedTypeRefNominal();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedTypeRefNominal_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeArgInTypeTypeRefAccess().getThisTypeRefNominalParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThisTypeRefNominal_1=ruleThisTypeRefNominal();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThisTypeRefNominal_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeArgInTypeTypeRefAccess().getWildcardParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Wildcard_2=ruleWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Wildcard_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleThisTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThisTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThisTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThisTypeRef=ruleThisTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThisTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleThisTypeRef() throws RecognitionException {
        EObject current = null;

        EObject this_ThisTypeRefNominal_0 = null;

        EObject this_ThisTypeRefStructural_1 = null;


         enterRule(); 
            
        try {
            {
            int alt571=2;
            int LA571_0 = input.LA(1);

            if ( (LA571_0==This_1) ) {
                alt571=1;
            }
            else if ( (LA571_0==Tilde) ) {
                alt571=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 571, 0, input);

                throw nvae;
            }
            switch (alt571) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getThisTypeRefAccess().getThisTypeRefNominalParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThisTypeRefNominal_0=ruleThisTypeRefNominal();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThisTypeRefNominal_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getThisTypeRefAccess().getThisTypeRefStructuralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThisTypeRefStructural_1=ruleThisTypeRefStructural();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThisTypeRefStructural_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleThisTypeRefNominal() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThisTypeRefNominal = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThisTypeRefNominalRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThisTypeRefNominal=ruleThisTypeRefNominal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThisTypeRefNominal; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleThisTypeRefNominal() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getThisTypeRefNominalAccess().getThisTypeRefNominalAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,This_1,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getThisTypeRefNominalAccess().getThisKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleThisTypeRefStructural() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThisTypeRefStructural = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThisTypeRefStructuralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThisTypeRefStructural=ruleThisTypeRefStructural();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThisTypeRefStructural; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleThisTypeRefStructural() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_definedTypingStrategy_0_0 = null;

        EObject this_TStructMemberList_3 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getThisTypeRefStructuralAccess().getDefinedTypingStrategyTypingStrategyUseSiteOperatorParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_166);
            lv_definedTypingStrategy_0_0=ruleTypingStrategyUseSiteOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getThisTypeRefStructuralRule());
              	        }
                     		set(
                     			current, 
                     			"definedTypingStrategy",
                      		lv_definedTypingStrategy_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyUseSiteOperator");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,This_1,FOLLOW_167); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getThisTypeRefStructuralAccess().getThisKeyword_1());
                  
            }
            int alt572=2;
            int LA572_0 = input.LA(1);

            if ( (LA572_0==With) ) {
                int LA572_1 = input.LA(2);

                if ( (LA572_1==LeftCurlyBracket) ) {
                    alt572=1;
                }
            }
            switch (alt572) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,With,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getThisTypeRefStructuralAccess().getWithKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getThisTypeRefStructuralRule());
                      		}
                              newCompositeNode(grammarAccess.getThisTypeRefStructuralAccess().getTStructMemberListParserRuleCall_2_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TStructMemberList_3=ruleTStructMemberList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TStructMemberList_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleFunctionTypeExpressionOLD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionTypeExpressionOLD = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionTypeExpressionOLDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionTypeExpressionOLD=ruleFunctionTypeExpressionOLD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionTypeExpressionOLD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFunctionTypeExpressionOLD() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_declaredThisType_5_0 = null;

        EObject lv_ownedTypeVars_9_0 = null;

        EObject lv_ownedTypeVars_11_0 = null;

        EObject this_TAnonymousFormalParameterList_14 = null;

        EObject lv_returnTypeRef_17_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFunctionTypeExpressionOLDAccess().getFunctionTypeExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_168); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getFunctionTypeExpressionOLDAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            int alt573=2;
            int LA573_0 = input.LA(1);

            if ( (LA573_0==CommercialAt) ) {
                alt573=1;
            }
            switch (alt573) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,CommercialAt,FOLLOW_169); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getFunctionTypeExpressionOLDAccess().getCommercialAtKeyword_2_0());
                          
                    }
                    otherlv_3=(Token)match(input,This,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getFunctionTypeExpressionOLDAccess().getThisKeyword_2_1());
                          
                    }
                    otherlv_4=(Token)match(input,LeftParenthesis,FOLLOW_170); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getFunctionTypeExpressionOLDAccess().getLeftParenthesisKeyword_2_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionTypeExpressionOLDAccess().getDeclaredThisTypeTypeRefFunctionTypeExpressionParserRuleCall_2_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_75);
                    lv_declaredThisType_5_0=ruleTypeRefFunctionTypeExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionTypeExpressionOLDRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredThisType",
                              		lv_declaredThisType_5_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefFunctionTypeExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getFunctionTypeExpressionOLDAccess().getRightParenthesisKeyword_2_4());
                          
                    }

                    }
                    break;

            }

            otherlv_7=(Token)match(input,Function,FOLLOW_171); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getFunctionTypeExpressionOLDAccess().getFunctionKeyword_3());
                  
            }
            int alt575=2;
            int LA575_0 = input.LA(1);

            if ( (LA575_0==LessThanSign) ) {
                alt575=1;
            }
            switch (alt575) {
                case 1 :
                    {
                    otherlv_8=(Token)match(input,LessThanSign,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getFunctionTypeExpressionOLDAccess().getLessThanSignKeyword_4_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionTypeExpressionOLDAccess().getOwnedTypeVarsTypeVariableParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_29);
                    lv_ownedTypeVars_9_0=ruleTypeVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionTypeExpressionOLDRule());
                      	        }
                             		add(
                             			current, 
                             			"ownedTypeVars",
                              		lv_ownedTypeVars_9_0, 
                              		"eu.numberfour.n4js.N4JS.TypeVariable");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop574:
                    do {
                        int alt574=2;
                        int LA574_0 = input.LA(1);

                        if ( (LA574_0==Comma) ) {
                            alt574=1;
                        }


                        switch (alt574) {
                    	case 1 :
                    	    {
                    	    otherlv_10=(Token)match(input,Comma,FOLLOW_28); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_10, grammarAccess.getFunctionTypeExpressionOLDAccess().getCommaKeyword_4_2_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getFunctionTypeExpressionOLDAccess().getOwnedTypeVarsTypeVariableParserRuleCall_4_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_ownedTypeVars_11_0=ruleTypeVariable();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getFunctionTypeExpressionOLDRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"ownedTypeVars",
                    	              		lv_ownedTypeVars_11_0, 
                    	              		"eu.numberfour.n4js.N4JS.TypeVariable");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop574;
                        }
                    } while (true);

                    otherlv_12=(Token)match(input,GreaterThanSign,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getFunctionTypeExpressionOLDAccess().getGreaterThanSignKeyword_4_3());
                          
                    }

                    }
                    break;

            }

            otherlv_13=(Token)match(input,LeftParenthesis,FOLLOW_164); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_13, grammarAccess.getFunctionTypeExpressionOLDAccess().getLeftParenthesisKeyword_5());
                  
            }
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionTypeExpressionOLDRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionTypeExpressionOLDAccess().getTAnonymousFormalParameterListParserRuleCall_6()); 
                  
            }
            pushFollow(FOLLOW_75);
            this_TAnonymousFormalParameterList_14=ruleTAnonymousFormalParameterList(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TAnonymousFormalParameterList_14;
                      afterParserOrEnumRuleCall();
                  
            }
            otherlv_15=(Token)match(input,RightParenthesis,FOLLOW_172); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_15, grammarAccess.getFunctionTypeExpressionOLDAccess().getRightParenthesisKeyword_7());
                  
            }
            int alt576=2;
            int LA576_0 = input.LA(1);

            if ( (LA576_0==Colon) ) {
                alt576=1;
            }
            switch (alt576) {
                case 1 :
                    {
                    otherlv_16=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_16, grammarAccess.getFunctionTypeExpressionOLDAccess().getColonKeyword_8_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionTypeExpressionOLDAccess().getReturnTypeRefTypeRefParserRuleCall_8_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_15);
                    lv_returnTypeRef_17_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionTypeExpressionOLDRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_17_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_18=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_18, grammarAccess.getFunctionTypeExpressionOLDAccess().getRightCurlyBracketKeyword_9());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrowFunctionTypeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrowFunctionTypeExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrowFunctionTypeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrowFunctionTypeExpression=ruleArrowFunctionTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrowFunctionTypeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrowFunctionTypeExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject this_TAnonymousFormalParameterList_2 = null;

        EObject lv_returnTypeRef_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrowFunctionTypeExpressionAccess().getFunctionTypeExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_164); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrowFunctionTypeExpressionAccess().getLeftParenthesisKeyword_1());
                  
            }
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getArrowFunctionTypeExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getArrowFunctionTypeExpressionAccess().getTAnonymousFormalParameterListParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_75);
            this_TAnonymousFormalParameterList_2=ruleTAnonymousFormalParameterList(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TAnonymousFormalParameterList_2;
                      afterParserOrEnumRuleCall();
                  
            }
            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getArrowFunctionTypeExpressionAccess().getRightParenthesisKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getArrowFunctionTypeExpressionAccess().getEqualsSignGreaterThanSignKeyword_4());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArrowFunctionTypeExpressionAccess().getReturnTypeRefPrimaryTypeExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_returnTypeRef_5_0=rulePrimaryTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArrowFunctionTypeExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"returnTypeRef",
                      		lv_returnTypeRef_5_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.PrimaryTypeExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTAnonymousFormalParameterList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_fpars_0_0 = null;

        EObject lv_fpars_2_0 = null;


         enterRule(); 
            
        try {
            {
            int alt578=2;
            int LA578_0 = input.LA(1);

            if ( ((LA578_0>=Intersection && LA578_0<=Implements)||(LA578_0>=Promisify && LA578_0<=Abstract)||LA578_0==External||(LA578_0>=Private && LA578_0<=Project)||LA578_0==Public||LA578_0==Static||LA578_0==Target||(LA578_0>=Async && LA578_0<=Await)||LA578_0==Union||(LA578_0>=Yield && LA578_0<=This)||LA578_0==From||LA578_0==This_1||(LA578_0>=Type && LA578_0<=Void)||LA578_0==FullStopFullStopFullStop||(LA578_0>=Get && LA578_0<=Let)||(LA578_0>=Out && LA578_0<=Set)||LA578_0==As||LA578_0==Of||LA578_0==LeftParenthesis||LA578_0==QuestionMark||LA578_0==LeftSquareBracket||LA578_0==LeftCurlyBracket||LA578_0==Tilde||LA578_0==RULE_IDENTIFIER) ) {
                alt578=1;
            }
            switch (alt578) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTAnonymousFormalParameterListAccess().getFparsTAnonymousFormalParameterParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_44);
                    lv_fpars_0_0=ruleTAnonymousFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTAnonymousFormalParameterListRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_0_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TAnonymousFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop577:
                    do {
                        int alt577=2;
                        int LA577_0 = input.LA(1);

                        if ( (LA577_0==Comma) ) {
                            alt577=1;
                        }


                        switch (alt577) {
                    	case 1 :
                    	    {
                    	    otherlv_1=(Token)match(input,Comma,FOLLOW_173); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_1, grammarAccess.getTAnonymousFormalParameterListAccess().getCommaKeyword_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTAnonymousFormalParameterListAccess().getFparsTAnonymousFormalParameterParserRuleCall_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_44);
                    	    lv_fpars_2_0=ruleTAnonymousFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTAnonymousFormalParameterListRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"fpars",
                    	              		lv_fpars_2_0, 
                    	              		"eu.numberfour.n4js.ts.TypeExpressions.TAnonymousFormalParameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop577;
                        }
                    } while (true);


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTAnonymousFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTAnonymousFormalParameter = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTAnonymousFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTAnonymousFormalParameter=ruleTAnonymousFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTAnonymousFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTAnonymousFormalParameter() throws RecognitionException {
        EObject current = null;

        Token lv_variadic_0_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_typeRef_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt579=2;
            int LA579_0 = input.LA(1);

            if ( (LA579_0==FullStopFullStopFullStop) ) {
                alt579=1;
            }
            switch (alt579) {
                case 1 :
                    {
                    {
                    lv_variadic_0_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_174); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_variadic_0_0, grammarAccess.getTAnonymousFormalParameterAccess().getVariadicFullStopFullStopFullStopKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTAnonymousFormalParameterRule());
                      	        }
                             		setWithLastConsumed(current, "variadic", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt580=2;
            alt580 = dfa580.predict(input);
            switch (alt580) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTAnonymousFormalParameterAccess().getNameBindingIdentifierParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_name_1_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTAnonymousFormalParameterRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getTAnonymousFormalParameterAccess().getColonKeyword_1_1());
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTAnonymousFormalParameterAccess().getTypeRefTypeRefParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_typeRef_3_0=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTAnonymousFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"typeRef",
                      		lv_typeRef_3_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleUnionTypeExpressionOLD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnionTypeExpressionOLD = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnionTypeExpressionOLDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnionTypeExpressionOLD=ruleUnionTypeExpressionOLD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnionTypeExpressionOLD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleUnionTypeExpressionOLD() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_typeRefs_3_0 = null;

        EObject lv_typeRefs_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getUnionTypeExpressionOLDAccess().getUnionTypeExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Union,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getUnionTypeExpressionOLDAccess().getUnionKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_175); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getUnionTypeExpressionOLDAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getUnionTypeExpressionOLDAccess().getTypeRefsTypeRefWithoutModifiersParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_27);
            lv_typeRefs_3_0=ruleTypeRefWithoutModifiers();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getUnionTypeExpressionOLDRule());
              	        }
                     		add(
                     			current, 
                     			"typeRefs",
                      		lv_typeRefs_3_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithoutModifiers");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop581:
            do {
                int alt581=2;
                int LA581_0 = input.LA(1);

                if ( (LA581_0==Comma) ) {
                    alt581=1;
                }


                switch (alt581) {
            	case 1 :
            	    {
            	    otherlv_4=(Token)match(input,Comma,FOLLOW_175); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getUnionTypeExpressionOLDAccess().getCommaKeyword_4_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getUnionTypeExpressionOLDAccess().getTypeRefsTypeRefWithoutModifiersParserRuleCall_4_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_typeRefs_5_0=ruleTypeRefWithoutModifiers();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getUnionTypeExpressionOLDRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"typeRefs",
            	              		lv_typeRefs_5_0, 
            	              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithoutModifiers");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop581;
                }
            } while (true);

            otherlv_6=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getUnionTypeExpressionOLDAccess().getRightCurlyBracketKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleIntersectionTypeExpressionOLD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntersectionTypeExpressionOLD = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntersectionTypeExpressionOLDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntersectionTypeExpressionOLD=ruleIntersectionTypeExpressionOLD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntersectionTypeExpressionOLD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIntersectionTypeExpressionOLD() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_typeRefs_3_0 = null;

        EObject lv_typeRefs_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getIntersectionTypeExpressionOLDAccess().getIntersectionTypeExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Intersection,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getIntersectionTypeExpressionOLDAccess().getIntersectionKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_175); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getIntersectionTypeExpressionOLDAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIntersectionTypeExpressionOLDAccess().getTypeRefsTypeRefWithoutModifiersParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_27);
            lv_typeRefs_3_0=ruleTypeRefWithoutModifiers();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIntersectionTypeExpressionOLDRule());
              	        }
                     		add(
                     			current, 
                     			"typeRefs",
                      		lv_typeRefs_3_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithoutModifiers");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop582:
            do {
                int alt582=2;
                int LA582_0 = input.LA(1);

                if ( (LA582_0==Comma) ) {
                    alt582=1;
                }


                switch (alt582) {
            	case 1 :
            	    {
            	    otherlv_4=(Token)match(input,Comma,FOLLOW_175); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getIntersectionTypeExpressionOLDAccess().getCommaKeyword_4_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getIntersectionTypeExpressionOLDAccess().getTypeRefsTypeRefWithoutModifiersParserRuleCall_4_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_typeRefs_5_0=ruleTypeRefWithoutModifiers();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getIntersectionTypeExpressionOLDRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"typeRefs",
            	              		lv_typeRefs_5_0, 
            	              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithoutModifiers");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop582;
                }
            } while (true);

            otherlv_6=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getIntersectionTypeExpressionOLDAccess().getRightCurlyBracketKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleParameterizedTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterizedTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterizedTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterizedTypeRef=ruleParameterizedTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterizedTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleParameterizedTypeRef() throws RecognitionException {
        EObject current = null;

        EObject this_ParameterizedTypeRefNominal_0 = null;

        EObject this_ParameterizedTypeRefStructural_1 = null;


         enterRule(); 
            
        try {
            {
            int alt583=2;
            int LA583_0 = input.LA(1);

            if ( (LA583_0==Promisify||LA583_0==Target||LA583_0==Await||LA583_0==This||LA583_0==Void||LA583_0==RULE_IDENTIFIER) ) {
                alt583=1;
            }
            else if ( (LA583_0==Tilde) ) {
                alt583=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 583, 0, input);

                throw nvae;
            }
            switch (alt583) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getParameterizedTypeRefAccess().getParameterizedTypeRefNominalParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedTypeRefNominal_0=ruleParameterizedTypeRefNominal();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedTypeRefNominal_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getParameterizedTypeRefAccess().getParameterizedTypeRefStructuralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedTypeRefStructural_1=ruleParameterizedTypeRefStructural();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedTypeRefStructural_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleParameterizedTypeRefNominal() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterizedTypeRefNominal = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterizedTypeRefNominalRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterizedTypeRefNominal=ruleParameterizedTypeRefNominal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterizedTypeRefNominal; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleParameterizedTypeRefNominal() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_typeArgs_2_0 = null;

        EObject lv_typeArgs_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getParameterizedTypeRefNominalRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedTypeRefNominalAccess().getDeclaredTypeTypeCrossReference_0_0()); 
              	    
            }
            pushFollow(FOLLOW_176);
            ruleTypeReferenceName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt585=2;
            alt585 = dfa585.predict(input);
            switch (alt585) {
                case 1 :
                    {
                    {
                    otherlv_1=(Token)match(input,LessThanSign,FOLLOW_177); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getParameterizedTypeRefNominalAccess().getLessThanSignKeyword_1_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getParameterizedTypeRefNominalAccess().getTypeArgsTypeArgumentParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_29);
                    lv_typeArgs_2_0=ruleTypeArgument();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getParameterizedTypeRefNominalRule());
                      	        }
                             		add(
                             			current, 
                             			"typeArgs",
                              		lv_typeArgs_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeArgument");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop584:
                    do {
                        int alt584=2;
                        int LA584_0 = input.LA(1);

                        if ( (LA584_0==Comma) ) {
                            alt584=1;
                        }


                        switch (alt584) {
                    	case 1 :
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_177); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getParameterizedTypeRefNominalAccess().getCommaKeyword_1_2_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getParameterizedTypeRefNominalAccess().getTypeArgsTypeArgumentParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_typeArgs_4_0=ruleTypeArgument();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getParameterizedTypeRefNominalRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeArgs",
                    	              		lv_typeArgs_4_0, 
                    	              		"eu.numberfour.n4js.ts.TypeExpressions.TypeArgument");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop584;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getParameterizedTypeRefNominalAccess().getGreaterThanSignKeyword_1_3());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrayTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayTypeRef=ruleArrayTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrayTypeRef() throws RecognitionException {
        EObject current = null;

        Token lv_arrayTypeLiteral_0_0=null;
        Token otherlv_2=null;
        EObject lv_typeArgs_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            lv_arrayTypeLiteral_0_0=(Token)match(input,LeftSquareBracket,FOLLOW_177); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_arrayTypeLiteral_0_0, grammarAccess.getArrayTypeRefAccess().getArrayTypeLiteralLeftSquareBracketKeyword_0_0());
                  
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getArrayTypeRefRule());
              	        }
                     		setWithLastConsumed(current, "arrayTypeLiteral", true, "[");
              	    
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArrayTypeRefAccess().getTypeArgsTypeArgumentParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_113);
            lv_typeArgs_1_0=ruleTypeArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArrayTypeRefRule());
              	        }
                     		add(
                     			current, 
                     			"typeArgs",
                      		lv_typeArgs_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeArgument");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getArrayTypeRefAccess().getRightSquareBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleParameterizedTypeRefStructural() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterizedTypeRefStructural = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterizedTypeRefStructuralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterizedTypeRefStructural=ruleParameterizedTypeRefStructural();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterizedTypeRefStructural; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleParameterizedTypeRefStructural() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_definedTypingStrategy_0_0 = null;

        EObject lv_typeArgs_3_0 = null;

        EObject lv_typeArgs_5_0 = null;

        EObject this_TStructMemberList_8 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedTypeRefStructuralAccess().getDefinedTypingStrategyTypingStrategyUseSiteOperatorParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_147);
            lv_definedTypingStrategy_0_0=ruleTypingStrategyUseSiteOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterizedTypeRefStructuralRule());
              	        }
                     		set(
                     			current, 
                     			"definedTypingStrategy",
                      		lv_definedTypingStrategy_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyUseSiteOperator");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getParameterizedTypeRefStructuralRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedTypeRefStructuralAccess().getDeclaredTypeTypeCrossReference_1_0()); 
              	    
            }
            pushFollow(FOLLOW_178);
            ruleTypeReferenceName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt587=2;
            alt587 = dfa587.predict(input);
            switch (alt587) {
                case 1 :
                    {
                    {
                    otherlv_2=(Token)match(input,LessThanSign,FOLLOW_177); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getParameterizedTypeRefStructuralAccess().getLessThanSignKeyword_2_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getParameterizedTypeRefStructuralAccess().getTypeArgsTypeArgumentParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_29);
                    lv_typeArgs_3_0=ruleTypeArgument();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getParameterizedTypeRefStructuralRule());
                      	        }
                             		add(
                             			current, 
                             			"typeArgs",
                              		lv_typeArgs_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeArgument");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop586:
                    do {
                        int alt586=2;
                        int LA586_0 = input.LA(1);

                        if ( (LA586_0==Comma) ) {
                            alt586=1;
                        }


                        switch (alt586) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_177); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getParameterizedTypeRefStructuralAccess().getCommaKeyword_2_2_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getParameterizedTypeRefStructuralAccess().getTypeArgsTypeArgumentParserRuleCall_2_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_typeArgs_5_0=ruleTypeArgument();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getParameterizedTypeRefStructuralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeArgs",
                    	              		lv_typeArgs_5_0, 
                    	              		"eu.numberfour.n4js.ts.TypeExpressions.TypeArgument");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop586;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,GreaterThanSign,FOLLOW_167); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getParameterizedTypeRefStructuralAccess().getGreaterThanSignKeyword_2_3());
                          
                    }

                    }
                    break;

            }
            int alt588=2;
            int LA588_0 = input.LA(1);

            if ( (LA588_0==With) ) {
                int LA588_1 = input.LA(2);

                if ( (LA588_1==LeftCurlyBracket) ) {
                    alt588=1;
                }
            }
            switch (alt588) {
                case 1 :
                    {
                    otherlv_7=(Token)match(input,With,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getParameterizedTypeRefStructuralAccess().getWithKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getParameterizedTypeRefStructuralRule());
                      		}
                              newCompositeNode(grammarAccess.getParameterizedTypeRefStructuralAccess().getTStructMemberListParserRuleCall_3_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TStructMemberList_8=ruleTStructMemberList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TStructMemberList_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTStructMemberList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_astStructuralMembers_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftCurlyBracket,FOLLOW_179); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTStructMemberListAccess().getLeftCurlyBracketKeyword_0());
                  
            }
            loop590:
            do {
                int alt590=2;
                int LA590_0 = input.LA(1);

                if ( ((LA590_0>=Intersection && LA590_0<=With)||(LA590_0>=For && LA590_0<=Var)||(LA590_0>=As && LA590_0<=Of)||LA590_0==LessThanSign||LA590_0==RULE_IDENTIFIER) ) {
                    alt590=1;
                }


                switch (alt590) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTStructMemberListAccess().getAstStructuralMembersTStructMemberParserRuleCall_1_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_180);
            	    lv_astStructuralMembers_1_0=ruleTStructMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTStructMemberListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"astStructuralMembers",
            	              		lv_astStructuralMembers_1_0, 
            	              		"eu.numberfour.n4js.ts.TypeExpressions.TStructMember");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    int alt589=3;
            	    int LA589_0 = input.LA(1);

            	    if ( (LA589_0==Semicolon) ) {
            	        alt589=1;
            	    }
            	    else if ( (LA589_0==Comma) ) {
            	        alt589=2;
            	    }
            	    switch (alt589) {
            	        case 1 :
            	            {
            	            otherlv_2=(Token)match(input,Semicolon,FOLLOW_179); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_2, grammarAccess.getTStructMemberListAccess().getSemicolonKeyword_1_1_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            {
            	            otherlv_3=(Token)match(input,Comma,FOLLOW_179); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_3, grammarAccess.getTStructMemberListAccess().getCommaKeyword_1_1_1());
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop590;
                }
            } while (true);

            otherlv_4=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getTStructMemberListAccess().getRightCurlyBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTStructMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTStructMember = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTStructMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTStructMember=ruleTStructMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTStructMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTStructMember() throws RecognitionException {
        EObject current = null;

        EObject this_TStructGetter_0 = null;

        EObject this_TStructSetter_1 = null;

        EObject this_TStructMethod_2 = null;

        EObject this_TStructField_3 = null;


         enterRule(); 
            
        try {
            {
            int alt591=4;
            alt591 = dfa591.predict(input);
            switch (alt591) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTStructMemberAccess().getTStructGetterParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TStructGetter_0=ruleTStructGetter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TStructGetter_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTStructMemberAccess().getTStructSetterParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TStructSetter_1=ruleTStructSetter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TStructSetter_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTStructMemberAccess().getTStructMethodParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TStructMethod_2=ruleTStructMethod();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TStructMethod_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTStructMemberAccess().getTStructFieldParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TStructField_3=ruleTStructField();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TStructField_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTStructMethod() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTStructMethod = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTStructMethodRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTStructMethod=ruleTStructMethod();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTStructMethod; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTStructMethod() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        EObject lv_typeVars_2_0 = null;

        EObject lv_typeVars_4_0 = null;

        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject this_TAnonymousFormalParameterList_8 = null;

        EObject lv_returnTypeRef_11_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTStructMethodAccess().getTStructMethodAction_0_0_0(),
                          current);
                  
            }

            }
            int alt593=2;
            int LA593_0 = input.LA(1);

            if ( (LA593_0==LessThanSign) ) {
                alt593=1;
            }
            switch (alt593) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,LessThanSign,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTStructMethodAccess().getLessThanSignKeyword_0_0_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTStructMethodAccess().getTypeVarsTypeVariableParserRuleCall_0_0_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_29);
                    lv_typeVars_2_0=ruleTypeVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTStructMethodRule());
                      	        }
                             		add(
                             			current, 
                             			"typeVars",
                              		lv_typeVars_2_0, 
                              		"eu.numberfour.n4js.N4JS.TypeVariable");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop592:
                    do {
                        int alt592=2;
                        int LA592_0 = input.LA(1);

                        if ( (LA592_0==Comma) ) {
                            alt592=1;
                        }


                        switch (alt592) {
                    	case 1 :
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_28); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getTStructMethodAccess().getCommaKeyword_0_0_1_2_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTStructMethodAccess().getTypeVarsTypeVariableParserRuleCall_0_0_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_typeVars_4_0=ruleTypeVariable();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTStructMethodRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeVars",
                    	              		lv_typeVars_4_0, 
                    	              		"eu.numberfour.n4js.N4JS.TypeVariable");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop592;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,GreaterThanSign,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getTStructMethodAccess().getGreaterThanSignKeyword_0_0_1_3());
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTStructMethodAccess().getNameIdentifierNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_name_6_0=ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTStructMethodRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_6_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_7=(Token)match(input,LeftParenthesis,FOLLOW_164); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getTStructMethodAccess().getLeftParenthesisKeyword_0_0_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getTStructMethodRule());
              		}
                      newCompositeNode(grammarAccess.getTStructMethodAccess().getTAnonymousFormalParameterListParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_75);
            this_TAnonymousFormalParameterList_8=ruleTAnonymousFormalParameterList(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TAnonymousFormalParameterList_8;
                      afterParserOrEnumRuleCall();
                  
            }
            otherlv_9=(Token)match(input,RightParenthesis,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getTStructMethodAccess().getRightParenthesisKeyword_2());
                  
            }
            int alt594=2;
            int LA594_0 = input.LA(1);

            if ( (LA594_0==Colon) ) {
                alt594=1;
            }
            switch (alt594) {
                case 1 :
                    {
                    otherlv_10=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getTStructMethodAccess().getColonKeyword_3_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTStructMethodAccess().getReturnTypeRefTypeRefParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_returnTypeRef_11_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTStructMethodRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_11_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTStructField() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTStructField = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTStructFieldRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTStructField=ruleTStructField();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTStructField; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTStructField() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_typeRef_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTStructFieldAccess().getNameIdentifierNameParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_54);
            lv_name_0_0=ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTStructFieldRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt595=2;
            int LA595_0 = input.LA(1);

            if ( (LA595_0==Colon) ) {
                alt595=1;
            }
            switch (alt595) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTStructFieldAccess().getColonKeyword_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTStructFieldAccess().getTypeRefTypeRefParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeRef_2_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTStructFieldRule());
                      	        }
                             		set(
                             			current, 
                             			"typeRef",
                              		lv_typeRef_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTStructGetter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTStructGetter = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTStructGetterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTStructGetter=ruleTStructGetter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTStructGetter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTStructGetter() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_declaredTypeRef_6_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTStructGetterAccess().getTStructGetterAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Get,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTStructGetterAccess().getGetKeyword_0_0_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTStructGetterAccess().getNameIdentifierNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_name_2_0=ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTStructGetterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getTStructGetterAccess().getLeftParenthesisKeyword_1());
                  
            }
            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getTStructGetterAccess().getRightParenthesisKeyword_2());
                  
            }
            int alt596=2;
            int LA596_0 = input.LA(1);

            if ( (LA596_0==Colon) ) {
                alt596=1;
            }
            switch (alt596) {
                case 1 :
                    {
                    otherlv_5=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getTStructGetterAccess().getColonKeyword_3_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTStructGetterAccess().getDeclaredTypeRefTypeRefParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaredTypeRef_6_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTStructGetterRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredTypeRef",
                              		lv_declaredTypeRef_6_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTStructSetter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTStructSetter = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTStructSetterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTStructSetter=ruleTStructSetter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTStructSetter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTStructSetter() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_fpar_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTStructSetterAccess().getTStructSetterAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Set,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTStructSetterAccess().getSetKeyword_0_0_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTStructSetterAccess().getNameIdentifierNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_name_2_0=ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTStructSetterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_173); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getTStructSetterAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTStructSetterAccess().getFparTAnonymousFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_fpar_4_0=ruleTAnonymousFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTStructSetterRule());
              	        }
                     		set(
                     			current, 
                     			"fpar",
                      		lv_fpar_4_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TAnonymousFormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getTStructSetterAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleTypingStrategyUseSiteOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTypingStrategyUseSiteOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypingStrategyUseSiteOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypingStrategyUseSiteOperator=ruleTypingStrategyUseSiteOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypingStrategyUseSiteOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleTypingStrategyUseSiteOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_STRUCTMODSUFFIX_2=null;

         enterRule(); 
            
        try {
            {
            {
            kw=(Token)match(input,Tilde,FOLLOW_181); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getTypingStrategyUseSiteOperatorAccess().getTildeKeyword_0()); 
                  
            }
            int alt597=3;
            int LA597_0 = input.LA(1);

            if ( (LA597_0==Tilde) ) {
                alt597=1;
            }
            else if ( (LA597_0==RULE_STRUCTMODSUFFIX) ) {
                alt597=2;
            }
            switch (alt597) {
                case 1 :
                    {
                    kw=(Token)match(input,Tilde,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypingStrategyUseSiteOperatorAccess().getTildeKeyword_1_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    this_STRUCTMODSUFFIX_2=(Token)match(input,RULE_STRUCTMODSUFFIX,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_STRUCTMODSUFFIX_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRUCTMODSUFFIX_2, grammarAccess.getTypingStrategyUseSiteOperatorAccess().getSTRUCTMODSUFFIXTerminalRuleCall_1_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleTypingStrategyDefSiteOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTypingStrategyDefSiteOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypingStrategyDefSiteOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypingStrategyDefSiteOperator=ruleTypingStrategyDefSiteOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypingStrategyDefSiteOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleTypingStrategyDefSiteOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,Tilde,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getTypingStrategyDefSiteOperatorAccess().getTildeKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeTypeRef=ruleTypeTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeTypeRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_constructorRef_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_typeArg_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTypeTypeRefAccess().getTypeTypeRefAction_0(),
                          current);
                  
            }

            }
            int alt598=2;
            int LA598_0 = input.LA(1);

            if ( (LA598_0==Type) ) {
                alt598=1;
            }
            else if ( (LA598_0==Constructor) ) {
                alt598=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 598, 0, input);

                throw nvae;
            }
            switch (alt598) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Type,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTypeTypeRefAccess().getTypeKeyword_1_0());
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    lv_constructorRef_2_0=(Token)match(input,Constructor,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_constructorRef_2_0, grammarAccess.getTypeTypeRefAccess().getConstructorRefConstructorKeyword_1_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTypeTypeRefRule());
                      	        }
                             		setWithLastConsumed(current, "constructorRef", true, "constructor");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_182); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getTypeTypeRefAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypeTypeRefAccess().getTypeArgTypeArgInTypeTypeRefParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_15);
            lv_typeArg_4_0=ruleTypeArgInTypeTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeTypeRefRule());
              	        }
                     		set(
                     			current, 
                     			"typeArg",
                      		lv_typeArg_4_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeArgInTypeTypeRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getTypeTypeRefAccess().getRightCurlyBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeArgument = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeArgument=ruleTypeArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeArgument() throws RecognitionException {
        EObject current = null;

        EObject this_Wildcard_0 = null;

        EObject this_WildcardNewNotation_1 = null;

        EObject this_TypeRef_2 = null;


         enterRule(); 
            
        try {
            {
            int alt599=3;
            switch ( input.LA(1) ) {
            case QuestionMark:
                {
                int LA599_1 = input.LA(2);

                if ( (synpred322_InternalN4JSXParser()) ) {
                    alt599=1;
                }
                else if ( (true) ) {
                    alt599=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 599, 1, input);

                    throw nvae;
                }
                }
                break;
            case Out:
            case In:
                {
                alt599=2;
                }
                break;
            case Intersection:
            case Constructor:
            case Promisify:
            case Target:
            case Await:
            case Union:
            case This:
            case This_1:
            case Type:
            case Void:
            case LeftParenthesis:
            case LeftSquareBracket:
            case LeftCurlyBracket:
            case Tilde:
            case RULE_IDENTIFIER:
                {
                alt599=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 599, 0, input);

                throw nvae;
            }

            switch (alt599) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeArgumentAccess().getWildcardParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Wildcard_0=ruleWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Wildcard_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeArgumentAccess().getWildcardNewNotationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WildcardNewNotation_1=ruleWildcardNewNotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_WildcardNewNotation_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeArgumentAccess().getTypeRefParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeRef_2=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleWildcard() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcard = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWildcard=ruleWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcard; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleWildcard() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_declaredUpperBound_3_0 = null;

        EObject lv_declaredLowerBound_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getWildcardAccess().getWildcardAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,QuestionMark,FOLLOW_183); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWildcardAccess().getQuestionMarkKeyword_0_0_1());
                  
            }

            }


            }
            int alt600=3;
            int LA600_0 = input.LA(1);

            if ( (LA600_0==Extends) ) {
                alt600=1;
            }
            else if ( (LA600_0==Super) ) {
                alt600=2;
            }
            switch (alt600) {
                case 1 :
                    {
                    {
                    otherlv_2=(Token)match(input,Extends,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getWildcardAccess().getExtendsKeyword_1_0_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWildcardAccess().getDeclaredUpperBoundTypeRefParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaredUpperBound_3_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredUpperBound",
                              		lv_declaredUpperBound_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    otherlv_4=(Token)match(input,Super,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getWildcardAccess().getSuperKeyword_1_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWildcardAccess().getDeclaredLowerBoundTypeRefParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaredLowerBound_5_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredLowerBound",
                              		lv_declaredLowerBound_5_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleWildcardNewNotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardNewNotation = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardNewNotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWildcardNewNotation=ruleWildcardNewNotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardNewNotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleWildcardNewNotation() throws RecognitionException {
        EObject current = null;

        Token lv_usingInOutNotation_0_0=null;
        Token lv_usingInOutNotation_2_0=null;
        EObject lv_declaredUpperBound_1_0 = null;

        EObject lv_declaredLowerBound_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt601=2;
            int LA601_0 = input.LA(1);

            if ( (LA601_0==Out) ) {
                alt601=1;
            }
            else if ( (LA601_0==In) ) {
                alt601=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 601, 0, input);

                throw nvae;
            }
            switch (alt601) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_usingInOutNotation_0_0=(Token)match(input,Out,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_usingInOutNotation_0_0, grammarAccess.getWildcardNewNotationAccess().getUsingInOutNotationOutKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getWildcardNewNotationRule());
                      	        }
                             		setWithLastConsumed(current, "usingInOutNotation", true, "out");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWildcardNewNotationAccess().getDeclaredUpperBoundTypeRefParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaredUpperBound_1_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardNewNotationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredUpperBound",
                              		lv_declaredUpperBound_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    lv_usingInOutNotation_2_0=(Token)match(input,In,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_usingInOutNotation_2_0, grammarAccess.getWildcardNewNotationAccess().getUsingInOutNotationInKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getWildcardNewNotationRule());
                      	        }
                             		setWithLastConsumed(current, "usingInOutNotation", true, "in");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWildcardNewNotationAccess().getDeclaredLowerBoundTypeRefParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaredLowerBound_3_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardNewNotationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredLowerBound",
                              		lv_declaredLowerBound_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleUndefModifierToken() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUndefModifierToken = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUndefModifierTokenRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUndefModifierToken=ruleUndefModifierToken();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUndefModifierToken.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleUndefModifierToken() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,QuestionMark,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getUndefModifierTokenAccess().getQuestionMarkKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleBindingIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBindingIdentifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingIdentifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingIdentifier=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingIdentifier.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleBindingIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENTIFIER_0=null;
        Token kw=null;
        AntlrDatatypeRuleToken this_N4Keyword_2 = null;


         enterRule(); 
            
        try {
            {
            int alt602=3;
            switch ( input.LA(1) ) {
            case RULE_IDENTIFIER:
                {
                alt602=1;
                }
                break;
            case Yield:
                {
                alt602=2;
                }
                break;
            case Intersection:
            case Constructor:
            case Implements:
            case Promisify:
            case Interface:
            case Protected:
            case Abstract:
            case External:
            case Private:
            case Project:
            case Public:
            case Static:
            case Target:
            case Async:
            case Await:
            case Union:
            case This:
            case From:
            case Type:
            case Get:
            case Let:
            case Out:
            case Set:
            case As:
            case Of:
                {
                alt602=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 602, 0, input);

                throw nvae;
            }

            switch (alt602) {
                case 1 :
                    {
                    this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENTIFIER_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENTIFIER_0, grammarAccess.getBindingIdentifierAccess().getIDENTIFIERTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,Yield,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getBindingIdentifierAccess().getYieldKeyword_1_0()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBindingIdentifierAccess().getN4KeywordParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4Keyword_2=ruleN4Keyword();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_N4Keyword_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken norm1_BindingIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENTIFIER_0=null;
        AntlrDatatypeRuleToken this_N4Keyword_1 = null;


         enterRule(); 
            
        try {
            {
            int alt603=2;
            int LA603_0 = input.LA(1);

            if ( (LA603_0==RULE_IDENTIFIER) ) {
                alt603=1;
            }
            else if ( ((LA603_0>=Intersection && LA603_0<=Implements)||(LA603_0>=Promisify && LA603_0<=Abstract)||LA603_0==External||(LA603_0>=Private && LA603_0<=Project)||LA603_0==Public||LA603_0==Static||LA603_0==Target||(LA603_0>=Async && LA603_0<=Await)||LA603_0==Union||LA603_0==This||LA603_0==From||LA603_0==Type||(LA603_0>=Get && LA603_0<=Let)||(LA603_0>=Out && LA603_0<=Set)||LA603_0==As||LA603_0==Of) ) {
                alt603=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 603, 0, input);

                throw nvae;
            }
            switch (alt603) {
                case 1 :
                    {
                    this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENTIFIER_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENTIFIER_0, grammarAccess.getBindingIdentifierAccess().getIDENTIFIERTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBindingIdentifierAccess().getN4KeywordParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4Keyword_1=ruleN4Keyword();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_N4Keyword_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleIdentifierName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdentifierName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentifierName=ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifierName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleIdentifierName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENTIFIER_0=null;
        AntlrDatatypeRuleToken this_ReservedWord_1 = null;

        AntlrDatatypeRuleToken this_N4Keyword_2 = null;


         enterRule(); 
            
        try {
            {
            int alt604=3;
            switch ( input.LA(1) ) {
            case RULE_IDENTIFIER:
                {
                alt604=1;
                }
                break;
            case Instanceof:
            case Continue:
            case Debugger:
            case Function:
            case Default:
            case Extends:
            case Finally:
            case Delete:
            case Export:
            case Import:
            case Return:
            case Switch:
            case Typeof:
            case Break:
            case Catch:
            case Class:
            case Const:
            case False:
            case Super:
            case Throw:
            case While:
            case Yield:
            case Case:
            case Else:
            case Enum:
            case Null:
            case This_1:
            case True:
            case Void:
            case With:
            case For:
            case New:
            case Try:
            case Var:
            case Do:
            case If:
            case In:
                {
                alt604=2;
                }
                break;
            case Intersection:
            case Constructor:
            case Implements:
            case Promisify:
            case Interface:
            case Protected:
            case Abstract:
            case External:
            case Private:
            case Project:
            case Public:
            case Static:
            case Target:
            case Async:
            case Await:
            case Union:
            case This:
            case From:
            case Type:
            case Get:
            case Let:
            case Out:
            case Set:
            case As:
            case Of:
                {
                alt604=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 604, 0, input);

                throw nvae;
            }

            switch (alt604) {
                case 1 :
                    {
                    this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENTIFIER_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENTIFIER_0, grammarAccess.getIdentifierNameAccess().getIDENTIFIERTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIdentifierNameAccess().getReservedWordParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ReservedWord_1=ruleReservedWord();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ReservedWord_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIdentifierNameAccess().getN4KeywordParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4Keyword_2=ruleN4Keyword();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_N4Keyword_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleReservedWord() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleReservedWord = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReservedWordRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReservedWord=ruleReservedWord();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReservedWord.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleReservedWord() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt605=37;
            switch ( input.LA(1) ) {
            case Break:
                {
                alt605=1;
                }
                break;
            case Case:
                {
                alt605=2;
                }
                break;
            case Catch:
                {
                alt605=3;
                }
                break;
            case Class:
                {
                alt605=4;
                }
                break;
            case Const:
                {
                alt605=5;
                }
                break;
            case Continue:
                {
                alt605=6;
                }
                break;
            case Debugger:
                {
                alt605=7;
                }
                break;
            case Default:
                {
                alt605=8;
                }
                break;
            case Delete:
                {
                alt605=9;
                }
                break;
            case Do:
                {
                alt605=10;
                }
                break;
            case Else:
                {
                alt605=11;
                }
                break;
            case Export:
                {
                alt605=12;
                }
                break;
            case Extends:
                {
                alt605=13;
                }
                break;
            case Finally:
                {
                alt605=14;
                }
                break;
            case For:
                {
                alt605=15;
                }
                break;
            case Function:
                {
                alt605=16;
                }
                break;
            case If:
                {
                alt605=17;
                }
                break;
            case Import:
                {
                alt605=18;
                }
                break;
            case In:
                {
                alt605=19;
                }
                break;
            case Instanceof:
                {
                alt605=20;
                }
                break;
            case New:
                {
                alt605=21;
                }
                break;
            case Return:
                {
                alt605=22;
                }
                break;
            case Super:
                {
                alt605=23;
                }
                break;
            case Switch:
                {
                alt605=24;
                }
                break;
            case This_1:
                {
                alt605=25;
                }
                break;
            case Throw:
                {
                alt605=26;
                }
                break;
            case Try:
                {
                alt605=27;
                }
                break;
            case Typeof:
                {
                alt605=28;
                }
                break;
            case Var:
                {
                alt605=29;
                }
                break;
            case Void:
                {
                alt605=30;
                }
                break;
            case While:
                {
                alt605=31;
                }
                break;
            case With:
                {
                alt605=32;
                }
                break;
            case Yield:
                {
                alt605=33;
                }
                break;
            case Null:
                {
                alt605=34;
                }
                break;
            case True:
                {
                alt605=35;
                }
                break;
            case False:
                {
                alt605=36;
                }
                break;
            case Enum:
                {
                alt605=37;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 605, 0, input);

                throw nvae;
            }

            switch (alt605) {
                case 1 :
                    {
                    kw=(Token)match(input,Break,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getBreakKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,Case,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getCaseKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,Catch,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getCatchKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,Class,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getClassKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    kw=(Token)match(input,Const,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getConstKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    kw=(Token)match(input,Continue,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getContinueKeyword_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    kw=(Token)match(input,Debugger,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getDebuggerKeyword_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    kw=(Token)match(input,Default,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getDefaultKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    {
                    kw=(Token)match(input,Delete,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getDeleteKeyword_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    kw=(Token)match(input,Do,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getDoKeyword_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    kw=(Token)match(input,Else,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getElseKeyword_10()); 
                          
                    }

                    }
                    break;
                case 12 :
                    {
                    kw=(Token)match(input,Export,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getExportKeyword_11()); 
                          
                    }

                    }
                    break;
                case 13 :
                    {
                    kw=(Token)match(input,Extends,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getExtendsKeyword_12()); 
                          
                    }

                    }
                    break;
                case 14 :
                    {
                    kw=(Token)match(input,Finally,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getFinallyKeyword_13()); 
                          
                    }

                    }
                    break;
                case 15 :
                    {
                    kw=(Token)match(input,For,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getForKeyword_14()); 
                          
                    }

                    }
                    break;
                case 16 :
                    {
                    kw=(Token)match(input,Function,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getFunctionKeyword_15()); 
                          
                    }

                    }
                    break;
                case 17 :
                    {
                    kw=(Token)match(input,If,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getIfKeyword_16()); 
                          
                    }

                    }
                    break;
                case 18 :
                    {
                    kw=(Token)match(input,Import,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getImportKeyword_17()); 
                          
                    }

                    }
                    break;
                case 19 :
                    {
                    kw=(Token)match(input,In,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getInKeyword_18()); 
                          
                    }

                    }
                    break;
                case 20 :
                    {
                    kw=(Token)match(input,Instanceof,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getInstanceofKeyword_19()); 
                          
                    }

                    }
                    break;
                case 21 :
                    {
                    kw=(Token)match(input,New,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getNewKeyword_20()); 
                          
                    }

                    }
                    break;
                case 22 :
                    {
                    kw=(Token)match(input,Return,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getReturnKeyword_21()); 
                          
                    }

                    }
                    break;
                case 23 :
                    {
                    kw=(Token)match(input,Super,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getSuperKeyword_22()); 
                          
                    }

                    }
                    break;
                case 24 :
                    {
                    kw=(Token)match(input,Switch,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getSwitchKeyword_23()); 
                          
                    }

                    }
                    break;
                case 25 :
                    {
                    kw=(Token)match(input,This_1,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getThisKeyword_24()); 
                          
                    }

                    }
                    break;
                case 26 :
                    {
                    kw=(Token)match(input,Throw,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getThrowKeyword_25()); 
                          
                    }

                    }
                    break;
                case 27 :
                    {
                    kw=(Token)match(input,Try,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getTryKeyword_26()); 
                          
                    }

                    }
                    break;
                case 28 :
                    {
                    kw=(Token)match(input,Typeof,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getTypeofKeyword_27()); 
                          
                    }

                    }
                    break;
                case 29 :
                    {
                    kw=(Token)match(input,Var,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getVarKeyword_28()); 
                          
                    }

                    }
                    break;
                case 30 :
                    {
                    kw=(Token)match(input,Void,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getVoidKeyword_29()); 
                          
                    }

                    }
                    break;
                case 31 :
                    {
                    kw=(Token)match(input,While,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getWhileKeyword_30()); 
                          
                    }

                    }
                    break;
                case 32 :
                    {
                    kw=(Token)match(input,With,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getWithKeyword_31()); 
                          
                    }

                    }
                    break;
                case 33 :
                    {
                    kw=(Token)match(input,Yield,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getYieldKeyword_32()); 
                          
                    }

                    }
                    break;
                case 34 :
                    {
                    kw=(Token)match(input,Null,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getNullKeyword_33()); 
                          
                    }

                    }
                    break;
                case 35 :
                    {
                    kw=(Token)match(input,True,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getTrueKeyword_34()); 
                          
                    }

                    }
                    break;
                case 36 :
                    {
                    kw=(Token)match(input,False,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getFalseKeyword_35()); 
                          
                    }

                    }
                    break;
                case 37 :
                    {
                    kw=(Token)match(input,Enum,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getEnumKeyword_36()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleN4Keyword() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleN4Keyword = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4KeywordRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4Keyword=ruleN4Keyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4Keyword.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleN4Keyword() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt606=25;
            switch ( input.LA(1) ) {
            case Get:
                {
                alt606=1;
                }
                break;
            case Set:
                {
                alt606=2;
                }
                break;
            case Let:
                {
                alt606=3;
                }
                break;
            case Project:
                {
                alt606=4;
                }
                break;
            case External:
                {
                alt606=5;
                }
                break;
            case Abstract:
                {
                alt606=6;
                }
                break;
            case Static:
                {
                alt606=7;
                }
                break;
            case As:
                {
                alt606=8;
                }
                break;
            case From:
                {
                alt606=9;
                }
                break;
            case Constructor:
                {
                alt606=10;
                }
                break;
            case Of:
                {
                alt606=11;
                }
                break;
            case Target:
                {
                alt606=12;
                }
                break;
            case Type:
                {
                alt606=13;
                }
                break;
            case Union:
                {
                alt606=14;
                }
                break;
            case Intersection:
                {
                alt606=15;
                }
                break;
            case This:
                {
                alt606=16;
                }
                break;
            case Promisify:
                {
                alt606=17;
                }
                break;
            case Await:
                {
                alt606=18;
                }
                break;
            case Async:
                {
                alt606=19;
                }
                break;
            case Implements:
                {
                alt606=20;
                }
                break;
            case Interface:
                {
                alt606=21;
                }
                break;
            case Private:
                {
                alt606=22;
                }
                break;
            case Protected:
                {
                alt606=23;
                }
                break;
            case Public:
                {
                alt606=24;
                }
                break;
            case Out:
                {
                alt606=25;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 606, 0, input);

                throw nvae;
            }

            switch (alt606) {
                case 1 :
                    {
                    kw=(Token)match(input,Get,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getGetKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,Set,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getSetKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,Let,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getLetKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,Project,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getProjectKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    kw=(Token)match(input,External,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getExternalKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    kw=(Token)match(input,Abstract,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getAbstractKeyword_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    kw=(Token)match(input,Static,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getStaticKeyword_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    kw=(Token)match(input,As,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getAsKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    {
                    kw=(Token)match(input,From,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getFromKeyword_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    kw=(Token)match(input,Constructor,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getConstructorKeyword_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    kw=(Token)match(input,Of,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getOfKeyword_10()); 
                          
                    }

                    }
                    break;
                case 12 :
                    {
                    kw=(Token)match(input,Target,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getTargetKeyword_11()); 
                          
                    }

                    }
                    break;
                case 13 :
                    {
                    kw=(Token)match(input,Type,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getTypeKeyword_12()); 
                          
                    }

                    }
                    break;
                case 14 :
                    {
                    kw=(Token)match(input,Union,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getUnionKeyword_13()); 
                          
                    }

                    }
                    break;
                case 15 :
                    {
                    kw=(Token)match(input,Intersection,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getIntersectionKeyword_14()); 
                          
                    }

                    }
                    break;
                case 16 :
                    {
                    kw=(Token)match(input,This,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getThisKeyword_15()); 
                          
                    }

                    }
                    break;
                case 17 :
                    {
                    kw=(Token)match(input,Promisify,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getPromisifyKeyword_16()); 
                          
                    }

                    }
                    break;
                case 18 :
                    {
                    kw=(Token)match(input,Await,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getAwaitKeyword_17()); 
                          
                    }

                    }
                    break;
                case 19 :
                    {
                    kw=(Token)match(input,Async,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getAsyncKeyword_18()); 
                          
                    }

                    }
                    break;
                case 20 :
                    {
                    kw=(Token)match(input,Implements,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getImplementsKeyword_19()); 
                          
                    }

                    }
                    break;
                case 21 :
                    {
                    kw=(Token)match(input,Interface,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getInterfaceKeyword_20()); 
                          
                    }

                    }
                    break;
                case 22 :
                    {
                    kw=(Token)match(input,Private,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getPrivateKeyword_21()); 
                          
                    }

                    }
                    break;
                case 23 :
                    {
                    kw=(Token)match(input,Protected,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getProtectedKeyword_22()); 
                          
                    }

                    }
                    break;
                case 24 :
                    {
                    kw=(Token)match(input,Public,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getPublicKeyword_23()); 
                          
                    }

                    }
                    break;
                case 25 :
                    {
                    kw=(Token)match(input,Out,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getOutKeyword_24()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator ruleVariableStatementKeyword() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;

         enterRule(); 
        try {
            {
            int alt607=3;
            switch ( input.LA(1) ) {
            case Var:
                {
                alt607=1;
                }
                break;
            case Const:
                {
                alt607=2;
                }
                break;
            case Let:
                {
                alt607=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 607, 0, input);

                throw nvae;
            }

            switch (alt607) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,Var,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getVariableStatementKeywordAccess().getVarEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getVariableStatementKeywordAccess().getVarEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,Const,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getVariableStatementKeywordAccess().getConstEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getVariableStatementKeywordAccess().getConstEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    enumLiteral_2=(Token)match(input,Let,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getVariableStatementKeywordAccess().getLetEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getVariableStatementKeywordAccess().getLetEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator rulePostfixOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;

         enterRule(); 
        try {
            {
            int alt608=2;
            int LA608_0 = input.LA(1);

            if ( (LA608_0==PlusSignPlusSign) ) {
                alt608=1;
            }
            else if ( (LA608_0==HyphenMinusHyphenMinus) ) {
                alt608=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 608, 0, input);

                throw nvae;
            }
            switch (alt608) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,PlusSignPlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPostfixOperatorAccess().getIncEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getPostfixOperatorAccess().getIncEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPostfixOperatorAccess().getDecEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getPostfixOperatorAccess().getDecEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator ruleUnaryOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;

         enterRule(); 
        try {
            {
            int alt609=9;
            switch ( input.LA(1) ) {
            case Delete:
                {
                alt609=1;
                }
                break;
            case Void:
                {
                alt609=2;
                }
                break;
            case Typeof:
                {
                alt609=3;
                }
                break;
            case PlusSignPlusSign:
                {
                alt609=4;
                }
                break;
            case HyphenMinusHyphenMinus:
                {
                alt609=5;
                }
                break;
            case PlusSign:
                {
                alt609=6;
                }
                break;
            case HyphenMinus:
                {
                alt609=7;
                }
                break;
            case Tilde:
                {
                alt609=8;
                }
                break;
            case ExclamationMark:
                {
                alt609=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 609, 0, input);

                throw nvae;
            }

            switch (alt609) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,Delete,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getDeleteEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getUnaryOperatorAccess().getDeleteEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,Void,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getVoidEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getUnaryOperatorAccess().getVoidEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    enumLiteral_2=(Token)match(input,Typeof,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getTypeofEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getUnaryOperatorAccess().getTypeofEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    enumLiteral_3=(Token)match(input,PlusSignPlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getIncEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getUnaryOperatorAccess().getIncEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    enumLiteral_4=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getDecEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_4, grammarAccess.getUnaryOperatorAccess().getDecEnumLiteralDeclaration_4()); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    {
                    {
                    enumLiteral_5=(Token)match(input,PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getPosEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_5, grammarAccess.getUnaryOperatorAccess().getPosEnumLiteralDeclaration_5()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    {
                    {
                    enumLiteral_6=(Token)match(input,HyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getNegEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_6, grammarAccess.getUnaryOperatorAccess().getNegEnumLiteralDeclaration_6()); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    {
                    {
                    enumLiteral_7=(Token)match(input,Tilde,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getInvEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_7, grammarAccess.getUnaryOperatorAccess().getInvEnumLiteralDeclaration_7()); 
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    {
                    {
                    enumLiteral_8=(Token)match(input,ExclamationMark,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getNotEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_8, grammarAccess.getUnaryOperatorAccess().getNotEnumLiteralDeclaration_8()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator ruleMultiplicativeOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;

         enterRule(); 
        try {
            {
            int alt610=3;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt610=1;
                }
                break;
            case Solidus:
                {
                alt610=2;
                }
                break;
            case PercentSign:
                {
                alt610=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 610, 0, input);

                throw nvae;
            }

            switch (alt610) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getMultiplicativeOperatorAccess().getTimesEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getMultiplicativeOperatorAccess().getTimesEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,Solidus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getMultiplicativeOperatorAccess().getDivEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getMultiplicativeOperatorAccess().getDivEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    enumLiteral_2=(Token)match(input,PercentSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getMultiplicativeOperatorAccess().getModEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getMultiplicativeOperatorAccess().getModEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator ruleAdditiveOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;

         enterRule(); 
        try {
            {
            int alt611=2;
            int LA611_0 = input.LA(1);

            if ( (LA611_0==PlusSign) ) {
                alt611=1;
            }
            else if ( (LA611_0==HyphenMinus) ) {
                alt611=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 611, 0, input);

                throw nvae;
            }
            switch (alt611) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAdditiveOperatorAccess().getAddEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getAdditiveOperatorAccess().getAddEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,HyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAdditiveOperatorAccess().getSubEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getAdditiveOperatorAccess().getSubEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator ruleEqualityOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;

         enterRule(); 
        try {
            {
            int alt612=4;
            switch ( input.LA(1) ) {
            case EqualsSignEqualsSignEqualsSign:
                {
                alt612=1;
                }
                break;
            case ExclamationMarkEqualsSignEqualsSign:
                {
                alt612=2;
                }
                break;
            case EqualsSignEqualsSign:
                {
                alt612=3;
                }
                break;
            case ExclamationMarkEqualsSign:
                {
                alt612=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 612, 0, input);

                throw nvae;
            }

            switch (alt612) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,EqualsSignEqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getEqualityOperatorAccess().getSameEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getEqualityOperatorAccess().getSameEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,ExclamationMarkEqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getEqualityOperatorAccess().getNsameEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getEqualityOperatorAccess().getNsameEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    enumLiteral_2=(Token)match(input,EqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getEqualityOperatorAccess().getEqEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getEqualityOperatorAccess().getEqEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    enumLiteral_3=(Token)match(input,ExclamationMarkEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getEqualityOperatorAccess().getNeqEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getEqualityOperatorAccess().getNeqEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator ruleN4Modifier() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;

         enterRule(); 
        try {
            {
            int alt613=8;
            switch ( input.LA(1) ) {
            case Private:
                {
                alt613=1;
                }
                break;
            case Project:
                {
                alt613=2;
                }
                break;
            case Protected:
                {
                alt613=3;
                }
                break;
            case Public:
                {
                alt613=4;
                }
                break;
            case External:
                {
                alt613=5;
                }
                break;
            case Abstract:
                {
                alt613=6;
                }
                break;
            case Static:
                {
                alt613=7;
                }
                break;
            case Const:
                {
                alt613=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 613, 0, input);

                throw nvae;
            }

            switch (alt613) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,Private,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getPrivateEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getN4ModifierAccess().getPrivateEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,Project,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getProjectEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getN4ModifierAccess().getProjectEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    enumLiteral_2=(Token)match(input,Protected,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getProtectedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getN4ModifierAccess().getProtectedEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    enumLiteral_3=(Token)match(input,Public,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getPublicEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getN4ModifierAccess().getPublicEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    enumLiteral_4=(Token)match(input,External,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getExternalEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_4, grammarAccess.getN4ModifierAccess().getExternalEnumLiteralDeclaration_4()); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    {
                    {
                    enumLiteral_5=(Token)match(input,Abstract,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getAbstractEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_5, grammarAccess.getN4ModifierAccess().getAbstractEnumLiteralDeclaration_5()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    {
                    {
                    enumLiteral_6=(Token)match(input,Static,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getStaticEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_6, grammarAccess.getN4ModifierAccess().getStaticEnumLiteralDeclaration_6()); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    {
                    {
                    enumLiteral_7=(Token)match(input,Const,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getConstEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_7, grammarAccess.getN4ModifierAccess().getConstEnumLiteralDeclaration_7()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final void synpred1_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        match(input,Async,FOLLOW_56); if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_57);
        ruleNoLineTerminator(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,Function,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred2_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        match(input,Async,FOLLOW_56); if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_57);
        ruleNoLineTerminator(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,Function,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred3_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_139); if (state.failed) return ;
        if ( input.LA(1)==Target||input.LA(1)==This||input.LA(1)==RULE_IDENTIFIER ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred4_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop614:
        do {
            int alt614=2;
            int LA614_0 = input.LA(1);

            if ( ((LA614_0>=Protected && LA614_0<=Abstract)||LA614_0==External||(LA614_0>=Private && LA614_0<=Project)||LA614_0==Public||LA614_0==Static||LA614_0==Const) ) {
                alt614=1;
            }


            switch (alt614) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_20);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop614;
            }
        } while (true);

        match(input,Class,FOLLOW_184); if (state.failed) return ;
        int alt615=2;
        int LA615_0 = input.LA(1);

        if ( (LA615_0==Tilde) ) {
            alt615=1;
        }
        switch (alt615) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_185);
                ruleTypingStrategyDefSiteOperator();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt616=2;
        int LA616_0 = input.LA(1);

        if ( ((LA616_0>=Intersection && LA616_0<=Implements)||(LA616_0>=Promisify && LA616_0<=Abstract)||LA616_0==External||(LA616_0>=Private && LA616_0<=Project)||LA616_0==Public||LA616_0==Static||LA616_0==Target||(LA616_0>=Async && LA616_0<=Await)||LA616_0==Union||(LA616_0>=Yield && LA616_0<=This)||LA616_0==From||LA616_0==Type||(LA616_0>=Get && LA616_0<=Let)||(LA616_0>=Out && LA616_0<=Set)||LA616_0==As||LA616_0==Of||LA616_0==RULE_IDENTIFIER) ) {
            alt616=1;
        }
        switch (alt616) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_2);
                ruleBindingIdentifier();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred5_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop617:
        do {
            int alt617=2;
            int LA617_0 = input.LA(1);

            if ( ((LA617_0>=Protected && LA617_0<=Abstract)||LA617_0==External||(LA617_0>=Private && LA617_0<=Project)||LA617_0==Public||LA617_0==Static||LA617_0==Const) ) {
                alt617=1;
            }


            switch (alt617) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_23);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop617;
            }
        } while (true);

        match(input,Interface,FOLLOW_184); if (state.failed) return ;
        int alt618=2;
        int LA618_0 = input.LA(1);

        if ( (LA618_0==Tilde) ) {
            alt618=1;
        }
        switch (alt618) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_185);
                ruleTypingStrategyDefSiteOperator();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt619=2;
        int LA619_0 = input.LA(1);

        if ( ((LA619_0>=Intersection && LA619_0<=Implements)||(LA619_0>=Promisify && LA619_0<=Abstract)||LA619_0==External||(LA619_0>=Private && LA619_0<=Project)||LA619_0==Public||LA619_0==Static||LA619_0==Target||(LA619_0>=Async && LA619_0<=Await)||LA619_0==Union||(LA619_0>=Yield && LA619_0<=This)||LA619_0==From||LA619_0==Type||(LA619_0>=Get && LA619_0<=Let)||(LA619_0>=Out && LA619_0<=Set)||LA619_0==As||LA619_0==Of||LA619_0==RULE_IDENTIFIER) ) {
            alt619=1;
        }
        switch (alt619) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_2);
                ruleBindingIdentifier();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred6_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop620:
        do {
            int alt620=2;
            int LA620_0 = input.LA(1);

            if ( ((LA620_0>=Protected && LA620_0<=Abstract)||LA620_0==External||(LA620_0>=Private && LA620_0<=Project)||LA620_0==Public||LA620_0==Static||LA620_0==Const) ) {
                alt620=1;
            }


            switch (alt620) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_24);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop620;
            }
        } while (true);

        match(input,Enum,FOLLOW_185); if (state.failed) return ;
        int alt621=2;
        int LA621_0 = input.LA(1);

        if ( ((LA621_0>=Intersection && LA621_0<=Implements)||(LA621_0>=Promisify && LA621_0<=Abstract)||LA621_0==External||(LA621_0>=Private && LA621_0<=Project)||LA621_0==Public||LA621_0==Static||LA621_0==Target||(LA621_0>=Async && LA621_0<=Await)||LA621_0==Union||(LA621_0>=Yield && LA621_0<=This)||LA621_0==From||LA621_0==Type||(LA621_0>=Get && LA621_0<=Let)||(LA621_0>=Out && LA621_0<=Set)||LA621_0==As||LA621_0==Of||LA621_0==RULE_IDENTIFIER) ) {
            alt621=1;
        }
        switch (alt621) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_2);
                ruleBindingIdentifier();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred10_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,From,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred11_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=Interface && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Project)||input.LA(1)==Public||input.LA(1)==Static||input.LA(1)==Async||(input.LA(1)>=Class && input.LA(1)<=Const)||input.LA(1)==Enum||input.LA(1)==Let||input.LA(1)==Var||input.LA(1)==CommercialAt ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred12_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_139); if (state.failed) return ;
        if ( input.LA(1)==Target||input.LA(1)==This||input.LA(1)==RULE_IDENTIFIER ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred13_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop623:
        do {
            int alt623=2;
            int LA623_0 = input.LA(1);

            if ( ((LA623_0>=Protected && LA623_0<=Abstract)||LA623_0==External||(LA623_0>=Private && LA623_0<=Project)||LA623_0==Public||LA623_0==Static||LA623_0==Const) ) {
                alt623=1;
            }


            switch (alt623) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_20);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop623;
            }
        } while (true);

        match(input,Class,FOLLOW_184); if (state.failed) return ;
        int alt624=2;
        int LA624_0 = input.LA(1);

        if ( (LA624_0==Tilde) ) {
            alt624=1;
        }
        switch (alt624) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_185);
                ruleTypingStrategyDefSiteOperator();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt625=2;
        int LA625_0 = input.LA(1);

        if ( ((LA625_0>=Intersection && LA625_0<=Implements)||(LA625_0>=Promisify && LA625_0<=Abstract)||LA625_0==External||(LA625_0>=Private && LA625_0<=Project)||LA625_0==Public||LA625_0==Static||LA625_0==Target||(LA625_0>=Async && LA625_0<=Await)||LA625_0==Union||(LA625_0>=Yield && LA625_0<=This)||LA625_0==From||LA625_0==Type||(LA625_0>=Get && LA625_0<=Let)||(LA625_0>=Out && LA625_0<=Set)||LA625_0==As||LA625_0==Of||LA625_0==RULE_IDENTIFIER) ) {
            alt625=1;
        }
        switch (alt625) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_2);
                ruleBindingIdentifier();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred14_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop626:
        do {
            int alt626=2;
            int LA626_0 = input.LA(1);

            if ( ((LA626_0>=Protected && LA626_0<=Abstract)||LA626_0==External||(LA626_0>=Private && LA626_0<=Project)||LA626_0==Public||LA626_0==Static||LA626_0==Const) ) {
                alt626=1;
            }


            switch (alt626) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_23);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop626;
            }
        } while (true);

        match(input,Interface,FOLLOW_184); if (state.failed) return ;
        int alt627=2;
        int LA627_0 = input.LA(1);

        if ( (LA627_0==Tilde) ) {
            alt627=1;
        }
        switch (alt627) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_185);
                ruleTypingStrategyDefSiteOperator();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt628=2;
        int LA628_0 = input.LA(1);

        if ( ((LA628_0>=Intersection && LA628_0<=Implements)||(LA628_0>=Promisify && LA628_0<=Abstract)||LA628_0==External||(LA628_0>=Private && LA628_0<=Project)||LA628_0==Public||LA628_0==Static||LA628_0==Target||(LA628_0>=Async && LA628_0<=Await)||LA628_0==Union||(LA628_0>=Yield && LA628_0<=This)||LA628_0==From||LA628_0==Type||(LA628_0>=Get && LA628_0<=Let)||(LA628_0>=Out && LA628_0<=Set)||LA628_0==As||LA628_0==Of||LA628_0==RULE_IDENTIFIER) ) {
            alt628=1;
        }
        switch (alt628) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_2);
                ruleBindingIdentifier();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred15_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop629:
        do {
            int alt629=2;
            int LA629_0 = input.LA(1);

            if ( ((LA629_0>=Protected && LA629_0<=Abstract)||LA629_0==External||(LA629_0>=Private && LA629_0<=Project)||LA629_0==Public||LA629_0==Static||LA629_0==Const) ) {
                alt629=1;
            }


            switch (alt629) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_24);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop629;
            }
        } while (true);

        match(input,Enum,FOLLOW_185); if (state.failed) return ;
        int alt630=2;
        int LA630_0 = input.LA(1);

        if ( ((LA630_0>=Intersection && LA630_0<=Implements)||(LA630_0>=Promisify && LA630_0<=Abstract)||LA630_0==External||(LA630_0>=Private && LA630_0<=Project)||LA630_0==Public||LA630_0==Static||LA630_0==Target||(LA630_0>=Async && LA630_0<=Await)||LA630_0==Union||(LA630_0>=Yield && LA630_0<=This)||LA630_0==From||LA630_0==Type||(LA630_0>=Get && LA630_0<=Let)||(LA630_0>=Out && LA630_0<=Set)||LA630_0==As||LA630_0==Of||LA630_0==RULE_IDENTIFIER) ) {
            alt630=1;
        }
        switch (alt630) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_2);
                ruleBindingIdentifier();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred19_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        pushFollow(FOLLOW_2);
        ruleSemi();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    public final void synpred22_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        pushFollow(FOLLOW_2);
        ruleSemi();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    public final void synpred23_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred24_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred25_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred26_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred27_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred28_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred37_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        match(input,Async,FOLLOW_63); if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_64);
        ruleNoLineTerminator(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred38_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred41_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        match(input,Async,FOLLOW_63); if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_64);
        ruleNoLineTerminator(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred42_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred45_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        match(input,Async,FOLLOW_63); if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_64);
        ruleNoLineTerminator(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred46_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred49_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        match(input,Async,FOLLOW_63); if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_64);
        ruleNoLineTerminator(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred50_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred51_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred52_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred55_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred56_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop662:
        do {
            int alt662=2;
            int LA662_0 = input.LA(1);

            if ( ((LA662_0>=Protected && LA662_0<=Abstract)||LA662_0==External||(LA662_0>=Private && LA662_0<=Project)||LA662_0==Public||LA662_0==Static||LA662_0==Const) ) {
                alt662=1;
            }


            switch (alt662) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_19);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop662;
            }
        } while (true);

        pushFollow(FOLLOW_57);
        ruleAsyncNoTrailingLineBreak(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,Function,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred57_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleVariableStatementKeyword();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred58_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_92);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred59_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred60_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop663:
        do {
            int alt663=2;
            int LA663_0 = input.LA(1);

            if ( ((LA663_0>=Protected && LA663_0<=Abstract)||LA663_0==External||(LA663_0>=Private && LA663_0<=Project)||LA663_0==Public||LA663_0==Static||LA663_0==Const) ) {
                alt663=1;
            }


            switch (alt663) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_19);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop663;
            }
        } while (true);

        pushFollow(FOLLOW_57);
        ruleAsyncNoTrailingLineBreak(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,Function,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred61_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleVariableStatementKeyword();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred62_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_92);
        norm1_BindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred63_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_139); if (state.failed) return ;
        if ( input.LA(1)==Target||input.LA(1)==This||input.LA(1)==RULE_IDENTIFIER ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred64_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_139); if (state.failed) return ;
        if ( input.LA(1)==Target||input.LA(1)==This||input.LA(1)==RULE_IDENTIFIER ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred67_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred68_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred69_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred70_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred71_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred72_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred81_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred82_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred83_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred84_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred85_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_54);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        int alt664=2;
        int LA664_0 = input.LA(1);

        if ( (LA664_0==Colon) ) {
            alt664=1;
        }
        switch (alt664) {
            case 1 :
                {
                pushFollow(FOLLOW_2);
                ruleColonSepTypeRef(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    public final void synpred86_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_54);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        int alt665=2;
        int LA665_0 = input.LA(1);

        if ( (LA665_0==Colon) ) {
            alt665=1;
        }
        switch (alt665) {
            case 1 :
                {
                pushFollow(FOLLOW_2);
                ruleColonSepTypeRef(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    public final void synpred87_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_54);
        norm1_BindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        int alt666=2;
        int LA666_0 = input.LA(1);

        if ( (LA666_0==Colon) ) {
            alt666=1;
        }
        switch (alt666) {
            case 1 :
                {
                pushFollow(FOLLOW_2);
                ruleColonSepTypeRef(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    public final void synpred88_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_54);
        norm1_BindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        int alt667=2;
        int LA667_0 = input.LA(1);

        if ( (LA667_0==Colon) ) {
            alt667=1;
        }
        switch (alt667) {
            case 1 :
                {
                pushFollow(FOLLOW_2);
                ruleColonSepTypeRef(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    public final void synpred89_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred90_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred93_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Else,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred94_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Else,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred95_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        pushFollow(FOLLOW_2);
        ruleSemi();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    public final void synpred96_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        pushFollow(FOLLOW_2);
        ruleSemi();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    public final void synpred97_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_80);
        ruleLetIdentifierRef();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        {
        {
        match(input,In,FOLLOW_14); if (state.failed) return ;

        }


        }
        {
        {
        pushFollow(FOLLOW_75);
        norm1_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred98_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        if ( input.LA(1)==Const||input.LA(1)==Let||input.LA(1)==Var ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred99_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_81);
        ruleBindingIdentifierAsVariableDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        int alt668=2;
        int LA668_0 = input.LA(1);

        if ( (LA668_0==In) ) {
            alt668=1;
        }
        else if ( (LA668_0==Of) ) {
            alt668=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 668, 0, input);

            throw nvae;
        }
        switch (alt668) {
            case 1 :
                {
                {
                {
                match(input,In,FOLLOW_132); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                {
                {
                {
                match(input,Of,FOLLOW_132); if (state.failed) return ;

                }


                }


                }
                break;

        }
        int alt669=2;
        int LA669_0 = input.LA(1);

        if ( ((LA669_0>=Intersection && LA669_0<=Implements)||(LA669_0>=Promisify && LA669_0<=Abstract)||(LA669_0>=External && LA669_0<=Function)||(LA669_0>=Private && LA669_0<=Delete)||LA669_0==Public||LA669_0==Static||(LA669_0>=Target && LA669_0<=Await)||LA669_0==Class||(LA669_0>=False && LA669_0<=Super)||LA669_0==Union||(LA669_0>=Yield && LA669_0<=This)||(LA669_0>=From && LA669_0<=Void)||(LA669_0>=Get && LA669_0<=Set)||LA669_0==PlusSignPlusSign||LA669_0==HyphenMinusHyphenMinus||LA669_0==SolidusEqualsSign||LA669_0==As||LA669_0==Of||LA669_0==ExclamationMark||LA669_0==LeftParenthesis||LA669_0==PlusSign||LA669_0==HyphenMinus||LA669_0==Solidus||LA669_0==LessThanSign||(LA669_0>=CommercialAt && LA669_0<=LeftSquareBracket)||LA669_0==LeftCurlyBracket||LA669_0==Tilde||LA669_0==RULE_DOUBLE||(LA669_0>=RULE_HEX_INT && LA669_0<=RULE_LEGACY_OCTAL_INT)||LA669_0==RULE_SCIENTIFIC_INT||LA669_0==RULE_IDENTIFIER||LA669_0==RULE_STRING||(LA669_0>=RULE_TEMPLATE_HEAD && LA669_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA669_0==RULE_INT) ) {
            alt669=1;
        }
        switch (alt669) {
            case 1 :
                {
                if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
                    input.consume();
                    state.errorRecovery=false;state.failed=false;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    MismatchedSetException mse = new MismatchedSetException(null,input);
                    throw mse;
                }


                }
                break;

        }


        }


        }
    }
    public final void synpred100_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred101_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_80);
        ruleLetIdentifierRef();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        {
        {
        match(input,In,FOLLOW_14); if (state.failed) return ;

        }


        }
        {
        {
        pushFollow(FOLLOW_75);
        norm3_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred102_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        if ( input.LA(1)==Const||input.LA(1)==Let||input.LA(1)==Var ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred103_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_81);
        norm2_BindingIdentifierAsVariableDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        int alt670=2;
        int LA670_0 = input.LA(1);

        if ( (LA670_0==In) ) {
            alt670=1;
        }
        else if ( (LA670_0==Of) ) {
            alt670=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 670, 0, input);

            throw nvae;
        }
        switch (alt670) {
            case 1 :
                {
                {
                {
                match(input,In,FOLLOW_132); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                {
                {
                {
                match(input,Of,FOLLOW_132); if (state.failed) return ;

                }


                }


                }
                break;

        }
        int alt671=2;
        int LA671_0 = input.LA(1);

        if ( ((LA671_0>=Intersection && LA671_0<=Implements)||(LA671_0>=Promisify && LA671_0<=Abstract)||(LA671_0>=External && LA671_0<=Function)||(LA671_0>=Private && LA671_0<=Delete)||LA671_0==Public||LA671_0==Static||(LA671_0>=Target && LA671_0<=Await)||LA671_0==Class||(LA671_0>=False && LA671_0<=Super)||LA671_0==Union||(LA671_0>=Yield && LA671_0<=This)||(LA671_0>=From && LA671_0<=Void)||(LA671_0>=Get && LA671_0<=Set)||LA671_0==PlusSignPlusSign||LA671_0==HyphenMinusHyphenMinus||LA671_0==SolidusEqualsSign||LA671_0==As||LA671_0==Of||LA671_0==ExclamationMark||LA671_0==LeftParenthesis||LA671_0==PlusSign||LA671_0==HyphenMinus||LA671_0==Solidus||LA671_0==LessThanSign||(LA671_0>=CommercialAt && LA671_0<=LeftSquareBracket)||LA671_0==LeftCurlyBracket||LA671_0==Tilde||LA671_0==RULE_DOUBLE||(LA671_0>=RULE_HEX_INT && LA671_0<=RULE_LEGACY_OCTAL_INT)||LA671_0==RULE_SCIENTIFIC_INT||LA671_0==RULE_IDENTIFIER||LA671_0==RULE_STRING||(LA671_0>=RULE_TEMPLATE_HEAD && LA671_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA671_0==RULE_INT) ) {
            alt671=1;
        }
        switch (alt671) {
            case 1 :
                {
                if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
                    input.consume();
                    state.errorRecovery=false;state.failed=false;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    MismatchedSetException mse = new MismatchedSetException(null,input);
                    throw mse;
                }


                }
                break;

        }


        }


        }
    }
    public final void synpred104_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred111_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred112_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_92);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred114_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred115_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_92);
        norm1_BindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred119_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt672=2;
        alt672 = dfa672.predict(input);
        switch (alt672) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_102);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        {
        {
        pushFollow(FOLLOW_92);
        ruleLiteralOrComputedPropertyName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred120_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        pushFollow(FOLLOW_2);
        ruleGetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred121_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Set,FOLLOW_186); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred122_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt673=2;
        int LA673_0 = input.LA(1);

        if ( (LA673_0==LessThanSign) ) {
            alt673=1;
        }
        switch (alt673) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt674=2;
        alt674 = dfa674.predict(input);
        switch (alt674) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_103);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt675=2;
        int LA675_0 = input.LA(1);

        if ( (LA675_0==Asterisk) ) {
            alt675=1;
        }
        else if ( ((LA675_0>=Intersection && LA675_0<=With)||(LA675_0>=For && LA675_0<=Var)||(LA675_0>=As && LA675_0<=Of)||LA675_0==LeftSquareBracket||LA675_0==RULE_DOUBLE||LA675_0==RULE_HEX_INT||LA675_0==RULE_OCTAL_INT||LA675_0==RULE_SCIENTIFIC_INT||LA675_0==RULE_IDENTIFIER||LA675_0==RULE_STRING||LA675_0==RULE_INT) ) {
            alt675=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 675, 0, input);

            throw nvae;
        }
        switch (alt675) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_102); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_64);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                pushFollow(FOLLOW_64);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred123_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt676=2;
        alt676 = dfa676.predict(input);
        switch (alt676) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_102);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        {
        {
        pushFollow(FOLLOW_92);
        norm1_LiteralOrComputedPropertyName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred124_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        pushFollow(FOLLOW_2);
        norm1_GetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred125_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Set,FOLLOW_186); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred126_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt677=2;
        int LA677_0 = input.LA(1);

        if ( (LA677_0==LessThanSign) ) {
            alt677=1;
        }
        switch (alt677) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt678=2;
        alt678 = dfa678.predict(input);
        switch (alt678) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_103);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt679=2;
        int LA679_0 = input.LA(1);

        if ( (LA679_0==Asterisk) ) {
            alt679=1;
        }
        else if ( ((LA679_0>=Intersection && LA679_0<=With)||(LA679_0>=For && LA679_0<=Var)||(LA679_0>=As && LA679_0<=Of)||LA679_0==LeftSquareBracket||LA679_0==RULE_DOUBLE||LA679_0==RULE_HEX_INT||LA679_0==RULE_OCTAL_INT||LA679_0==RULE_SCIENTIFIC_INT||LA679_0==RULE_IDENTIFIER||LA679_0==RULE_STRING||LA679_0==RULE_INT) ) {
            alt679=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 679, 0, input);

            throw nvae;
        }
        switch (alt679) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_102); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_64);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                pushFollow(FOLLOW_64);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred127_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt680=2;
        alt680 = dfa680.predict(input);
        switch (alt680) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_102);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        {
        {
        pushFollow(FOLLOW_92);
        ruleLiteralOrComputedPropertyName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred128_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        pushFollow(FOLLOW_2);
        ruleGetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred130_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Set,FOLLOW_186); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred133_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt681=2;
        int LA681_0 = input.LA(1);

        if ( (LA681_0==LessThanSign) ) {
            alt681=1;
        }
        switch (alt681) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt682=2;
        alt682 = dfa682.predict(input);
        switch (alt682) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_103);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt683=2;
        int LA683_0 = input.LA(1);

        if ( (LA683_0==Asterisk) ) {
            alt683=1;
        }
        else if ( ((LA683_0>=Intersection && LA683_0<=With)||(LA683_0>=For && LA683_0<=Var)||(LA683_0>=As && LA683_0<=Of)||LA683_0==LeftSquareBracket||LA683_0==RULE_DOUBLE||LA683_0==RULE_HEX_INT||LA683_0==RULE_OCTAL_INT||LA683_0==RULE_SCIENTIFIC_INT||LA683_0==RULE_IDENTIFIER||LA683_0==RULE_STRING||LA683_0==RULE_INT) ) {
            alt683=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 683, 0, input);

            throw nvae;
        }
        switch (alt683) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_102); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_64);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                pushFollow(FOLLOW_64);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred136_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt684=2;
        alt684 = dfa684.predict(input);
        switch (alt684) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_102);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        {
        {
        pushFollow(FOLLOW_92);
        norm1_LiteralOrComputedPropertyName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred137_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        pushFollow(FOLLOW_2);
        norm1_GetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred139_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Set,FOLLOW_186); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred142_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt685=2;
        int LA685_0 = input.LA(1);

        if ( (LA685_0==LessThanSign) ) {
            alt685=1;
        }
        switch (alt685) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt686=2;
        alt686 = dfa686.predict(input);
        switch (alt686) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_103);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt687=2;
        int LA687_0 = input.LA(1);

        if ( (LA687_0==Asterisk) ) {
            alt687=1;
        }
        else if ( ((LA687_0>=Intersection && LA687_0<=With)||(LA687_0>=For && LA687_0<=Var)||(LA687_0>=As && LA687_0<=Of)||LA687_0==LeftSquareBracket||LA687_0==RULE_DOUBLE||LA687_0==RULE_HEX_INT||LA687_0==RULE_OCTAL_INT||LA687_0==RULE_SCIENTIFIC_INT||LA687_0==RULE_IDENTIFIER||LA687_0==RULE_STRING||LA687_0==RULE_INT) ) {
            alt687=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 687, 0, input);

            throw nvae;
        }
        switch (alt687) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_102); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_64);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                pushFollow(FOLLOW_64);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred163_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred164_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred165_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,New,FOLLOW_109); if (state.failed) return ;
        match(input,FullStop,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred166_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,New,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred167_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred168_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred169_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,New,FOLLOW_109); if (state.failed) return ;
        match(input,FullStop,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred170_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,New,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred171_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred172_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred173_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        rulePostfixOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred174_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        rulePostfixOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred175_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,As,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred176_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,As,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred177_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleMultiplicativeOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred178_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleMultiplicativeOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred179_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAdditiveOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred180_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAdditiveOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred181_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_14);
        ruleShiftOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred182_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_14);
        ruleShiftOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        {
        {
        pushFollow(FOLLOW_2);
        norm1_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred183_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_14);
        ruleRelationalOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred185_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_14);
        norm1_RelationalOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred187_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_187);
        ruleRelationalOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||input.LA(1)==This||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred189_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_187);
        norm1_RelationalOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||input.LA(1)==This||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred191_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleEqualityOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred192_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleEqualityOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred193_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleEqualityOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred194_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleEqualityOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred195_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred196_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred197_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred198_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred199_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseXOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred200_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseXOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred201_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseXOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred202_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseXOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred203_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred204_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred205_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred206_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred207_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred208_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred209_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred210_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred211_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred212_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred213_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred214_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred215_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred216_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred217_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred218_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred219_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Await,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred220_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_135); if (state.failed) return ;
        match(input,Promisify,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred221_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        match(input,Async,FOLLOW_63); if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_64);
        ruleNoLineTerminator(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred222_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        int alt702=3;
        switch ( input.LA(1) ) {
        case LeftParenthesis:
            {
            alt702=1;
            }
            break;
        case Async:
            {
            int LA702_2 = input.LA(2);

            if ( (LA702_2==EqualsSignGreaterThanSign) ) {
                alt702=3;
            }
            else if ( (LA702_2==RULE_NO_LINE_TERMINATOR) && (synpred221_InternalN4JSXParser())) {
                alt702=2;
            }
            else if ( (LA702_2==LeftParenthesis) && (synpred221_InternalN4JSXParser())) {
                alt702=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 702, 2, input);

                throw nvae;
            }
            }
            break;
        case Intersection:
        case Constructor:
        case Implements:
        case Promisify:
        case Interface:
        case Protected:
        case Abstract:
        case External:
        case Private:
        case Project:
        case Public:
        case Static:
        case Target:
        case Await:
        case Union:
        case Yield:
        case This:
        case From:
        case Type:
        case Get:
        case Let:
        case Out:
        case Set:
        case As:
        case Of:
        case RULE_IDENTIFIER:
            {
            alt702=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 702, 0, input);

            throw nvae;
        }

        switch (alt702) {
            case 1 :
                {
                {
                match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return ;
                int alt697=2;
                int LA697_0 = input.LA(1);

                if ( ((LA697_0>=Intersection && LA697_0<=Implements)||(LA697_0>=Promisify && LA697_0<=Abstract)||LA697_0==External||(LA697_0>=Private && LA697_0<=Project)||LA697_0==Public||LA697_0==Static||LA697_0==Target||(LA697_0>=Async && LA697_0<=Await)||LA697_0==Union||(LA697_0>=Yield && LA697_0<=This)||LA697_0==From||LA697_0==This_1||(LA697_0>=Type && LA697_0<=Void)||LA697_0==FullStopFullStopFullStop||(LA697_0>=Get && LA697_0<=Let)||(LA697_0>=Out && LA697_0<=Set)||LA697_0==As||LA697_0==Of||(LA697_0>=QuestionMark && LA697_0<=LeftSquareBracket)||LA697_0==LeftCurlyBracket||LA697_0==Tilde||LA697_0==RULE_IDENTIFIER) ) {
                    alt697=1;
                }
                switch (alt697) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_59);
                        ruleFormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop696:
                        do {
                            int alt696=2;
                            int LA696_0 = input.LA(1);

                            if ( (LA696_0==Comma) ) {
                                alt696=1;
                            }


                            switch (alt696) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_60); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_59);
                        	    ruleFormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop696;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_61); if (state.failed) return ;
                int alt698=2;
                int LA698_0 = input.LA(1);

                if ( (LA698_0==Colon) ) {
                    alt698=1;
                }
                switch (alt698) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_55); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_62);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                {
                {
                match(input,Async,FOLLOW_63); if (state.failed) return ;

                }


                }

                pushFollow(FOLLOW_64);
                ruleNoLineTerminator(null);

                state._fsp--;
                if (state.failed) return ;
                match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return ;

                }


                }
                int alt700=2;
                int LA700_0 = input.LA(1);

                if ( ((LA700_0>=Intersection && LA700_0<=Implements)||(LA700_0>=Promisify && LA700_0<=Abstract)||LA700_0==External||(LA700_0>=Private && LA700_0<=Project)||LA700_0==Public||LA700_0==Static||LA700_0==Target||(LA700_0>=Async && LA700_0<=Await)||LA700_0==Union||(LA700_0>=Yield && LA700_0<=This)||LA700_0==From||LA700_0==This_1||(LA700_0>=Type && LA700_0<=Void)||LA700_0==FullStopFullStopFullStop||(LA700_0>=Get && LA700_0<=Let)||(LA700_0>=Out && LA700_0<=Set)||LA700_0==As||LA700_0==Of||(LA700_0>=QuestionMark && LA700_0<=LeftSquareBracket)||LA700_0==LeftCurlyBracket||LA700_0==Tilde||LA700_0==RULE_IDENTIFIER) ) {
                    alt700=1;
                }
                switch (alt700) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_59);
                        ruleFormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop699:
                        do {
                            int alt699=2;
                            int LA699_0 = input.LA(1);

                            if ( (LA699_0==Comma) ) {
                                alt699=1;
                            }


                            switch (alt699) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_60); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_59);
                        	    ruleFormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop699;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_61); if (state.failed) return ;
                int alt701=2;
                int LA701_0 = input.LA(1);

                if ( (LA701_0==Colon) ) {
                    alt701=1;
                }
                switch (alt701) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_55); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_62);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 3 :
                {
                {
                {
                pushFollow(FOLLOW_62);
                ruleBindingIdentifierAsFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred223_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAssignmentOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred224_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Await,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred225_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_135); if (state.failed) return ;
        match(input,Promisify,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred226_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        match(input,Async,FOLLOW_63); if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_64);
        ruleNoLineTerminator(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred227_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        int alt709=3;
        switch ( input.LA(1) ) {
        case LeftParenthesis:
            {
            alt709=1;
            }
            break;
        case Async:
            {
            int LA709_2 = input.LA(2);

            if ( (LA709_2==EqualsSignGreaterThanSign) ) {
                alt709=3;
            }
            else if ( (LA709_2==RULE_NO_LINE_TERMINATOR) && (synpred226_InternalN4JSXParser())) {
                alt709=2;
            }
            else if ( (LA709_2==LeftParenthesis) && (synpred226_InternalN4JSXParser())) {
                alt709=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 709, 2, input);

                throw nvae;
            }
            }
            break;
        case Intersection:
        case Constructor:
        case Implements:
        case Promisify:
        case Interface:
        case Protected:
        case Abstract:
        case External:
        case Private:
        case Project:
        case Public:
        case Static:
        case Target:
        case Await:
        case Union:
        case Yield:
        case This:
        case From:
        case Type:
        case Get:
        case Let:
        case Out:
        case Set:
        case As:
        case Of:
        case RULE_IDENTIFIER:
            {
            alt709=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 709, 0, input);

            throw nvae;
        }

        switch (alt709) {
            case 1 :
                {
                {
                match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return ;
                int alt704=2;
                int LA704_0 = input.LA(1);

                if ( ((LA704_0>=Intersection && LA704_0<=Implements)||(LA704_0>=Promisify && LA704_0<=Abstract)||LA704_0==External||(LA704_0>=Private && LA704_0<=Project)||LA704_0==Public||LA704_0==Static||LA704_0==Target||(LA704_0>=Async && LA704_0<=Await)||LA704_0==Union||(LA704_0>=Yield && LA704_0<=This)||LA704_0==From||LA704_0==This_1||(LA704_0>=Type && LA704_0<=Void)||LA704_0==FullStopFullStopFullStop||(LA704_0>=Get && LA704_0<=Let)||(LA704_0>=Out && LA704_0<=Set)||LA704_0==As||LA704_0==Of||(LA704_0>=QuestionMark && LA704_0<=LeftSquareBracket)||LA704_0==LeftCurlyBracket||LA704_0==Tilde||LA704_0==RULE_IDENTIFIER) ) {
                    alt704=1;
                }
                switch (alt704) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_59);
                        ruleFormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop703:
                        do {
                            int alt703=2;
                            int LA703_0 = input.LA(1);

                            if ( (LA703_0==Comma) ) {
                                alt703=1;
                            }


                            switch (alt703) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_60); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_59);
                        	    ruleFormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop703;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_61); if (state.failed) return ;
                int alt705=2;
                int LA705_0 = input.LA(1);

                if ( (LA705_0==Colon) ) {
                    alt705=1;
                }
                switch (alt705) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_55); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_62);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                {
                {
                match(input,Async,FOLLOW_63); if (state.failed) return ;

                }


                }

                pushFollow(FOLLOW_64);
                ruleNoLineTerminator(null);

                state._fsp--;
                if (state.failed) return ;
                match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return ;

                }


                }
                int alt707=2;
                int LA707_0 = input.LA(1);

                if ( ((LA707_0>=Intersection && LA707_0<=Implements)||(LA707_0>=Promisify && LA707_0<=Abstract)||LA707_0==External||(LA707_0>=Private && LA707_0<=Project)||LA707_0==Public||LA707_0==Static||LA707_0==Target||(LA707_0>=Async && LA707_0<=Await)||LA707_0==Union||(LA707_0>=Yield && LA707_0<=This)||LA707_0==From||LA707_0==This_1||(LA707_0>=Type && LA707_0<=Void)||LA707_0==FullStopFullStopFullStop||(LA707_0>=Get && LA707_0<=Let)||(LA707_0>=Out && LA707_0<=Set)||LA707_0==As||LA707_0==Of||(LA707_0>=QuestionMark && LA707_0<=LeftSquareBracket)||LA707_0==LeftCurlyBracket||LA707_0==Tilde||LA707_0==RULE_IDENTIFIER) ) {
                    alt707=1;
                }
                switch (alt707) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_59);
                        ruleFormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop706:
                        do {
                            int alt706=2;
                            int LA706_0 = input.LA(1);

                            if ( (LA706_0==Comma) ) {
                                alt706=1;
                            }


                            switch (alt706) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_60); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_59);
                        	    ruleFormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop706;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_61); if (state.failed) return ;
                int alt708=2;
                int LA708_0 = input.LA(1);

                if ( (LA708_0==Colon) ) {
                    alt708=1;
                }
                switch (alt708) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_55); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_62);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 3 :
                {
                {
                {
                pushFollow(FOLLOW_62);
                ruleBindingIdentifierAsFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred228_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAssignmentOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred229_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Await,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred230_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_135); if (state.failed) return ;
        match(input,Promisify,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred231_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        match(input,Async,FOLLOW_63); if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_64);
        ruleNoLineTerminator(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred232_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        int alt716=3;
        switch ( input.LA(1) ) {
        case LeftParenthesis:
            {
            alt716=1;
            }
            break;
        case Async:
            {
            int LA716_2 = input.LA(2);

            if ( (LA716_2==EqualsSignGreaterThanSign) ) {
                alt716=3;
            }
            else if ( (LA716_2==RULE_NO_LINE_TERMINATOR) && (synpred231_InternalN4JSXParser())) {
                alt716=2;
            }
            else if ( (LA716_2==LeftParenthesis) && (synpred231_InternalN4JSXParser())) {
                alt716=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 716, 2, input);

                throw nvae;
            }
            }
            break;
        case Intersection:
        case Constructor:
        case Implements:
        case Promisify:
        case Interface:
        case Protected:
        case Abstract:
        case External:
        case Private:
        case Project:
        case Public:
        case Static:
        case Target:
        case Await:
        case Union:
        case This:
        case From:
        case Type:
        case Get:
        case Let:
        case Out:
        case Set:
        case As:
        case Of:
        case RULE_IDENTIFIER:
            {
            alt716=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 716, 0, input);

            throw nvae;
        }

        switch (alt716) {
            case 1 :
                {
                {
                match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return ;
                int alt711=2;
                int LA711_0 = input.LA(1);

                if ( ((LA711_0>=Intersection && LA711_0<=Implements)||(LA711_0>=Promisify && LA711_0<=Abstract)||LA711_0==External||(LA711_0>=Private && LA711_0<=Project)||LA711_0==Public||LA711_0==Static||LA711_0==Target||(LA711_0>=Async && LA711_0<=Await)||LA711_0==Union||LA711_0==This||LA711_0==From||LA711_0==This_1||(LA711_0>=Type && LA711_0<=Void)||LA711_0==FullStopFullStopFullStop||(LA711_0>=Get && LA711_0<=Let)||(LA711_0>=Out && LA711_0<=Set)||LA711_0==As||LA711_0==Of||(LA711_0>=QuestionMark && LA711_0<=LeftSquareBracket)||LA711_0==LeftCurlyBracket||LA711_0==Tilde||LA711_0==RULE_IDENTIFIER) ) {
                    alt711=1;
                }
                switch (alt711) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_59);
                        norm1_FormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop710:
                        do {
                            int alt710=2;
                            int LA710_0 = input.LA(1);

                            if ( (LA710_0==Comma) ) {
                                alt710=1;
                            }


                            switch (alt710) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_60); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_59);
                        	    norm1_FormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop710;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_61); if (state.failed) return ;
                int alt712=2;
                int LA712_0 = input.LA(1);

                if ( (LA712_0==Colon) ) {
                    alt712=1;
                }
                switch (alt712) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_55); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_62);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                {
                {
                match(input,Async,FOLLOW_63); if (state.failed) return ;

                }


                }

                pushFollow(FOLLOW_64);
                ruleNoLineTerminator(null);

                state._fsp--;
                if (state.failed) return ;
                match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return ;

                }


                }
                int alt714=2;
                int LA714_0 = input.LA(1);

                if ( ((LA714_0>=Intersection && LA714_0<=Implements)||(LA714_0>=Promisify && LA714_0<=Abstract)||LA714_0==External||(LA714_0>=Private && LA714_0<=Project)||LA714_0==Public||LA714_0==Static||LA714_0==Target||(LA714_0>=Async && LA714_0<=Await)||LA714_0==Union||LA714_0==This||LA714_0==From||LA714_0==This_1||(LA714_0>=Type && LA714_0<=Void)||LA714_0==FullStopFullStopFullStop||(LA714_0>=Get && LA714_0<=Let)||(LA714_0>=Out && LA714_0<=Set)||LA714_0==As||LA714_0==Of||(LA714_0>=QuestionMark && LA714_0<=LeftSquareBracket)||LA714_0==LeftCurlyBracket||LA714_0==Tilde||LA714_0==RULE_IDENTIFIER) ) {
                    alt714=1;
                }
                switch (alt714) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_59);
                        norm1_FormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop713:
                        do {
                            int alt713=2;
                            int LA713_0 = input.LA(1);

                            if ( (LA713_0==Comma) ) {
                                alt713=1;
                            }


                            switch (alt713) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_60); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_59);
                        	    norm1_FormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop713;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_61); if (state.failed) return ;
                int alt715=2;
                int LA715_0 = input.LA(1);

                if ( (LA715_0==Colon) ) {
                    alt715=1;
                }
                switch (alt715) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_55); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_62);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 3 :
                {
                {
                {
                pushFollow(FOLLOW_62);
                norm1_BindingIdentifierAsFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred233_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAssignmentOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred234_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Await,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred235_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_135); if (state.failed) return ;
        match(input,Promisify,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred236_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        match(input,Async,FOLLOW_63); if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_64);
        ruleNoLineTerminator(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred237_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        int alt723=3;
        switch ( input.LA(1) ) {
        case LeftParenthesis:
            {
            alt723=1;
            }
            break;
        case Async:
            {
            int LA723_2 = input.LA(2);

            if ( (LA723_2==RULE_NO_LINE_TERMINATOR) && (synpred236_InternalN4JSXParser())) {
                alt723=2;
            }
            else if ( (LA723_2==LeftParenthesis) && (synpred236_InternalN4JSXParser())) {
                alt723=2;
            }
            else if ( (LA723_2==EqualsSignGreaterThanSign) ) {
                alt723=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 723, 2, input);

                throw nvae;
            }
            }
            break;
        case Intersection:
        case Constructor:
        case Implements:
        case Promisify:
        case Interface:
        case Protected:
        case Abstract:
        case External:
        case Private:
        case Project:
        case Public:
        case Static:
        case Target:
        case Await:
        case Union:
        case This:
        case From:
        case Type:
        case Get:
        case Let:
        case Out:
        case Set:
        case As:
        case Of:
        case RULE_IDENTIFIER:
            {
            alt723=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 723, 0, input);

            throw nvae;
        }

        switch (alt723) {
            case 1 :
                {
                {
                match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return ;
                int alt718=2;
                int LA718_0 = input.LA(1);

                if ( ((LA718_0>=Intersection && LA718_0<=Implements)||(LA718_0>=Promisify && LA718_0<=Abstract)||LA718_0==External||(LA718_0>=Private && LA718_0<=Project)||LA718_0==Public||LA718_0==Static||LA718_0==Target||(LA718_0>=Async && LA718_0<=Await)||LA718_0==Union||LA718_0==This||LA718_0==From||LA718_0==This_1||(LA718_0>=Type && LA718_0<=Void)||LA718_0==FullStopFullStopFullStop||(LA718_0>=Get && LA718_0<=Let)||(LA718_0>=Out && LA718_0<=Set)||LA718_0==As||LA718_0==Of||(LA718_0>=QuestionMark && LA718_0<=LeftSquareBracket)||LA718_0==LeftCurlyBracket||LA718_0==Tilde||LA718_0==RULE_IDENTIFIER) ) {
                    alt718=1;
                }
                switch (alt718) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_59);
                        norm1_FormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop717:
                        do {
                            int alt717=2;
                            int LA717_0 = input.LA(1);

                            if ( (LA717_0==Comma) ) {
                                alt717=1;
                            }


                            switch (alt717) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_60); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_59);
                        	    norm1_FormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop717;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_61); if (state.failed) return ;
                int alt719=2;
                int LA719_0 = input.LA(1);

                if ( (LA719_0==Colon) ) {
                    alt719=1;
                }
                switch (alt719) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_55); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_62);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                {
                {
                match(input,Async,FOLLOW_63); if (state.failed) return ;

                }


                }

                pushFollow(FOLLOW_64);
                ruleNoLineTerminator(null);

                state._fsp--;
                if (state.failed) return ;
                match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return ;

                }


                }
                int alt721=2;
                int LA721_0 = input.LA(1);

                if ( ((LA721_0>=Intersection && LA721_0<=Implements)||(LA721_0>=Promisify && LA721_0<=Abstract)||LA721_0==External||(LA721_0>=Private && LA721_0<=Project)||LA721_0==Public||LA721_0==Static||LA721_0==Target||(LA721_0>=Async && LA721_0<=Await)||LA721_0==Union||LA721_0==This||LA721_0==From||LA721_0==This_1||(LA721_0>=Type && LA721_0<=Void)||LA721_0==FullStopFullStopFullStop||(LA721_0>=Get && LA721_0<=Let)||(LA721_0>=Out && LA721_0<=Set)||LA721_0==As||LA721_0==Of||(LA721_0>=QuestionMark && LA721_0<=LeftSquareBracket)||LA721_0==LeftCurlyBracket||LA721_0==Tilde||LA721_0==RULE_IDENTIFIER) ) {
                    alt721=1;
                }
                switch (alt721) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_59);
                        norm1_FormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop720:
                        do {
                            int alt720=2;
                            int LA720_0 = input.LA(1);

                            if ( (LA720_0==Comma) ) {
                                alt720=1;
                            }


                            switch (alt720) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_60); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_59);
                        	    norm1_FormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop720;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_61); if (state.failed) return ;
                int alt722=2;
                int LA722_0 = input.LA(1);

                if ( (LA722_0==Colon) ) {
                    alt722=1;
                }
                switch (alt722) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_55); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_62);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 3 :
                {
                {
                {
                pushFollow(FOLLOW_62);
                norm1_BindingIdentifierAsFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred238_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAssignmentOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred239_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred240_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred241_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred242_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred251_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred255_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleParameterizedTypeRefNominal();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred256_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleParameterizedTypeRefNominal();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred259_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop732:
        do {
            int alt732=2;
            int LA732_0 = input.LA(1);

            if ( ((LA732_0>=Protected && LA732_0<=Abstract)||LA732_0==External||(LA732_0>=Private && LA732_0<=Project)||LA732_0==Public||LA732_0==Static||LA732_0==Const) ) {
                alt732=1;
            }


            switch (alt732) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_152);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop732;
            }
        } while (true);

        pushFollow(FOLLOW_2);
        ruleGetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred260_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop733:
        do {
            int alt733=2;
            int LA733_0 = input.LA(1);

            if ( ((LA733_0>=Protected && LA733_0<=Abstract)||LA733_0==External||(LA733_0>=Private && LA733_0<=Project)||LA733_0==Public||LA733_0==Static||LA733_0==Const) ) {
                alt733=1;
            }


            switch (alt733) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_154);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop733;
            }
        } while (true);

        match(input,Set,FOLLOW_186); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred261_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop734:
        do {
            int alt734=2;
            alt734 = dfa734.predict(input);
            switch (alt734) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_151);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop734;
            }
        } while (true);
        int alt735=2;
        int LA735_0 = input.LA(1);

        if ( (LA735_0==LessThanSign) ) {
            alt735=1;
        }
        switch (alt735) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt736=2;
        alt736 = dfa736.predict(input);
        switch (alt736) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleBogusTypeRefFragment(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt737=2;
        int LA737_0 = input.LA(1);

        if ( (LA737_0==Asterisk) ) {
            alt737=1;
        }
        else if ( ((LA737_0>=Intersection && LA737_0<=With)||(LA737_0>=For && LA737_0<=Var)||(LA737_0>=As && LA737_0<=Of)||LA737_0==LeftSquareBracket||LA737_0==RULE_DOUBLE||LA737_0==RULE_HEX_INT||LA737_0==RULE_OCTAL_INT||LA737_0==RULE_SCIENTIFIC_INT||LA737_0==RULE_IDENTIFIER||LA737_0==RULE_STRING||LA737_0==RULE_INT) ) {
            alt737=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 737, 0, input);

            throw nvae;
        }
        switch (alt737) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_102); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_64);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                pushFollow(FOLLOW_102);
                ruleAsyncNoTrailingLineBreak(null);

                state._fsp--;
                if (state.failed) return ;
                {
                {
                pushFollow(FOLLOW_64);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred262_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop738:
        do {
            int alt738=2;
            int LA738_0 = input.LA(1);

            if ( ((LA738_0>=Protected && LA738_0<=Abstract)||LA738_0==External||(LA738_0>=Private && LA738_0<=Project)||LA738_0==Public||LA738_0==Static||LA738_0==Const) ) {
                alt738=1;
            }


            switch (alt738) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_152);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop738;
            }
        } while (true);

        pushFollow(FOLLOW_2);
        norm1_GetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred263_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop739:
        do {
            int alt739=2;
            int LA739_0 = input.LA(1);

            if ( ((LA739_0>=Protected && LA739_0<=Abstract)||LA739_0==External||(LA739_0>=Private && LA739_0<=Project)||LA739_0==Public||LA739_0==Static||LA739_0==Const) ) {
                alt739=1;
            }


            switch (alt739) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_154);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop739;
            }
        } while (true);

        match(input,Set,FOLLOW_186); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred264_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop740:
        do {
            int alt740=2;
            alt740 = dfa740.predict(input);
            switch (alt740) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_151);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop740;
            }
        } while (true);
        int alt741=2;
        int LA741_0 = input.LA(1);

        if ( (LA741_0==LessThanSign) ) {
            alt741=1;
        }
        switch (alt741) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt742=2;
        alt742 = dfa742.predict(input);
        switch (alt742) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleBogusTypeRefFragment(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt743=2;
        int LA743_0 = input.LA(1);

        if ( (LA743_0==Asterisk) ) {
            alt743=1;
        }
        else if ( ((LA743_0>=Intersection && LA743_0<=With)||(LA743_0>=For && LA743_0<=Var)||(LA743_0>=As && LA743_0<=Of)||LA743_0==LeftSquareBracket||LA743_0==RULE_DOUBLE||LA743_0==RULE_HEX_INT||LA743_0==RULE_OCTAL_INT||LA743_0==RULE_SCIENTIFIC_INT||LA743_0==RULE_IDENTIFIER||LA743_0==RULE_STRING||LA743_0==RULE_INT) ) {
            alt743=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 743, 0, input);

            throw nvae;
        }
        switch (alt743) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_102); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_64);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                pushFollow(FOLLOW_102);
                ruleAsyncNoTrailingLineBreak(null);

                state._fsp--;
                if (state.failed) return ;
                {
                {
                pushFollow(FOLLOW_64);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred265_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop744:
        do {
            int alt744=2;
            int LA744_0 = input.LA(1);

            if ( ((LA744_0>=Protected && LA744_0<=Abstract)||LA744_0==External||(LA744_0>=Private && LA744_0<=Project)||LA744_0==Public||LA744_0==Static||LA744_0==Const) ) {
                alt744=1;
            }


            switch (alt744) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_152);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop744;
            }
        } while (true);

        pushFollow(FOLLOW_2);
        ruleGetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred266_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred267_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop745:
        do {
            int alt745=2;
            int LA745_0 = input.LA(1);

            if ( ((LA745_0>=Protected && LA745_0<=Abstract)||LA745_0==External||(LA745_0>=Private && LA745_0<=Project)||LA745_0==Public||LA745_0==Static||LA745_0==Const) ) {
                alt745=1;
            }


            switch (alt745) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_154);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop745;
            }
        } while (true);

        match(input,Set,FOLLOW_186); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred269_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred270_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop746:
        do {
            int alt746=2;
            alt746 = dfa746.predict(input);
            switch (alt746) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_151);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop746;
            }
        } while (true);
        int alt747=2;
        int LA747_0 = input.LA(1);

        if ( (LA747_0==LessThanSign) ) {
            alt747=1;
        }
        switch (alt747) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt748=2;
        alt748 = dfa748.predict(input);
        switch (alt748) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleBogusTypeRefFragment(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt749=2;
        int LA749_0 = input.LA(1);

        if ( (LA749_0==Asterisk) ) {
            alt749=1;
        }
        else if ( ((LA749_0>=Intersection && LA749_0<=With)||(LA749_0>=For && LA749_0<=Var)||(LA749_0>=As && LA749_0<=Of)||LA749_0==LeftSquareBracket||LA749_0==RULE_DOUBLE||LA749_0==RULE_HEX_INT||LA749_0==RULE_OCTAL_INT||LA749_0==RULE_SCIENTIFIC_INT||LA749_0==RULE_IDENTIFIER||LA749_0==RULE_STRING||LA749_0==RULE_INT) ) {
            alt749=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 749, 0, input);

            throw nvae;
        }
        switch (alt749) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_102); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_64);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                pushFollow(FOLLOW_102);
                ruleAsyncNoTrailingLineBreak(null);

                state._fsp--;
                if (state.failed) return ;
                {
                {
                pushFollow(FOLLOW_64);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred273_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop750:
        do {
            int alt750=2;
            int LA750_0 = input.LA(1);

            if ( ((LA750_0>=Protected && LA750_0<=Abstract)||LA750_0==External||(LA750_0>=Private && LA750_0<=Project)||LA750_0==Public||LA750_0==Static||LA750_0==Const) ) {
                alt750=1;
            }


            switch (alt750) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_152);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop750;
            }
        } while (true);

        pushFollow(FOLLOW_2);
        norm1_GetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred274_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred275_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop751:
        do {
            int alt751=2;
            int LA751_0 = input.LA(1);

            if ( ((LA751_0>=Protected && LA751_0<=Abstract)||LA751_0==External||(LA751_0>=Private && LA751_0<=Project)||LA751_0==Public||LA751_0==Static||LA751_0==Const) ) {
                alt751=1;
            }


            switch (alt751) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_154);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop751;
            }
        } while (true);

        match(input,Set,FOLLOW_186); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred277_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred278_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop752:
        do {
            int alt752=2;
            alt752 = dfa752.predict(input);
            switch (alt752) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_151);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop752;
            }
        } while (true);
        int alt753=2;
        int LA753_0 = input.LA(1);

        if ( (LA753_0==LessThanSign) ) {
            alt753=1;
        }
        switch (alt753) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt754=2;
        alt754 = dfa754.predict(input);
        switch (alt754) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleBogusTypeRefFragment(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt755=2;
        int LA755_0 = input.LA(1);

        if ( (LA755_0==Asterisk) ) {
            alt755=1;
        }
        else if ( ((LA755_0>=Intersection && LA755_0<=With)||(LA755_0>=For && LA755_0<=Var)||(LA755_0>=As && LA755_0<=Of)||LA755_0==LeftSquareBracket||LA755_0==RULE_DOUBLE||LA755_0==RULE_HEX_INT||LA755_0==RULE_OCTAL_INT||LA755_0==RULE_SCIENTIFIC_INT||LA755_0==RULE_IDENTIFIER||LA755_0==RULE_STRING||LA755_0==RULE_INT) ) {
            alt755=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 755, 0, input);

            throw nvae;
        }
        switch (alt755) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_102); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_64);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                pushFollow(FOLLOW_102);
                ruleAsyncNoTrailingLineBreak(null);

                state._fsp--;
                if (state.failed) return ;
                {
                {
                pushFollow(FOLLOW_64);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred287_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred288_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred289_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred290_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred292_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred294_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred299_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred302_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred303_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_92);
        ruleLiteralOrComputedPropertyName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred304_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_92);
        norm1_LiteralOrComputedPropertyName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred305_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred306_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred307_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred308_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred309_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftParenthesis,FOLLOW_164); if (state.failed) return ;
        pushFollow(FOLLOW_75);
        ruleTAnonymousFormalParameterList(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,RightParenthesis,FOLLOW_62); if (state.failed) return ;
        match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred310_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleUndefModifierToken();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred311_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred312_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred313_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred314_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred315_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred316_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Get,FOLLOW_38); if (state.failed) return ;
        {
        {
        pushFollow(FOLLOW_2);
        ruleIdentifierName();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred317_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Set,FOLLOW_38); if (state.failed) return ;
        {
        {
        pushFollow(FOLLOW_2);
        ruleIdentifierName();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred318_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt769=2;
        int LA769_0 = input.LA(1);

        if ( (LA769_0==LessThanSign) ) {
            alt769=1;
        }
        switch (alt769) {
            case 1 :
                {
                match(input,LessThanSign,FOLLOW_28); if (state.failed) return ;
                {
                {
                pushFollow(FOLLOW_29);
                ruleTypeVariable();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                loop768:
                do {
                    int alt768=2;
                    int LA768_0 = input.LA(1);

                    if ( (LA768_0==Comma) ) {
                        alt768=1;
                    }


                    switch (alt768) {
                	case 1 :
                	    {
                	    match(input,Comma,FOLLOW_28); if (state.failed) return ;
                	    {
                	    {
                	    pushFollow(FOLLOW_29);
                	    ruleTypeVariable();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop768;
                    }
                } while (true);

                match(input,GreaterThanSign,FOLLOW_38); if (state.failed) return ;

                }
                break;

        }
        {
        {
        pushFollow(FOLLOW_64);
        ruleIdentifierName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred322_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;

        }


        }
    }

    public final boolean synpred263_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred263_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred218_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred218_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred241_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred241_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred196_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred196_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred307_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred307_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred228_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred228_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred119_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred119_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred231_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred231_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred206_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred206_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred310_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred310_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred174_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred174_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred261_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred261_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred275_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred275_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred322_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred322_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred198_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred198_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred277_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred277_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred305_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred305_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred120_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred287_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred287_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred226_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred226_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred182_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred182_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred312_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred312_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred180_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred180_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred251_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred251_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred164_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred164_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred233_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred233_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred208_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred208_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred216_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred216_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred303_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred303_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred172_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred172_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred179_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred179_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred213_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred213_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred313_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred313_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred178_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred178_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred302_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred302_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred315_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred315_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred214_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred214_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred191_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred191_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred267_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred267_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred192_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred192_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred266_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred266_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred314_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred314_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred176_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred176_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred299_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred299_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred316_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred316_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred265_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred265_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred210_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred210_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred193_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred193_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred194_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred194_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred212_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred212_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred317_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred317_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred211_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred211_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred177_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred177_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred264_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred264_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred274_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred274_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred229_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred229_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred207_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred207_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred230_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred230_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred195_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred195_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred173_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred173_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred318_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred318_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred183_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred183_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred175_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred175_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred197_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred197_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred262_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred262_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred240_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred240_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred219_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred219_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred306_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred306_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred227_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred227_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred205_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred205_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred89_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred89_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred260_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred260_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred165_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred165_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred288_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred288_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred311_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred311_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred294_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred294_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred215_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred215_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred209_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred209_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred171_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred171_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred259_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred259_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred232_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred232_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred242_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred242_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred217_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred217_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred304_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred304_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred225_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred225_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred234_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred234_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred278_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred278_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred181_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred181_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred163_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred163_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred269_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred269_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred199_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred199_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred224_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred224_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred235_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred235_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred202_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred202_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred189_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred189_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred167_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred167_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred201_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred201_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred289_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred289_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred292_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred292_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred223_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred223_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred222_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred222_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred170_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred170_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred236_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred236_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred166_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred166_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred200_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred200_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred270_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred270_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred187_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred187_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred237_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred237_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred204_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred204_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred114_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred114_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred221_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred221_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred220_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred220_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred239_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred239_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred309_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred309_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred273_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred273_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred203_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred203_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred256_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred256_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred169_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred169_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred185_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred185_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred255_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred255_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred168_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred168_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred290_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred290_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred238_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred238_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred308_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred308_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA3 dfa3 = new DFA3(this);
    protected DFA4 dfa4 = new DFA4(this);
    protected DFA11 dfa11 = new DFA11(this);
    protected DFA24 dfa24 = new DFA24(this);
    protected DFA21 dfa21 = new DFA21(this);
    protected DFA27 dfa27 = new DFA27(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA35 dfa35 = new DFA35(this);
    protected DFA45 dfa45 = new DFA45(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA59 dfa59 = new DFA59(this);
    protected DFA78 dfa78 = new DFA78(this);
    protected DFA79 dfa79 = new DFA79(this);
    protected DFA89 dfa89 = new DFA89(this);
    protected DFA97 dfa97 = new DFA97(this);
    protected DFA105 dfa105 = new DFA105(this);
    protected DFA113 dfa113 = new DFA113(this);
    protected DFA132 dfa132 = new DFA132(this);
    protected DFA129 dfa129 = new DFA129(this);
    protected DFA138 dfa138 = new DFA138(this);
    protected DFA135 dfa135 = new DFA135(this);
    protected DFA142 dfa142 = new DFA142(this);
    protected DFA143 dfa143 = new DFA143(this);
    protected DFA144 dfa144 = new DFA144(this);
    protected DFA145 dfa145 = new DFA145(this);
    protected DFA148 dfa148 = new DFA148(this);
    protected DFA160 dfa160 = new DFA160(this);
    protected DFA162 dfa162 = new DFA162(this);
    protected DFA164 dfa164 = new DFA164(this);
    protected DFA166 dfa166 = new DFA166(this);
    protected DFA168 dfa168 = new DFA168(this);
    protected DFA171 dfa171 = new DFA171(this);
    protected DFA174 dfa174 = new DFA174(this);
    protected DFA177 dfa177 = new DFA177(this);
    protected DFA186 dfa186 = new DFA186(this);
    protected DFA205 dfa205 = new DFA205(this);
    protected DFA204 dfa204 = new DFA204(this);
    protected DFA196 dfa196 = new DFA196(this);
    protected DFA189 dfa189 = new DFA189(this);
    protected DFA223 dfa223 = new DFA223(this);
    protected DFA222 dfa222 = new DFA222(this);
    protected DFA214 dfa214 = new DFA214(this);
    protected DFA207 dfa207 = new DFA207(this);
    protected DFA245 dfa245 = new DFA245(this);
    protected DFA244 dfa244 = new DFA244(this);
    protected DFA247 dfa247 = new DFA247(this);
    protected DFA246 dfa246 = new DFA246(this);
    protected DFA250 dfa250 = new DFA250(this);
    protected DFA256 dfa256 = new DFA256(this);
    protected DFA268 dfa268 = new DFA268(this);
    protected DFA269 dfa269 = new DFA269(this);
    protected DFA277 dfa277 = new DFA277(this);
    protected DFA270 dfa270 = new DFA270(this);
    protected DFA272 dfa272 = new DFA272(this);
    protected DFA275 dfa275 = new DFA275(this);
    protected DFA285 dfa285 = new DFA285(this);
    protected DFA278 dfa278 = new DFA278(this);
    protected DFA280 dfa280 = new DFA280(this);
    protected DFA283 dfa283 = new DFA283(this);
    protected DFA287 dfa287 = new DFA287(this);
    protected DFA291 dfa291 = new DFA291(this);
    protected DFA294 dfa294 = new DFA294(this);
    protected DFA295 dfa295 = new DFA295(this);
    protected DFA296 dfa296 = new DFA296(this);
    protected DFA298 dfa298 = new DFA298(this);
    protected DFA316 dfa316 = new DFA316(this);
    protected DFA322 dfa322 = new DFA322(this);
    protected DFA335 dfa335 = new DFA335(this);
    protected DFA336 dfa336 = new DFA336(this);
    protected DFA339 dfa339 = new DFA339(this);
    protected DFA340 dfa340 = new DFA340(this);
    protected DFA341 dfa341 = new DFA341(this);
    protected DFA342 dfa342 = new DFA342(this);
    protected DFA374 dfa374 = new DFA374(this);
    protected DFA373 dfa373 = new DFA373(this);
    protected DFA376 dfa376 = new DFA376(this);
    protected DFA375 dfa375 = new DFA375(this);
    protected DFA378 dfa378 = new DFA378(this);
    protected DFA377 dfa377 = new DFA377(this);
    protected DFA380 dfa380 = new DFA380(this);
    protected DFA379 dfa379 = new DFA379(this);
    protected DFA382 dfa382 = new DFA382(this);
    protected DFA384 dfa384 = new DFA384(this);
    protected DFA416 dfa416 = new DFA416(this);
    protected DFA458 dfa458 = new DFA458(this);
    protected DFA459 dfa459 = new DFA459(this);
    protected DFA471 dfa471 = new DFA471(this);
    protected DFA461 dfa461 = new DFA461(this);
    protected DFA464 dfa464 = new DFA464(this);
    protected DFA466 dfa466 = new DFA466(this);
    protected DFA468 dfa468 = new DFA468(this);
    protected DFA483 dfa483 = new DFA483(this);
    protected DFA473 dfa473 = new DFA473(this);
    protected DFA476 dfa476 = new DFA476(this);
    protected DFA478 dfa478 = new DFA478(this);
    protected DFA480 dfa480 = new DFA480(this);
    protected DFA484 dfa484 = new DFA484(this);
    protected DFA485 dfa485 = new DFA485(this);
    protected DFA488 dfa488 = new DFA488(this);
    protected DFA489 dfa489 = new DFA489(this);
    protected DFA492 dfa492 = new DFA492(this);
    protected DFA494 dfa494 = new DFA494(this);
    protected DFA497 dfa497 = new DFA497(this);
    protected DFA499 dfa499 = new DFA499(this);
    protected DFA507 dfa507 = new DFA507(this);
    protected DFA509 dfa509 = new DFA509(this);
    protected DFA511 dfa511 = new DFA511(this);
    protected DFA514 dfa514 = new DFA514(this);
    protected DFA521 dfa521 = new DFA521(this);
    protected DFA524 dfa524 = new DFA524(this);
    protected DFA534 dfa534 = new DFA534(this);
    protected DFA540 dfa540 = new DFA540(this);
    protected DFA544 dfa544 = new DFA544(this);
    protected DFA545 dfa545 = new DFA545(this);
    protected DFA562 dfa562 = new DFA562(this);
    protected DFA566 dfa566 = new DFA566(this);
    protected DFA569 dfa569 = new DFA569(this);
    protected DFA580 dfa580 = new DFA580(this);
    protected DFA585 dfa585 = new DFA585(this);
    protected DFA587 dfa587 = new DFA587(this);
    protected DFA591 dfa591 = new DFA591(this);
    protected DFA672 dfa672 = new DFA672(this);
    protected DFA674 dfa674 = new DFA674(this);
    protected DFA676 dfa676 = new DFA676(this);
    protected DFA678 dfa678 = new DFA678(this);
    protected DFA680 dfa680 = new DFA680(this);
    protected DFA682 dfa682 = new DFA682(this);
    protected DFA684 dfa684 = new DFA684(this);
    protected DFA686 dfa686 = new DFA686(this);
    protected DFA734 dfa734 = new DFA734(this);
    protected DFA736 dfa736 = new DFA736(this);
    protected DFA740 dfa740 = new DFA740(this);
    protected DFA742 dfa742 = new DFA742(this);
    protected DFA746 dfa746 = new DFA746(this);
    protected DFA748 dfa748 = new DFA748(this);
    protected DFA752 dfa752 = new DFA752(this);
    protected DFA754 dfa754 = new DFA754(this);
    static final String dfa_1s = "\41\uffff";
    static final String dfa_2s = "\4\uffff\1\3\34\uffff";
    static final String dfa_3s = "\1\4\3\uffff\1\7\1\4\13\uffff\11\4\1\uffff\2\4\1\10\3\4";
    static final String dfa_4s = "\1\u0095\3\uffff\1\u0099\1\176\13\uffff\11\176\1\uffff\6\176";
    static final String dfa_5s = "\1\uffff\1\1\1\2\1\3\2\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\14\1\15\2\13\1\4\11\uffff\1\16\6\uffff";
    static final String dfa_6s = "\4\uffff\1\0\34\uffff}>";
    static final String[] dfa_7s = {
            "\3\3\1\uffff\4\3\2\uffff\1\3\1\13\3\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\4\1\3\2\uffff\1\14\1\uffff\1\6\1\2\1\uffff\1\3\1\uffff\2\3\3\uffff\1\3\1\6\1\1\1\6\1\3\7\uffff\2\3\1\uffff\2\3\13\uffff\1\6\7\uffff\1\3\3\uffff\1\3\5\uffff\1\11\6\uffff\1\6\2\uffff\1\5\3\uffff\1\12\1\7\2\uffff\1\10\6\uffff\1\6\1\uffff\4\6\1\uffff\1\6\1\uffff\1\3\2\uffff\1\6\11\uffff\2\15\10\uffff\1\6",
            "",
            "",
            "",
            "\1\3\7\uffff\1\17\45\uffff\1\3\1\uffff\2\3\10\uffff\15\3\1\uffff\1\3\1\uffff\2\3\2\uffff\4\3\1\uffff\20\3\1\uffff\6\3\32\uffff\2\3\4\uffff\1\16\5\uffff\1\3\1\uffff\1\3",
            "\1\31\1\27\1\32\1\uffff\1\23\3\32\2\uffff\1\32\4\uffff\2\32\3\uffff\1\32\1\uffff\1\32\1\uffff\1\24\1\uffff\1\32\1\22\7\uffff\1\30\1\uffff\1\32\1\21\3\uffff\1\32\1\uffff\1\20\1\uffff\1\26\1\20\6\uffff\2\32\1\uffff\2\32\23\uffff\1\32\3\uffff\1\32\5\uffff\1\20\14\uffff\1\20\1\uffff\1\20\2\uffff\1\20\2\uffff\1\20\14\uffff\1\25",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\61\32\4\uffff\10\32\21\uffff\5\32\4\uffff\1\20\3\uffff\2\20\1\uffff\2\32\2\uffff\1\20\1\uffff\1\33\1\20\4\uffff\1\32\1\20\16\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\4\uffff\1\20\3\uffff\2\20\1\uffff\2\32\2\uffff\1\20\1\uffff\1\33\1\20\4\uffff\1\32\1\20\16\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\4\uffff\1\20\3\uffff\2\20\1\uffff\2\32\2\uffff\1\20\1\uffff\1\33\1\20\4\uffff\1\32\1\20\16\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\4\uffff\1\20\3\uffff\2\20\1\uffff\2\32\2\uffff\1\20\1\uffff\1\33\1\20\4\uffff\1\32\1\20\16\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\4\uffff\1\20\3\uffff\2\20\1\uffff\1\34\1\32\2\uffff\1\20\1\uffff\1\33\1\20\4\uffff\1\32\1\20\16\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\13\uffff\2\32\4\uffff\1\32\5\uffff\1\35\17\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\13\uffff\2\32\4\uffff\1\32\5\uffff\1\35\17\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\13\uffff\2\32\4\uffff\1\32\5\uffff\1\36\17\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\13\uffff\2\32\4\uffff\1\32\5\uffff\1\37\17\uffff\1\32",
            "",
            "\3\20\1\uffff\4\20\2\uffff\1\20\4\uffff\2\20\3\uffff\1\20\1\uffff\1\20\1\uffff\1\20\1\uffff\2\20\7\uffff\1\20\1\uffff\2\20\3\uffff\1\20\3\uffff\1\20\7\uffff\2\20\1\uffff\2\20\23\uffff\1\20\3\uffff\1\20\17\uffff\1\32\27\uffff\1\20",
            "\61\32\4\uffff\10\32\21\uffff\5\32\17\uffff\1\32\27\uffff\1\40",
            "\1\20\23\uffff\1\20\2\uffff\1\20\12\uffff\1\20\5\uffff\1\20\2\uffff\1\20\2\uffff\1\32\62\uffff\1\20\24\uffff\1\20",
            "\2\20\2\uffff\1\20\23\uffff\1\20\2\uffff\1\20\7\uffff\1\20\2\uffff\1\20\5\uffff\1\20\1\uffff\2\20\2\uffff\1\32\67\uffff\1\20\2\uffff\1\20\14\uffff\1\20",
            "\2\20\2\uffff\1\20\23\uffff\1\20\2\uffff\1\20\7\uffff\1\20\2\uffff\1\20\5\uffff\1\20\1\uffff\2\20\2\uffff\1\32\67\uffff\1\20\2\uffff\1\20\14\uffff\1\20",
            "\61\32\4\uffff\10\32\21\uffff\5\32\4\uffff\1\20\3\uffff\2\20\1\uffff\2\32\2\uffff\1\20\1\uffff\1\33\1\20\4\uffff\1\32\1\20\16\uffff\1\32"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "147:1: (this_ThisLiteral_0= ruleThisLiteral | this_SuperLiteral_1= ruleSuperLiteral | this_IdentifierRef_2= ruleIdentifierRef | this_ParameterizedCallExpression_3= ruleParameterizedCallExpression | this_Literal_4= ruleLiteral | this_ArrayLiteral_5= ruleArrayLiteral | this_ObjectLiteral_6= ruleObjectLiteral | this_ParenExpression_7= ruleParenExpression | this_AnnotatedExpression_8= ruleAnnotatedExpression | this_FunctionExpression_9= ruleFunctionExpression | ( ( ( ( ( Async ) ) ruleNoLineTerminator[null] Function ) )=>this_AsyncFunctionExpression_10= ruleAsyncFunctionExpression ) | this_N4ClassExpression_11= ruleN4ClassExpression | this_TemplateLiteral_12= ruleTemplateLiteral | this_JSXElement_13= ruleJSXElement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA3_4 = input.LA(1);

                         
                        int index3_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA3_4==EOF||LA3_4==Instanceof||LA3_4==ExclamationMarkEqualsSignEqualsSign||(LA3_4>=LessThanSignLessThanSignEqualsSign && LA3_4<=EqualsSignEqualsSignEqualsSign)||(LA3_4>=ExclamationMarkEqualsSign && LA3_4<=EqualsSignEqualsSign)||LA3_4==GreaterThanSignEqualsSign||(LA3_4>=CircumflexAccentEqualsSign && LA3_4<=As)||(LA3_4>=In && LA3_4<=VerticalLineVerticalLine)||(LA3_4>=PercentSign && LA3_4<=QuestionMark)||(LA3_4>=LeftSquareBracket && LA3_4<=RightCurlyBracket)||(LA3_4>=RULE_TEMPLATE_HEAD && LA3_4<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA3_4==RULE_ML_COMMENT||LA3_4==RULE_EOL) ) {s = 3;}

                        else if ( (LA3_4==RULE_NO_LINE_TERMINATOR) && (synpred1_InternalN4JSXParser())) {s = 14;}

                        else if ( (LA3_4==Function) && (synpred1_InternalN4JSXParser())) {s = 15;}

                         
                        input.seek(index3_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 3, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_8s = {
            "\3\3\1\uffff\4\3\2\uffff\1\3\1\13\3\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\4\1\3\2\uffff\1\14\1\uffff\1\6\1\2\1\uffff\1\3\2\uffff\1\3\3\uffff\1\3\1\6\1\1\1\6\1\3\7\uffff\2\3\1\uffff\2\3\13\uffff\1\6\7\uffff\1\3\3\uffff\1\3\5\uffff\1\11\6\uffff\1\6\2\uffff\1\5\3\uffff\1\12\1\7\2\uffff\1\10\6\uffff\1\6\1\uffff\4\6\1\uffff\1\6\1\uffff\1\3\2\uffff\1\6\11\uffff\2\15\10\uffff\1\6",
            "",
            "",
            "",
            "\1\3\7\uffff\1\17\45\uffff\1\3\1\uffff\2\3\10\uffff\15\3\1\uffff\1\3\1\uffff\2\3\2\uffff\4\3\1\uffff\20\3\1\uffff\6\3\32\uffff\2\3\4\uffff\1\16\5\uffff\1\3\1\uffff\1\3",
            "\1\31\1\27\1\32\1\uffff\1\23\3\32\2\uffff\1\32\4\uffff\2\32\3\uffff\1\32\1\uffff\1\32\1\uffff\1\24\1\uffff\1\32\1\22\7\uffff\1\30\1\uffff\1\32\1\21\3\uffff\1\32\1\uffff\1\20\1\uffff\1\26\1\20\6\uffff\2\32\1\uffff\2\32\23\uffff\1\32\3\uffff\1\32\5\uffff\1\20\14\uffff\1\20\1\uffff\1\20\2\uffff\1\20\2\uffff\1\20\14\uffff\1\25",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\61\32\4\uffff\10\32\21\uffff\5\32\4\uffff\1\20\3\uffff\2\20\1\uffff\2\32\2\uffff\1\20\1\uffff\1\33\1\20\4\uffff\1\32\1\20\16\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\4\uffff\1\20\3\uffff\2\20\1\uffff\2\32\2\uffff\1\20\1\uffff\1\33\1\20\4\uffff\1\32\1\20\16\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\4\uffff\1\20\3\uffff\2\20\1\uffff\2\32\2\uffff\1\20\1\uffff\1\33\1\20\4\uffff\1\32\1\20\16\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\4\uffff\1\20\3\uffff\2\20\1\uffff\2\32\2\uffff\1\20\1\uffff\1\33\1\20\4\uffff\1\32\1\20\16\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\4\uffff\1\20\3\uffff\2\20\1\uffff\1\34\1\32\2\uffff\1\20\1\uffff\1\33\1\20\4\uffff\1\32\1\20\16\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\13\uffff\2\32\4\uffff\1\32\5\uffff\1\35\17\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\13\uffff\2\32\4\uffff\1\32\5\uffff\1\35\17\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\13\uffff\2\32\4\uffff\1\32\5\uffff\1\36\17\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\13\uffff\2\32\4\uffff\1\32\5\uffff\1\37\17\uffff\1\32",
            "",
            "\3\20\1\uffff\4\20\2\uffff\1\20\4\uffff\2\20\3\uffff\1\20\1\uffff\1\20\1\uffff\1\20\1\uffff\2\20\7\uffff\1\20\2\uffff\1\20\3\uffff\1\20\3\uffff\1\20\7\uffff\2\20\1\uffff\2\20\23\uffff\1\20\3\uffff\1\20\17\uffff\1\32\27\uffff\1\20",
            "\61\32\4\uffff\10\32\21\uffff\5\32\17\uffff\1\32\27\uffff\1\40",
            "\1\20\23\uffff\1\20\2\uffff\1\20\12\uffff\1\20\5\uffff\1\20\2\uffff\1\20\2\uffff\1\32\62\uffff\1\20\24\uffff\1\20",
            "\2\20\2\uffff\1\20\23\uffff\1\20\2\uffff\1\20\7\uffff\1\20\2\uffff\1\20\5\uffff\1\20\1\uffff\2\20\2\uffff\1\32\67\uffff\1\20\2\uffff\1\20\14\uffff\1\20",
            "\2\20\2\uffff\1\20\23\uffff\1\20\2\uffff\1\20\7\uffff\1\20\2\uffff\1\20\5\uffff\1\20\1\uffff\2\20\2\uffff\1\32\67\uffff\1\20\2\uffff\1\20\14\uffff\1\20",
            "\61\32\4\uffff\10\32\21\uffff\5\32\4\uffff\1\20\3\uffff\2\20\1\uffff\2\32\2\uffff\1\20\1\uffff\1\33\1\20\4\uffff\1\32\1\20\16\uffff\1\32"
    };
    static final short[][] dfa_8 = unpackEncodedStringArray(dfa_8s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_8;
        }
        public String getDescription() {
            return "308:1: (this_ThisLiteral_0= ruleThisLiteral | this_SuperLiteral_1= ruleSuperLiteral | this_IdentifierRef_2= norm1_IdentifierRef | this_ParameterizedCallExpression_3= norm1_ParameterizedCallExpression | this_Literal_4= ruleLiteral | this_ArrayLiteral_5= norm1_ArrayLiteral | this_ObjectLiteral_6= norm1_ObjectLiteral | this_ParenExpression_7= norm1_ParenExpression | this_AnnotatedExpression_8= norm1_AnnotatedExpression | this_FunctionExpression_9= ruleFunctionExpression | ( ( ( ( ( Async ) ) ruleNoLineTerminator[null] Function ) )=>this_AsyncFunctionExpression_10= ruleAsyncFunctionExpression ) | this_N4ClassExpression_11= norm1_N4ClassExpression | this_TemplateLiteral_12= norm1_TemplateLiteral | this_JSXElement_13= ruleJSXElement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA4_4 = input.LA(1);

                         
                        int index4_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA4_4==RULE_NO_LINE_TERMINATOR) && (synpred2_InternalN4JSXParser())) {s = 14;}

                        else if ( (LA4_4==Function) && (synpred2_InternalN4JSXParser())) {s = 15;}

                        else if ( (LA4_4==EOF||LA4_4==Instanceof||LA4_4==ExclamationMarkEqualsSignEqualsSign||(LA4_4>=LessThanSignLessThanSignEqualsSign && LA4_4<=EqualsSignEqualsSignEqualsSign)||(LA4_4>=ExclamationMarkEqualsSign && LA4_4<=EqualsSignEqualsSign)||LA4_4==GreaterThanSignEqualsSign||(LA4_4>=CircumflexAccentEqualsSign && LA4_4<=As)||(LA4_4>=In && LA4_4<=VerticalLineVerticalLine)||(LA4_4>=PercentSign && LA4_4<=QuestionMark)||(LA4_4>=LeftSquareBracket && LA4_4<=RightCurlyBracket)||(LA4_4>=RULE_TEMPLATE_HEAD && LA4_4<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA4_4==RULE_ML_COMMENT||LA4_4==RULE_EOL) ) {s = 3;}

                         
                        input.seek(index4_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 4, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_9s = "\123\uffff";
    static final String dfa_10s = "\1\4\13\0\107\uffff";
    static final String dfa_11s = "\1\u0095\13\0\107\uffff";
    static final String dfa_12s = "\14\uffff\1\4\1\5\1\6\1\7\100\uffff\1\1\1\2\1\3";
    static final String dfa_13s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\107\uffff}>";
    static final String[] dfa_14s = {
            "\3\17\1\uffff\1\17\1\13\1\4\1\7\2\17\1\6\1\17\3\uffff\1\2\1\3\1\17\1\16\1\15\1\5\1\17\1\10\6\17\1\uffff\1\12\1\11\7\17\2\uffff\1\14\7\17\4\uffff\10\17\5\uffff\1\17\1\uffff\1\17\1\uffff\1\17\7\uffff\3\17\1\uffff\1\17\2\uffff\1\17\2\uffff\1\17\2\uffff\1\17\1\uffff\1\17\1\uffff\1\17\1\uffff\2\17\3\uffff\1\1\1\17\2\uffff\1\17\2\uffff\1\17\3\uffff\1\17\1\uffff\4\17\1\uffff\1\17\1\uffff\1\17\2\uffff\1\17\11\uffff\2\17\10\uffff\1\17",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA11 extends DFA {

        public DFA11(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 11;
            this.eot = dfa_9;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "960:1: ( ( ( ( () CommercialAt ( This | Target | RULE_IDENTIFIER ) ) )=>this_AnnotatedScriptElement_0= ruleAnnotatedScriptElement ) | ( ( ( () ( ( ruleN4Modifier ) )* Class ( ( ruleTypingStrategyDefSiteOperator ) )? ( ( ruleBindingIdentifier ) )? ) )=>this_N4ClassDeclaration_1= ruleN4ClassDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* Interface ( ( ruleTypingStrategyDefSiteOperator ) )? ( ( ruleBindingIdentifier ) )? ) )=>this_N4InterfaceDeclaration_2= ruleN4InterfaceDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* Enum ( ( ruleBindingIdentifier ) )? ) )=>this_N4EnumDeclaration_3= ruleN4EnumDeclaration ) | this_ImportDeclaration_4= ruleImportDeclaration | this_ExportDeclaration_5= ruleExportDeclaration | this_RootStatement_6= ruleRootStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA11_0 = input.LA(1);

                         
                        int index11_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA11_0>=9 && LA11_0<=106 && (s=T2S.M_0[LA11_0-(9)])>=0)) { /* 11 cases */ }
                        else if ( (LA11_0==Enum) && (synpred6_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA11_0==Import) ) {s = 13;}

                        else if ( (LA11_0==Export) ) {s = 14;}

                        else if ( ((LA11_0>=Intersection && LA11_0<=Implements)||LA11_0==Promisify||(LA11_0>=Continue && LA11_0<=Debugger)||LA11_0==Function||LA11_0==Delete||LA11_0==Return||(LA11_0>=Switch && LA11_0<=Break)||(LA11_0>=False && LA11_0<=This)||(LA11_0>=From && LA11_0<=With)||(LA11_0>=For && LA11_0<=Var)||LA11_0==PlusSignPlusSign||LA11_0==HyphenMinusHyphenMinus||LA11_0==SolidusEqualsSign||(LA11_0>=As && LA11_0<=If)||LA11_0==Of||LA11_0==ExclamationMark||LA11_0==LeftParenthesis||LA11_0==PlusSign||LA11_0==HyphenMinus||LA11_0==Solidus||(LA11_0>=Semicolon && LA11_0<=LessThanSign)||LA11_0==LeftSquareBracket||LA11_0==LeftCurlyBracket||LA11_0==Tilde||LA11_0==RULE_DOUBLE||(LA11_0>=RULE_HEX_INT && LA11_0<=RULE_LEGACY_OCTAL_INT)||LA11_0==RULE_SCIENTIFIC_INT||LA11_0==RULE_IDENTIFIER||LA11_0==RULE_STRING||(LA11_0>=RULE_TEMPLATE_HEAD && LA11_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA11_0==RULE_INT) ) {s = 15;}

                         
                        input.seek(index11_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA11_1 = input.LA(1);

                         
                        int index11_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index11_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA11_2 = input.LA(1);

                         
                        int index11_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (synpred5_InternalN4JSXParser()) ) {s = 82;}

                        else if ( (synpred6_InternalN4JSXParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index11_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA11_3 = input.LA(1);

                         
                        int index11_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (synpred5_InternalN4JSXParser()) ) {s = 82;}

                        else if ( (synpred6_InternalN4JSXParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index11_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA11_4 = input.LA(1);

                         
                        int index11_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (synpred5_InternalN4JSXParser()) ) {s = 82;}

                        else if ( (synpred6_InternalN4JSXParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index11_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA11_5 = input.LA(1);

                         
                        int index11_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (synpred5_InternalN4JSXParser()) ) {s = 82;}

                        else if ( (synpred6_InternalN4JSXParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index11_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA11_6 = input.LA(1);

                         
                        int index11_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (synpred5_InternalN4JSXParser()) ) {s = 82;}

                        else if ( (synpred6_InternalN4JSXParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index11_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA11_7 = input.LA(1);

                         
                        int index11_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (synpred5_InternalN4JSXParser()) ) {s = 82;}

                        else if ( (synpred6_InternalN4JSXParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index11_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA11_8 = input.LA(1);

                         
                        int index11_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (synpred5_InternalN4JSXParser()) ) {s = 82;}

                        else if ( (synpred6_InternalN4JSXParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index11_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA11_9 = input.LA(1);

                         
                        int index11_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (synpred5_InternalN4JSXParser()) ) {s = 82;}

                        else if ( (synpred6_InternalN4JSXParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index11_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA11_10 = input.LA(1);

                         
                        int index11_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index11_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA11_11 = input.LA(1);

                         
                        int index11_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalN4JSXParser()) ) {s = 82;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index11_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 11, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_15s = "\16\uffff";
    static final String dfa_16s = "\1\11\2\uffff\10\11\3\uffff";
    static final String dfa_17s = "\1\55\2\uffff\10\55\3\uffff";
    static final String dfa_18s = "\1\uffff\1\1\1\2\10\uffff\1\3\1\4\1\5";
    static final String dfa_19s = "\16\uffff}>";
    static final String[] dfa_20s = {
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\1\uffff\1\1\1\2\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "",
            "",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "",
            "",
            ""
    };

    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA24 extends DFA {

        public DFA24(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 24;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "1118:2: ( ( () this_ExportDeclarationImpl_2= ruleExportDeclarationImpl[$current] ) | ( () this_ImportDeclarationImpl_4= ruleImportDeclarationImpl[$current] ) | ( () ( ( ( ( ( ruleN4Modifier ) )* ruleAsyncNoTrailingLineBreak[null] Function ) )=> ( ( (lv_declaredModifiers_6_0= ruleN4Modifier ) )* this_AsyncNoTrailingLineBreak_7= ruleAsyncNoTrailingLineBreak[$current] ( ( Function )=>this_FunctionImpl_8= ruleFunctionImpl[$current] ) ) ) ) | ( ( ( () ( (lv_declaredModifiers_10_0= ruleN4Modifier ) )* otherlv_11= Class ( (lv_typingStrategy_12_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_13_0= ruleBindingIdentifier ) ) (this_TypeVariables_14= ruleTypeVariables[$current] )? (this_ClassExtendsClause_15= ruleClassExtendsClause[$current] )? ) | ( () ( (lv_declaredModifiers_17_0= ruleN4Modifier ) )* otherlv_18= Interface ( (lv_typingStrategy_19_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_20_0= ruleBindingIdentifier ) ) (this_TypeVariables_21= ruleTypeVariables[$current] )? (this_InterfaceImplementsList_22= ruleInterfaceImplementsList[$current] )? ) ) this_Members_23= ruleMembers[$current] ) | ( () ( (lv_declaredModifiers_25_0= ruleN4Modifier ) )* otherlv_26= Enum ( (lv_name_27_0= ruleBindingIdentifier ) ) otherlv_28= LeftCurlyBracket ( (lv_literals_29_0= ruleN4EnumLiteral ) ) (otherlv_30= Comma ( (lv_literals_31_0= ruleN4EnumLiteral ) ) )* otherlv_32= RightCurlyBracket ) )";
        }
    }
    static final String dfa_21s = "\13\uffff";
    static final String dfa_22s = "\11\11\2\uffff";
    static final String dfa_23s = "\11\43\2\uffff";
    static final String dfa_24s = "\11\uffff\1\1\1\2";
    static final String dfa_25s = "\13\uffff}>";
    static final String[] dfa_26s = {
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "",
            ""
    };

    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "1213:7: ( ( () ( (lv_declaredModifiers_10_0= ruleN4Modifier ) )* otherlv_11= Class ( (lv_typingStrategy_12_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_13_0= ruleBindingIdentifier ) ) (this_TypeVariables_14= ruleTypeVariables[$current] )? (this_ClassExtendsClause_15= ruleClassExtendsClause[$current] )? ) | ( () ( (lv_declaredModifiers_17_0= ruleN4Modifier ) )* otherlv_18= Interface ( (lv_typingStrategy_19_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_20_0= ruleBindingIdentifier ) ) (this_TypeVariables_21= ruleTypeVariables[$current] )? (this_InterfaceImplementsList_22= ruleInterfaceImplementsList[$current] )? ) )";
        }
    }
    static final String dfa_27s = "\101\uffff";
    static final String dfa_28s = "\1\4\10\0\1\uffff\2\0\1\uffff\2\0\1\uffff\1\0\60\uffff";
    static final String dfa_29s = "\1\u0095\10\0\1\uffff\2\0\1\uffff\2\0\1\uffff\1\0\60\uffff";
    static final String dfa_30s = "\11\uffff\1\1\2\uffff\1\1\2\uffff\1\1\1\uffff\1\2\57\uffff";
    static final String dfa_31s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\12\1\uffff\1\13\1\14\1\uffff\1\15\60\uffff}>";
    static final String[] dfa_32s = {
            "\3\21\1\uffff\1\21\1\13\1\4\1\7\2\uffff\1\6\1\16\3\uffff\1\2\1\3\1\21\2\uffff\1\5\1\uffff\1\10\1\uffff\2\21\1\15\1\21\2\uffff\1\12\1\11\2\21\1\uffff\1\21\1\uffff\2\21\2\uffff\1\14\6\21\6\uffff\1\21\1\20\3\21\1\uffff\1\17\5\uffff\1\21\1\uffff\1\21\1\uffff\1\21\7\uffff\1\21\3\uffff\1\21\2\uffff\1\21\2\uffff\1\21\2\uffff\1\21\1\uffff\1\21\1\uffff\1\21\2\uffff\1\21\3\uffff\1\1\1\21\2\uffff\1\21\2\uffff\1\21\3\uffff\1\21\1\uffff\4\21\1\uffff\1\21\1\uffff\1\21\2\uffff\1\21\11\uffff\2\21\10\uffff\1\21",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "1731:2: ( ( ( CommercialAt | Private | Project | Protected | Public | External | Abstract | Static | Const | Class | Interface | Enum | Async | Function | Var | Let )=> (lv_exportedElement_9_0= ruleExportableElement ) ) | ( ( (lv_defaultExportedExpression_10_0= norm1_AssignmentExpression ) ) ruleSemi ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA27_0 = input.LA(1);

                         
                        int index27_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA27_0==CommercialAt) ) {s = 1;}

                        else if ( (LA27_0==Private) ) {s = 2;}

                        else if ( (LA27_0==Project) ) {s = 3;}

                        else if ( (LA27_0==Protected) ) {s = 4;}

                        else if ( (LA27_0==Public) ) {s = 5;}

                        else if ( (LA27_0==External) ) {s = 6;}

                        else if ( (LA27_0==Abstract) ) {s = 7;}

                        else if ( (LA27_0==Static) ) {s = 8;}

                        else if ( (LA27_0==Const) && (synpred11_InternalN4JSXParser())) {s = 9;}

                        else if ( (LA27_0==Class) ) {s = 10;}

                        else if ( (LA27_0==Interface) ) {s = 11;}

                        else if ( (LA27_0==Enum) && (synpred11_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA27_0==Async) ) {s = 13;}

                        else if ( (LA27_0==Function) ) {s = 14;}

                        else if ( (LA27_0==Var) && (synpred11_InternalN4JSXParser())) {s = 15;}

                        else if ( (LA27_0==Let) ) {s = 16;}

                        else if ( ((LA27_0>=Intersection && LA27_0<=Implements)||LA27_0==Promisify||LA27_0==Delete||(LA27_0>=Target && LA27_0<=Typeof)||LA27_0==Await||(LA27_0>=False && LA27_0<=Super)||LA27_0==Union||(LA27_0>=Yield && LA27_0<=This)||(LA27_0>=From && LA27_0<=Void)||LA27_0==Get||(LA27_0>=New && LA27_0<=Set)||LA27_0==PlusSignPlusSign||LA27_0==HyphenMinusHyphenMinus||LA27_0==SolidusEqualsSign||LA27_0==As||LA27_0==Of||LA27_0==ExclamationMark||LA27_0==LeftParenthesis||LA27_0==PlusSign||LA27_0==HyphenMinus||LA27_0==Solidus||LA27_0==LessThanSign||LA27_0==LeftSquareBracket||LA27_0==LeftCurlyBracket||LA27_0==Tilde||LA27_0==RULE_DOUBLE||(LA27_0>=RULE_HEX_INT && LA27_0<=RULE_LEGACY_OCTAL_INT)||LA27_0==RULE_SCIENTIFIC_INT||LA27_0==RULE_IDENTIFIER||LA27_0==RULE_STRING||(LA27_0>=RULE_TEMPLATE_HEAD && LA27_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA27_0==RULE_INT) ) {s = 17;}

                         
                        input.seek(index27_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA27_1 = input.LA(1);

                         
                        int index27_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index27_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA27_2 = input.LA(1);

                         
                        int index27_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index27_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA27_3 = input.LA(1);

                         
                        int index27_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index27_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA27_4 = input.LA(1);

                         
                        int index27_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index27_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA27_5 = input.LA(1);

                         
                        int index27_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index27_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA27_6 = input.LA(1);

                         
                        int index27_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index27_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA27_7 = input.LA(1);

                         
                        int index27_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index27_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA27_8 = input.LA(1);

                         
                        int index27_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index27_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA27_10 = input.LA(1);

                         
                        int index27_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index27_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA27_11 = input.LA(1);

                         
                        int index27_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index27_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA27_13 = input.LA(1);

                         
                        int index27_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index27_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA27_14 = input.LA(1);

                         
                        int index27_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index27_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA27_16 = input.LA(1);

                         
                        int index27_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index27_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 27, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_33s = "\67\uffff";
    static final String dfa_34s = "\17\uffff\11\16\37\uffff";
    static final String dfa_35s = "\1\11\1\uffff\7\11\1\4\5\uffff\7\11\1\17\1\4\37\uffff";
    static final String dfa_36s = "\1\152\1\uffff\7\100\1\176\5\uffff\11\u0099\37\uffff";
    static final String dfa_37s = "\1\uffff\1\1\10\uffff\1\2\1\3\1\4\1\5\1\6\11\uffff\37\3";
    static final String dfa_38s = "\1\16\1\uffff\1\4\1\2\1\7\1\5\1\13\1\11\1\1\1\0\5\uffff\1\17\1\12\1\14\1\10\1\6\1\20\1\3\1\uffff\1\15\37\uffff}>";
    static final String[] dfa_39s = {
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\51\uffff\1\1",
            "",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\3\16\1\uffff\1\16\1\27\1\21\1\24\2\uffff\1\23\1\15\3\uffff\1\17\1\20\3\uffff\1\22\1\uffff\1\25\1\uffff\1\16\1\uffff\1\26\1\16\2\uffff\1\12\1\11\3\uffff\1\16\1\uffff\2\16\2\uffff\1\14\1\16\3\uffff\1\16\7\uffff\2\16\1\uffff\2\16\1\uffff\1\16\21\uffff\1\16\3\uffff\1\16\23\uffff\2\16\2\uffff\1\16\17\uffff\1\16",
            "",
            "",
            "",
            "",
            "",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\15\120\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\40\uffff\1\15\5\uffff\1\16\1\uffff\1\16",
            "\1\51\1\44\1\56\1\uffff\1\53\1\57\1\61\1\40\2\uffff\1\37\2\uffff\1\65\1\uffff\1\60\1\36\3\uffff\1\62\1\uffff\1\41\1\uffff\1\46\1\uffff\1\55\1\54\7\uffff\1\50\1\uffff\1\32\1\52\3\uffff\1\43\3\uffff\1\47\7\uffff\1\33\1\35\1\uffff\1\63\1\34\23\uffff\1\42\3\uffff\1\45\11\uffff\1\16\3\uffff\2\16\1\64\1\16\6\uffff\1\66\1\uffff\1\16\1\30\14\uffff\1\31\30\uffff\1\16\1\uffff\1\16",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "1994:1: ( ( ( ( () CommercialAt ( This | Target | RULE_IDENTIFIER ) ) )=>this_AnnotatedExportableElement_0= ruleAnnotatedExportableElement ) | ( ( ( () ( ( ruleN4Modifier ) )* Class ( ( ruleTypingStrategyDefSiteOperator ) )? ( ( ruleBindingIdentifier ) )? ) )=>this_N4ClassDeclaration_1= ruleN4ClassDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* Interface ( ( ruleTypingStrategyDefSiteOperator ) )? ( ( ruleBindingIdentifier ) )? ) )=>this_N4InterfaceDeclaration_2= ruleN4InterfaceDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* Enum ( ( ruleBindingIdentifier ) )? ) )=>this_N4EnumDeclaration_3= ruleN4EnumDeclaration ) | this_ExportedFunctionDeclaration_4= ruleExportedFunctionDeclaration | this_ExportedVariableStatement_5= ruleExportedVariableStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA33_9 = input.LA(1);

                         
                        int index33_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA33_9==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        
                        else if ((LA33_9>=10 && LA33_9<=35 && (s=T2S.M_1[LA33_9-(10)])>=0)) { /* 11 cases */ }
                        else if ( ((LA33_9>=Intersection && LA33_9<=Implements)||LA33_9==Promisify||LA33_9==Target||LA33_9==Await||LA33_9==Union||(LA33_9>=Yield && LA33_9<=This)||LA33_9==From||LA33_9==Type||(LA33_9>=Get && LA33_9<=Let)||(LA33_9>=Out && LA33_9<=Set)||LA33_9==Var||LA33_9==As||LA33_9==Of||(LA33_9>=CommercialAt && LA33_9<=LeftSquareBracket)||LA33_9==LeftCurlyBracket||LA33_9==RULE_IDENTIFIER) ) {s = 14;}

                        else if ( (LA33_9==Interface) ) {s = 23;}

                        else if ( (LA33_9==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                         
                        input.seek(index33_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA33_8 = input.LA(1);

                         
                        int index33_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA33_8==Let||LA33_8==Var) ) {s = 14;}

                        else if ( (LA33_8==Const) ) {s = 9;}

                        else if ( (LA33_8==Private) ) {s = 2;}

                        else if ( (LA33_8==Project) ) {s = 3;}

                        else if ( (LA33_8==Protected) ) {s = 4;}

                        else if ( (LA33_8==Public) ) {s = 5;}

                        else if ( (LA33_8==External) ) {s = 6;}

                        else if ( (LA33_8==Abstract) ) {s = 7;}

                        else if ( (LA33_8==Static) ) {s = 8;}

                        else if ( (LA33_8==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA33_8==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA33_8==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA33_8==Function||LA33_8==Async) ) {s = 13;}

                         
                        input.seek(index33_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA33_3 = input.LA(1);

                         
                        int index33_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA33_3==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA33_3==Private) ) {s = 2;}

                        else if ( (LA33_3==Project) ) {s = 3;}

                        else if ( (LA33_3==Protected) ) {s = 4;}

                        else if ( (LA33_3==Public) ) {s = 5;}

                        else if ( (LA33_3==External) ) {s = 6;}

                        else if ( (LA33_3==Abstract) ) {s = 7;}

                        else if ( (LA33_3==Static) ) {s = 8;}

                        else if ( (LA33_3==Const) ) {s = 9;}

                        else if ( (LA33_3==Function||LA33_3==Async) ) {s = 13;}

                        else if ( (LA33_3==Let||LA33_3==Var) ) {s = 14;}

                        else if ( (LA33_3==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA33_3==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                         
                        input.seek(index33_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA33_21 = input.LA(1);

                         
                        int index33_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA33_21==EOF||LA33_21==Let||LA33_21==Var||LA33_21==Comma||(LA33_21>=Colon && LA33_21<=Semicolon)||LA33_21==EqualsSign||LA33_21==RightCurlyBracket||LA33_21==RULE_ML_COMMENT||LA33_21==RULE_EOL) ) {s = 14;}

                        else if ( (LA33_21==Const) ) {s = 9;}

                        else if ( (LA33_21==Private) ) {s = 2;}

                        else if ( (LA33_21==Project) ) {s = 3;}

                        else if ( (LA33_21==Protected) ) {s = 4;}

                        else if ( (LA33_21==Public) ) {s = 5;}

                        else if ( (LA33_21==External) ) {s = 6;}

                        else if ( (LA33_21==Abstract) ) {s = 7;}

                        else if ( (LA33_21==Static) ) {s = 8;}

                        else if ( (LA33_21==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA33_21==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA33_21==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA33_21==Function||LA33_21==Async) ) {s = 13;}

                         
                        input.seek(index33_21);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA33_2 = input.LA(1);

                         
                        int index33_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA33_2==Function||LA33_2==Async) ) {s = 13;}

                        else if ( (LA33_2==Private) ) {s = 2;}

                        else if ( (LA33_2==Project) ) {s = 3;}

                        else if ( (LA33_2==Protected) ) {s = 4;}

                        else if ( (LA33_2==Public) ) {s = 5;}

                        else if ( (LA33_2==External) ) {s = 6;}

                        else if ( (LA33_2==Abstract) ) {s = 7;}

                        else if ( (LA33_2==Static) ) {s = 8;}

                        else if ( (LA33_2==Const) ) {s = 9;}

                        else if ( (LA33_2==Let||LA33_2==Var) ) {s = 14;}

                        else if ( (LA33_2==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA33_2==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA33_2==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                         
                        input.seek(index33_2);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA33_5 = input.LA(1);

                         
                        int index33_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA33_5==Let||LA33_5==Var) ) {s = 14;}

                        else if ( (LA33_5==Const) ) {s = 9;}

                        else if ( (LA33_5==Private) ) {s = 2;}

                        else if ( (LA33_5==Project) ) {s = 3;}

                        else if ( (LA33_5==Protected) ) {s = 4;}

                        else if ( (LA33_5==Public) ) {s = 5;}

                        else if ( (LA33_5==External) ) {s = 6;}

                        else if ( (LA33_5==Abstract) ) {s = 7;}

                        else if ( (LA33_5==Static) ) {s = 8;}

                        else if ( (LA33_5==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA33_5==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA33_5==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA33_5==Function||LA33_5==Async) ) {s = 13;}

                         
                        input.seek(index33_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA33_19 = input.LA(1);

                         
                        int index33_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA33_19==EOF||LA33_19==Let||LA33_19==Var||LA33_19==Comma||(LA33_19>=Colon && LA33_19<=Semicolon)||LA33_19==EqualsSign||LA33_19==RightCurlyBracket||LA33_19==RULE_ML_COMMENT||LA33_19==RULE_EOL) ) {s = 14;}

                        else if ( (LA33_19==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA33_19==Private) ) {s = 2;}

                        else if ( (LA33_19==Project) ) {s = 3;}

                        else if ( (LA33_19==Protected) ) {s = 4;}

                        else if ( (LA33_19==Public) ) {s = 5;}

                        else if ( (LA33_19==External) ) {s = 6;}

                        else if ( (LA33_19==Abstract) ) {s = 7;}

                        else if ( (LA33_19==Static) ) {s = 8;}

                        else if ( (LA33_19==Const) ) {s = 9;}

                        else if ( (LA33_19==Function||LA33_19==Async) ) {s = 13;}

                        else if ( (LA33_19==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA33_19==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                         
                        input.seek(index33_19);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA33_4 = input.LA(1);

                         
                        int index33_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA33_4==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA33_4==Private) ) {s = 2;}

                        else if ( (LA33_4==Project) ) {s = 3;}

                        else if ( (LA33_4==Protected) ) {s = 4;}

                        else if ( (LA33_4==Public) ) {s = 5;}

                        else if ( (LA33_4==External) ) {s = 6;}

                        else if ( (LA33_4==Abstract) ) {s = 7;}

                        else if ( (LA33_4==Static) ) {s = 8;}

                        else if ( (LA33_4==Const) ) {s = 9;}

                        else if ( (LA33_4==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA33_4==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA33_4==Function||LA33_4==Async) ) {s = 13;}

                        else if ( (LA33_4==Let||LA33_4==Var) ) {s = 14;}

                         
                        input.seek(index33_4);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA33_18 = input.LA(1);

                         
                        int index33_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA33_18==EOF||LA33_18==Let||LA33_18==Var||LA33_18==Comma||(LA33_18>=Colon && LA33_18<=Semicolon)||LA33_18==EqualsSign||LA33_18==RightCurlyBracket||LA33_18==RULE_ML_COMMENT||LA33_18==RULE_EOL) ) {s = 14;}

                        else if ( (LA33_18==Const) ) {s = 9;}

                        else if ( (LA33_18==Private) ) {s = 2;}

                        else if ( (LA33_18==Project) ) {s = 3;}

                        else if ( (LA33_18==Protected) ) {s = 4;}

                        else if ( (LA33_18==Public) ) {s = 5;}

                        else if ( (LA33_18==External) ) {s = 6;}

                        else if ( (LA33_18==Abstract) ) {s = 7;}

                        else if ( (LA33_18==Static) ) {s = 8;}

                        else if ( (LA33_18==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA33_18==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA33_18==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA33_18==Function||LA33_18==Async) ) {s = 13;}

                         
                        input.seek(index33_18);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA33_7 = input.LA(1);

                         
                        int index33_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA33_7==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA33_7==Private) ) {s = 2;}

                        else if ( (LA33_7==Project) ) {s = 3;}

                        else if ( (LA33_7==Protected) ) {s = 4;}

                        else if ( (LA33_7==Public) ) {s = 5;}

                        else if ( (LA33_7==External) ) {s = 6;}

                        else if ( (LA33_7==Abstract) ) {s = 7;}

                        else if ( (LA33_7==Static) ) {s = 8;}

                        else if ( (LA33_7==Const) ) {s = 9;}

                        else if ( (LA33_7==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA33_7==Function||LA33_7==Async) ) {s = 13;}

                        else if ( (LA33_7==Let||LA33_7==Var) ) {s = 14;}

                        else if ( (LA33_7==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                         
                        input.seek(index33_7);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA33_16 = input.LA(1);

                         
                        int index33_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA33_16==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA33_16==Private) ) {s = 2;}

                        else if ( (LA33_16==Project) ) {s = 3;}

                        else if ( (LA33_16==Protected) ) {s = 4;}

                        else if ( (LA33_16==Public) ) {s = 5;}

                        else if ( (LA33_16==External) ) {s = 6;}

                        else if ( (LA33_16==Abstract) ) {s = 7;}

                        else if ( (LA33_16==Static) ) {s = 8;}

                        else if ( (LA33_16==Const) ) {s = 9;}

                        else if ( (LA33_16==Function||LA33_16==Async) ) {s = 13;}

                        else if ( (LA33_16==EOF||LA33_16==Let||LA33_16==Var||LA33_16==Comma||(LA33_16>=Colon && LA33_16<=Semicolon)||LA33_16==EqualsSign||LA33_16==RightCurlyBracket||LA33_16==RULE_ML_COMMENT||LA33_16==RULE_EOL) ) {s = 14;}

                        else if ( (LA33_16==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA33_16==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                         
                        input.seek(index33_16);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA33_6 = input.LA(1);

                         
                        int index33_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA33_6==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA33_6==Private) ) {s = 2;}

                        else if ( (LA33_6==Project) ) {s = 3;}

                        else if ( (LA33_6==Protected) ) {s = 4;}

                        else if ( (LA33_6==Public) ) {s = 5;}

                        else if ( (LA33_6==External) ) {s = 6;}

                        else if ( (LA33_6==Abstract) ) {s = 7;}

                        else if ( (LA33_6==Static) ) {s = 8;}

                        else if ( (LA33_6==Const) ) {s = 9;}

                        else if ( (LA33_6==Function||LA33_6==Async) ) {s = 13;}

                        else if ( (LA33_6==Let||LA33_6==Var) ) {s = 14;}

                        else if ( (LA33_6==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA33_6==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                         
                        input.seek(index33_6);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA33_17 = input.LA(1);

                         
                        int index33_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA33_17==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA33_17==Private) ) {s = 2;}

                        else if ( (LA33_17==Project) ) {s = 3;}

                        else if ( (LA33_17==Protected) ) {s = 4;}

                        else if ( (LA33_17==Public) ) {s = 5;}

                        else if ( (LA33_17==External) ) {s = 6;}

                        else if ( (LA33_17==Abstract) ) {s = 7;}

                        else if ( (LA33_17==Static) ) {s = 8;}

                        else if ( (LA33_17==Const) ) {s = 9;}

                        else if ( (LA33_17==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA33_17==EOF||LA33_17==Let||LA33_17==Var||LA33_17==Comma||(LA33_17>=Colon && LA33_17<=Semicolon)||LA33_17==EqualsSign||LA33_17==RightCurlyBracket||LA33_17==RULE_ML_COMMENT||LA33_17==RULE_EOL) ) {s = 14;}

                        else if ( (LA33_17==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA33_17==Function||LA33_17==Async) ) {s = 13;}

                         
                        input.seek(index33_17);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA33_23 = input.LA(1);

                         
                        int index33_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA33_23==EOF||LA33_23==Comma||(LA33_23>=Colon && LA33_23<=Semicolon)||LA33_23==EqualsSign||LA33_23==RightCurlyBracket||LA33_23==RULE_ML_COMMENT||LA33_23==RULE_EOL) ) {s = 14;}

                        else if ( (LA33_23==Tilde) && (synpred14_InternalN4JSXParser())) {s = 24;}

                        else if ( (LA33_23==RULE_IDENTIFIER) && (synpred14_InternalN4JSXParser())) {s = 25;}

                        else if ( (LA33_23==Yield) && (synpred14_InternalN4JSXParser())) {s = 26;}

                        else if ( (LA33_23==Get) && (synpred14_InternalN4JSXParser())) {s = 27;}

                        else if ( (LA33_23==Set) && (synpred14_InternalN4JSXParser())) {s = 28;}

                        else if ( (LA33_23==Let) && (synpred14_InternalN4JSXParser())) {s = 29;}

                        else if ( (LA33_23==Project) && (synpred14_InternalN4JSXParser())) {s = 30;}

                        else if ( (LA33_23==External) && (synpred14_InternalN4JSXParser())) {s = 31;}

                        else if ( (LA33_23==Abstract) && (synpred14_InternalN4JSXParser())) {s = 32;}

                        else if ( (LA33_23==Static) && (synpred14_InternalN4JSXParser())) {s = 33;}

                        else if ( (LA33_23==As) && (synpred14_InternalN4JSXParser())) {s = 34;}

                        else if ( (LA33_23==From) && (synpred14_InternalN4JSXParser())) {s = 35;}

                        else if ( (LA33_23==Constructor) && (synpred14_InternalN4JSXParser())) {s = 36;}

                        else if ( (LA33_23==Of) && (synpred14_InternalN4JSXParser())) {s = 37;}

                        else if ( (LA33_23==Target) && (synpred14_InternalN4JSXParser())) {s = 38;}

                        else if ( (LA33_23==Type) && (synpred14_InternalN4JSXParser())) {s = 39;}

                        else if ( (LA33_23==Union) && (synpred14_InternalN4JSXParser())) {s = 40;}

                        else if ( (LA33_23==Intersection) && (synpred14_InternalN4JSXParser())) {s = 41;}

                        else if ( (LA33_23==This) && (synpred14_InternalN4JSXParser())) {s = 42;}

                        else if ( (LA33_23==Promisify) && (synpred14_InternalN4JSXParser())) {s = 43;}

                        else if ( (LA33_23==Await) && (synpred14_InternalN4JSXParser())) {s = 44;}

                        else if ( (LA33_23==Async) && (synpred14_InternalN4JSXParser())) {s = 45;}

                        else if ( (LA33_23==Implements) && (synpred14_InternalN4JSXParser())) {s = 46;}

                        else if ( (LA33_23==Interface) && (synpred14_InternalN4JSXParser())) {s = 47;}

                        else if ( (LA33_23==Private) && (synpred14_InternalN4JSXParser())) {s = 48;}

                        else if ( (LA33_23==Protected) && (synpred14_InternalN4JSXParser())) {s = 49;}

                        else if ( (LA33_23==Public) && (synpred14_InternalN4JSXParser())) {s = 50;}

                        else if ( (LA33_23==Out) && (synpred14_InternalN4JSXParser())) {s = 51;}

                        else if ( (LA33_23==LessThanSign) && (synpred14_InternalN4JSXParser())) {s = 52;}

                        else if ( (LA33_23==Extends) && (synpred14_InternalN4JSXParser())) {s = 53;}

                        else if ( (LA33_23==LeftCurlyBracket) && (synpred14_InternalN4JSXParser())) {s = 54;}

                         
                        input.seek(index33_23);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA33_0 = input.LA(1);

                         
                        int index33_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA33_0==CommercialAt) && (synpred12_InternalN4JSXParser())) {s = 1;}

                        else if ( (LA33_0==Private) ) {s = 2;}

                        else if ( (LA33_0==Project) ) {s = 3;}

                        else if ( (LA33_0==Protected) ) {s = 4;}

                        else if ( (LA33_0==Public) ) {s = 5;}

                        else if ( (LA33_0==External) ) {s = 6;}

                        else if ( (LA33_0==Abstract) ) {s = 7;}

                        else if ( (LA33_0==Static) ) {s = 8;}

                        else if ( (LA33_0==Const) ) {s = 9;}

                        else if ( (LA33_0==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA33_0==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA33_0==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA33_0==Function||LA33_0==Async) ) {s = 13;}

                        else if ( (LA33_0==Let||LA33_0==Var) ) {s = 14;}

                         
                        input.seek(index33_0);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA33_15 = input.LA(1);

                         
                        int index33_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA33_15==Function||LA33_15==Async) ) {s = 13;}

                        else if ( (LA33_15==Private) ) {s = 2;}

                        else if ( (LA33_15==Project) ) {s = 3;}

                        else if ( (LA33_15==Protected) ) {s = 4;}

                        else if ( (LA33_15==Public) ) {s = 5;}

                        else if ( (LA33_15==External) ) {s = 6;}

                        else if ( (LA33_15==Abstract) ) {s = 7;}

                        else if ( (LA33_15==Static) ) {s = 8;}

                        else if ( (LA33_15==Const) ) {s = 9;}

                        else if ( (LA33_15==EOF||LA33_15==Let||LA33_15==Var||LA33_15==Comma||(LA33_15>=Colon && LA33_15<=Semicolon)||LA33_15==EqualsSign||LA33_15==RightCurlyBracket||LA33_15==RULE_ML_COMMENT||LA33_15==RULE_EOL) ) {s = 14;}

                        else if ( (LA33_15==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA33_15==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA33_15==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                         
                        input.seek(index33_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA33_20 = input.LA(1);

                         
                        int index33_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA33_20==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA33_20==Private) ) {s = 2;}

                        else if ( (LA33_20==Project) ) {s = 3;}

                        else if ( (LA33_20==Protected) ) {s = 4;}

                        else if ( (LA33_20==Public) ) {s = 5;}

                        else if ( (LA33_20==External) ) {s = 6;}

                        else if ( (LA33_20==Abstract) ) {s = 7;}

                        else if ( (LA33_20==Static) ) {s = 8;}

                        else if ( (LA33_20==Const) ) {s = 9;}

                        else if ( (LA33_20==EOF||LA33_20==Let||LA33_20==Var||LA33_20==Comma||(LA33_20>=Colon && LA33_20<=Semicolon)||LA33_20==EqualsSign||LA33_20==RightCurlyBracket||LA33_20==RULE_ML_COMMENT||LA33_20==RULE_EOL) ) {s = 14;}

                        else if ( (LA33_20==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA33_20==Function||LA33_20==Async) ) {s = 13;}

                        else if ( (LA33_20==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                         
                        input.seek(index33_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 33, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\26\uffff";
    static final String dfa_41s = "\15\uffff\11\12";
    static final String dfa_42s = "\10\11\1\4\4\uffff\7\11\1\17\1\4";
    static final String dfa_43s = "\10\100\1\176\4\uffff\11\u0099";
    static final String dfa_44s = "\11\uffff\1\1\1\2\1\3\1\4\11\uffff";
    static final String dfa_45s = "\26\uffff}>";
    static final String[] dfa_46s = {
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\3\12\1\uffff\1\12\1\25\1\17\1\22\2\uffff\1\21\1\11\3\uffff\1\15\1\16\3\uffff\1\20\1\uffff\1\23\1\uffff\1\12\1\uffff\1\24\1\12\2\uffff\1\13\1\10\3\uffff\1\12\1\uffff\2\12\2\uffff\1\14\1\12\3\uffff\1\12\7\uffff\2\12\1\uffff\2\12\1\uffff\1\12\21\uffff\1\12\3\uffff\1\12\23\uffff\2\12\2\uffff\1\12\17\uffff\1\12",
            "",
            "",
            "",
            "",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12",
            "\1\11\120\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\40\uffff\1\11\5\uffff\1\12\1\uffff\1\12",
            "\3\13\1\uffff\4\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\13\1\uffff\2\13\7\uffff\1\13\1\uffff\2\13\3\uffff\1\13\3\uffff\1\13\7\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\11\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\1\13\14\uffff\1\13\30\uffff\1\12\1\uffff\1\12"
    };

    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[][] dfa_46 = unpackEncodedStringArray(dfa_46s);

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_40;
            this.eof = dfa_41;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_45;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "2142:2: ( ( () ( (lv_declaredModifiers_2_0= ruleN4Modifier ) )* this_AsyncNoTrailingLineBreak_3= ruleAsyncNoTrailingLineBreak[$current] this_FunctionImpl_4= ruleFunctionImpl[$current] ) | ( () ( (lv_declaredModifiers_6_0= ruleN4Modifier ) )* ( (lv_varStmtKeyword_7_0= ruleVariableStatementKeyword ) ) ( (lv_varDeclsOrBindings_8_0= ruleExportedVariableDeclarationOrBinding ) ) (otherlv_9= Comma ( (lv_varDeclsOrBindings_10_0= ruleExportedVariableDeclarationOrBinding ) ) )* ruleSemi ) | ( ( ( () ( (lv_declaredModifiers_13_0= ruleN4Modifier ) )* otherlv_14= Class ( (lv_typingStrategy_15_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_16_0= ruleBindingIdentifier ) ) (this_TypeVariables_17= ruleTypeVariables[$current] )? (this_ClassExtendsClause_18= ruleClassExtendsClause[$current] )? ) | ( () ( (lv_declaredModifiers_20_0= ruleN4Modifier ) )* otherlv_21= Interface ( (lv_typingStrategy_22_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_23_0= ruleBindingIdentifier ) ) (this_TypeVariables_24= ruleTypeVariables[$current] )? (this_InterfaceImplementsList_25= ruleInterfaceImplementsList[$current] )? ) ) this_Members_26= ruleMembers[$current] ) | ( () ( (lv_declaredModifiers_28_0= ruleN4Modifier ) )* otherlv_29= Enum ( (lv_name_30_0= ruleBindingIdentifier ) ) otherlv_31= LeftCurlyBracket ( (lv_literals_32_0= ruleN4EnumLiteral ) ) (otherlv_33= Comma ( (lv_literals_34_0= ruleN4EnumLiteral ) ) )* otherlv_35= RightCurlyBracket ) )";
        }
    }
    static final String dfa_47s = "\14\uffff";
    static final String dfa_48s = "\4\uffff\10\1";
    static final String dfa_49s = "\1\12\1\uffff\1\4\1\uffff\1\4\7\12";
    static final String dfa_50s = "\1\100\1\uffff\1\176\1\uffff\10\u0099";
    static final String dfa_51s = "\1\uffff\1\2\1\uffff\1\1\10\uffff";
    static final String dfa_52s = "\14\uffff}>";
    static final String[] dfa_53s = {
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\2\27\uffff\1\1\4\uffff\1\1",
            "",
            "\3\1\1\uffff\2\1\1\12\1\7\2\uffff\1\6\4\uffff\1\11\1\5\3\uffff\1\13\1\uffff\1\10\1\uffff\1\1\1\uffff\2\1\3\uffff\1\3\3\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\1\1\1\4\1\uffff\2\1\1\uffff\1\3\21\uffff\1\1\3\uffff\1\1\23\uffff\2\1\2\uffff\1\1\17\uffff\1\1",
            "",
            "\3\3\1\uffff\4\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\2\3\7\uffff\1\3\1\uffff\2\3\3\uffff\1\3\3\uffff\1\3\7\uffff\2\3\1\uffff\2\3\23\uffff\1\3\3\uffff\1\3\11\uffff\1\1\3\uffff\2\1\1\uffff\1\1\2\uffff\2\3\2\uffff\1\3\1\uffff\1\1\15\uffff\1\3\30\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1"
    };

    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[][] dfa_53 = unpackEncodedStringArray(dfa_53s);

    class DFA35 extends DFA {

        public DFA35(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 35;
            this.eot = dfa_47;
            this.eof = dfa_48;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "()* loopback of 2197:2: ( (lv_declaredModifiers_6_0= ruleN4Modifier ) )*";
        }
    }

    class DFA45 extends DFA {

        public DFA45(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 45;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "2283:7: ( ( () ( (lv_declaredModifiers_13_0= ruleN4Modifier ) )* otherlv_14= Class ( (lv_typingStrategy_15_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_16_0= ruleBindingIdentifier ) ) (this_TypeVariables_17= ruleTypeVariables[$current] )? (this_ClassExtendsClause_18= ruleClassExtendsClause[$current] )? ) | ( () ( (lv_declaredModifiers_20_0= ruleN4Modifier ) )* otherlv_21= Interface ( (lv_typingStrategy_22_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_23_0= ruleBindingIdentifier ) ) (this_TypeVariables_24= ruleTypeVariables[$current] )? (this_InterfaceImplementsList_25= ruleInterfaceImplementsList[$current] )? ) )";
        }
    }
    static final String dfa_54s = "\36\uffff";
    static final String dfa_55s = "\1\uffff\33\35\2\uffff";
    static final String dfa_56s = "\1\4\33\122\2\uffff";
    static final String dfa_57s = "\1\176\33\160\2\uffff";
    static final String dfa_58s = "\34\uffff\1\2\1\1";
    static final String dfa_59s = "\36\uffff}>";
    static final String[] dfa_60s = {
            "\1\21\1\14\1\26\1\34\1\23\1\27\1\31\1\10\2\34\1\7\4\34\1\30\1\6\3\34\1\32\1\34\1\11\1\34\1\16\1\34\1\25\1\24\7\34\1\20\1\34\1\2\1\22\3\34\1\13\3\34\1\17\2\34\4\uffff\1\34\1\3\1\5\1\34\1\33\1\4\2\34\21\uffff\1\12\3\34\1\15\47\uffff\1\1",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "",
            ""
    };

    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[][] dfa_60 = unpackEncodedStringArray(dfa_60s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_54;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_59;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "2854:1: ( ( ( ruleBindingIdentifier ) ) | ( ( ( ruleIdentifierName ) ) otherlv_2= As ( (lv_alias_3_0= ruleBindingIdentifier ) ) ) )";
        }
    }
    static final String dfa_61s = "\133\uffff";
    static final String dfa_62s = "\1\2\1\uffff\1\6\3\uffff\1\132\124\uffff";
    static final String dfa_63s = "\1\4\1\0\1\4\1\0\2\uffff\1\0\124\uffff";
    static final String dfa_64s = "\1\u0099\1\0\1\u0095\1\0\2\uffff\1\0\124\uffff";
    static final String dfa_65s = "\4\uffff\1\1\1\2\1\uffff\124\1";
    static final String dfa_66s = "\1\3\1\2\1\0\1\4\2\uffff\1\1\124\uffff}>";
    static final String[] dfa_67s = {
            "\3\5\1\uffff\11\5\2\uffff\16\5\1\uffff\23\5\4\uffff\10\5\5\uffff\1\5\1\uffff\1\5\1\uffff\1\5\7\uffff\3\5\1\uffff\1\5\2\uffff\1\5\2\uffff\1\5\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\1\1\1\5\3\uffff\2\5\2\uffff\1\5\1\uffff\1\3\1\5\3\uffff\1\5\1\uffff\4\5\1\uffff\1\5\1\uffff\1\5\2\uffff\1\5\11\uffff\2\5\10\uffff\1\5\1\uffff\1\4\1\uffff\1\4",
            "\1\uffff",
            "\1\46\1\41\1\52\1\uffff\1\50\1\21\1\12\1\15\1\116\1\125\1\14\1\27\1\130\2\uffff\1\10\1\11\1\101\1\24\1\23\1\13\1\120\1\16\1\122\1\43\1\103\1\26\1\51\1\117\1\uffff\1\20\1\17\1\71\1\57\1\123\1\45\1\114\1\34\1\47\1\131\1\127\1\22\1\40\1\73\1\56\1\70\1\44\1\102\1\121\4\uffff\1\115\1\35\1\31\1\55\1\53\1\36\1\124\1\30\5\uffff\1\104\1\uffff\1\105\1\uffff\1\75\7\uffff\1\37\1\113\1\112\1\uffff\1\42\2\uffff\1\111\2\uffff\1\54\2\uffff\1\106\1\uffff\1\107\1\uffff\1\74\1\uffff\1\32\1\60\3\uffff\1\7\1\76\2\uffff\1\25\1\uffff\1\126\1\110\3\uffff\1\61\1\uffff\1\66\1\63\1\64\1\65\1\uffff\1\67\1\uffff\1\33\2\uffff\1\72\11\uffff\1\100\1\77\10\uffff\1\62",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final char[] dfa_64 = DFA.unpackEncodedStringToUnsignedChars(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final short[][] dfa_67 = unpackEncodedStringArray(dfa_67s);

    class DFA59 extends DFA {

        public DFA59(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 59;
            this.eot = dfa_61;
            this.eof = dfa_62;
            this.min = dfa_63;
            this.max = dfa_64;
            this.accept = dfa_65;
            this.special = dfa_66;
            this.transition = dfa_67;
        }
        public String getDescription() {
            return "3125:4: ( ( ruleSemi )=> ruleSemi )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA59_2 = input.LA(1);

                         
                        int index59_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA59_2==EOF) ) {s = 6;}

                        
                        else if ((LA59_2>=-1 && LA59_2<=149 && (s=T2S.M_2[LA59_2-(-1)])>=0) && (synpred19_InternalN4JSXParser())) { /* 84 cases */ }
                        input.seek(index59_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA59_6 = input.LA(1);

                         
                        int index59_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA59_6==EOF) && (synpred19_InternalN4JSXParser())) {s = 90;}

                         
                        input.seek(index59_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA59_1 = input.LA(1);

                         
                        int index59_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalN4JSXParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index59_1);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA59_0 = input.LA(1);

                         
                        int index59_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA59_0==Semicolon) ) {s = 1;}

                        else if ( (LA59_0==EOF) ) {s = 2;}

                        else if ( (LA59_0==RightCurlyBracket) ) {s = 3;}

                        else if ( (LA59_0==RULE_ML_COMMENT||LA59_0==RULE_EOL) && (synpred19_InternalN4JSXParser())) {s = 4;}

                        else if ( ((LA59_0>=Intersection && LA59_0<=Implements)||(LA59_0>=Promisify && LA59_0<=Default)||(LA59_0>=Private && LA59_0<=Break)||(LA59_0>=Class && LA59_0<=With)||(LA59_0>=For && LA59_0<=Var)||LA59_0==PlusSignPlusSign||LA59_0==HyphenMinusHyphenMinus||LA59_0==SolidusEqualsSign||(LA59_0>=As && LA59_0<=If)||LA59_0==Of||LA59_0==ExclamationMark||LA59_0==LeftParenthesis||LA59_0==PlusSign||LA59_0==HyphenMinus||LA59_0==Solidus||LA59_0==LessThanSign||(LA59_0>=CommercialAt && LA59_0<=LeftSquareBracket)||LA59_0==LeftCurlyBracket||LA59_0==Tilde||LA59_0==RULE_DOUBLE||(LA59_0>=RULE_HEX_INT && LA59_0<=RULE_LEGACY_OCTAL_INT)||LA59_0==RULE_SCIENTIFIC_INT||LA59_0==RULE_IDENTIFIER||LA59_0==RULE_STRING||(LA59_0>=RULE_TEMPLATE_HEAD && LA59_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA59_0==RULE_INT) ) {s = 5;}

                         
                        input.seek(index59_0);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA59_3 = input.LA(1);

                         
                        int index59_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalN4JSXParser()) ) {s = 89;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index59_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 59, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_68s = "\127\uffff";
    static final String dfa_69s = "\1\2\126\uffff";
    static final String dfa_70s = "\1\4\1\0\125\uffff";
    static final String dfa_71s = "\1\u0099\1\0\125\uffff";
    static final String dfa_72s = "\2\uffff\1\2\123\uffff\1\1";
    static final String dfa_73s = "\1\uffff\1\0\125\uffff}>";
    static final String[] dfa_74s = {
            "\3\2\1\uffff\11\2\2\uffff\16\2\1\uffff\23\2\4\uffff\10\2\5\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\3\2\1\uffff\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\3\uffff\2\2\2\uffff\1\1\1\uffff\2\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2\1\uffff\1\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final char[] dfa_70 = DFA.unpackEncodedStringToUnsignedChars(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[][] dfa_74 = unpackEncodedStringArray(dfa_74s);

    class DFA78 extends DFA {

        public DFA78(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 78;
            this.eot = dfa_68;
            this.eof = dfa_69;
            this.min = dfa_70;
            this.max = dfa_71;
            this.accept = dfa_72;
            this.special = dfa_73;
            this.transition = dfa_74;
        }
        public String getDescription() {
            return "3844:1: ( ( ( () LeftCurlyBracket ) )=> (lv_body_0_0= ruleBlock ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA78_1 = input.LA(1);

                         
                        int index78_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalN4JSXParser()) ) {s = 86;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index78_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 78, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA79 extends DFA {

        public DFA79(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 79;
            this.eot = dfa_68;
            this.eof = dfa_69;
            this.min = dfa_70;
            this.max = dfa_71;
            this.accept = dfa_72;
            this.special = dfa_73;
            this.transition = dfa_74;
        }
        public String getDescription() {
            return "3878:1: ( ( ( () LeftCurlyBracket ) )=> (lv_body_0_0= norm1_Block ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA79_1 = input.LA(1);

                         
                        int index79_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalN4JSXParser()) ) {s = 86;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index79_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 79, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_75s = "\77\uffff";
    static final String dfa_76s = "\1\4\1\0\75\uffff";
    static final String dfa_77s = "\1\u0095\1\0\75\uffff";
    static final String dfa_78s = "\2\uffff\1\2\73\uffff\1\1";
    static final String dfa_79s = "\1\uffff\1\0\75\uffff}>";
    static final String[] dfa_80s = {
            "\3\2\1\uffff\4\2\2\uffff\2\2\3\uffff\3\2\2\uffff\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\2\2\3\uffff\6\2\6\uffff\5\2\7\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\1\2\3\uffff\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\3\uffff\2\2\2\uffff\1\1\2\uffff\1\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final char[] dfa_77 = DFA.unpackEncodedStringToUnsignedChars(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final short[][] dfa_80 = unpackEncodedStringArray(dfa_80s);

    class DFA89 extends DFA {

        public DFA89(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 89;
            this.eot = dfa_75;
            this.eof = dfa_75;
            this.min = dfa_76;
            this.max = dfa_77;
            this.accept = dfa_78;
            this.special = dfa_79;
            this.transition = dfa_80;
        }
        public String getDescription() {
            return "4603:3: ( ( ( ( LeftCurlyBracket )=> (lv_hasBracesAroundBody_18_0= LeftCurlyBracket ) ) ( (lv_body_19_0= ruleBlockMinusBraces ) ) otherlv_20= RightCurlyBracket ) | ( (lv_body_21_0= ruleExpressionDisguisedAsBlock ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA89_1 = input.LA(1);

                         
                        int index89_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred38_InternalN4JSXParser()) ) {s = 62;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index89_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 89, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA97 extends DFA {

        public DFA97(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 97;
            this.eot = dfa_75;
            this.eof = dfa_75;
            this.min = dfa_76;
            this.max = dfa_77;
            this.accept = dfa_78;
            this.special = dfa_79;
            this.transition = dfa_80;
        }
        public String getDescription() {
            return "4950:3: ( ( ( ( LeftCurlyBracket )=> (lv_hasBracesAroundBody_18_0= LeftCurlyBracket ) ) ( (lv_body_19_0= ruleBlockMinusBraces ) ) otherlv_20= RightCurlyBracket ) | ( (lv_body_21_0= norm1_ExpressionDisguisedAsBlock ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA97_1 = input.LA(1);

                         
                        int index97_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalN4JSXParser()) ) {s = 62;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index97_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 97, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA105 extends DFA {

        public DFA105(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 105;
            this.eot = dfa_75;
            this.eof = dfa_75;
            this.min = dfa_76;
            this.max = dfa_77;
            this.accept = dfa_78;
            this.special = dfa_79;
            this.transition = dfa_80;
        }
        public String getDescription() {
            return "5297:3: ( ( ( ( LeftCurlyBracket )=> (lv_hasBracesAroundBody_18_0= LeftCurlyBracket ) ) ( (lv_body_19_0= norm1_BlockMinusBraces ) ) otherlv_20= RightCurlyBracket ) | ( (lv_body_21_0= ruleExpressionDisguisedAsBlock ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA105_1 = input.LA(1);

                         
                        int index105_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalN4JSXParser()) ) {s = 62;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index105_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 105, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA113 extends DFA {

        public DFA113(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 113;
            this.eot = dfa_75;
            this.eof = dfa_75;
            this.min = dfa_76;
            this.max = dfa_77;
            this.accept = dfa_78;
            this.special = dfa_79;
            this.transition = dfa_80;
        }
        public String getDescription() {
            return "5644:3: ( ( ( ( LeftCurlyBracket )=> (lv_hasBracesAroundBody_18_0= LeftCurlyBracket ) ) ( (lv_body_19_0= norm1_BlockMinusBraces ) ) otherlv_20= RightCurlyBracket ) | ( (lv_body_21_0= norm1_ExpressionDisguisedAsBlock ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA113_1 = input.LA(1);

                         
                        int index113_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalN4JSXParser()) ) {s = 62;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index113_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 113, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_81s = "\44\uffff";
    static final String dfa_82s = "\1\4\1\0\42\uffff";
    static final String dfa_83s = "\1\176\1\0\42\uffff";
    static final String dfa_84s = "\2\uffff\1\1\1\2\40\uffff";
    static final String dfa_85s = "\1\0\1\1\42\uffff}>";
    static final String[] dfa_86s = {
            "\3\3\1\uffff\4\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\2\3\7\uffff\1\3\1\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\2\3\2\uffff\1\3\3\uffff\2\3\1\uffff\2\3\23\uffff\1\3\3\uffff\1\3\22\uffff\2\3\1\2\2\uffff\1\1\2\uffff\1\3\14\uffff\1\3",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final char[] dfa_83 = DFA.unpackEncodedStringToUnsignedChars(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[][] dfa_86 = unpackEncodedStringArray(dfa_86s);

    class DFA132 extends DFA {

        public DFA132(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 132;
            this.eot = dfa_81;
            this.eof = dfa_81;
            this.min = dfa_82;
            this.max = dfa_83;
            this.accept = dfa_84;
            this.special = dfa_85;
            this.transition = dfa_86;
        }
        public String getDescription() {
            return "6534:2: ( ( ( ( ruleBindingPattern ) )=> (lv_bindingPattern_0_0= ruleBindingPattern ) ) | ( ( (lv_annotations_1_0= ruleAnnotation ) )* (this_BogusTypeRefFragment_2= ruleBogusTypeRefFragment[$current] )? ( (lv_variadic_3_0= FullStopFullStopFullStop ) )? ( (lv_name_4_0= ruleBindingIdentifier ) ) (this_ColonSepTypeRef_5= ruleColonSepTypeRef[$current] )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA132_0 = input.LA(1);

                         
                        int index132_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA132_0==LeftCurlyBracket) ) {s = 1;}

                        else if ( (LA132_0==LeftSquareBracket) && (synpred51_InternalN4JSXParser())) {s = 2;}

                        else if ( ((LA132_0>=Intersection && LA132_0<=Implements)||(LA132_0>=Promisify && LA132_0<=Abstract)||LA132_0==External||(LA132_0>=Private && LA132_0<=Project)||LA132_0==Public||LA132_0==Static||LA132_0==Target||(LA132_0>=Async && LA132_0<=Await)||LA132_0==Union||(LA132_0>=Yield && LA132_0<=This)||LA132_0==From||LA132_0==This_1||(LA132_0>=Type && LA132_0<=Void)||LA132_0==FullStopFullStopFullStop||(LA132_0>=Get && LA132_0<=Let)||(LA132_0>=Out && LA132_0<=Set)||LA132_0==As||LA132_0==Of||(LA132_0>=QuestionMark && LA132_0<=CommercialAt)||LA132_0==Tilde||LA132_0==RULE_IDENTIFIER) ) {s = 3;}

                         
                        input.seek(index132_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA132_1 = input.LA(1);

                         
                        int index132_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_InternalN4JSXParser()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index132_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 132, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_87s = "\2\uffff\11\13\1\uffff";
    static final String dfa_88s = "\1\4\1\uffff\5\4\4\135\1\uffff";
    static final String dfa_89s = "\1\176\1\uffff\5\176\4\156\1\uffff";
    static final String dfa_90s = "\1\uffff\1\1\11\uffff\1\2";
    static final String[] dfa_91s = {
            "\1\12\1\10\1\13\1\uffff\1\4\3\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\5\1\uffff\1\13\1\3\7\uffff\1\11\1\uffff\1\13\1\2\3\uffff\1\13\1\uffff\1\1\1\uffff\1\7\1\1\2\uffff\1\13\3\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\22\uffff\1\1\4\uffff\1\1\2\uffff\1\1\14\uffff\1\6",
            "",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\1\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            ""
    };
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final char[] dfa_88 = DFA.unpackEncodedStringToUnsignedChars(dfa_88s);
    static final char[] dfa_89 = DFA.unpackEncodedStringToUnsignedChars(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[][] dfa_91 = unpackEncodedStringArray(dfa_91s);

    class DFA129 extends DFA {

        public DFA129(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 129;
            this.eot = dfa_47;
            this.eof = dfa_87;
            this.min = dfa_88;
            this.max = dfa_89;
            this.accept = dfa_90;
            this.special = dfa_52;
            this.transition = dfa_91;
        }
        public String getDescription() {
            return "6575:3: (this_BogusTypeRefFragment_2= ruleBogusTypeRefFragment[$current] )?";
        }
    }
    static final String dfa_92s = "\43\uffff";
    static final String dfa_93s = "\1\4\1\0\41\uffff";
    static final String dfa_94s = "\1\176\1\0\41\uffff";
    static final String dfa_95s = "\2\uffff\1\1\1\2\37\uffff";
    static final String dfa_96s = "\1\0\1\1\41\uffff}>";
    static final String[] dfa_97s = {
            "\3\3\1\uffff\4\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\2\3\7\uffff\1\3\2\uffff\1\3\3\uffff\1\3\1\uffff\1\3\1\uffff\2\3\2\uffff\1\3\3\uffff\2\3\1\uffff\2\3\23\uffff\1\3\3\uffff\1\3\22\uffff\2\3\1\2\2\uffff\1\1\2\uffff\1\3\14\uffff\1\3",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_92 = DFA.unpackEncodedString(dfa_92s);
    static final char[] dfa_93 = DFA.unpackEncodedStringToUnsignedChars(dfa_93s);
    static final char[] dfa_94 = DFA.unpackEncodedStringToUnsignedChars(dfa_94s);
    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final short[][] dfa_97 = unpackEncodedStringArray(dfa_97s);

    class DFA138 extends DFA {

        public DFA138(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 138;
            this.eot = dfa_92;
            this.eof = dfa_92;
            this.min = dfa_93;
            this.max = dfa_94;
            this.accept = dfa_95;
            this.special = dfa_96;
            this.transition = dfa_97;
        }
        public String getDescription() {
            return "6669:2: ( ( ( ( norm1_BindingPattern ) )=> (lv_bindingPattern_0_0= norm1_BindingPattern ) ) | ( ( (lv_annotations_1_0= ruleAnnotation ) )* (this_BogusTypeRefFragment_2= ruleBogusTypeRefFragment[$current] )? ( (lv_variadic_3_0= FullStopFullStopFullStop ) )? ( (lv_name_4_0= norm1_BindingIdentifier ) ) (this_ColonSepTypeRef_5= ruleColonSepTypeRef[$current] )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA138_0 = input.LA(1);

                         
                        int index138_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA138_0==LeftCurlyBracket) ) {s = 1;}

                        else if ( (LA138_0==LeftSquareBracket) && (synpred52_InternalN4JSXParser())) {s = 2;}

                        else if ( ((LA138_0>=Intersection && LA138_0<=Implements)||(LA138_0>=Promisify && LA138_0<=Abstract)||LA138_0==External||(LA138_0>=Private && LA138_0<=Project)||LA138_0==Public||LA138_0==Static||LA138_0==Target||(LA138_0>=Async && LA138_0<=Await)||LA138_0==Union||LA138_0==This||LA138_0==From||LA138_0==This_1||(LA138_0>=Type && LA138_0<=Void)||LA138_0==FullStopFullStopFullStop||(LA138_0>=Get && LA138_0<=Let)||(LA138_0>=Out && LA138_0<=Set)||LA138_0==As||LA138_0==Of||(LA138_0>=QuestionMark && LA138_0<=CommercialAt)||LA138_0==Tilde||LA138_0==RULE_IDENTIFIER) ) {s = 3;}

                         
                        input.seek(index138_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA138_1 = input.LA(1);

                         
                        int index138_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_InternalN4JSXParser()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index138_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 138, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_98s = {
            "\1\12\1\10\1\13\1\uffff\1\4\3\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\5\1\uffff\1\13\1\3\7\uffff\1\11\2\uffff\1\2\3\uffff\1\13\1\uffff\1\1\1\uffff\1\7\1\1\2\uffff\1\13\3\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\22\uffff\1\1\4\uffff\1\1\2\uffff\1\1\14\uffff\1\6",
            "",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\1\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            ""
    };
    static final short[][] dfa_98 = unpackEncodedStringArray(dfa_98s);

    class DFA135 extends DFA {

        public DFA135(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 135;
            this.eot = dfa_47;
            this.eof = dfa_47;
            this.min = dfa_88;
            this.max = dfa_89;
            this.accept = dfa_90;
            this.special = dfa_52;
            this.transition = dfa_98;
        }
        public String getDescription() {
            return "6710:3: (this_BogusTypeRefFragment_2= ruleBogusTypeRefFragment[$current] )?";
        }
    }
    static final String dfa_99s = "\120\uffff";
    static final String dfa_100s = "\1\4\13\0\1\uffff\1\0\1\uffff\22\0\57\uffff";
    static final String dfa_101s = "\1\u0095\13\0\1\uffff\1\0\1\uffff\22\0\57\uffff";
    static final String dfa_102s = "\14\uffff\1\3\1\uffff\1\4\22\uffff\1\6\37\uffff\1\7\1\10\2\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\1\1\2\1\5";
    static final String dfa_103s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\uffff\1\14\1\uffff\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\57\uffff}>";
    static final String[] dfa_104s = {
            "\1\32\1\25\1\36\1\uffff\1\34\1\37\1\4\1\7\1\105\1\114\1\6\1\13\3\uffff\1\2\1\3\1\41\2\uffff\1\5\1\107\1\10\1\111\1\27\1\41\1\12\1\35\1\106\1\uffff\1\41\1\11\2\41\1\112\1\31\1\102\1\20\1\33\3\uffff\1\24\3\41\1\30\1\41\1\110\4\uffff\1\102\1\21\1\15\1\41\1\40\1\22\1\113\1\14\5\uffff\1\41\1\uffff\1\41\1\uffff\1\41\7\uffff\1\23\1\102\1\101\1\uffff\1\26\2\uffff\1\41\2\uffff\1\41\2\uffff\1\41\1\uffff\1\41\1\uffff\1\41\1\uffff\1\16\1\41\3\uffff\2\41\2\uffff\1\1\2\uffff\1\41\3\uffff\1\41\1\uffff\4\41\1\uffff\1\41\1\uffff\1\17\2\uffff\1\41\11\uffff\2\41\10\uffff\1\41",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final char[] dfa_100 = DFA.unpackEncodedStringToUnsignedChars(dfa_100s);
    static final char[] dfa_101 = DFA.unpackEncodedStringToUnsignedChars(dfa_101s);
    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final short[][] dfa_104 = unpackEncodedStringArray(dfa_104s);

    class DFA142 extends DFA {

        public DFA142(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 142;
            this.eot = dfa_99;
            this.eof = dfa_99;
            this.min = dfa_100;
            this.max = dfa_101;
            this.accept = dfa_102;
            this.special = dfa_103;
            this.transition = dfa_104;
        }
        public String getDescription() {
            return "6987:1: ( ( ( ( () LeftCurlyBracket ) )=>this_Block_0= ruleBlock ) | ( ( ( () ( ( ruleN4Modifier ) )* ruleAsyncNoTrailingLineBreak[null] Function ) )=>this_FunctionDeclaration_1= ruleFunctionDeclaration ) | ( ( ( () ( ( ruleVariableStatementKeyword ) ) ) )=>this_VariableStatement_2= norm1_VariableStatement ) | this_EmptyStatement_3= ruleEmptyStatement | ( ( ( ( ( ruleBindingIdentifier ) ) Colon ) )=>this_LabelledStatement_4= ruleLabelledStatement ) | this_ExpressionStatement_5= ruleExpressionStatement | this_IfStatement_6= ruleIfStatement | this_IterationStatement_7= ruleIterationStatement | this_ContinueStatement_8= ruleContinueStatement | this_BreakStatement_9= ruleBreakStatement | this_ReturnStatement_10= ruleReturnStatement | this_WithStatement_11= ruleWithStatement | this_SwitchStatement_12= ruleSwitchStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryStatement_14= ruleTryStatement | this_DebuggerStatement_15= ruleDebuggerStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA142_0 = input.LA(1);

                         
                        int index142_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA142_0>=10 && LA142_0<=110 && (s=T2S.M_3[LA142_0-(10)])>=0)) { /* 11 cases */ }
                        else if ( (LA142_0==Var) && (synpred57_InternalN4JSXParser())) {s = 12;}

                        
                        else if ((LA142_0>=4 && LA142_0<=126 && (s=T2S.M_4[LA142_0-(4)])>=0)) { /* 21 cases */ }
                        else if ( (LA142_0==Delete||LA142_0==Typeof||LA142_0==Class||(LA142_0>=False && LA142_0<=Super)||(LA142_0>=Null && LA142_0<=True)||LA142_0==Void||LA142_0==New||LA142_0==PlusSignPlusSign||LA142_0==HyphenMinusHyphenMinus||LA142_0==SolidusEqualsSign||LA142_0==ExclamationMark||LA142_0==LeftParenthesis||LA142_0==PlusSign||LA142_0==HyphenMinus||LA142_0==Solidus||LA142_0==LessThanSign||(LA142_0>=CommercialAt && LA142_0<=LeftSquareBracket)||LA142_0==Tilde||LA142_0==RULE_DOUBLE||(LA142_0>=RULE_HEX_INT && LA142_0<=RULE_LEGACY_OCTAL_INT)||LA142_0==RULE_SCIENTIFIC_INT||LA142_0==RULE_STRING||(LA142_0>=RULE_TEMPLATE_HEAD && LA142_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA142_0==RULE_INT) ) {s = 33;}

                        else if ( (LA142_0==If) ) {s = 65;}

                        else if ( (LA142_0==While||LA142_0==For||LA142_0==Do) ) {s = 66;}

                        else if ( (LA142_0==Continue) ) {s = 69;}

                        else if ( (LA142_0==Break) ) {s = 70;}

                        else if ( (LA142_0==Return) ) {s = 71;}

                        else if ( (LA142_0==With) ) {s = 72;}

                        else if ( (LA142_0==Switch) ) {s = 73;}

                        else if ( (LA142_0==Throw) ) {s = 74;}

                        else if ( (LA142_0==Try) ) {s = 75;}

                        else if ( (LA142_0==Debugger) ) {s = 76;}

                         
                        input.seek(index142_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA142_1 = input.LA(1);

                         
                        int index142_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA142_2 = input.LA(1);

                         
                        int index142_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA142_3 = input.LA(1);

                         
                        int index142_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA142_4 = input.LA(1);

                         
                        int index142_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA142_5 = input.LA(1);

                         
                        int index142_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA142_6 = input.LA(1);

                         
                        int index142_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA142_7 = input.LA(1);

                         
                        int index142_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA142_8 = input.LA(1);

                         
                        int index142_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA142_9 = input.LA(1);

                         
                        int index142_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred57_InternalN4JSXParser()) ) {s = 12;}

                         
                        input.seek(index142_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA142_10 = input.LA(1);

                         
                        int index142_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA142_11 = input.LA(1);

                         
                        int index142_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA142_13 = input.LA(1);

                         
                        int index142_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalN4JSXParser()) ) {s = 12;}

                        else if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA142_15 = input.LA(1);

                         
                        int index142_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA142_16 = input.LA(1);

                         
                        int index142_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA142_17 = input.LA(1);

                         
                        int index142_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA142_18 = input.LA(1);

                         
                        int index142_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA142_19 = input.LA(1);

                         
                        int index142_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA142_20 = input.LA(1);

                         
                        int index142_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA142_21 = input.LA(1);

                         
                        int index142_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA142_22 = input.LA(1);

                         
                        int index142_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA142_23 = input.LA(1);

                         
                        int index142_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA142_24 = input.LA(1);

                         
                        int index142_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA142_25 = input.LA(1);

                         
                        int index142_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA142_26 = input.LA(1);

                         
                        int index142_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_26);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA142_27 = input.LA(1);

                         
                        int index142_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA142_28 = input.LA(1);

                         
                        int index142_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA142_29 = input.LA(1);

                         
                        int index142_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA142_30 = input.LA(1);

                         
                        int index142_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA142_31 = input.LA(1);

                         
                        int index142_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA142_32 = input.LA(1);

                         
                        int index142_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index142_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 142, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_105s = "\1\4\13\0\1\uffff\1\0\1\uffff\21\0\60\uffff";
    static final String dfa_106s = "\1\u0095\13\0\1\uffff\1\0\1\uffff\21\0\60\uffff";
    static final String dfa_107s = "\14\uffff\1\3\1\uffff\1\4\21\uffff\1\6\40\uffff\1\7\1\10\2\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\1\1\2\1\5";
    static final String dfa_108s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\uffff\1\14\1\uffff\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\60\uffff}>";
    static final String[] dfa_109s = {
            "\1\31\1\24\1\35\1\uffff\1\33\1\36\1\4\1\7\1\105\1\114\1\6\1\13\3\uffff\1\2\1\3\1\40\2\uffff\1\5\1\107\1\10\1\111\1\26\1\40\1\12\1\34\1\106\1\uffff\1\40\1\11\2\40\1\112\1\30\1\102\1\40\1\32\3\uffff\1\23\3\40\1\27\1\40\1\110\4\uffff\1\102\1\20\1\15\1\40\1\37\1\21\1\113\1\14\5\uffff\1\40\1\uffff\1\40\1\uffff\1\40\7\uffff\1\22\1\102\1\101\1\uffff\1\25\2\uffff\1\40\2\uffff\1\40\2\uffff\1\40\1\uffff\1\40\1\uffff\1\40\1\uffff\1\16\1\40\3\uffff\2\40\2\uffff\1\1\2\uffff\1\40\3\uffff\1\40\1\uffff\4\40\1\uffff\1\40\1\uffff\1\17\2\uffff\1\40\11\uffff\2\40\10\uffff\1\40",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_105 = DFA.unpackEncodedStringToUnsignedChars(dfa_105s);
    static final char[] dfa_106 = DFA.unpackEncodedStringToUnsignedChars(dfa_106s);
    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final short[][] dfa_109 = unpackEncodedStringArray(dfa_109s);

    class DFA143 extends DFA {

        public DFA143(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 143;
            this.eot = dfa_99;
            this.eof = dfa_99;
            this.min = dfa_105;
            this.max = dfa_106;
            this.accept = dfa_107;
            this.special = dfa_108;
            this.transition = dfa_109;
        }
        public String getDescription() {
            return "7180:1: ( ( ( ( () LeftCurlyBracket ) )=>this_Block_0= norm1_Block ) | ( ( ( () ( ( ruleN4Modifier ) )* ruleAsyncNoTrailingLineBreak[null] Function ) )=>this_FunctionDeclaration_1= norm1_FunctionDeclaration ) | ( ( ( () ( ( ruleVariableStatementKeyword ) ) ) )=>this_VariableStatement_2= norm3_VariableStatement ) | this_EmptyStatement_3= ruleEmptyStatement | ( ( ( ( ( norm1_BindingIdentifier ) ) Colon ) )=>this_LabelledStatement_4= norm1_LabelledStatement ) | this_ExpressionStatement_5= norm1_ExpressionStatement | this_IfStatement_6= norm1_IfStatement | this_IterationStatement_7= norm1_IterationStatement | this_ContinueStatement_8= norm1_ContinueStatement | this_BreakStatement_9= norm1_BreakStatement | this_ReturnStatement_10= norm1_ReturnStatement | this_WithStatement_11= norm1_WithStatement | this_SwitchStatement_12= norm1_SwitchStatement | this_ThrowStatement_13= norm1_ThrowStatement | this_TryStatement_14= norm1_TryStatement | this_DebuggerStatement_15= ruleDebuggerStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA143_0 = input.LA(1);

                         
                        int index143_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA143_0>=10 && LA143_0<=110 && (s=T2S.M_3[LA143_0-(10)])>=0)) { /* 11 cases */ }
                        else if ( (LA143_0==Var) && (synpred61_InternalN4JSXParser())) {s = 12;}

                        
                        else if ((LA143_0>=4 && LA143_0<=126 && (s=T2S.M_6[LA143_0-(4)])>=0)) { /* 20 cases */ }
                        else if ( (LA143_0==Delete||LA143_0==Typeof||LA143_0==Class||(LA143_0>=False && LA143_0<=Super)||LA143_0==Yield||(LA143_0>=Null && LA143_0<=True)||LA143_0==Void||LA143_0==New||LA143_0==PlusSignPlusSign||LA143_0==HyphenMinusHyphenMinus||LA143_0==SolidusEqualsSign||LA143_0==ExclamationMark||LA143_0==LeftParenthesis||LA143_0==PlusSign||LA143_0==HyphenMinus||LA143_0==Solidus||LA143_0==LessThanSign||(LA143_0>=CommercialAt && LA143_0<=LeftSquareBracket)||LA143_0==Tilde||LA143_0==RULE_DOUBLE||(LA143_0>=RULE_HEX_INT && LA143_0<=RULE_LEGACY_OCTAL_INT)||LA143_0==RULE_SCIENTIFIC_INT||LA143_0==RULE_STRING||(LA143_0>=RULE_TEMPLATE_HEAD && LA143_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA143_0==RULE_INT) ) {s = 32;}

                        else if ( (LA143_0==If) ) {s = 65;}

                        else if ( (LA143_0==While||LA143_0==For||LA143_0==Do) ) {s = 66;}

                        else if ( (LA143_0==Continue) ) {s = 69;}

                        else if ( (LA143_0==Break) ) {s = 70;}

                        else if ( (LA143_0==Return) ) {s = 71;}

                        else if ( (LA143_0==With) ) {s = 72;}

                        else if ( (LA143_0==Switch) ) {s = 73;}

                        else if ( (LA143_0==Throw) ) {s = 74;}

                        else if ( (LA143_0==Try) ) {s = 75;}

                        else if ( (LA143_0==Debugger) ) {s = 76;}

                         
                        input.seek(index143_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA143_1 = input.LA(1);

                         
                        int index143_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred59_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA143_2 = input.LA(1);

                         
                        int index143_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA143_3 = input.LA(1);

                         
                        int index143_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA143_4 = input.LA(1);

                         
                        int index143_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA143_5 = input.LA(1);

                         
                        int index143_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA143_6 = input.LA(1);

                         
                        int index143_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA143_7 = input.LA(1);

                         
                        int index143_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA143_8 = input.LA(1);

                         
                        int index143_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA143_9 = input.LA(1);

                         
                        int index143_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred61_InternalN4JSXParser()) ) {s = 12;}

                         
                        input.seek(index143_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA143_10 = input.LA(1);

                         
                        int index143_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA143_11 = input.LA(1);

                         
                        int index143_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA143_13 = input.LA(1);

                         
                        int index143_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalN4JSXParser()) ) {s = 12;}

                        else if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA143_15 = input.LA(1);

                         
                        int index143_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA143_16 = input.LA(1);

                         
                        int index143_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA143_17 = input.LA(1);

                         
                        int index143_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA143_18 = input.LA(1);

                         
                        int index143_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA143_19 = input.LA(1);

                         
                        int index143_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA143_20 = input.LA(1);

                         
                        int index143_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA143_21 = input.LA(1);

                         
                        int index143_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA143_22 = input.LA(1);

                         
                        int index143_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA143_23 = input.LA(1);

                         
                        int index143_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA143_24 = input.LA(1);

                         
                        int index143_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA143_25 = input.LA(1);

                         
                        int index143_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA143_26 = input.LA(1);

                         
                        int index143_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_26);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA143_27 = input.LA(1);

                         
                        int index143_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA143_28 = input.LA(1);

                         
                        int index143_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA143_29 = input.LA(1);

                         
                        int index143_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA143_30 = input.LA(1);

                         
                        int index143_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA143_31 = input.LA(1);

                         
                        int index143_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index143_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 143, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_110s = "\116\uffff";
    static final String dfa_111s = "\1\4\1\0\114\uffff";
    static final String dfa_112s = "\1\u0095\1\0\114\uffff";
    static final String dfa_113s = "\2\uffff\1\2\112\uffff\1\1";
    static final String dfa_114s = "\1\uffff\1\0\114\uffff}>";
    static final String[] dfa_115s = {
            "\3\2\1\uffff\10\2\3\uffff\3\2\2\uffff\11\2\1\uffff\11\2\3\uffff\7\2\4\uffff\10\2\5\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\3\2\1\uffff\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\3\uffff\1\1\1\2\2\uffff\1\2\2\uffff\1\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_110 = DFA.unpackEncodedString(dfa_110s);
    static final char[] dfa_111 = DFA.unpackEncodedStringToUnsignedChars(dfa_111s);
    static final char[] dfa_112 = DFA.unpackEncodedStringToUnsignedChars(dfa_112s);
    static final short[] dfa_113 = DFA.unpackEncodedString(dfa_113s);
    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final short[][] dfa_115 = unpackEncodedStringArray(dfa_115s);

    class DFA144 extends DFA {

        public DFA144(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 144;
            this.eot = dfa_110;
            this.eof = dfa_110;
            this.min = dfa_111;
            this.max = dfa_112;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "7381:1: ( ( ( ( () CommercialAt ( This | Target | RULE_IDENTIFIER ) ) )=>this_AnnotatedFunctionDeclaration_0= ruleAnnotatedFunctionDeclaration ) | this_RootStatement_1= ruleRootStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA144_1 = input.LA(1);

                         
                        int index144_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index144_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 144, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA145 extends DFA {

        public DFA145(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 145;
            this.eot = dfa_110;
            this.eof = dfa_110;
            this.min = dfa_111;
            this.max = dfa_112;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "7422:1: ( ( ( ( () CommercialAt ( This | Target | RULE_IDENTIFIER ) ) )=>this_AnnotatedFunctionDeclaration_0= norm1_AnnotatedFunctionDeclaration ) | this_RootStatement_1= norm1_RootStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA145_1 = input.LA(1);

                         
                        int index145_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index145_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 145, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA148 extends DFA {

        public DFA148(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 148;
            this.eot = dfa_47;
            this.eof = dfa_48;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "()* loopback of 7663:2: ( (lv_declaredModifiers_1_0= ruleN4Modifier ) )*";
        }
    }
    static final String dfa_116s = "\35\uffff";
    static final String dfa_117s = "\1\4\34\uffff";
    static final String dfa_118s = "\1\176\34\uffff";
    static final String dfa_119s = "\1\uffff\33\2\1\1";
    static final String dfa_120s = "\1\0\34\uffff}>";
    static final String[] dfa_121s = {
            "\1\21\1\14\1\26\1\uffff\1\23\1\27\1\31\1\10\2\uffff\1\7\4\uffff\1\30\1\6\3\uffff\1\32\1\uffff\1\11\1\uffff\1\16\1\uffff\1\25\1\24\7\uffff\1\20\1\uffff\1\2\1\22\3\uffff\1\13\3\uffff\1\17\7\uffff\1\3\1\5\1\uffff\1\33\1\4\23\uffff\1\12\3\uffff\1\15\23\uffff\1\34\23\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final char[] dfa_117 = DFA.unpackEncodedStringToUnsignedChars(dfa_117s);
    static final char[] dfa_118 = DFA.unpackEncodedStringToUnsignedChars(dfa_118s);
    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final short[] dfa_120 = DFA.unpackEncodedString(dfa_120s);
    static final short[][] dfa_121 = unpackEncodedStringArray(dfa_121s);

    class DFA160 extends DFA {

        public DFA160(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 160;
            this.eot = dfa_116;
            this.eof = dfa_116;
            this.min = dfa_117;
            this.max = dfa_118;
            this.accept = dfa_119;
            this.special = dfa_120;
            this.transition = dfa_121;
        }
        public String getDescription() {
            return "()* loopback of 8651:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA160_0 = input.LA(1);

                         
                        int index160_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA160_0>=4 && LA160_0<=126 && (s=T2S.M_7[LA160_0-(4)])>=0) && (synpred81_InternalN4JSXParser())) { /* 27 cases */ }
                        else if ( (LA160_0==CommercialAt) ) {s = 28;}

                         
                        input.seek(index160_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 160, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA162 extends DFA {

        public DFA162(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 162;
            this.eot = dfa_116;
            this.eof = dfa_116;
            this.min = dfa_117;
            this.max = dfa_118;
            this.accept = dfa_119;
            this.special = dfa_120;
            this.transition = dfa_121;
        }
        public String getDescription() {
            return "()* loopback of 8727:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA162_0 = input.LA(1);

                         
                        int index162_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA162_0>=4 && LA162_0<=126 && (s=T2S.M_7[LA162_0-(4)])>=0) && (synpred82_InternalN4JSXParser())) { /* 27 cases */ }
                        else if ( (LA162_0==CommercialAt) ) {s = 28;}

                         
                        input.seek(index162_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 162, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_122s = "\34\uffff";
    static final String dfa_123s = "\1\4\33\uffff";
    static final String dfa_124s = "\1\176\33\uffff";
    static final String dfa_125s = "\1\uffff\32\2\1\1";
    static final String dfa_126s = "\1\0\33\uffff}>";
    static final String[] dfa_127s = {
            "\1\20\1\13\1\25\1\uffff\1\22\1\26\1\30\1\7\2\uffff\1\6\4\uffff\1\27\1\5\3\uffff\1\31\1\uffff\1\10\1\uffff\1\15\1\uffff\1\24\1\23\7\uffff\1\17\2\uffff\1\21\3\uffff\1\12\3\uffff\1\16\7\uffff\1\2\1\4\1\uffff\1\32\1\3\23\uffff\1\11\3\uffff\1\14\23\uffff\1\33\23\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_122 = DFA.unpackEncodedString(dfa_122s);
    static final char[] dfa_123 = DFA.unpackEncodedStringToUnsignedChars(dfa_123s);
    static final char[] dfa_124 = DFA.unpackEncodedStringToUnsignedChars(dfa_124s);
    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final short[] dfa_126 = DFA.unpackEncodedString(dfa_126s);
    static final short[][] dfa_127 = unpackEncodedStringArray(dfa_127s);

    class DFA164 extends DFA {

        public DFA164(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 164;
            this.eot = dfa_122;
            this.eof = dfa_122;
            this.min = dfa_123;
            this.max = dfa_124;
            this.accept = dfa_125;
            this.special = dfa_126;
            this.transition = dfa_127;
        }
        public String getDescription() {
            return "()* loopback of 8803:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA164_0 = input.LA(1);

                         
                        int index164_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA164_0>=4 && LA164_0<=126 && (s=T2S.M_9[LA164_0-(4)])>=0) && (synpred83_InternalN4JSXParser())) { /* 26 cases */ }
                        else if ( (LA164_0==CommercialAt) ) {s = 27;}

                         
                        input.seek(index164_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 164, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA166 extends DFA {

        public DFA166(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 166;
            this.eot = dfa_122;
            this.eof = dfa_122;
            this.min = dfa_123;
            this.max = dfa_124;
            this.accept = dfa_125;
            this.special = dfa_126;
            this.transition = dfa_127;
        }
        public String getDescription() {
            return "()* loopback of 8879:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA166_0 = input.LA(1);

                         
                        int index166_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA166_0>=4 && LA166_0<=126 && (s=T2S.M_9[LA166_0-(4)])>=0) && (synpred84_InternalN4JSXParser())) { /* 26 cases */ }
                        else if ( (LA166_0==CommercialAt) ) {s = 27;}

                         
                        input.seek(index166_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 166, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA168 extends DFA {

        public DFA168(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 168;
            this.eot = dfa_116;
            this.eof = dfa_116;
            this.min = dfa_117;
            this.max = dfa_118;
            this.accept = dfa_119;
            this.special = dfa_120;
            this.transition = dfa_121;
        }
        public String getDescription() {
            return "()* loopback of 8955:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA168_0 = input.LA(1);

                         
                        int index168_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA168_0>=4 && LA168_0<=126 && (s=T2S.M_7[LA168_0-(4)])>=0) && (synpred85_InternalN4JSXParser())) { /* 27 cases */ }
                        else if ( (LA168_0==CommercialAt) ) {s = 28;}

                         
                        input.seek(index168_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 168, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA171 extends DFA {

        public DFA171(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 171;
            this.eot = dfa_116;
            this.eof = dfa_116;
            this.min = dfa_117;
            this.max = dfa_118;
            this.accept = dfa_119;
            this.special = dfa_120;
            this.transition = dfa_121;
        }
        public String getDescription() {
            return "()* loopback of 9043:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA171_0 = input.LA(1);

                         
                        int index171_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA171_0>=4 && LA171_0<=126 && (s=T2S.M_7[LA171_0-(4)])>=0) && (synpred86_InternalN4JSXParser())) { /* 27 cases */ }
                        else if ( (LA171_0==CommercialAt) ) {s = 28;}

                         
                        input.seek(index171_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 171, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA174 extends DFA {

        public DFA174(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 174;
            this.eot = dfa_122;
            this.eof = dfa_122;
            this.min = dfa_123;
            this.max = dfa_124;
            this.accept = dfa_125;
            this.special = dfa_126;
            this.transition = dfa_127;
        }
        public String getDescription() {
            return "()* loopback of 9131:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA174_0 = input.LA(1);

                         
                        int index174_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA174_0>=4 && LA174_0<=126 && (s=T2S.M_9[LA174_0-(4)])>=0) && (synpred87_InternalN4JSXParser())) { /* 26 cases */ }
                        else if ( (LA174_0==CommercialAt) ) {s = 27;}

                         
                        input.seek(index174_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 174, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA177 extends DFA {

        public DFA177(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 177;
            this.eot = dfa_122;
            this.eof = dfa_122;
            this.min = dfa_123;
            this.max = dfa_124;
            this.accept = dfa_125;
            this.special = dfa_126;
            this.transition = dfa_127;
        }
        public String getDescription() {
            return "()* loopback of 9219:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA177_0 = input.LA(1);

                         
                        int index177_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA177_0>=4 && LA177_0<=126 && (s=T2S.M_9[LA177_0-(4)])>=0) && (synpred88_InternalN4JSXParser())) { /* 26 cases */ }
                        else if ( (LA177_0==CommercialAt) ) {s = 27;}

                         
                        input.seek(index177_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 177, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_128s = "\1\1\1\3\1\0\1\4\2\uffff\1\2\124\uffff}>";
    static final short[] dfa_128 = DFA.unpackEncodedString(dfa_128s);

    class DFA186 extends DFA {

        public DFA186(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 186;
            this.eot = dfa_61;
            this.eof = dfa_62;
            this.min = dfa_63;
            this.max = dfa_64;
            this.accept = dfa_65;
            this.special = dfa_128;
            this.transition = dfa_67;
        }
        public String getDescription() {
            return "10041:1: ( ( ruleSemi )=> ruleSemi )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA186_2 = input.LA(1);

                         
                        int index186_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA186_2==EOF) ) {s = 6;}

                        
                        else if ((LA186_2>=-1 && LA186_2<=149 && (s=T2S.M_2[LA186_2-(-1)])>=0) && (synpred95_InternalN4JSXParser())) { /* 84 cases */ }
                        input.seek(index186_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA186_0 = input.LA(1);

                         
                        int index186_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA186_0==Semicolon) ) {s = 1;}

                        else if ( (LA186_0==EOF) ) {s = 2;}

                        else if ( (LA186_0==RightCurlyBracket) ) {s = 3;}

                        else if ( (LA186_0==RULE_ML_COMMENT||LA186_0==RULE_EOL) && (synpred95_InternalN4JSXParser())) {s = 4;}

                        else if ( ((LA186_0>=Intersection && LA186_0<=Implements)||(LA186_0>=Promisify && LA186_0<=Default)||(LA186_0>=Private && LA186_0<=Break)||(LA186_0>=Class && LA186_0<=With)||(LA186_0>=For && LA186_0<=Var)||LA186_0==PlusSignPlusSign||LA186_0==HyphenMinusHyphenMinus||LA186_0==SolidusEqualsSign||(LA186_0>=As && LA186_0<=If)||LA186_0==Of||LA186_0==ExclamationMark||LA186_0==LeftParenthesis||LA186_0==PlusSign||LA186_0==HyphenMinus||LA186_0==Solidus||LA186_0==LessThanSign||(LA186_0>=CommercialAt && LA186_0<=LeftSquareBracket)||LA186_0==LeftCurlyBracket||LA186_0==Tilde||LA186_0==RULE_DOUBLE||(LA186_0>=RULE_HEX_INT && LA186_0<=RULE_LEGACY_OCTAL_INT)||LA186_0==RULE_SCIENTIFIC_INT||LA186_0==RULE_IDENTIFIER||LA186_0==RULE_STRING||(LA186_0>=RULE_TEMPLATE_HEAD && LA186_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA186_0==RULE_INT) ) {s = 5;}

                         
                        input.seek(index186_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA186_6 = input.LA(1);

                         
                        int index186_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA186_6==EOF) && (synpred95_InternalN4JSXParser())) {s = 90;}

                         
                        input.seek(index186_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA186_1 = input.LA(1);

                         
                        int index186_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalN4JSXParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index186_1);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA186_3 = input.LA(1);

                         
                        int index186_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalN4JSXParser()) ) {s = 89;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index186_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 186, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_129s = "\102\uffff";
    static final String dfa_130s = "\1\4\1\0\100\uffff";
    static final String dfa_131s = "\1\u0095\1\0\100\uffff";
    static final String dfa_132s = "\2\uffff\1\2\76\uffff\1\1";
    static final String dfa_133s = "\1\uffff\1\0\100\uffff}>";
    static final String[] dfa_134s = {
            "\3\2\1\uffff\4\2\2\uffff\2\2\3\uffff\3\2\2\uffff\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\4\2\1\uffff\1\2\1\uffff\2\2\3\uffff\6\2\6\uffff\1\2\1\1\3\2\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\1\2\3\uffff\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\3\uffff\2\2\2\uffff\1\2\2\uffff\1\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_129 = DFA.unpackEncodedString(dfa_129s);
    static final char[] dfa_130 = DFA.unpackEncodedStringToUnsignedChars(dfa_130s);
    static final char[] dfa_131 = DFA.unpackEncodedStringToUnsignedChars(dfa_131s);
    static final short[] dfa_132 = DFA.unpackEncodedString(dfa_132s);
    static final short[] dfa_133 = DFA.unpackEncodedString(dfa_133s);
    static final short[][] dfa_134 = unpackEncodedStringArray(dfa_134s);

    class DFA205 extends DFA {

        public DFA205(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 205;
            this.eot = dfa_129;
            this.eof = dfa_129;
            this.min = dfa_130;
            this.max = dfa_131;
            this.accept = dfa_132;
            this.special = dfa_133;
            this.transition = dfa_134;
        }
        public String getDescription() {
            return "10299:1: ( ( ( ( ( ( ruleLetIdentifierRef ) ) ( ( In ) ) ( ( norm1_Expression ) ) RightParenthesis ) )=> ( ( (lv_initExpr_3_0= ruleLetIdentifierRef ) ) ( (lv_forIn_4_0= In ) ) ( (lv_expression_5_0= norm1_Expression ) ) otherlv_6= RightParenthesis ) ) | ( ( ( ( ( Var | Const | Let )=> (lv_varStmtKeyword_7_0= ruleVariableStatementKeyword ) ) ( ( ( ( ( ( ruleBindingIdentifierAsVariableDeclaration ) ) ( ( ( In ) ) | ( ( Of ) ) ) ( Await | CommercialAt | LeftParenthesis | Async | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )? ) )=> ( ( (lv_varDeclsOrBindings_8_0= ruleBindingIdentifierAsVariableDeclaration ) ) ( ( (lv_forIn_9_0= In ) ) | ( (lv_forOf_10_0= Of ) ) ) ( ( Await | CommercialAt | LeftParenthesis | Async | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm1_AssignmentExpression ) )? ) ) | ( ( (lv_varDeclsOrBindings_12_0= norm4_VariableDeclarationOrBinding ) ) ( ( (otherlv_13= Comma ( (lv_varDeclsOrBindings_14_0= ruleVariableDeclarationOrBinding ) ) )* otherlv_15= Semicolon ( (lv_expression_16_0= norm1_Expression ) )? otherlv_17= Semicolon ( (lv_updateExpr_18_0= norm1_Expression ) )? ) | ( ( (lv_forIn_19_0= In ) ) ( (lv_expression_20_0= norm1_Expression ) )? ) | ( ( (lv_forOf_21_0= Of ) ) ( (lv_expression_22_0= norm1_AssignmentExpression ) )? ) ) ) ) ) | ( ( (lv_initExpr_23_0= ruleExpression ) ) ( (otherlv_24= Semicolon ( (lv_expression_25_0= norm1_Expression ) )? otherlv_26= Semicolon ( (lv_updateExpr_27_0= norm1_Expression ) )? ) | ( ( (lv_forIn_28_0= In ) ) ( (lv_expression_29_0= norm1_Expression ) )? ) | ( ( (lv_forOf_30_0= Of ) ) ( (lv_expression_31_0= norm1_AssignmentExpression ) )? ) ) ) | (otherlv_32= Semicolon ( (lv_expression_33_0= norm1_Expression ) )? otherlv_34= Semicolon ( (lv_updateExpr_35_0= norm1_Expression ) )? ) ) otherlv_36= RightParenthesis ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA205_1 = input.LA(1);

                         
                        int index205_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalN4JSXParser()) ) {s = 65;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index205_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 205, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_135s = "\1\4\2\uffff\1\0\75\uffff";
    static final String dfa_136s = "\1\u0095\2\uffff\1\0\75\uffff";
    static final String dfa_137s = "\1\uffff\2\1\1\uffff\1\2\73\uffff\1\3";
    static final String dfa_138s = "\1\0\2\uffff\1\1\75\uffff}>";
    static final String[] dfa_139s = {
            "\3\4\1\uffff\4\4\2\uffff\2\4\3\uffff\3\4\2\uffff\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\1\2\2\4\1\uffff\1\4\1\uffff\2\4\3\uffff\6\4\6\uffff\1\4\1\3\3\4\1\uffff\1\1\5\uffff\1\4\1\uffff\1\4\1\uffff\1\4\7\uffff\1\4\3\uffff\1\4\2\uffff\1\4\2\uffff\1\4\2\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\1\100\1\4\3\uffff\2\4\2\uffff\1\4\2\uffff\1\4\3\uffff\1\4\1\uffff\4\4\1\uffff\1\4\1\uffff\1\4\2\uffff\1\4\11\uffff\2\4\10\uffff\1\4",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_135 = DFA.unpackEncodedStringToUnsignedChars(dfa_135s);
    static final char[] dfa_136 = DFA.unpackEncodedStringToUnsignedChars(dfa_136s);
    static final short[] dfa_137 = DFA.unpackEncodedString(dfa_137s);
    static final short[] dfa_138 = DFA.unpackEncodedString(dfa_138s);
    static final short[][] dfa_139 = unpackEncodedStringArray(dfa_139s);

    class DFA204 extends DFA {

        public DFA204(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 204;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_135;
            this.max = dfa_136;
            this.accept = dfa_137;
            this.special = dfa_138;
            this.transition = dfa_139;
        }
        public String getDescription() {
            return "10374:7: ( ( ( ( Var | Const | Let )=> (lv_varStmtKeyword_7_0= ruleVariableStatementKeyword ) ) ( ( ( ( ( ( ruleBindingIdentifierAsVariableDeclaration ) ) ( ( ( In ) ) | ( ( Of ) ) ) ( Await | CommercialAt | LeftParenthesis | Async | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )? ) )=> ( ( (lv_varDeclsOrBindings_8_0= ruleBindingIdentifierAsVariableDeclaration ) ) ( ( (lv_forIn_9_0= In ) ) | ( (lv_forOf_10_0= Of ) ) ) ( ( Await | CommercialAt | LeftParenthesis | Async | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm1_AssignmentExpression ) )? ) ) | ( ( (lv_varDeclsOrBindings_12_0= norm4_VariableDeclarationOrBinding ) ) ( ( (otherlv_13= Comma ( (lv_varDeclsOrBindings_14_0= ruleVariableDeclarationOrBinding ) ) )* otherlv_15= Semicolon ( (lv_expression_16_0= norm1_Expression ) )? otherlv_17= Semicolon ( (lv_updateExpr_18_0= norm1_Expression ) )? ) | ( ( (lv_forIn_19_0= In ) ) ( (lv_expression_20_0= norm1_Expression ) )? ) | ( ( (lv_forOf_21_0= Of ) ) ( (lv_expression_22_0= norm1_AssignmentExpression ) )? ) ) ) ) ) | ( ( (lv_initExpr_23_0= ruleExpression ) ) ( (otherlv_24= Semicolon ( (lv_expression_25_0= norm1_Expression ) )? otherlv_26= Semicolon ( (lv_updateExpr_27_0= norm1_Expression ) )? ) | ( ( (lv_forIn_28_0= In ) ) ( (lv_expression_29_0= norm1_Expression ) )? ) | ( ( (lv_forOf_30_0= Of ) ) ( (lv_expression_31_0= norm1_AssignmentExpression ) )? ) ) ) | (otherlv_32= Semicolon ( (lv_expression_33_0= norm1_Expression ) )? otherlv_34= Semicolon ( (lv_updateExpr_35_0= norm1_Expression ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA204_0 = input.LA(1);

                         
                        int index204_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA204_0==Var) && (synpred98_InternalN4JSXParser())) {s = 1;}

                        else if ( (LA204_0==Const) && (synpred98_InternalN4JSXParser())) {s = 2;}

                        else if ( (LA204_0==Let) ) {s = 3;}

                        else if ( ((LA204_0>=Intersection && LA204_0<=Implements)||(LA204_0>=Promisify && LA204_0<=Abstract)||(LA204_0>=External && LA204_0<=Function)||(LA204_0>=Private && LA204_0<=Delete)||LA204_0==Public||LA204_0==Static||(LA204_0>=Target && LA204_0<=Await)||LA204_0==Class||(LA204_0>=False && LA204_0<=Super)||LA204_0==Union||(LA204_0>=Yield && LA204_0<=This)||(LA204_0>=From && LA204_0<=Void)||LA204_0==Get||(LA204_0>=New && LA204_0<=Set)||LA204_0==PlusSignPlusSign||LA204_0==HyphenMinusHyphenMinus||LA204_0==SolidusEqualsSign||LA204_0==As||LA204_0==Of||LA204_0==ExclamationMark||LA204_0==LeftParenthesis||LA204_0==PlusSign||LA204_0==HyphenMinus||LA204_0==Solidus||LA204_0==LessThanSign||(LA204_0>=CommercialAt && LA204_0<=LeftSquareBracket)||LA204_0==LeftCurlyBracket||LA204_0==Tilde||LA204_0==RULE_DOUBLE||(LA204_0>=RULE_HEX_INT && LA204_0<=RULE_LEGACY_OCTAL_INT)||LA204_0==RULE_SCIENTIFIC_INT||LA204_0==RULE_IDENTIFIER||LA204_0==RULE_STRING||(LA204_0>=RULE_TEMPLATE_HEAD && LA204_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA204_0==RULE_INT) ) {s = 4;}

                        else if ( (LA204_0==Semicolon) ) {s = 64;}

                         
                        input.seek(index204_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA204_3 = input.LA(1);

                         
                        int index204_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalN4JSXParser()) ) {s = 2;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index204_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 204, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_140s = "\40\uffff";
    static final String dfa_141s = "\1\4\33\125\1\uffff\2\0\1\uffff";
    static final String dfa_142s = "\1\176\33\147\1\uffff\2\0\1\uffff";
    static final String dfa_143s = "\34\uffff\1\2\2\uffff\1\1";
    static final String dfa_144s = "\35\uffff\1\1\1\0\1\uffff}>";
    static final String[] dfa_145s = {
            "\1\21\1\14\1\26\1\uffff\1\23\1\27\1\31\1\10\2\uffff\1\7\4\uffff\1\30\1\6\3\uffff\1\32\1\uffff\1\11\1\uffff\1\16\1\uffff\1\25\1\24\7\uffff\1\20\1\uffff\1\2\1\22\3\uffff\1\13\3\uffff\1\17\7\uffff\1\3\1\5\1\uffff\1\33\1\4\23\uffff\1\12\3\uffff\1\15\23\uffff\2\34\2\uffff\1\34\17\uffff\1\1",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_140 = DFA.unpackEncodedString(dfa_140s);
    static final char[] dfa_141 = DFA.unpackEncodedStringToUnsignedChars(dfa_141s);
    static final char[] dfa_142 = DFA.unpackEncodedStringToUnsignedChars(dfa_142s);
    static final short[] dfa_143 = DFA.unpackEncodedString(dfa_143s);
    static final short[] dfa_144 = DFA.unpackEncodedString(dfa_144s);
    static final short[][] dfa_145 = unpackEncodedStringArray(dfa_145s);

    class DFA196 extends DFA {

        public DFA196(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 196;
            this.eot = dfa_140;
            this.eof = dfa_140;
            this.min = dfa_141;
            this.max = dfa_142;
            this.accept = dfa_143;
            this.special = dfa_144;
            this.transition = dfa_145;
        }
        public String getDescription() {
            return "10398:2: ( ( ( ( ( ( ruleBindingIdentifierAsVariableDeclaration ) ) ( ( ( In ) ) | ( ( Of ) ) ) ( Await | CommercialAt | LeftParenthesis | Async | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )? ) )=> ( ( (lv_varDeclsOrBindings_8_0= ruleBindingIdentifierAsVariableDeclaration ) ) ( ( (lv_forIn_9_0= In ) ) | ( (lv_forOf_10_0= Of ) ) ) ( ( Await | CommercialAt | LeftParenthesis | Async | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm1_AssignmentExpression ) )? ) ) | ( ( (lv_varDeclsOrBindings_12_0= norm4_VariableDeclarationOrBinding ) ) ( ( (otherlv_13= Comma ( (lv_varDeclsOrBindings_14_0= ruleVariableDeclarationOrBinding ) ) )* otherlv_15= Semicolon ( (lv_expression_16_0= norm1_Expression ) )? otherlv_17= Semicolon ( (lv_updateExpr_18_0= norm1_Expression ) )? ) | ( ( (lv_forIn_19_0= In ) ) ( (lv_expression_20_0= norm1_Expression ) )? ) | ( ( (lv_forOf_21_0= Of ) ) ( (lv_expression_22_0= norm1_AssignmentExpression ) )? ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA196_30 = input.LA(1);

                         
                        int index196_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalN4JSXParser()) ) {s = 31;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index196_30);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA196_29 = input.LA(1);

                         
                        int index196_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalN4JSXParser()) ) {s = 31;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index196_29);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 196, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_146s = "\1\4\76\uffff";
    static final String dfa_147s = "\1\u0095\76\uffff";
    static final String dfa_148s = "\1\uffff\75\1\1\2";
    static final String dfa_149s = "\1\0\76\uffff}>";
    static final String[] dfa_150s = {
            "\1\25\1\20\1\30\1\uffff\1\27\1\31\1\33\1\14\2\uffff\1\13\1\61\3\uffff\1\32\1\12\1\65\2\uffff\1\34\1\uffff\1\15\1\uffff\1\22\1\67\1\4\1\1\2\uffff\1\62\1\uffff\1\52\1\40\1\uffff\1\24\1\uffff\1\6\1\26\3\uffff\1\17\1\54\1\37\1\51\1\23\1\66\6\uffff\1\7\1\11\1\36\1\35\1\10\7\uffff\1\70\1\uffff\1\71\1\uffff\1\56\7\uffff\1\16\3\uffff\1\21\2\uffff\1\75\2\uffff\1\3\1\76\1\uffff\1\72\1\uffff\1\73\1\uffff\1\55\2\uffff\1\41\3\uffff\1\2\1\57\2\uffff\1\60\2\uffff\1\74\3\uffff\1\42\1\uffff\1\47\1\44\1\45\1\46\1\uffff\1\50\1\uffff\1\5\2\uffff\1\53\11\uffff\1\64\1\63\10\uffff\1\43",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_146 = DFA.unpackEncodedStringToUnsignedChars(dfa_146s);
    static final char[] dfa_147 = DFA.unpackEncodedStringToUnsignedChars(dfa_147s);
    static final short[] dfa_148 = DFA.unpackEncodedString(dfa_148s);
    static final short[] dfa_149 = DFA.unpackEncodedString(dfa_149s);
    static final short[][] dfa_150 = unpackEncodedStringArray(dfa_150s);

    class DFA189 extends DFA {

        public DFA189(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 189;
            this.eot = dfa_75;
            this.eof = dfa_75;
            this.min = dfa_146;
            this.max = dfa_147;
            this.accept = dfa_148;
            this.special = dfa_149;
            this.transition = dfa_150;
        }
        public String getDescription() {
            return "10628:3: ( ( Await | CommercialAt | LeftParenthesis | Async | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm1_AssignmentExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA189_0 = input.LA(1);

                         
                        int index189_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA189_0>=4 && LA189_0<=149 && (s=T2S.M_16[LA189_0-(4)])>=0) && (synpred100_InternalN4JSXParser())) { /* 61 cases */ }
                        else if ( (LA189_0==RightParenthesis) ) {s = 62;}

                         
                        input.seek(index189_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 189, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA223 extends DFA {

        public DFA223(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 223;
            this.eot = dfa_129;
            this.eof = dfa_129;
            this.min = dfa_130;
            this.max = dfa_131;
            this.accept = dfa_132;
            this.special = dfa_133;
            this.transition = dfa_134;
        }
        public String getDescription() {
            return "11138:1: ( ( ( ( ( ( ruleLetIdentifierRef ) ) ( ( In ) ) ( ( norm3_Expression ) ) RightParenthesis ) )=> ( ( (lv_initExpr_3_0= ruleLetIdentifierRef ) ) ( (lv_forIn_4_0= In ) ) ( (lv_expression_5_0= norm3_Expression ) ) otherlv_6= RightParenthesis ) ) | ( ( ( ( ( Var | Const | Let )=> (lv_varStmtKeyword_7_0= ruleVariableStatementKeyword ) ) ( ( ( ( ( ( norm2_BindingIdentifierAsVariableDeclaration ) ) ( ( ( In ) ) | ( ( Of ) ) ) ( Await | CommercialAt | LeftParenthesis | Async | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )? ) )=> ( ( (lv_varDeclsOrBindings_8_0= norm2_BindingIdentifierAsVariableDeclaration ) ) ( ( (lv_forIn_9_0= In ) ) | ( (lv_forOf_10_0= Of ) ) ) ( ( Await | CommercialAt | LeftParenthesis | Async | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm3_AssignmentExpression ) )? ) ) | ( ( (lv_varDeclsOrBindings_12_0= norm6_VariableDeclarationOrBinding ) ) ( ( (otherlv_13= Comma ( (lv_varDeclsOrBindings_14_0= norm2_VariableDeclarationOrBinding ) ) )* otherlv_15= Semicolon ( (lv_expression_16_0= norm3_Expression ) )? otherlv_17= Semicolon ( (lv_updateExpr_18_0= norm3_Expression ) )? ) | ( ( (lv_forIn_19_0= In ) ) ( (lv_expression_20_0= norm3_Expression ) )? ) | ( ( (lv_forOf_21_0= Of ) ) ( (lv_expression_22_0= norm3_AssignmentExpression ) )? ) ) ) ) ) | ( ( (lv_initExpr_23_0= norm2_Expression ) ) ( (otherlv_24= Semicolon ( (lv_expression_25_0= norm3_Expression ) )? otherlv_26= Semicolon ( (lv_updateExpr_27_0= norm3_Expression ) )? ) | ( ( (lv_forIn_28_0= In ) ) ( (lv_expression_29_0= norm3_Expression ) )? ) | ( ( (lv_forOf_30_0= Of ) ) ( (lv_expression_31_0= norm3_AssignmentExpression ) )? ) ) ) | (otherlv_32= Semicolon ( (lv_expression_33_0= norm3_Expression ) )? otherlv_34= Semicolon ( (lv_updateExpr_35_0= norm3_Expression ) )? ) ) otherlv_36= RightParenthesis ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA223_1 = input.LA(1);

                         
                        int index223_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalN4JSXParser()) ) {s = 65;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index223_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 223, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA222 extends DFA {

        public DFA222(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 222;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_135;
            this.max = dfa_136;
            this.accept = dfa_137;
            this.special = dfa_138;
            this.transition = dfa_139;
        }
        public String getDescription() {
            return "11213:7: ( ( ( ( Var | Const | Let )=> (lv_varStmtKeyword_7_0= ruleVariableStatementKeyword ) ) ( ( ( ( ( ( norm2_BindingIdentifierAsVariableDeclaration ) ) ( ( ( In ) ) | ( ( Of ) ) ) ( Await | CommercialAt | LeftParenthesis | Async | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )? ) )=> ( ( (lv_varDeclsOrBindings_8_0= norm2_BindingIdentifierAsVariableDeclaration ) ) ( ( (lv_forIn_9_0= In ) ) | ( (lv_forOf_10_0= Of ) ) ) ( ( Await | CommercialAt | LeftParenthesis | Async | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm3_AssignmentExpression ) )? ) ) | ( ( (lv_varDeclsOrBindings_12_0= norm6_VariableDeclarationOrBinding ) ) ( ( (otherlv_13= Comma ( (lv_varDeclsOrBindings_14_0= norm2_VariableDeclarationOrBinding ) ) )* otherlv_15= Semicolon ( (lv_expression_16_0= norm3_Expression ) )? otherlv_17= Semicolon ( (lv_updateExpr_18_0= norm3_Expression ) )? ) | ( ( (lv_forIn_19_0= In ) ) ( (lv_expression_20_0= norm3_Expression ) )? ) | ( ( (lv_forOf_21_0= Of ) ) ( (lv_expression_22_0= norm3_AssignmentExpression ) )? ) ) ) ) ) | ( ( (lv_initExpr_23_0= norm2_Expression ) ) ( (otherlv_24= Semicolon ( (lv_expression_25_0= norm3_Expression ) )? otherlv_26= Semicolon ( (lv_updateExpr_27_0= norm3_Expression ) )? ) | ( ( (lv_forIn_28_0= In ) ) ( (lv_expression_29_0= norm3_Expression ) )? ) | ( ( (lv_forOf_30_0= Of ) ) ( (lv_expression_31_0= norm3_AssignmentExpression ) )? ) ) ) | (otherlv_32= Semicolon ( (lv_expression_33_0= norm3_Expression ) )? otherlv_34= Semicolon ( (lv_updateExpr_35_0= norm3_Expression ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA222_0 = input.LA(1);

                         
                        int index222_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA222_0==Var) && (synpred102_InternalN4JSXParser())) {s = 1;}

                        else if ( (LA222_0==Const) && (synpred102_InternalN4JSXParser())) {s = 2;}

                        else if ( (LA222_0==Let) ) {s = 3;}

                        else if ( ((LA222_0>=Intersection && LA222_0<=Implements)||(LA222_0>=Promisify && LA222_0<=Abstract)||(LA222_0>=External && LA222_0<=Function)||(LA222_0>=Private && LA222_0<=Delete)||LA222_0==Public||LA222_0==Static||(LA222_0>=Target && LA222_0<=Await)||LA222_0==Class||(LA222_0>=False && LA222_0<=Super)||LA222_0==Union||(LA222_0>=Yield && LA222_0<=This)||(LA222_0>=From && LA222_0<=Void)||LA222_0==Get||(LA222_0>=New && LA222_0<=Set)||LA222_0==PlusSignPlusSign||LA222_0==HyphenMinusHyphenMinus||LA222_0==SolidusEqualsSign||LA222_0==As||LA222_0==Of||LA222_0==ExclamationMark||LA222_0==LeftParenthesis||LA222_0==PlusSign||LA222_0==HyphenMinus||LA222_0==Solidus||LA222_0==LessThanSign||(LA222_0>=CommercialAt && LA222_0<=LeftSquareBracket)||LA222_0==LeftCurlyBracket||LA222_0==Tilde||LA222_0==RULE_DOUBLE||(LA222_0>=RULE_HEX_INT && LA222_0<=RULE_LEGACY_OCTAL_INT)||LA222_0==RULE_SCIENTIFIC_INT||LA222_0==RULE_IDENTIFIER||LA222_0==RULE_STRING||(LA222_0>=RULE_TEMPLATE_HEAD && LA222_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA222_0==RULE_INT) ) {s = 4;}

                        else if ( (LA222_0==Semicolon) ) {s = 64;}

                         
                        input.seek(index222_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA222_3 = input.LA(1);

                         
                        int index222_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalN4JSXParser()) ) {s = 2;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index222_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 222, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_151s = "\37\uffff";
    static final String dfa_152s = "\1\4\32\125\1\uffff\2\0\1\uffff";
    static final String dfa_153s = "\1\176\32\147\1\uffff\2\0\1\uffff";
    static final String dfa_154s = "\33\uffff\1\2\2\uffff\1\1";
    static final String dfa_155s = "\34\uffff\1\1\1\0\1\uffff}>";
    static final String[] dfa_156s = {
            "\1\20\1\13\1\25\1\uffff\1\22\1\26\1\30\1\7\2\uffff\1\6\4\uffff\1\27\1\5\3\uffff\1\31\1\uffff\1\10\1\uffff\1\15\1\uffff\1\24\1\23\7\uffff\1\17\2\uffff\1\21\3\uffff\1\12\3\uffff\1\16\7\uffff\1\2\1\4\1\uffff\1\32\1\3\23\uffff\1\11\3\uffff\1\14\23\uffff\2\33\2\uffff\1\33\17\uffff\1\1",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_151 = DFA.unpackEncodedString(dfa_151s);
    static final char[] dfa_152 = DFA.unpackEncodedStringToUnsignedChars(dfa_152s);
    static final char[] dfa_153 = DFA.unpackEncodedStringToUnsignedChars(dfa_153s);
    static final short[] dfa_154 = DFA.unpackEncodedString(dfa_154s);
    static final short[] dfa_155 = DFA.unpackEncodedString(dfa_155s);
    static final short[][] dfa_156 = unpackEncodedStringArray(dfa_156s);

    class DFA214 extends DFA {

        public DFA214(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 214;
            this.eot = dfa_151;
            this.eof = dfa_151;
            this.min = dfa_152;
            this.max = dfa_153;
            this.accept = dfa_154;
            this.special = dfa_155;
            this.transition = dfa_156;
        }
        public String getDescription() {
            return "11237:2: ( ( ( ( ( ( norm2_BindingIdentifierAsVariableDeclaration ) ) ( ( ( In ) ) | ( ( Of ) ) ) ( Await | CommercialAt | LeftParenthesis | Async | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )? ) )=> ( ( (lv_varDeclsOrBindings_8_0= norm2_BindingIdentifierAsVariableDeclaration ) ) ( ( (lv_forIn_9_0= In ) ) | ( (lv_forOf_10_0= Of ) ) ) ( ( Await | CommercialAt | LeftParenthesis | Async | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm3_AssignmentExpression ) )? ) ) | ( ( (lv_varDeclsOrBindings_12_0= norm6_VariableDeclarationOrBinding ) ) ( ( (otherlv_13= Comma ( (lv_varDeclsOrBindings_14_0= norm2_VariableDeclarationOrBinding ) ) )* otherlv_15= Semicolon ( (lv_expression_16_0= norm3_Expression ) )? otherlv_17= Semicolon ( (lv_updateExpr_18_0= norm3_Expression ) )? ) | ( ( (lv_forIn_19_0= In ) ) ( (lv_expression_20_0= norm3_Expression ) )? ) | ( ( (lv_forOf_21_0= Of ) ) ( (lv_expression_22_0= norm3_AssignmentExpression ) )? ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA214_29 = input.LA(1);

                         
                        int index214_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalN4JSXParser()) ) {s = 30;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index214_29);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA214_28 = input.LA(1);

                         
                        int index214_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalN4JSXParser()) ) {s = 30;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index214_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 214, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_157s = {
            "\1\24\1\17\1\27\1\uffff\1\26\1\30\1\32\1\13\2\uffff\1\12\1\61\3\uffff\1\31\1\11\1\65\2\uffff\1\33\1\uffff\1\14\1\uffff\1\21\1\67\1\4\1\1\2\uffff\1\62\1\uffff\1\52\1\40\1\uffff\1\23\1\uffff\1\35\1\25\3\uffff\1\16\1\54\1\37\1\51\1\22\1\66\6\uffff\1\6\1\10\1\36\1\34\1\7\7\uffff\1\70\1\uffff\1\71\1\uffff\1\56\7\uffff\1\15\3\uffff\1\20\2\uffff\1\75\2\uffff\1\3\1\76\1\uffff\1\72\1\uffff\1\73\1\uffff\1\55\2\uffff\1\41\3\uffff\1\2\1\57\2\uffff\1\60\2\uffff\1\74\3\uffff\1\42\1\uffff\1\47\1\44\1\45\1\46\1\uffff\1\50\1\uffff\1\5\2\uffff\1\53\11\uffff\1\64\1\63\10\uffff\1\43",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_157 = unpackEncodedStringArray(dfa_157s);

    class DFA207 extends DFA {

        public DFA207(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 207;
            this.eot = dfa_75;
            this.eof = dfa_75;
            this.min = dfa_146;
            this.max = dfa_147;
            this.accept = dfa_148;
            this.special = dfa_149;
            this.transition = dfa_157;
        }
        public String getDescription() {
            return "11467:3: ( ( Await | CommercialAt | LeftParenthesis | Async | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm3_AssignmentExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA207_0 = input.LA(1);

                         
                        int index207_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA207_0>=4 && LA207_0<=149 && (s=T2S.M_17[LA207_0-(4)])>=0) && (synpred104_InternalN4JSXParser())) { /* 61 cases */ }
                        else if ( (LA207_0==RightParenthesis) ) {s = 62;}

                         
                        input.seek(index207_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 207, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_158s = "\1\4\1\0\1\uffff\33\0\5\uffff";
    static final String dfa_159s = "\1\176\1\0\1\uffff\33\0\5\uffff";
    static final String dfa_160s = "\2\uffff\1\1\33\uffff\1\3\3\uffff\1\2";
    static final String dfa_161s = "\1\0\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\5\uffff}>";
    static final String[] dfa_162s = {
            "\1\23\1\16\1\30\1\uffff\1\25\1\31\1\33\1\12\2\uffff\1\11\4\uffff\1\32\1\10\3\uffff\1\34\1\uffff\1\13\1\uffff\1\20\1\uffff\1\27\1\26\7\uffff\1\22\1\uffff\1\4\1\24\3\uffff\1\15\1\uffff\1\36\1\uffff\1\21\1\36\6\uffff\1\5\1\7\1\uffff\1\35\1\6\23\uffff\1\14\3\uffff\1\17\22\uffff\1\36\1\uffff\1\2\2\uffff\1\1\2\uffff\1\36\14\uffff\1\3",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_158 = DFA.unpackEncodedStringToUnsignedChars(dfa_158s);
    static final char[] dfa_159 = DFA.unpackEncodedStringToUnsignedChars(dfa_159s);
    static final short[] dfa_160 = DFA.unpackEncodedString(dfa_160s);
    static final short[] dfa_161 = DFA.unpackEncodedString(dfa_161s);
    static final short[][] dfa_162 = unpackEncodedStringArray(dfa_162s);

    class DFA245 extends DFA {

        public DFA245(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 245;
            this.eot = dfa_92;
            this.eof = dfa_92;
            this.min = dfa_158;
            this.max = dfa_159;
            this.accept = dfa_160;
            this.special = dfa_161;
            this.transition = dfa_162;
        }
        public String getDescription() {
            return "13590:1: ( ( ( ( ruleBindingPattern ) )=> (lv_bindingPattern_0_0= ruleBindingPattern ) ) | ( ( ( ( ( ruleBindingIdentifier ) ) Colon ) )=> ( ( (lv_name_1_0= ruleBindingIdentifier ) ) ( ( Colon )=>this_ColonSepTypeRef_2= ruleColonSepTypeRef[$current] ) ) ) | ( (this_BogusTypeRefFragment_3= ruleBogusTypeRefFragment[$current] )? ( (lv_name_4_0= ruleBindingIdentifier ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA245_0 = input.LA(1);

                         
                        int index245_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA245_0==LeftCurlyBracket) ) {s = 1;}

                        else if ( (LA245_0==LeftSquareBracket) && (synpred111_InternalN4JSXParser())) {s = 2;}

                        
                        else if ((LA245_0>=4 && LA245_0<=126 && (s=T2S.M_18[LA245_0-(4)])>=0)) { /* 27 cases */ }
                        else if ( (LA245_0==This_1||LA245_0==Void||LA245_0==QuestionMark||LA245_0==Tilde) ) {s = 30;}

                         
                        input.seek(index245_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA245_1 = input.LA(1);

                         
                        int index245_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalN4JSXParser()) ) {s = 2;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA245_3 = input.LA(1);

                         
                        int index245_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA245_4 = input.LA(1);

                         
                        int index245_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA245_5 = input.LA(1);

                         
                        int index245_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA245_6 = input.LA(1);

                         
                        int index245_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA245_7 = input.LA(1);

                         
                        int index245_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA245_8 = input.LA(1);

                         
                        int index245_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA245_9 = input.LA(1);

                         
                        int index245_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA245_10 = input.LA(1);

                         
                        int index245_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA245_11 = input.LA(1);

                         
                        int index245_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA245_12 = input.LA(1);

                         
                        int index245_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA245_13 = input.LA(1);

                         
                        int index245_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA245_14 = input.LA(1);

                         
                        int index245_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA245_15 = input.LA(1);

                         
                        int index245_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA245_16 = input.LA(1);

                         
                        int index245_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA245_17 = input.LA(1);

                         
                        int index245_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA245_18 = input.LA(1);

                         
                        int index245_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA245_19 = input.LA(1);

                         
                        int index245_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA245_20 = input.LA(1);

                         
                        int index245_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA245_21 = input.LA(1);

                         
                        int index245_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA245_22 = input.LA(1);

                         
                        int index245_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA245_23 = input.LA(1);

                         
                        int index245_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA245_24 = input.LA(1);

                         
                        int index245_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA245_25 = input.LA(1);

                         
                        int index245_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA245_26 = input.LA(1);

                         
                        int index245_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA245_27 = input.LA(1);

                         
                        int index245_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA245_28 = input.LA(1);

                         
                        int index245_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA245_29 = input.LA(1);

                         
                        int index245_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index245_29);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 245, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_163s = {
            "\1\12\1\10\1\13\1\uffff\1\4\3\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\5\1\uffff\1\13\1\3\7\uffff\1\11\1\uffff\1\13\1\2\3\uffff\1\13\1\uffff\1\1\1\uffff\1\7\1\1\6\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\22\uffff\1\1\4\uffff\1\1\2\uffff\1\1\14\uffff\1\6",
            "",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\2\uffff\1\1\3\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\1\13\20\uffff\1\1",
            "\1\13\20\uffff\1\1",
            "\1\13\20\uffff\1\1",
            "\1\13\20\uffff\1\1",
            ""
    };
    static final short[][] dfa_163 = unpackEncodedStringArray(dfa_163s);

    class DFA244 extends DFA {

        public DFA244(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 244;
            this.eot = dfa_47;
            this.eof = dfa_87;
            this.min = dfa_88;
            this.max = dfa_89;
            this.accept = dfa_90;
            this.special = dfa_52;
            this.transition = dfa_163;
        }
        public String getDescription() {
            return "13652:7: (this_BogusTypeRefFragment_3= ruleBogusTypeRefFragment[$current] )?";
        }
    }
    static final String dfa_164s = "\42\uffff";
    static final String dfa_165s = "\1\4\1\0\1\uffff\32\0\5\uffff";
    static final String dfa_166s = "\1\176\1\0\1\uffff\32\0\5\uffff";
    static final String dfa_167s = "\2\uffff\1\1\32\uffff\1\3\3\uffff\1\2";
    static final String dfa_168s = "\1\0\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\5\uffff}>";
    static final String[] dfa_169s = {
            "\1\22\1\15\1\27\1\uffff\1\24\1\30\1\32\1\11\2\uffff\1\10\4\uffff\1\31\1\7\3\uffff\1\33\1\uffff\1\12\1\uffff\1\17\1\uffff\1\26\1\25\7\uffff\1\21\2\uffff\1\23\3\uffff\1\14\1\uffff\1\35\1\uffff\1\20\1\35\6\uffff\1\4\1\6\1\uffff\1\34\1\5\23\uffff\1\13\3\uffff\1\16\22\uffff\1\35\1\uffff\1\2\2\uffff\1\1\2\uffff\1\35\14\uffff\1\3",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_164 = DFA.unpackEncodedString(dfa_164s);
    static final char[] dfa_165 = DFA.unpackEncodedStringToUnsignedChars(dfa_165s);
    static final char[] dfa_166 = DFA.unpackEncodedStringToUnsignedChars(dfa_166s);
    static final short[] dfa_167 = DFA.unpackEncodedString(dfa_167s);
    static final short[] dfa_168 = DFA.unpackEncodedString(dfa_168s);
    static final short[][] dfa_169 = unpackEncodedStringArray(dfa_169s);

    class DFA247 extends DFA {

        public DFA247(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 247;
            this.eot = dfa_164;
            this.eof = dfa_164;
            this.min = dfa_165;
            this.max = dfa_166;
            this.accept = dfa_167;
            this.special = dfa_168;
            this.transition = dfa_169;
        }
        public String getDescription() {
            return "13695:1: ( ( ( ( norm1_BindingPattern ) )=> (lv_bindingPattern_0_0= norm1_BindingPattern ) ) | ( ( ( ( ( norm1_BindingIdentifier ) ) Colon ) )=> ( ( (lv_name_1_0= norm1_BindingIdentifier ) ) ( ( Colon )=>this_ColonSepTypeRef_2= ruleColonSepTypeRef[$current] ) ) ) | ( (this_BogusTypeRefFragment_3= ruleBogusTypeRefFragment[$current] )? ( (lv_name_4_0= norm1_BindingIdentifier ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA247_0 = input.LA(1);

                         
                        int index247_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA247_0==LeftCurlyBracket) ) {s = 1;}

                        else if ( (LA247_0==LeftSquareBracket) && (synpred114_InternalN4JSXParser())) {s = 2;}

                        
                        else if ((LA247_0>=4 && LA247_0<=126 && (s=T2S.M_19[LA247_0-(4)])>=0)) { /* 26 cases */ }
                        else if ( (LA247_0==This_1||LA247_0==Void||LA247_0==QuestionMark||LA247_0==Tilde) ) {s = 29;}

                         
                        input.seek(index247_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA247_1 = input.LA(1);

                         
                        int index247_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred114_InternalN4JSXParser()) ) {s = 2;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA247_3 = input.LA(1);

                         
                        int index247_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA247_4 = input.LA(1);

                         
                        int index247_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA247_5 = input.LA(1);

                         
                        int index247_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA247_6 = input.LA(1);

                         
                        int index247_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA247_7 = input.LA(1);

                         
                        int index247_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA247_8 = input.LA(1);

                         
                        int index247_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA247_9 = input.LA(1);

                         
                        int index247_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA247_10 = input.LA(1);

                         
                        int index247_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA247_11 = input.LA(1);

                         
                        int index247_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA247_12 = input.LA(1);

                         
                        int index247_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA247_13 = input.LA(1);

                         
                        int index247_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA247_14 = input.LA(1);

                         
                        int index247_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA247_15 = input.LA(1);

                         
                        int index247_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA247_16 = input.LA(1);

                         
                        int index247_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA247_17 = input.LA(1);

                         
                        int index247_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA247_18 = input.LA(1);

                         
                        int index247_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA247_19 = input.LA(1);

                         
                        int index247_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA247_20 = input.LA(1);

                         
                        int index247_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA247_21 = input.LA(1);

                         
                        int index247_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA247_22 = input.LA(1);

                         
                        int index247_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA247_23 = input.LA(1);

                         
                        int index247_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA247_24 = input.LA(1);

                         
                        int index247_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA247_25 = input.LA(1);

                         
                        int index247_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA247_26 = input.LA(1);

                         
                        int index247_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA247_27 = input.LA(1);

                         
                        int index247_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA247_28 = input.LA(1);

                         
                        int index247_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index247_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 247, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_170s = {
            "\1\12\1\10\1\13\1\uffff\1\4\3\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\5\1\uffff\1\13\1\3\7\uffff\1\11\2\uffff\1\2\3\uffff\1\13\1\uffff\1\1\1\uffff\1\7\1\1\6\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\22\uffff\1\1\4\uffff\1\1\2\uffff\1\1\14\uffff\1\6",
            "",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\2\uffff\1\1\3\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\1\13\20\uffff\1\1",
            "\1\13\20\uffff\1\1",
            "\1\13\20\uffff\1\1",
            "\1\13\20\uffff\1\1",
            ""
    };
    static final short[][] dfa_170 = unpackEncodedStringArray(dfa_170s);

    class DFA246 extends DFA {

        public DFA246(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 246;
            this.eot = dfa_47;
            this.eof = dfa_47;
            this.min = dfa_88;
            this.max = dfa_89;
            this.accept = dfa_90;
            this.special = dfa_52;
            this.transition = dfa_170;
        }
        public String getDescription() {
            return "13757:7: (this_BogusTypeRefFragment_3= ruleBogusTypeRefFragment[$current] )?";
        }
    }
    static final String dfa_171s = "\5\uffff";
    static final String dfa_172s = "\1\140\1\4\1\uffff\1\4\1\uffff";
    static final String dfa_173s = "\1\154\1\u0095\1\uffff\1\u0095\1\uffff";
    static final String dfa_174s = "\2\uffff\1\2\1\uffff\1\1";
    static final String dfa_175s = "\5\uffff}>";
    static final String[] dfa_176s = {
            "\1\1\13\uffff\1\2",
            "\3\4\1\uffff\4\4\2\uffff\2\4\3\uffff\3\4\2\uffff\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\3\uffff\6\4\2\uffff\1\4\3\uffff\5\4\7\uffff\1\4\1\uffff\1\4\1\uffff\1\4\7\uffff\1\4\3\uffff\1\4\2\uffff\1\4\2\uffff\1\4\2\uffff\1\4\1\3\1\4\1\uffff\1\4\2\uffff\1\4\3\uffff\2\4\1\2\1\uffff\1\4\2\uffff\1\4\3\uffff\1\4\1\uffff\4\4\1\uffff\1\4\1\uffff\1\4\2\uffff\1\4\11\uffff\2\4\10\uffff\1\4",
            "",
            "\3\4\1\uffff\4\4\2\uffff\2\4\3\uffff\3\4\2\uffff\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\3\uffff\6\4\2\uffff\1\4\3\uffff\5\4\7\uffff\1\4\1\uffff\1\4\1\uffff\1\4\7\uffff\1\4\3\uffff\1\4\2\uffff\1\4\2\uffff\1\4\2\uffff\1\4\1\3\1\4\1\uffff\1\4\2\uffff\1\4\3\uffff\2\4\1\2\1\uffff\1\4\2\uffff\1\4\3\uffff\1\4\1\uffff\4\4\1\uffff\1\4\1\uffff\1\4\2\uffff\1\4\11\uffff\2\4\10\uffff\1\4",
            ""
    };

    static final short[] dfa_171 = DFA.unpackEncodedString(dfa_171s);
    static final char[] dfa_172 = DFA.unpackEncodedStringToUnsignedChars(dfa_172s);
    static final char[] dfa_173 = DFA.unpackEncodedStringToUnsignedChars(dfa_173s);
    static final short[] dfa_174 = DFA.unpackEncodedString(dfa_174s);
    static final short[] dfa_175 = DFA.unpackEncodedString(dfa_175s);
    static final short[][] dfa_176 = unpackEncodedStringArray(dfa_176s);

    class DFA250 extends DFA {

        public DFA250(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 250;
            this.eot = dfa_171;
            this.eof = dfa_171;
            this.min = dfa_172;
            this.max = dfa_173;
            this.accept = dfa_174;
            this.special = dfa_175;
            this.transition = dfa_176;
        }
        public String getDescription() {
            return "()* loopback of 14213:2: (otherlv_4= Comma ( (lv_elements_5_0= ruleArrayPadding ) )* ( (lv_elements_6_0= ruleArrayElement ) ) )*";
        }
    }

    class DFA256 extends DFA {

        public DFA256(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 256;
            this.eot = dfa_171;
            this.eof = dfa_171;
            this.min = dfa_172;
            this.max = dfa_173;
            this.accept = dfa_174;
            this.special = dfa_175;
            this.transition = dfa_176;
        }
        public String getDescription() {
            return "()* loopback of 14353:2: (otherlv_4= Comma ( (lv_elements_5_0= ruleArrayPadding ) )* ( (lv_elements_6_0= norm1_ArrayElement ) ) )*";
        }
    }
    static final String dfa_177s = "\121\uffff";
    static final String dfa_178s = "\1\4\1\uffff\111\0\6\uffff";
    static final String dfa_179s = "\1\u0095\1\uffff\111\0\6\uffff";
    static final String dfa_180s = "\1\uffff\1\1\111\uffff\2\5\1\6\1\2\1\3\1\4";
    static final String dfa_181s = "\1\0\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\6\uffff}>";
    static final String[] dfa_182s = {
            "\1\16\1\13\1\76\1\43\1\5\1\77\1\101\1\70\1\25\1\26\1\67\1\37\1\27\1\34\1\35\1\100\1\66\1\30\1\33\1\41\1\102\1\45\1\71\1\47\1\6\1\52\1\75\1\4\1\20\1\22\1\23\1\24\1\61\1\46\1\50\1\15\1\54\1\56\1\3\1\21\1\32\1\62\1\73\1\57\1\11\1\60\1\12\1\2\1\55\4\uffff\1\36\1\63\1\65\1\44\1\103\1\64\1\51\1\53\21\uffff\1\72\1\31\1\40\1\42\1\74\5\uffff\1\115\1\uffff\1\114\7\uffff\1\113\2\uffff\1\17\1\1\1\112\2\uffff\1\14\2\uffff\1\10\3\uffff\1\105\1\uffff\1\110\1\uffff\1\107\2\uffff\1\111\1\uffff\1\7\2\uffff\1\104\23\uffff\1\106",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_177 = DFA.unpackEncodedString(dfa_177s);
    static final char[] dfa_178 = DFA.unpackEncodedStringToUnsignedChars(dfa_178s);
    static final char[] dfa_179 = DFA.unpackEncodedStringToUnsignedChars(dfa_179s);
    static final short[] dfa_180 = DFA.unpackEncodedString(dfa_180s);
    static final short[] dfa_181 = DFA.unpackEncodedString(dfa_181s);
    static final short[][] dfa_182 = unpackEncodedStringArray(dfa_182s);

    class DFA268 extends DFA {

        public DFA268(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 268;
            this.eot = dfa_177;
            this.eof = dfa_177;
            this.min = dfa_178;
            this.max = dfa_179;
            this.accept = dfa_180;
            this.special = dfa_181;
            this.transition = dfa_182;
        }
        public String getDescription() {
            return "14758:1: (this_AnnotatedPropertyAssignment_0= ruleAnnotatedPropertyAssignment | ( ( ( () ( ( ruleTypeRefWithModifiers ) )? ( ( ruleLiteralOrComputedPropertyName ) ) Colon ) )=>this_PropertyNameValuePair_1= rulePropertyNameValuePair ) | ( ( ( () ruleGetterHeader[null] ) )=>this_PropertyGetterDeclaration_2= rulePropertyGetterDeclaration ) | ( ( ( () Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=>this_PropertySetterDeclaration_3= rulePropertySetterDeclaration ) | ( ( ( () ( ruleTypeVariables[null] )? ( ( ruleTypeRefWithModifiers ) )? ( ( ( ( Asterisk ) ) ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=>this_PropertyMethodDeclaration_4= rulePropertyMethodDeclaration ) | this_PropertyNameValuePairSingleName_5= rulePropertyNameValuePairSingleName )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA268_0 = input.LA(1);

                         
                        int index268_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA268_0>=4 && LA268_0<=149 && (s=T2S.M_20[LA268_0-(4)])>=0)) { /* 74 cases */ }
                        else if ( (LA268_0==LessThanSign) && (synpred122_InternalN4JSXParser())) {s = 75;}

                        else if ( (LA268_0==Asterisk) && (synpred122_InternalN4JSXParser())) {s = 76;}

                        else if ( (LA268_0==LeftParenthesis) ) {s = 77;}

                         
                        input.seek(index268_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA268_2 = input.LA(1);

                         
                        int index268_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred120_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA268_3 = input.LA(1);

                         
                        int index268_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred120_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA268_4 = input.LA(1);

                         
                        int index268_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred120_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA268_5 = input.LA(1);

                         
                        int index268_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred120_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA268_6 = input.LA(1);

                         
                        int index268_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred120_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA268_7 = input.LA(1);

                         
                        int index268_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred120_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA268_8 = input.LA(1);

                         
                        int index268_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred120_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA268_9 = input.LA(1);

                         
                        int index268_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred120_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA268_10 = input.LA(1);

                         
                        int index268_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred120_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA268_11 = input.LA(1);

                         
                        int index268_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred120_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA268_12 = input.LA(1);

                         
                        int index268_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred120_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA268_13 = input.LA(1);

                         
                        int index268_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred120_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA268_14 = input.LA(1);

                         
                        int index268_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred120_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA268_15 = input.LA(1);

                         
                        int index268_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred120_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA268_16 = input.LA(1);

                         
                        int index268_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA268_17 = input.LA(1);

                         
                        int index268_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA268_18 = input.LA(1);

                         
                        int index268_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA268_19 = input.LA(1);

                         
                        int index268_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA268_20 = input.LA(1);

                         
                        int index268_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA268_21 = input.LA(1);

                         
                        int index268_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA268_22 = input.LA(1);

                         
                        int index268_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA268_23 = input.LA(1);

                         
                        int index268_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA268_24 = input.LA(1);

                         
                        int index268_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA268_25 = input.LA(1);

                         
                        int index268_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA268_26 = input.LA(1);

                         
                        int index268_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA268_27 = input.LA(1);

                         
                        int index268_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA268_28 = input.LA(1);

                         
                        int index268_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA268_29 = input.LA(1);

                         
                        int index268_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA268_30 = input.LA(1);

                         
                        int index268_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA268_31 = input.LA(1);

                         
                        int index268_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA268_32 = input.LA(1);

                         
                        int index268_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA268_33 = input.LA(1);

                         
                        int index268_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA268_34 = input.LA(1);

                         
                        int index268_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA268_35 = input.LA(1);

                         
                        int index268_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_35);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA268_36 = input.LA(1);

                         
                        int index268_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_36);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA268_37 = input.LA(1);

                         
                        int index268_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_37);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA268_38 = input.LA(1);

                         
                        int index268_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_38);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA268_39 = input.LA(1);

                         
                        int index268_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_39);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA268_40 = input.LA(1);

                         
                        int index268_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_40);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA268_41 = input.LA(1);

                         
                        int index268_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_41);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA268_42 = input.LA(1);

                         
                        int index268_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_42);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA268_43 = input.LA(1);

                         
                        int index268_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_43);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA268_44 = input.LA(1);

                         
                        int index268_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_44);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA268_45 = input.LA(1);

                         
                        int index268_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_45);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA268_46 = input.LA(1);

                         
                        int index268_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_46);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA268_47 = input.LA(1);

                         
                        int index268_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_47);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA268_48 = input.LA(1);

                         
                        int index268_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_48);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA268_49 = input.LA(1);

                         
                        int index268_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_49);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA268_50 = input.LA(1);

                         
                        int index268_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_50);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA268_51 = input.LA(1);

                         
                        int index268_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred120_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_51);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA268_52 = input.LA(1);

                         
                        int index268_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred121_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_52);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA268_53 = input.LA(1);

                         
                        int index268_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_53);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA268_54 = input.LA(1);

                         
                        int index268_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_54);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA268_55 = input.LA(1);

                         
                        int index268_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_55);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA268_56 = input.LA(1);

                         
                        int index268_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_56);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA268_57 = input.LA(1);

                         
                        int index268_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_57);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA268_58 = input.LA(1);

                         
                        int index268_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_58);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA268_59 = input.LA(1);

                         
                        int index268_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_59);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA268_60 = input.LA(1);

                         
                        int index268_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_60);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA268_61 = input.LA(1);

                         
                        int index268_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_61);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA268_62 = input.LA(1);

                         
                        int index268_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_62);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA268_63 = input.LA(1);

                         
                        int index268_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_63);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA268_64 = input.LA(1);

                         
                        int index268_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_64);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA268_65 = input.LA(1);

                         
                        int index268_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_65);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA268_66 = input.LA(1);

                         
                        int index268_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_66);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA268_67 = input.LA(1);

                         
                        int index268_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_67);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA268_68 = input.LA(1);

                         
                        int index268_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_68);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA268_69 = input.LA(1);

                         
                        int index268_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_69);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA268_70 = input.LA(1);

                         
                        int index268_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_70);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA268_71 = input.LA(1);

                         
                        int index268_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_71);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA268_72 = input.LA(1);

                         
                        int index268_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_72);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA268_73 = input.LA(1);

                         
                        int index268_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index268_73);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA268_74 = input.LA(1);

                         
                        int index268_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred122_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index268_74);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 268, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA269 extends DFA {

        public DFA269(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 269;
            this.eot = dfa_177;
            this.eof = dfa_177;
            this.min = dfa_178;
            this.max = dfa_179;
            this.accept = dfa_180;
            this.special = dfa_181;
            this.transition = dfa_182;
        }
        public String getDescription() {
            return "15065:1: (this_AnnotatedPropertyAssignment_0= norm1_AnnotatedPropertyAssignment | ( ( ( () ( ( ruleTypeRefWithModifiers ) )? ( ( norm1_LiteralOrComputedPropertyName ) ) Colon ) )=>this_PropertyNameValuePair_1= norm1_PropertyNameValuePair ) | ( ( ( () norm1_GetterHeader[null] ) )=>this_PropertyGetterDeclaration_2= norm1_PropertyGetterDeclaration ) | ( ( ( () Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=>this_PropertySetterDeclaration_3= norm1_PropertySetterDeclaration ) | ( ( ( () ( ruleTypeVariables[null] )? ( ( ruleTypeRefWithModifiers ) )? ( ( ( ( Asterisk ) ) ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=>this_PropertyMethodDeclaration_4= norm1_PropertyMethodDeclaration ) | this_PropertyNameValuePairSingleName_5= norm1_PropertyNameValuePairSingleName )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA269_0 = input.LA(1);

                         
                        int index269_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA269_0>=4 && LA269_0<=149 && (s=T2S.M_20[LA269_0-(4)])>=0)) { /* 74 cases */ }
                        else if ( (LA269_0==LessThanSign) && (synpred126_InternalN4JSXParser())) {s = 75;}

                        else if ( (LA269_0==Asterisk) && (synpred126_InternalN4JSXParser())) {s = 76;}

                        else if ( (LA269_0==LeftParenthesis) ) {s = 77;}

                         
                        input.seek(index269_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA269_2 = input.LA(1);

                         
                        int index269_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred124_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA269_3 = input.LA(1);

                         
                        int index269_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred124_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA269_4 = input.LA(1);

                         
                        int index269_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred124_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA269_5 = input.LA(1);

                         
                        int index269_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred124_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA269_6 = input.LA(1);

                         
                        int index269_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred124_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA269_7 = input.LA(1);

                         
                        int index269_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred124_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA269_8 = input.LA(1);

                         
                        int index269_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred124_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA269_9 = input.LA(1);

                         
                        int index269_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred124_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA269_10 = input.LA(1);

                         
                        int index269_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred124_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA269_11 = input.LA(1);

                         
                        int index269_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred124_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA269_12 = input.LA(1);

                         
                        int index269_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred124_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA269_13 = input.LA(1);

                         
                        int index269_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred124_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA269_14 = input.LA(1);

                         
                        int index269_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred124_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA269_15 = input.LA(1);

                         
                        int index269_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred124_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA269_16 = input.LA(1);

                         
                        int index269_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA269_17 = input.LA(1);

                         
                        int index269_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA269_18 = input.LA(1);

                         
                        int index269_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA269_19 = input.LA(1);

                         
                        int index269_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA269_20 = input.LA(1);

                         
                        int index269_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA269_21 = input.LA(1);

                         
                        int index269_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA269_22 = input.LA(1);

                         
                        int index269_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA269_23 = input.LA(1);

                         
                        int index269_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA269_24 = input.LA(1);

                         
                        int index269_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA269_25 = input.LA(1);

                         
                        int index269_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA269_26 = input.LA(1);

                         
                        int index269_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA269_27 = input.LA(1);

                         
                        int index269_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA269_28 = input.LA(1);

                         
                        int index269_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA269_29 = input.LA(1);

                         
                        int index269_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA269_30 = input.LA(1);

                         
                        int index269_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA269_31 = input.LA(1);

                         
                        int index269_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA269_32 = input.LA(1);

                         
                        int index269_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA269_33 = input.LA(1);

                         
                        int index269_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA269_34 = input.LA(1);

                         
                        int index269_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA269_35 = input.LA(1);

                         
                        int index269_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_35);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA269_36 = input.LA(1);

                         
                        int index269_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_36);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA269_37 = input.LA(1);

                         
                        int index269_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_37);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA269_38 = input.LA(1);

                         
                        int index269_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_38);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA269_39 = input.LA(1);

                         
                        int index269_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_39);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA269_40 = input.LA(1);

                         
                        int index269_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_40);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA269_41 = input.LA(1);

                         
                        int index269_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_41);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA269_42 = input.LA(1);

                         
                        int index269_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_42);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA269_43 = input.LA(1);

                         
                        int index269_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_43);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA269_44 = input.LA(1);

                         
                        int index269_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_44);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA269_45 = input.LA(1);

                         
                        int index269_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_45);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA269_46 = input.LA(1);

                         
                        int index269_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_46);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA269_47 = input.LA(1);

                         
                        int index269_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_47);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA269_48 = input.LA(1);

                         
                        int index269_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_48);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA269_49 = input.LA(1);

                         
                        int index269_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_49);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA269_50 = input.LA(1);

                         
                        int index269_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_50);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA269_51 = input.LA(1);

                         
                        int index269_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred124_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_51);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA269_52 = input.LA(1);

                         
                        int index269_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred125_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_52);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA269_53 = input.LA(1);

                         
                        int index269_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_53);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA269_54 = input.LA(1);

                         
                        int index269_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_54);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA269_55 = input.LA(1);

                         
                        int index269_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_55);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA269_56 = input.LA(1);

                         
                        int index269_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_56);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA269_57 = input.LA(1);

                         
                        int index269_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_57);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA269_58 = input.LA(1);

                         
                        int index269_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_58);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA269_59 = input.LA(1);

                         
                        int index269_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_59);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA269_60 = input.LA(1);

                         
                        int index269_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_60);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA269_61 = input.LA(1);

                         
                        int index269_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_61);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA269_62 = input.LA(1);

                         
                        int index269_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_62);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA269_63 = input.LA(1);

                         
                        int index269_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_63);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA269_64 = input.LA(1);

                         
                        int index269_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_64);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA269_65 = input.LA(1);

                         
                        int index269_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_65);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA269_66 = input.LA(1);

                         
                        int index269_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_66);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA269_67 = input.LA(1);

                         
                        int index269_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_67);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA269_68 = input.LA(1);

                         
                        int index269_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_68);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA269_69 = input.LA(1);

                         
                        int index269_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_69);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA269_70 = input.LA(1);

                         
                        int index269_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_70);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA269_71 = input.LA(1);

                         
                        int index269_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_71);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA269_72 = input.LA(1);

                         
                        int index269_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_72);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA269_73 = input.LA(1);

                         
                        int index269_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index269_73);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA269_74 = input.LA(1);

                         
                        int index269_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred126_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index269_74);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 269, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_183s = "\1\4\111\0\6\uffff";
    static final String dfa_184s = "\1\u0095\111\0\6\uffff";
    static final String dfa_185s = "\112\uffff\2\4\1\5\1\1\1\2\1\3";
    static final String dfa_186s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\6\uffff}>";
    static final String[] dfa_187s = {
            "\1\15\1\12\1\75\1\42\1\4\1\76\1\100\1\67\1\24\1\25\1\66\1\36\1\26\1\33\1\34\1\77\1\65\1\27\1\32\1\40\1\101\1\44\1\70\1\46\1\5\1\51\1\74\1\3\1\17\1\21\1\22\1\23\1\60\1\45\1\47\1\14\1\53\1\55\1\2\1\20\1\31\1\61\1\72\1\56\1\10\1\57\1\11\1\1\1\54\4\uffff\1\35\1\62\1\64\1\43\1\102\1\63\1\50\1\52\21\uffff\1\71\1\30\1\37\1\41\1\73\5\uffff\1\114\1\uffff\1\113\7\uffff\1\112\2\uffff\1\16\1\uffff\1\111\2\uffff\1\13\2\uffff\1\7\3\uffff\1\104\1\uffff\1\107\1\uffff\1\106\2\uffff\1\110\1\uffff\1\6\2\uffff\1\103\23\uffff\1\105",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_183 = DFA.unpackEncodedStringToUnsignedChars(dfa_183s);
    static final char[] dfa_184 = DFA.unpackEncodedStringToUnsignedChars(dfa_184s);
    static final short[] dfa_185 = DFA.unpackEncodedString(dfa_185s);
    static final short[] dfa_186 = DFA.unpackEncodedString(dfa_186s);
    static final short[][] dfa_187 = unpackEncodedStringArray(dfa_187s);

    class DFA277 extends DFA {

        public DFA277(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 277;
            this.eot = dfa_99;
            this.eof = dfa_99;
            this.min = dfa_183;
            this.max = dfa_184;
            this.accept = dfa_185;
            this.special = dfa_186;
            this.transition = dfa_187;
        }
        public String getDescription() {
            return "15389:1: ( ( ( ( ( () ( ( ruleTypeRefWithModifiers ) )? ( ( ruleLiteralOrComputedPropertyName ) ) Colon ) )=> ( () ( (lv_declaredTypeRef_2_0= ruleTypeRefWithModifiers ) )? ( (lv_declaredName_3_0= ruleLiteralOrComputedPropertyName ) ) otherlv_4= Colon ) ) ( (lv_expression_5_0= norm1_AssignmentExpression ) ) ) | ( ( ( ( () ruleGetterHeader[null] ) )=> ( () this_GetterHeader_7= ruleGetterHeader[$current] ) ) ( ( ( () LeftCurlyBracket ) )=> (lv_body_8_0= ruleBlock ) ) ) | ( ( ( ( () Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=> ( () otherlv_10= Set ( ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT )=> (lv_declaredName_11_0= ruleLiteralOrComputedPropertyName ) ) ) ) otherlv_12= LeftParenthesis ( (lv_fpar_13_0= ruleFormalParameter ) ) otherlv_14= RightParenthesis ( ( ( () LeftCurlyBracket ) )=> (lv_body_15_0= ruleBlock ) ) ) | ( ( ( ( () ( ruleTypeVariables[null] )? ( ( ruleTypeRefWithModifiers ) )? ( ( ( ( Asterisk ) ) ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=> ( () (this_TypeVariables_17= ruleTypeVariables[$current] )? ( (lv_returnTypeRef_18_0= ruleTypeRefWithModifiers ) )? ( ( ( (lv_generator_19_0= Asterisk ) ) ( (lv_declaredName_20_0= ruleLiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsAndBody_21= norm1_MethodParamsAndBody[$current] ) ) | ( ( (lv_declaredName_22_0= ruleLiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsAndBody_23= ruleMethodParamsAndBody[$current] ) ) ) ) ) (otherlv_24= Semicolon )? ) | ( () ( (lv_declaredTypeRef_26_0= ruleTypeRef ) )? ( (lv_identifierRef_27_0= ruleIdentifierRef ) ) (otherlv_28= EqualsSign ( (lv_expression_29_0= norm1_AssignmentExpression ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA277_0 = input.LA(1);

                         
                        int index277_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA277_0>=4 && LA277_0<=149 && (s=T2S.M_22[LA277_0-(4)])>=0)) { /* 73 cases */ }
                        else if ( (LA277_0==LessThanSign) && (synpred133_InternalN4JSXParser())) {s = 74;}

                        else if ( (LA277_0==Asterisk) && (synpred133_InternalN4JSXParser())) {s = 75;}

                        else if ( (LA277_0==LeftParenthesis) ) {s = 76;}

                         
                        input.seek(index277_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA277_1 = input.LA(1);

                         
                        int index277_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred128_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA277_2 = input.LA(1);

                         
                        int index277_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred128_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA277_3 = input.LA(1);

                         
                        int index277_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred128_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA277_4 = input.LA(1);

                         
                        int index277_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred128_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA277_5 = input.LA(1);

                         
                        int index277_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred128_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA277_6 = input.LA(1);

                         
                        int index277_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred128_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA277_7 = input.LA(1);

                         
                        int index277_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred128_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA277_8 = input.LA(1);

                         
                        int index277_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred128_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA277_9 = input.LA(1);

                         
                        int index277_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred128_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA277_10 = input.LA(1);

                         
                        int index277_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred128_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA277_11 = input.LA(1);

                         
                        int index277_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred128_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA277_12 = input.LA(1);

                         
                        int index277_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred128_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA277_13 = input.LA(1);

                         
                        int index277_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred128_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA277_14 = input.LA(1);

                         
                        int index277_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred128_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA277_15 = input.LA(1);

                         
                        int index277_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA277_16 = input.LA(1);

                         
                        int index277_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA277_17 = input.LA(1);

                         
                        int index277_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA277_18 = input.LA(1);

                         
                        int index277_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA277_19 = input.LA(1);

                         
                        int index277_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA277_20 = input.LA(1);

                         
                        int index277_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA277_21 = input.LA(1);

                         
                        int index277_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA277_22 = input.LA(1);

                         
                        int index277_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_22);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA277_23 = input.LA(1);

                         
                        int index277_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_23);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA277_24 = input.LA(1);

                         
                        int index277_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_24);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA277_25 = input.LA(1);

                         
                        int index277_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_25);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA277_26 = input.LA(1);

                         
                        int index277_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_26);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA277_27 = input.LA(1);

                         
                        int index277_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_27);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA277_28 = input.LA(1);

                         
                        int index277_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_28);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA277_29 = input.LA(1);

                         
                        int index277_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_29);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA277_30 = input.LA(1);

                         
                        int index277_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_30);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA277_31 = input.LA(1);

                         
                        int index277_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_31);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA277_32 = input.LA(1);

                         
                        int index277_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_32);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA277_33 = input.LA(1);

                         
                        int index277_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_33);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA277_34 = input.LA(1);

                         
                        int index277_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_34);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA277_35 = input.LA(1);

                         
                        int index277_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_35);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA277_36 = input.LA(1);

                         
                        int index277_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_36);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA277_37 = input.LA(1);

                         
                        int index277_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_37);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA277_38 = input.LA(1);

                         
                        int index277_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_38);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA277_39 = input.LA(1);

                         
                        int index277_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_39);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA277_40 = input.LA(1);

                         
                        int index277_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_40);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA277_41 = input.LA(1);

                         
                        int index277_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_41);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA277_42 = input.LA(1);

                         
                        int index277_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_42);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA277_43 = input.LA(1);

                         
                        int index277_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_43);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA277_44 = input.LA(1);

                         
                        int index277_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_44);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA277_45 = input.LA(1);

                         
                        int index277_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_45);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA277_46 = input.LA(1);

                         
                        int index277_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_46);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA277_47 = input.LA(1);

                         
                        int index277_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_47);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA277_48 = input.LA(1);

                         
                        int index277_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_48);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA277_49 = input.LA(1);

                         
                        int index277_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_49);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA277_50 = input.LA(1);

                         
                        int index277_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred128_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_50);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA277_51 = input.LA(1);

                         
                        int index277_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred130_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_51);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA277_52 = input.LA(1);

                         
                        int index277_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_52);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA277_53 = input.LA(1);

                         
                        int index277_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_53);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA277_54 = input.LA(1);

                         
                        int index277_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_54);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA277_55 = input.LA(1);

                         
                        int index277_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_55);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA277_56 = input.LA(1);

                         
                        int index277_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_56);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA277_57 = input.LA(1);

                         
                        int index277_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_57);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA277_58 = input.LA(1);

                         
                        int index277_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_58);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA277_59 = input.LA(1);

                         
                        int index277_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_59);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA277_60 = input.LA(1);

                         
                        int index277_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_60);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA277_61 = input.LA(1);

                         
                        int index277_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_61);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA277_62 = input.LA(1);

                         
                        int index277_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_62);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA277_63 = input.LA(1);

                         
                        int index277_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_63);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA277_64 = input.LA(1);

                         
                        int index277_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_64);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA277_65 = input.LA(1);

                         
                        int index277_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_65);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA277_66 = input.LA(1);

                         
                        int index277_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_66);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA277_67 = input.LA(1);

                         
                        int index277_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_67);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA277_68 = input.LA(1);

                         
                        int index277_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_68);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA277_69 = input.LA(1);

                         
                        int index277_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_69);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA277_70 = input.LA(1);

                         
                        int index277_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_70);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA277_71 = input.LA(1);

                         
                        int index277_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_71);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA277_72 = input.LA(1);

                         
                        int index277_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index277_72);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA277_73 = input.LA(1);

                         
                        int index277_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred133_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index277_73);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 277, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_188s = "\7\4\1\uffff\1\4\4\144\1\uffff";
    static final String dfa_189s = "\7\u0095\1\uffff\1\u0095\4\156\1\uffff";
    static final String dfa_190s = "\7\uffff\1\1\5\uffff\1\2";
    static final String[] dfa_191s = {
            "\1\14\1\12\2\15\1\4\23\15\1\5\2\15\1\3\7\15\1\13\2\15\1\2\5\15\1\10\1\15\1\11\1\1\1\15\4\uffff\10\15\21\uffff\5\15\22\uffff\1\7\1\uffff\1\15\2\uffff\1\7\2\uffff\1\7\3\uffff\1\15\1\uffff\1\15\1\uffff\1\15\2\uffff\1\15\1\uffff\1\6\2\uffff\1\15\23\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\1\15\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\1\15\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\1\15\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\1\15\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\1\15\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\2\uffff\1\7\1\uffff\1\15\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\1\15\11\uffff\1\7",
            "\1\15\11\uffff\1\7",
            "\1\15\11\uffff\1\7",
            "\1\15\11\uffff\1\7",
            ""
    };
    static final char[] dfa_188 = DFA.unpackEncodedStringToUnsignedChars(dfa_188s);
    static final char[] dfa_189 = DFA.unpackEncodedStringToUnsignedChars(dfa_189s);
    static final short[] dfa_190 = DFA.unpackEncodedString(dfa_190s);
    static final short[][] dfa_191 = unpackEncodedStringArray(dfa_191s);

    class DFA270 extends DFA {

        public DFA270(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 270;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_188;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_191;
        }
        public String getDescription() {
            return "15406:2: ( (lv_declaredTypeRef_2_0= ruleTypeRefWithModifiers ) )?";
        }
    }
    static final String dfa_192s = "\7\4\1\uffff\1\4\4\134\1\uffff";
    static final String[] dfa_193s = {
            "\1\14\1\12\2\15\1\4\23\15\1\5\2\15\1\3\7\15\1\13\2\15\1\2\5\15\1\10\1\15\1\11\1\1\1\15\4\uffff\10\15\21\uffff\5\15\7\uffff\1\15\12\uffff\1\7\1\uffff\1\15\2\uffff\1\7\2\uffff\1\7\3\uffff\1\15\1\uffff\1\15\1\uffff\1\15\2\uffff\1\15\1\uffff\1\6\2\uffff\1\15\23\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\6\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\6\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\6\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\6\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\6\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\2\uffff\1\7\3\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\11\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\1\15\21\uffff\1\7",
            "\1\15\21\uffff\1\7",
            "\1\15\21\uffff\1\7",
            "\1\15\21\uffff\1\7",
            ""
    };
    static final char[] dfa_192 = DFA.unpackEncodedStringToUnsignedChars(dfa_192s);
    static final short[][] dfa_193 = unpackEncodedStringArray(dfa_193s);

    class DFA272 extends DFA {

        public DFA272(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 272;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "15953:3: ( (lv_returnTypeRef_18_0= ruleTypeRefWithModifiers ) )?";
        }
    }
    static final String dfa_194s = "\1\4\1\uffff\5\4\4\140\1\uffff";
    static final String dfa_195s = "\1\176\1\uffff\5\176\4\160\1\uffff";
    static final String[] dfa_196s = {
            "\1\12\1\10\1\13\1\uffff\1\4\3\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\5\1\uffff\1\13\1\3\7\uffff\1\11\1\uffff\1\13\1\2\3\uffff\1\13\1\uffff\1\1\1\uffff\1\7\1\1\6\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\5\uffff\1\1\14\uffff\1\1\1\uffff\1\1\2\uffff\1\1\2\uffff\1\1\14\uffff\1\6",
            "",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\1\uffff\1\1\3\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            ""
    };
    static final char[] dfa_194 = DFA.unpackEncodedStringToUnsignedChars(dfa_194s);
    static final char[] dfa_195 = DFA.unpackEncodedStringToUnsignedChars(dfa_195s);
    static final short[][] dfa_196 = unpackEncodedStringArray(dfa_196s);

    class DFA275 extends DFA {

        public DFA275(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 275;
            this.eot = dfa_47;
            this.eof = dfa_87;
            this.min = dfa_194;
            this.max = dfa_195;
            this.accept = dfa_90;
            this.special = dfa_52;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "16064:2: ( (lv_declaredTypeRef_26_0= ruleTypeRef ) )?";
        }
    }

    class DFA285 extends DFA {

        public DFA285(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 285;
            this.eot = dfa_99;
            this.eof = dfa_99;
            this.min = dfa_183;
            this.max = dfa_184;
            this.accept = dfa_185;
            this.special = dfa_186;
            this.transition = dfa_187;
        }
        public String getDescription() {
            return "16145:1: ( ( ( ( ( () ( ( ruleTypeRefWithModifiers ) )? ( ( norm1_LiteralOrComputedPropertyName ) ) Colon ) )=> ( () ( (lv_declaredTypeRef_2_0= ruleTypeRefWithModifiers ) )? ( (lv_declaredName_3_0= norm1_LiteralOrComputedPropertyName ) ) otherlv_4= Colon ) ) ( (lv_expression_5_0= norm3_AssignmentExpression ) ) ) | ( ( ( ( () norm1_GetterHeader[null] ) )=> ( () this_GetterHeader_7= norm1_GetterHeader[$current] ) ) ( ( ( () LeftCurlyBracket ) )=> (lv_body_8_0= ruleBlock ) ) ) | ( ( ( ( () Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=> ( () otherlv_10= Set ( ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT )=> (lv_declaredName_11_0= norm1_LiteralOrComputedPropertyName ) ) ) ) otherlv_12= LeftParenthesis ( (lv_fpar_13_0= norm1_FormalParameter ) ) otherlv_14= RightParenthesis ( ( ( () LeftCurlyBracket ) )=> (lv_body_15_0= ruleBlock ) ) ) | ( ( ( ( () ( ruleTypeVariables[null] )? ( ( ruleTypeRefWithModifiers ) )? ( ( ( ( Asterisk ) ) ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=> ( () (this_TypeVariables_17= ruleTypeVariables[$current] )? ( (lv_returnTypeRef_18_0= ruleTypeRefWithModifiers ) )? ( ( ( (lv_generator_19_0= Asterisk ) ) ( (lv_declaredName_20_0= norm1_LiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsAndBody_21= norm1_MethodParamsAndBody[$current] ) ) | ( ( (lv_declaredName_22_0= norm1_LiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsAndBody_23= ruleMethodParamsAndBody[$current] ) ) ) ) ) (otherlv_24= Semicolon )? ) | ( () ( (lv_declaredTypeRef_26_0= ruleTypeRef ) )? ( (lv_identifierRef_27_0= norm1_IdentifierRef ) ) (otherlv_28= EqualsSign ( (lv_expression_29_0= norm3_AssignmentExpression ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA285_0 = input.LA(1);

                         
                        int index285_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA285_0>=4 && LA285_0<=149 && (s=T2S.M_22[LA285_0-(4)])>=0)) { /* 73 cases */ }
                        else if ( (LA285_0==LessThanSign) && (synpred142_InternalN4JSXParser())) {s = 74;}

                        else if ( (LA285_0==Asterisk) && (synpred142_InternalN4JSXParser())) {s = 75;}

                        else if ( (LA285_0==LeftParenthesis) ) {s = 76;}

                         
                        input.seek(index285_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA285_1 = input.LA(1);

                         
                        int index285_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred137_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA285_2 = input.LA(1);

                         
                        int index285_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred137_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA285_3 = input.LA(1);

                         
                        int index285_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred137_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA285_4 = input.LA(1);

                         
                        int index285_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred137_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA285_5 = input.LA(1);

                         
                        int index285_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred137_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA285_6 = input.LA(1);

                         
                        int index285_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred137_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA285_7 = input.LA(1);

                         
                        int index285_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred137_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA285_8 = input.LA(1);

                         
                        int index285_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred137_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA285_9 = input.LA(1);

                         
                        int index285_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred137_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA285_10 = input.LA(1);

                         
                        int index285_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred137_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA285_11 = input.LA(1);

                         
                        int index285_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred137_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA285_12 = input.LA(1);

                         
                        int index285_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred137_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA285_13 = input.LA(1);

                         
                        int index285_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred137_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA285_14 = input.LA(1);

                         
                        int index285_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred137_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA285_15 = input.LA(1);

                         
                        int index285_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA285_16 = input.LA(1);

                         
                        int index285_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA285_17 = input.LA(1);

                         
                        int index285_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA285_18 = input.LA(1);

                         
                        int index285_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA285_19 = input.LA(1);

                         
                        int index285_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA285_20 = input.LA(1);

                         
                        int index285_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA285_21 = input.LA(1);

                         
                        int index285_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA285_22 = input.LA(1);

                         
                        int index285_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_22);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA285_23 = input.LA(1);

                         
                        int index285_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_23);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA285_24 = input.LA(1);

                         
                        int index285_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_24);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA285_25 = input.LA(1);

                         
                        int index285_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_25);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA285_26 = input.LA(1);

                         
                        int index285_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_26);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA285_27 = input.LA(1);

                         
                        int index285_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_27);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA285_28 = input.LA(1);

                         
                        int index285_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_28);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA285_29 = input.LA(1);

                         
                        int index285_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_29);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA285_30 = input.LA(1);

                         
                        int index285_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_30);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA285_31 = input.LA(1);

                         
                        int index285_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_31);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA285_32 = input.LA(1);

                         
                        int index285_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_32);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA285_33 = input.LA(1);

                         
                        int index285_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_33);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA285_34 = input.LA(1);

                         
                        int index285_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_34);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA285_35 = input.LA(1);

                         
                        int index285_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_35);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA285_36 = input.LA(1);

                         
                        int index285_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_36);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA285_37 = input.LA(1);

                         
                        int index285_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_37);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA285_38 = input.LA(1);

                         
                        int index285_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_38);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA285_39 = input.LA(1);

                         
                        int index285_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_39);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA285_40 = input.LA(1);

                         
                        int index285_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_40);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA285_41 = input.LA(1);

                         
                        int index285_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_41);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA285_42 = input.LA(1);

                         
                        int index285_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_42);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA285_43 = input.LA(1);

                         
                        int index285_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_43);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA285_44 = input.LA(1);

                         
                        int index285_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_44);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA285_45 = input.LA(1);

                         
                        int index285_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_45);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA285_46 = input.LA(1);

                         
                        int index285_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_46);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA285_47 = input.LA(1);

                         
                        int index285_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_47);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA285_48 = input.LA(1);

                         
                        int index285_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_48);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA285_49 = input.LA(1);

                         
                        int index285_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_49);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA285_50 = input.LA(1);

                         
                        int index285_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred137_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_50);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA285_51 = input.LA(1);

                         
                        int index285_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred139_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_51);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA285_52 = input.LA(1);

                         
                        int index285_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_52);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA285_53 = input.LA(1);

                         
                        int index285_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_53);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA285_54 = input.LA(1);

                         
                        int index285_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_54);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA285_55 = input.LA(1);

                         
                        int index285_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_55);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA285_56 = input.LA(1);

                         
                        int index285_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_56);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA285_57 = input.LA(1);

                         
                        int index285_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_57);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA285_58 = input.LA(1);

                         
                        int index285_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_58);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA285_59 = input.LA(1);

                         
                        int index285_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_59);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA285_60 = input.LA(1);

                         
                        int index285_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_60);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA285_61 = input.LA(1);

                         
                        int index285_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_61);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA285_62 = input.LA(1);

                         
                        int index285_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_62);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA285_63 = input.LA(1);

                         
                        int index285_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_63);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA285_64 = input.LA(1);

                         
                        int index285_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_64);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA285_65 = input.LA(1);

                         
                        int index285_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_65);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA285_66 = input.LA(1);

                         
                        int index285_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_66);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA285_67 = input.LA(1);

                         
                        int index285_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_67);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA285_68 = input.LA(1);

                         
                        int index285_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_68);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA285_69 = input.LA(1);

                         
                        int index285_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_69);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA285_70 = input.LA(1);

                         
                        int index285_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_70);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA285_71 = input.LA(1);

                         
                        int index285_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_71);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA285_72 = input.LA(1);

                         
                        int index285_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index285_72);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA285_73 = input.LA(1);

                         
                        int index285_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index285_73);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 285, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA278 extends DFA {

        public DFA278(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 278;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_188;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_191;
        }
        public String getDescription() {
            return "16162:2: ( (lv_declaredTypeRef_2_0= ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA280 extends DFA {

        public DFA280(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 280;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "16709:3: ( (lv_returnTypeRef_18_0= ruleTypeRefWithModifiers ) )?";
        }
    }
    static final String[] dfa_197s = {
            "\1\12\1\10\1\13\1\uffff\1\4\3\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\5\1\uffff\1\13\1\3\7\uffff\1\11\2\uffff\1\2\3\uffff\1\13\1\uffff\1\1\1\uffff\1\7\1\1\6\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\5\uffff\1\1\14\uffff\1\1\1\uffff\1\1\2\uffff\1\1\2\uffff\1\1\14\uffff\1\6",
            "",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\1\uffff\1\1\3\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            ""
    };
    static final short[][] dfa_197 = unpackEncodedStringArray(dfa_197s);

    class DFA283 extends DFA {

        public DFA283(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 283;
            this.eot = dfa_47;
            this.eof = dfa_47;
            this.min = dfa_194;
            this.max = dfa_195;
            this.accept = dfa_90;
            this.special = dfa_52;
            this.transition = dfa_197;
        }
        public String getDescription() {
            return "16820:2: ( (lv_declaredTypeRef_26_0= ruleTypeRef ) )?";
        }
    }

    class DFA287 extends DFA {

        public DFA287(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 287;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "16943:3: ( (lv_returnTypeRef_2_0= ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA291 extends DFA {

        public DFA291(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 291;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "17103:3: ( (lv_returnTypeRef_2_0= ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA294 extends DFA {

        public DFA294(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 294;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_188;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_191;
        }
        public String getDescription() {
            return "17245:2: ( (lv_declaredTypeRef_1_0= ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA295 extends DFA {

        public DFA295(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 295;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_188;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_191;
        }
        public String getDescription() {
            return "17334:2: ( (lv_declaredTypeRef_1_0= ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA296 extends DFA {

        public DFA296(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 296;
            this.eot = dfa_47;
            this.eof = dfa_87;
            this.min = dfa_194;
            this.max = dfa_195;
            this.accept = dfa_90;
            this.special = dfa_52;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "17414:2: ( (lv_declaredTypeRef_0_0= ruleTypeRef ) )?";
        }
    }

    class DFA298 extends DFA {

        public DFA298(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 298;
            this.eot = dfa_47;
            this.eof = dfa_47;
            this.min = dfa_194;
            this.max = dfa_195;
            this.accept = dfa_90;
            this.special = dfa_52;
            this.transition = dfa_197;
        }
        public String getDescription() {
            return "17486:2: ( (lv_declaredTypeRef_0_0= ruleTypeRef ) )?";
        }
    }
    static final String dfa_198s = "\70\uffff";
    static final String dfa_199s = "\2\4\66\uffff";
    static final String dfa_200s = "\2\u0095\66\uffff";
    static final String dfa_201s = "\2\uffff\1\3\1\1\64\2";
    static final String dfa_202s = "\1\uffff\1\0\66\uffff}>";
    static final String[] dfa_203s = {
            "\3\2\1\uffff\4\2\2\uffff\2\2\3\uffff\2\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\2\2\3\uffff\5\2\7\uffff\2\2\1\1\2\2\13\uffff\1\2\7\uffff\1\2\3\uffff\1\2\5\uffff\1\2\6\uffff\1\2\2\uffff\1\2\3\uffff\2\2\2\uffff\1\2\6\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2",
            "\1\27\1\22\1\34\1\uffff\1\31\1\35\1\37\1\16\2\uffff\1\15\1\64\3\uffff\1\36\1\14\3\uffff\1\40\1\uffff\1\17\1\uffff\1\24\1\uffff\1\33\1\32\2\uffff\1\65\1\uffff\1\53\1\6\1\uffff\1\26\1\uffff\1\10\1\30\3\uffff\1\21\1\55\1\5\1\52\1\25\7\uffff\1\11\1\13\1\4\1\41\1\12\13\uffff\1\57\7\uffff\1\20\3\uffff\1\23\5\uffff\1\62\5\uffff\1\3\1\56\2\uffff\1\42\3\uffff\1\63\1\60\2\uffff\1\61\6\uffff\1\43\1\uffff\1\50\1\45\1\46\1\47\1\uffff\1\51\1\uffff\1\7\2\uffff\1\54\11\uffff\1\67\1\66\10\uffff\1\44",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_198 = DFA.unpackEncodedString(dfa_198s);
    static final char[] dfa_199 = DFA.unpackEncodedStringToUnsignedChars(dfa_199s);
    static final char[] dfa_200 = DFA.unpackEncodedStringToUnsignedChars(dfa_200s);
    static final short[] dfa_201 = DFA.unpackEncodedString(dfa_201s);
    static final short[] dfa_202 = DFA.unpackEncodedString(dfa_202s);
    static final short[][] dfa_203 = unpackEncodedStringArray(dfa_203s);

    class DFA316 extends DFA {

        public DFA316(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 316;
            this.eot = dfa_198;
            this.eof = dfa_198;
            this.min = dfa_199;
            this.max = dfa_200;
            this.accept = dfa_201;
            this.special = dfa_202;
            this.transition = dfa_203;
        }
        public String getDescription() {
            return "19230:1: ( ( ( ( ( () New FullStop ) )=> ( () otherlv_1= New otherlv_2= FullStop ) ) otherlv_3= Target ) | ( ( ( ( () New ) )=> ( () otherlv_5= New ) ) ( (lv_callee_6_0= ruleMemberExpression ) ) ( ( LessThanSign )=>this_TypeArguments_7= ruleTypeArguments[$current] )? ( ( ( ( LeftParenthesis ) )=> (lv_withArgs_8_0= LeftParenthesis ) ) (this_Arguments_9= ruleArguments[$current] )? otherlv_10= RightParenthesis ( ( () this_IndexedAccessExpressionTail_12= ruleIndexedAccessExpressionTail[$current] ) | ( () this_ParameterizedPropertyAccessExpressionTail_14= ruleParameterizedPropertyAccessExpressionTail[$current] ) | ( () ( (lv_template_16_0= ruleTemplateLiteral ) ) ) )* )? ) | (this_PrimaryExpression_17= rulePrimaryExpression ( ( () this_IndexedAccessExpressionTail_19= ruleIndexedAccessExpressionTail[$current] ) | ( () this_ParameterizedPropertyAccessExpressionTail_21= ruleParameterizedPropertyAccessExpressionTail[$current] ) | ( () ( (lv_template_23_0= ruleTemplateLiteral ) ) ) )* ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA316_1 = input.LA(1);

                         
                        int index316_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA316_1==FullStop) && (synpred165_InternalN4JSXParser())) {s = 3;}

                        
                        else if ((LA316_1>=4 && LA316_1<=149 && (s=T2S.M_24[LA316_1-(4)])>=0) && (synpred166_InternalN4JSXParser())) { /* 53 cases */ }
                        input.seek(index316_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 316, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_204s = "\2\4\65\uffff";
    static final String dfa_205s = "\2\u0095\65\uffff";
    static final String dfa_206s = "\2\uffff\1\3\1\1\63\2";
    static final String dfa_207s = "\1\uffff\1\0\65\uffff}>";
    static final String[] dfa_208s = {
            "\3\2\1\uffff\4\2\2\uffff\2\2\3\uffff\2\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\2\uffff\1\2\3\uffff\5\2\7\uffff\2\2\1\1\2\2\13\uffff\1\2\7\uffff\1\2\3\uffff\1\2\5\uffff\1\2\6\uffff\1\2\2\uffff\1\2\3\uffff\2\2\2\uffff\1\2\6\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2",
            "\1\26\1\21\1\33\1\uffff\1\30\1\34\1\36\1\15\2\uffff\1\14\1\63\3\uffff\1\35\1\13\3\uffff\1\37\1\uffff\1\16\1\uffff\1\23\1\uffff\1\32\1\31\2\uffff\1\64\1\uffff\1\52\1\6\1\uffff\1\25\2\uffff\1\27\3\uffff\1\20\1\54\1\5\1\51\1\24\7\uffff\1\10\1\12\1\4\1\40\1\11\13\uffff\1\56\7\uffff\1\17\3\uffff\1\22\5\uffff\1\61\5\uffff\1\3\1\55\2\uffff\1\41\3\uffff\1\62\1\57\2\uffff\1\60\6\uffff\1\42\1\uffff\1\47\1\44\1\45\1\46\1\uffff\1\50\1\uffff\1\7\2\uffff\1\53\11\uffff\1\66\1\65\10\uffff\1\43",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_204 = DFA.unpackEncodedStringToUnsignedChars(dfa_204s);
    static final char[] dfa_205 = DFA.unpackEncodedStringToUnsignedChars(dfa_205s);
    static final short[] dfa_206 = DFA.unpackEncodedString(dfa_206s);
    static final short[] dfa_207 = DFA.unpackEncodedString(dfa_207s);
    static final short[][] dfa_208 = unpackEncodedStringArray(dfa_208s);

    class DFA322 extends DFA {

        public DFA322(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 322;
            this.eot = dfa_33;
            this.eof = dfa_33;
            this.min = dfa_204;
            this.max = dfa_205;
            this.accept = dfa_206;
            this.special = dfa_207;
            this.transition = dfa_208;
        }
        public String getDescription() {
            return "19490:1: ( ( ( ( ( () New FullStop ) )=> ( () otherlv_1= New otherlv_2= FullStop ) ) otherlv_3= Target ) | ( ( ( ( () New ) )=> ( () otherlv_5= New ) ) ( (lv_callee_6_0= norm1_MemberExpression ) ) ( ( LessThanSign )=>this_TypeArguments_7= ruleTypeArguments[$current] )? ( ( ( ( LeftParenthesis ) )=> (lv_withArgs_8_0= LeftParenthesis ) ) (this_Arguments_9= norm1_Arguments[$current] )? otherlv_10= RightParenthesis ( ( () this_IndexedAccessExpressionTail_12= norm1_IndexedAccessExpressionTail[$current] ) | ( () this_ParameterizedPropertyAccessExpressionTail_14= norm1_ParameterizedPropertyAccessExpressionTail[$current] ) | ( () ( (lv_template_16_0= norm1_TemplateLiteral ) ) ) )* )? ) | (this_PrimaryExpression_17= norm1_PrimaryExpression ( ( () this_IndexedAccessExpressionTail_19= norm1_IndexedAccessExpressionTail[$current] ) | ( () this_ParameterizedPropertyAccessExpressionTail_21= norm1_ParameterizedPropertyAccessExpressionTail[$current] ) | ( () ( (lv_template_23_0= norm1_TemplateLiteral ) ) ) )* ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA322_1 = input.LA(1);

                         
                        int index322_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA322_1==FullStop) && (synpred169_InternalN4JSXParser())) {s = 3;}

                        
                        else if ((LA322_1>=4 && LA322_1<=149 && (s=T2S.M_25[LA322_1-(4)])>=0) && (synpred170_InternalN4JSXParser())) { /* 52 cases */ }
                        input.seek(index322_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 322, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_209s = "\103\uffff";
    static final String dfa_210s = "\1\1\102\uffff";
    static final String dfa_211s = "\1\7\1\uffff\1\4\1\uffff\1\4\76\uffff";
    static final String dfa_212s = "\1\u0099\1\uffff\1\u0095\1\uffff\1\u0095\76\uffff";
    static final String dfa_213s = "\1\uffff\1\2\1\uffff\1\1\1\uffff\76\1";
    static final String dfa_214s = "\1\0\3\uffff\1\1\76\uffff}>";
    static final String[] dfa_215s = {
            "\1\1\55\uffff\1\1\1\uffff\2\1\10\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\3\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\4\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\3\uffff\4\1\1\2\1\1\2\uffff\2\1\1\uffff\2\1\46\uffff\1\1\1\uffff\1\1",
            "",
            "\3\1\1\uffff\4\1\2\uffff\2\1\3\uffff\3\1\2\uffff\1\1\1\uffff\1\1\1\uffff\4\1\2\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\2\1\3\uffff\6\1\6\uffff\5\1\7\uffff\1\1\1\uffff\1\1\1\uffff\1\1\4\uffff\1\1\2\uffff\1\1\3\uffff\1\1\2\uffff\1\1\2\uffff\1\1\2\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\4\1\uffff\2\1\2\uffff\1\1\2\uffff\1\1\3\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\11\uffff\2\1\10\uffff\1\1",
            "",
            "\1\31\1\24\1\36\1\uffff\1\33\1\37\1\41\1\20\2\uffff\1\17\1\66\3\uffff\1\40\1\16\1\72\2\uffff\1\42\1\uffff\1\21\1\uffff\1\26\1\74\1\35\1\34\2\uffff\1\67\1\uffff\1\55\1\10\1\uffff\1\30\1\uffff\1\12\1\32\3\uffff\1\23\1\57\1\7\1\54\1\27\1\73\6\uffff\1\13\1\15\1\6\1\43\1\14\7\uffff\1\75\1\uffff\1\76\1\uffff\1\61\4\uffff\1\1\2\uffff\1\22\3\uffff\1\25\2\uffff\1\102\2\uffff\1\64\2\uffff\1\77\1\uffff\1\100\1\uffff\1\60\2\uffff\1\44\1\uffff\1\5\1\uffff\1\65\1\62\2\uffff\1\63\2\uffff\1\101\3\uffff\1\45\1\uffff\1\52\1\47\1\50\1\51\1\uffff\1\53\1\uffff\1\11\2\uffff\1\56\11\uffff\1\71\1\70\10\uffff\1\46",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_209 = DFA.unpackEncodedString(dfa_209s);
    static final short[] dfa_210 = DFA.unpackEncodedString(dfa_210s);
    static final char[] dfa_211 = DFA.unpackEncodedStringToUnsignedChars(dfa_211s);
    static final char[] dfa_212 = DFA.unpackEncodedStringToUnsignedChars(dfa_212s);
    static final short[] dfa_213 = DFA.unpackEncodedString(dfa_213s);
    static final short[] dfa_214 = DFA.unpackEncodedString(dfa_214s);
    static final short[][] dfa_215 = unpackEncodedStringArray(dfa_215s);

    class DFA335 extends DFA {

        public DFA335(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 335;
            this.eot = dfa_209;
            this.eof = dfa_210;
            this.min = dfa_211;
            this.max = dfa_212;
            this.accept = dfa_213;
            this.special = dfa_214;
            this.transition = dfa_215;
        }
        public String getDescription() {
            return "()* loopback of 20597:1: ( ( ( () ( ( ruleShiftOperator ) ) ( ( ruleAdditiveExpression ) ) ) )=> ( () ( (lv_op_2_0= ruleShiftOperator ) ) ( (lv_rhs_3_0= ruleAdditiveExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA335_0 = input.LA(1);

                         
                        int index335_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA335_0==EOF||LA335_0==Instanceof||LA335_0==ExclamationMarkEqualsSignEqualsSign||(LA335_0>=LessThanSignLessThanSignEqualsSign && LA335_0<=EqualsSignEqualsSignEqualsSign)||(LA335_0>=ExclamationMarkEqualsSign && LA335_0<=AsteriskEqualsSign)||LA335_0==PlusSignEqualsSign||(LA335_0>=HyphenMinusEqualsSign && LA335_0<=SolidusEqualsSign)||(LA335_0>=LessThanSignEqualsSign && LA335_0<=EqualsSignEqualsSign)||LA335_0==GreaterThanSignEqualsSign||LA335_0==CircumflexAccentEqualsSign||(LA335_0>=In && LA335_0<=VerticalLineVerticalLine)||LA335_0==Ampersand||LA335_0==RightParenthesis||LA335_0==Comma||(LA335_0>=Colon && LA335_0<=EqualsSign)||LA335_0==QuestionMark||(LA335_0>=RightSquareBracket && LA335_0<=CircumflexAccent)||(LA335_0>=VerticalLine && LA335_0<=RightCurlyBracket)||LA335_0==RULE_ML_COMMENT||LA335_0==RULE_EOL) ) {s = 1;}

                        else if ( (LA335_0==GreaterThanSign) ) {s = 2;}

                        else if ( (LA335_0==LessThanSignLessThanSign) && (synpred181_InternalN4JSXParser())) {s = 3;}

                         
                        input.seek(index335_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA335_4 = input.LA(1);

                         
                        int index335_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA335_4==GreaterThanSignEqualsSign) ) {s = 1;}

                        
                        else if ((LA335_4>=4 && LA335_4<=149 && (s=T2S.M_26[LA335_4-(4)])>=0) && (synpred181_InternalN4JSXParser())) { /* 63 cases */ }
                        input.seek(index335_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 335, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_216s = "\1\1\101\uffff";
    static final String dfa_217s = "\1\7\1\uffff\1\4\1\uffff\1\4\75\uffff";
    static final String dfa_218s = "\1\u0099\1\uffff\1\u0095\1\uffff\1\u0095\75\uffff";
    static final String dfa_219s = "\1\uffff\1\2\1\uffff\1\1\1\uffff\75\1";
    static final String dfa_220s = "\1\1\3\uffff\1\0\75\uffff}>";
    static final String[] dfa_221s = {
            "\1\1\55\uffff\1\1\1\uffff\2\1\10\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\3\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\4\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\3\uffff\4\1\1\2\1\1\2\uffff\2\1\1\uffff\2\1\46\uffff\1\1\1\uffff\1\1",
            "",
            "\3\1\1\uffff\4\1\2\uffff\2\1\3\uffff\3\1\2\uffff\1\1\1\uffff\1\1\1\uffff\4\1\2\uffff\1\1\1\uffff\2\1\1\uffff\1\1\2\uffff\1\1\3\uffff\6\1\6\uffff\5\1\7\uffff\1\1\1\uffff\1\1\1\uffff\1\1\4\uffff\1\1\2\uffff\1\1\3\uffff\1\1\2\uffff\1\1\2\uffff\1\1\2\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\4\1\uffff\2\1\2\uffff\1\1\2\uffff\1\1\3\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\11\uffff\2\1\10\uffff\1\1",
            "",
            "\1\30\1\23\1\35\1\uffff\1\32\1\36\1\40\1\17\2\uffff\1\16\1\65\3\uffff\1\37\1\15\1\71\2\uffff\1\41\1\uffff\1\20\1\uffff\1\25\1\73\1\34\1\33\2\uffff\1\66\1\uffff\1\54\1\10\1\uffff\1\27\2\uffff\1\31\3\uffff\1\22\1\56\1\7\1\53\1\26\1\72\6\uffff\1\12\1\14\1\6\1\42\1\13\7\uffff\1\74\1\uffff\1\75\1\uffff\1\60\4\uffff\1\1\2\uffff\1\21\3\uffff\1\24\2\uffff\1\101\2\uffff\1\63\2\uffff\1\76\1\uffff\1\77\1\uffff\1\57\2\uffff\1\43\1\uffff\1\5\1\uffff\1\64\1\61\2\uffff\1\62\2\uffff\1\100\3\uffff\1\44\1\uffff\1\51\1\46\1\47\1\50\1\uffff\1\52\1\uffff\1\11\2\uffff\1\55\11\uffff\1\70\1\67\10\uffff\1\45",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_216 = DFA.unpackEncodedString(dfa_216s);
    static final char[] dfa_217 = DFA.unpackEncodedStringToUnsignedChars(dfa_217s);
    static final char[] dfa_218 = DFA.unpackEncodedStringToUnsignedChars(dfa_218s);
    static final short[] dfa_219 = DFA.unpackEncodedString(dfa_219s);
    static final short[] dfa_220 = DFA.unpackEncodedString(dfa_220s);
    static final short[][] dfa_221 = unpackEncodedStringArray(dfa_221s);

    class DFA336 extends DFA {

        public DFA336(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 336;
            this.eot = dfa_129;
            this.eof = dfa_216;
            this.min = dfa_217;
            this.max = dfa_218;
            this.accept = dfa_219;
            this.special = dfa_220;
            this.transition = dfa_221;
        }
        public String getDescription() {
            return "()* loopback of 20670:1: ( ( ( () ( ( ruleShiftOperator ) ) ( ( norm1_AdditiveExpression ) ) ) )=> ( () ( (lv_op_2_0= ruleShiftOperator ) ) ( (lv_rhs_3_0= norm1_AdditiveExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA336_4 = input.LA(1);

                         
                        int index336_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA336_4>=4 && LA336_4<=149 && (s=T2S.M_27[LA336_4-(4)])>=0) && (synpred182_InternalN4JSXParser())) { /* 61 cases */ }
                        else if ( (LA336_4==GreaterThanSignEqualsSign) ) {s = 1;}

                         
                        input.seek(index336_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA336_0 = input.LA(1);

                         
                        int index336_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA336_0==EOF||LA336_0==Instanceof||LA336_0==ExclamationMarkEqualsSignEqualsSign||(LA336_0>=LessThanSignLessThanSignEqualsSign && LA336_0<=EqualsSignEqualsSignEqualsSign)||(LA336_0>=ExclamationMarkEqualsSign && LA336_0<=AsteriskEqualsSign)||LA336_0==PlusSignEqualsSign||(LA336_0>=HyphenMinusEqualsSign && LA336_0<=SolidusEqualsSign)||(LA336_0>=LessThanSignEqualsSign && LA336_0<=EqualsSignEqualsSign)||LA336_0==GreaterThanSignEqualsSign||LA336_0==CircumflexAccentEqualsSign||(LA336_0>=In && LA336_0<=VerticalLineVerticalLine)||LA336_0==Ampersand||LA336_0==RightParenthesis||LA336_0==Comma||(LA336_0>=Colon && LA336_0<=EqualsSign)||LA336_0==QuestionMark||(LA336_0>=RightSquareBracket && LA336_0<=CircumflexAccent)||(LA336_0>=VerticalLine && LA336_0<=RightCurlyBracket)||LA336_0==RULE_ML_COMMENT||LA336_0==RULE_EOL) ) {s = 1;}

                        else if ( (LA336_0==GreaterThanSign) ) {s = 2;}

                        else if ( (LA336_0==LessThanSignLessThanSign) && (synpred182_InternalN4JSXParser())) {s = 3;}

                         
                        input.seek(index336_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 336, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_222s = "\104\uffff";
    static final String dfa_223s = "\1\1\103\uffff";
    static final String dfa_224s = "\1\7\1\uffff\1\4\101\uffff";
    static final String dfa_225s = "\1\160\1\uffff\1\u0095\101\uffff";
    static final String dfa_226s = "\1\uffff\1\2\1\uffff\101\1";
    static final String dfa_227s = "\1\0\1\uffff\1\1\101\uffff}>";
    static final String[] dfa_228s = {
            "\1\6\55\uffff\1\1\1\uffff\2\1\10\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\4\1\1\1\uffff\1\5\1\uffff\1\1\3\uffff\4\1\2\uffff\1\1\4\uffff\1\1\4\uffff\1\1\1\3\1\1\1\2\1\1\3\uffff\1\1\1\uffff\2\1",
            "",
            "\1\32\1\25\1\37\1\uffff\1\34\1\40\1\42\1\21\2\uffff\1\20\1\67\3\uffff\1\41\1\17\1\73\2\uffff\1\43\1\uffff\1\22\1\uffff\1\27\1\75\1\36\1\35\2\uffff\1\70\1\uffff\1\56\1\11\1\uffff\1\31\1\uffff\1\13\1\33\3\uffff\1\24\1\60\1\10\1\55\1\30\1\74\6\uffff\1\14\1\16\1\7\1\44\1\15\7\uffff\1\76\1\uffff\1\77\1\uffff\1\62\4\uffff\1\1\2\uffff\1\23\3\uffff\1\26\2\uffff\1\103\2\uffff\1\65\2\uffff\1\100\1\uffff\1\101\1\uffff\1\61\2\uffff\1\45\1\uffff\1\1\1\uffff\1\66\1\63\2\uffff\1\64\2\uffff\1\102\3\uffff\1\46\1\uffff\1\53\1\50\1\51\1\52\1\uffff\1\54\1\uffff\1\12\2\uffff\1\57\11\uffff\1\72\1\71\10\uffff\1\47",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_222 = DFA.unpackEncodedString(dfa_222s);
    static final short[] dfa_223 = DFA.unpackEncodedString(dfa_223s);
    static final char[] dfa_224 = DFA.unpackEncodedStringToUnsignedChars(dfa_224s);
    static final char[] dfa_225 = DFA.unpackEncodedStringToUnsignedChars(dfa_225s);
    static final short[] dfa_226 = DFA.unpackEncodedString(dfa_226s);
    static final short[] dfa_227 = DFA.unpackEncodedString(dfa_227s);
    static final short[][] dfa_228 = unpackEncodedStringArray(dfa_228s);

    class DFA339 extends DFA {

        public DFA339(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 339;
            this.eot = dfa_222;
            this.eof = dfa_223;
            this.min = dfa_224;
            this.max = dfa_225;
            this.accept = dfa_226;
            this.special = dfa_227;
            this.transition = dfa_228;
        }
        public String getDescription() {
            return "()* loopback of 20798:1: ( ( ( () ( ( ruleRelationalOperator ) ) ( New | This_1 | Super | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD ) ) )=> ( () ( (lv_op_2_0= ruleRelationalOperator ) ) ( ( New | This_1 | Super | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_rhs_3_0= ruleShiftExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA339_0 = input.LA(1);

                         
                        int index339_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA339_0==EOF||LA339_0==ExclamationMarkEqualsSignEqualsSign||(LA339_0>=LessThanSignLessThanSignEqualsSign && LA339_0<=EqualsSignEqualsSignEqualsSign)||(LA339_0>=ExclamationMarkEqualsSign && LA339_0<=AsteriskEqualsSign)||LA339_0==PlusSignEqualsSign||(LA339_0>=HyphenMinusEqualsSign && LA339_0<=SolidusEqualsSign)||LA339_0==EqualsSignEqualsSign||LA339_0==CircumflexAccentEqualsSign||(LA339_0>=In && LA339_0<=VerticalLineVerticalLine)||LA339_0==Ampersand||LA339_0==Comma||LA339_0==Semicolon||LA339_0==EqualsSign||LA339_0==QuestionMark||LA339_0==CircumflexAccent||(LA339_0>=VerticalLine && LA339_0<=RightCurlyBracket)) ) {s = 1;}

                        else if ( (LA339_0==GreaterThanSign) ) {s = 2;}

                        else if ( (LA339_0==LessThanSign) && (synpred183_InternalN4JSXParser())) {s = 3;}

                        else if ( (LA339_0==LessThanSignEqualsSign) && (synpred183_InternalN4JSXParser())) {s = 4;}

                        else if ( (LA339_0==GreaterThanSignEqualsSign) && (synpred183_InternalN4JSXParser())) {s = 5;}

                        else if ( (LA339_0==Instanceof) && (synpred183_InternalN4JSXParser())) {s = 6;}

                         
                        input.seek(index339_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA339_2 = input.LA(1);

                         
                        int index339_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA339_2==GreaterThanSignEqualsSign||LA339_2==GreaterThanSign) ) {s = 1;}

                        else if ( (LA339_2==New) && (synpred183_InternalN4JSXParser())) {s = 7;}

                        else if ( (LA339_2==This_1) && (synpred183_InternalN4JSXParser())) {s = 8;}

                        else if ( (LA339_2==Super) && (synpred183_InternalN4JSXParser())) {s = 9;}

                        else if ( (LA339_2==RULE_IDENTIFIER) && (synpred183_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA339_2==Yield) && (synpred183_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA339_2==Get) && (synpred183_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA339_2==Set) && (synpred183_InternalN4JSXParser())) {s = 13;}

                        else if ( (LA339_2==Let) && (synpred183_InternalN4JSXParser())) {s = 14;}

                        else if ( (LA339_2==Project) && (synpred183_InternalN4JSXParser())) {s = 15;}

                        else if ( (LA339_2==External) && (synpred183_InternalN4JSXParser())) {s = 16;}

                        else if ( (LA339_2==Abstract) && (synpred183_InternalN4JSXParser())) {s = 17;}

                        else if ( (LA339_2==Static) && (synpred183_InternalN4JSXParser())) {s = 18;}

                        else if ( (LA339_2==As) && (synpred183_InternalN4JSXParser())) {s = 19;}

                        else if ( (LA339_2==From) && (synpred183_InternalN4JSXParser())) {s = 20;}

                        else if ( (LA339_2==Constructor) && (synpred183_InternalN4JSXParser())) {s = 21;}

                        else if ( (LA339_2==Of) && (synpred183_InternalN4JSXParser())) {s = 22;}

                        else if ( (LA339_2==Target) && (synpred183_InternalN4JSXParser())) {s = 23;}

                        else if ( (LA339_2==Type) && (synpred183_InternalN4JSXParser())) {s = 24;}

                        else if ( (LA339_2==Union) && (synpred183_InternalN4JSXParser())) {s = 25;}

                        else if ( (LA339_2==Intersection) && (synpred183_InternalN4JSXParser())) {s = 26;}

                        else if ( (LA339_2==This) && (synpred183_InternalN4JSXParser())) {s = 27;}

                        else if ( (LA339_2==Promisify) && (synpred183_InternalN4JSXParser())) {s = 28;}

                        else if ( (LA339_2==Await) && (synpred183_InternalN4JSXParser())) {s = 29;}

                        else if ( (LA339_2==Async) && (synpred183_InternalN4JSXParser())) {s = 30;}

                        else if ( (LA339_2==Implements) && (synpred183_InternalN4JSXParser())) {s = 31;}

                        else if ( (LA339_2==Interface) && (synpred183_InternalN4JSXParser())) {s = 32;}

                        else if ( (LA339_2==Private) && (synpred183_InternalN4JSXParser())) {s = 33;}

                        else if ( (LA339_2==Protected) && (synpred183_InternalN4JSXParser())) {s = 34;}

                        else if ( (LA339_2==Public) && (synpred183_InternalN4JSXParser())) {s = 35;}

                        else if ( (LA339_2==Out) && (synpred183_InternalN4JSXParser())) {s = 36;}

                        else if ( (LA339_2==LessThanSign) && (synpred183_InternalN4JSXParser())) {s = 37;}

                        else if ( (LA339_2==RULE_DOUBLE) && (synpred183_InternalN4JSXParser())) {s = 38;}

                        else if ( (LA339_2==RULE_INT) && (synpred183_InternalN4JSXParser())) {s = 39;}

                        else if ( (LA339_2==RULE_BINARY_INT) && (synpred183_InternalN4JSXParser())) {s = 40;}

                        else if ( (LA339_2==RULE_OCTAL_INT) && (synpred183_InternalN4JSXParser())) {s = 41;}

                        else if ( (LA339_2==RULE_LEGACY_OCTAL_INT) && (synpred183_InternalN4JSXParser())) {s = 42;}

                        else if ( (LA339_2==RULE_HEX_INT) && (synpred183_InternalN4JSXParser())) {s = 43;}

                        else if ( (LA339_2==RULE_SCIENTIFIC_INT) && (synpred183_InternalN4JSXParser())) {s = 44;}

                        else if ( (LA339_2==True) && (synpred183_InternalN4JSXParser())) {s = 45;}

                        else if ( (LA339_2==False) && (synpred183_InternalN4JSXParser())) {s = 46;}

                        else if ( (LA339_2==RULE_STRING) && (synpred183_InternalN4JSXParser())) {s = 47;}

                        else if ( (LA339_2==Null) && (synpred183_InternalN4JSXParser())) {s = 48;}

                        else if ( (LA339_2==Solidus) && (synpred183_InternalN4JSXParser())) {s = 49;}

                        else if ( (LA339_2==SolidusEqualsSign) && (synpred183_InternalN4JSXParser())) {s = 50;}

                        else if ( (LA339_2==LeftSquareBracket) && (synpred183_InternalN4JSXParser())) {s = 51;}

                        else if ( (LA339_2==LeftCurlyBracket) && (synpred183_InternalN4JSXParser())) {s = 52;}

                        else if ( (LA339_2==LeftParenthesis) && (synpred183_InternalN4JSXParser())) {s = 53;}

                        else if ( (LA339_2==CommercialAt) && (synpred183_InternalN4JSXParser())) {s = 54;}

                        else if ( (LA339_2==Function) && (synpred183_InternalN4JSXParser())) {s = 55;}

                        else if ( (LA339_2==Class) && (synpred183_InternalN4JSXParser())) {s = 56;}

                        else if ( (LA339_2==RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) && (synpred183_InternalN4JSXParser())) {s = 57;}

                        else if ( (LA339_2==RULE_TEMPLATE_HEAD) && (synpred183_InternalN4JSXParser())) {s = 58;}

                        else if ( (LA339_2==Delete) && (synpred183_InternalN4JSXParser())) {s = 59;}

                        else if ( (LA339_2==Void) && (synpred183_InternalN4JSXParser())) {s = 60;}

                        else if ( (LA339_2==Typeof) && (synpred183_InternalN4JSXParser())) {s = 61;}

                        else if ( (LA339_2==PlusSignPlusSign) && (synpred183_InternalN4JSXParser())) {s = 62;}

                        else if ( (LA339_2==HyphenMinusHyphenMinus) && (synpred183_InternalN4JSXParser())) {s = 63;}

                        else if ( (LA339_2==PlusSign) && (synpred183_InternalN4JSXParser())) {s = 64;}

                        else if ( (LA339_2==HyphenMinus) && (synpred183_InternalN4JSXParser())) {s = 65;}

                        else if ( (LA339_2==Tilde) && (synpred183_InternalN4JSXParser())) {s = 66;}

                        else if ( (LA339_2==ExclamationMark) && (synpred183_InternalN4JSXParser())) {s = 67;}

                         
                        input.seek(index339_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 339, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_229s = "\105\uffff";
    static final String dfa_230s = "\1\1\104\uffff";
    static final String dfa_231s = "\1\7\1\uffff\1\4\102\uffff";
    static final String dfa_232s = "\1\u0099\1\uffff\1\u0095\102\uffff";
    static final String dfa_233s = "\1\uffff\1\2\1\uffff\102\1";
    static final String dfa_234s = "\1\0\1\uffff\1\1\102\uffff}>";
    static final String[] dfa_235s = {
            "\1\6\55\uffff\1\1\1\uffff\2\1\10\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\4\1\1\1\uffff\1\5\1\uffff\1\1\3\uffff\1\7\1\uffff\2\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\3\uffff\2\1\1\3\1\1\1\2\1\1\2\uffff\2\1\1\uffff\2\1\46\uffff\1\1\1\uffff\1\1",
            "",
            "\1\33\1\26\1\40\1\uffff\1\35\1\41\1\43\1\22\2\uffff\1\21\1\70\3\uffff\1\42\1\20\1\74\2\uffff\1\44\1\uffff\1\23\1\uffff\1\30\1\76\1\37\1\36\2\uffff\1\71\1\uffff\1\57\1\12\1\uffff\1\32\1\uffff\1\14\1\34\3\uffff\1\25\1\61\1\11\1\56\1\31\1\75\6\uffff\1\15\1\17\1\10\1\45\1\16\7\uffff\1\77\1\uffff\1\100\1\uffff\1\63\4\uffff\1\1\2\uffff\1\24\3\uffff\1\27\2\uffff\1\104\2\uffff\1\66\2\uffff\1\101\1\uffff\1\102\1\uffff\1\62\2\uffff\1\46\1\uffff\1\1\1\uffff\1\67\1\64\2\uffff\1\65\2\uffff\1\103\3\uffff\1\47\1\uffff\1\54\1\51\1\52\1\53\1\uffff\1\55\1\uffff\1\13\2\uffff\1\60\11\uffff\1\73\1\72\10\uffff\1\50",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_229 = DFA.unpackEncodedString(dfa_229s);
    static final short[] dfa_230 = DFA.unpackEncodedString(dfa_230s);
    static final char[] dfa_231 = DFA.unpackEncodedStringToUnsignedChars(dfa_231s);
    static final char[] dfa_232 = DFA.unpackEncodedStringToUnsignedChars(dfa_232s);
    static final short[] dfa_233 = DFA.unpackEncodedString(dfa_233s);
    static final short[] dfa_234 = DFA.unpackEncodedString(dfa_234s);
    static final short[][] dfa_235 = unpackEncodedStringArray(dfa_235s);

    class DFA340 extends DFA {

        public DFA340(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 340;
            this.eot = dfa_229;
            this.eof = dfa_230;
            this.min = dfa_231;
            this.max = dfa_232;
            this.accept = dfa_233;
            this.special = dfa_234;
            this.transition = dfa_235;
        }
        public String getDescription() {
            return "()* loopback of 21127:1: ( ( ( () ( ( norm1_RelationalOperator ) ) ( New | This_1 | Super | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD ) ) )=> ( () ( (lv_op_2_0= norm1_RelationalOperator ) ) ( ( New | This_1 | Super | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_rhs_3_0= ruleShiftExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA340_0 = input.LA(1);

                         
                        int index340_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA340_0==EOF||LA340_0==ExclamationMarkEqualsSignEqualsSign||(LA340_0>=LessThanSignLessThanSignEqualsSign && LA340_0<=EqualsSignEqualsSignEqualsSign)||(LA340_0>=ExclamationMarkEqualsSign && LA340_0<=AsteriskEqualsSign)||LA340_0==PlusSignEqualsSign||(LA340_0>=HyphenMinusEqualsSign && LA340_0<=SolidusEqualsSign)||LA340_0==EqualsSignEqualsSign||LA340_0==CircumflexAccentEqualsSign||(LA340_0>=VerticalLineEqualsSign && LA340_0<=VerticalLineVerticalLine)||LA340_0==Ampersand||LA340_0==RightParenthesis||LA340_0==Comma||(LA340_0>=Colon && LA340_0<=Semicolon)||LA340_0==EqualsSign||LA340_0==QuestionMark||(LA340_0>=RightSquareBracket && LA340_0<=CircumflexAccent)||(LA340_0>=VerticalLine && LA340_0<=RightCurlyBracket)||LA340_0==RULE_ML_COMMENT||LA340_0==RULE_EOL) ) {s = 1;}

                        else if ( (LA340_0==GreaterThanSign) ) {s = 2;}

                        else if ( (LA340_0==LessThanSign) && (synpred185_InternalN4JSXParser())) {s = 3;}

                        else if ( (LA340_0==LessThanSignEqualsSign) && (synpred185_InternalN4JSXParser())) {s = 4;}

                        else if ( (LA340_0==GreaterThanSignEqualsSign) && (synpred185_InternalN4JSXParser())) {s = 5;}

                        else if ( (LA340_0==Instanceof) && (synpred185_InternalN4JSXParser())) {s = 6;}

                        else if ( (LA340_0==In) && (synpred185_InternalN4JSXParser())) {s = 7;}

                         
                        input.seek(index340_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA340_2 = input.LA(1);

                         
                        int index340_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA340_2>=4 && LA340_2<=149 && (s=T2S.M_28[LA340_2-(4)])>=0) && (synpred185_InternalN4JSXParser())) { /* 61 cases */ }
                        else if ( (LA340_2==GreaterThanSignEqualsSign||LA340_2==GreaterThanSign) ) {s = 1;}

                         
                        input.seek(index340_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 340, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_236s = "\1\7\1\uffff\1\4\100\uffff";
    static final String dfa_237s = "\1\157\1\uffff\1\u0095\100\uffff";
    static final String dfa_238s = "\1\uffff\1\2\1\uffff\100\1";
    static final String dfa_239s = "\1\0\1\uffff\1\1\100\uffff}>";
    static final String[] dfa_240s = {
            "\1\6\55\uffff\1\1\1\uffff\2\1\10\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\4\1\1\1\uffff\1\5\1\uffff\1\1\3\uffff\4\1\2\uffff\1\1\4\uffff\1\1\4\uffff\1\1\1\3\1\1\1\2\1\1\3\uffff\1\1\1\uffff\1\1",
            "",
            "\1\31\1\24\1\36\1\uffff\1\33\1\37\1\41\1\20\2\uffff\1\17\1\66\3\uffff\1\40\1\16\1\72\2\uffff\1\42\1\uffff\1\21\1\uffff\1\26\1\74\1\35\1\34\2\uffff\1\67\1\uffff\1\55\1\11\1\uffff\1\30\2\uffff\1\32\3\uffff\1\23\1\57\1\10\1\54\1\27\1\73\6\uffff\1\13\1\15\1\7\1\43\1\14\7\uffff\1\75\1\uffff\1\76\1\uffff\1\61\4\uffff\1\1\2\uffff\1\22\3\uffff\1\25\2\uffff\1\102\2\uffff\1\64\2\uffff\1\77\1\uffff\1\100\1\uffff\1\60\2\uffff\1\44\1\uffff\1\1\1\uffff\1\65\1\62\2\uffff\1\63\2\uffff\1\101\3\uffff\1\45\1\uffff\1\52\1\47\1\50\1\51\1\uffff\1\53\1\uffff\1\12\2\uffff\1\56\11\uffff\1\71\1\70\10\uffff\1\46",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_236 = DFA.unpackEncodedStringToUnsignedChars(dfa_236s);
    static final char[] dfa_237 = DFA.unpackEncodedStringToUnsignedChars(dfa_237s);
    static final short[] dfa_238 = DFA.unpackEncodedString(dfa_238s);
    static final short[] dfa_239 = DFA.unpackEncodedString(dfa_239s);
    static final short[][] dfa_240 = unpackEncodedStringArray(dfa_240s);

    class DFA341 extends DFA {

        public DFA341(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 341;
            this.eot = dfa_209;
            this.eof = dfa_210;
            this.min = dfa_236;
            this.max = dfa_237;
            this.accept = dfa_238;
            this.special = dfa_239;
            this.transition = dfa_240;
        }
        public String getDescription() {
            return "()* loopback of 21456:1: ( ( ( () ( ( ruleRelationalOperator ) ) ( New | This_1 | Super | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD ) ) )=> ( () ( (lv_op_2_0= ruleRelationalOperator ) ) ( ( New | This_1 | Super | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_rhs_3_0= norm1_ShiftExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA341_0 = input.LA(1);

                         
                        int index341_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA341_0==EOF||LA341_0==ExclamationMarkEqualsSignEqualsSign||(LA341_0>=LessThanSignLessThanSignEqualsSign && LA341_0<=EqualsSignEqualsSignEqualsSign)||(LA341_0>=ExclamationMarkEqualsSign && LA341_0<=AsteriskEqualsSign)||LA341_0==PlusSignEqualsSign||(LA341_0>=HyphenMinusEqualsSign && LA341_0<=SolidusEqualsSign)||LA341_0==EqualsSignEqualsSign||LA341_0==CircumflexAccentEqualsSign||(LA341_0>=In && LA341_0<=VerticalLineVerticalLine)||LA341_0==Ampersand||LA341_0==Comma||LA341_0==Semicolon||LA341_0==EqualsSign||LA341_0==QuestionMark||LA341_0==CircumflexAccent||LA341_0==VerticalLine) ) {s = 1;}

                        else if ( (LA341_0==GreaterThanSign) ) {s = 2;}

                        else if ( (LA341_0==LessThanSign) && (synpred187_InternalN4JSXParser())) {s = 3;}

                        else if ( (LA341_0==LessThanSignEqualsSign) && (synpred187_InternalN4JSXParser())) {s = 4;}

                        else if ( (LA341_0==GreaterThanSignEqualsSign) && (synpred187_InternalN4JSXParser())) {s = 5;}

                        else if ( (LA341_0==Instanceof) && (synpred187_InternalN4JSXParser())) {s = 6;}

                         
                        input.seek(index341_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA341_2 = input.LA(1);

                         
                        int index341_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA341_2==GreaterThanSignEqualsSign||LA341_2==GreaterThanSign) ) {s = 1;}

                        else if ( (LA341_2==New) && (synpred187_InternalN4JSXParser())) {s = 7;}

                        else if ( (LA341_2==This_1) && (synpred187_InternalN4JSXParser())) {s = 8;}

                        else if ( (LA341_2==Super) && (synpred187_InternalN4JSXParser())) {s = 9;}

                        else if ( (LA341_2==RULE_IDENTIFIER) && (synpred187_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA341_2==Get) && (synpred187_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA341_2==Set) && (synpred187_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA341_2==Let) && (synpred187_InternalN4JSXParser())) {s = 13;}

                        else if ( (LA341_2==Project) && (synpred187_InternalN4JSXParser())) {s = 14;}

                        else if ( (LA341_2==External) && (synpred187_InternalN4JSXParser())) {s = 15;}

                        else if ( (LA341_2==Abstract) && (synpred187_InternalN4JSXParser())) {s = 16;}

                        else if ( (LA341_2==Static) && (synpred187_InternalN4JSXParser())) {s = 17;}

                        else if ( (LA341_2==As) && (synpred187_InternalN4JSXParser())) {s = 18;}

                        else if ( (LA341_2==From) && (synpred187_InternalN4JSXParser())) {s = 19;}

                        else if ( (LA341_2==Constructor) && (synpred187_InternalN4JSXParser())) {s = 20;}

                        else if ( (LA341_2==Of) && (synpred187_InternalN4JSXParser())) {s = 21;}

                        else if ( (LA341_2==Target) && (synpred187_InternalN4JSXParser())) {s = 22;}

                        else if ( (LA341_2==Type) && (synpred187_InternalN4JSXParser())) {s = 23;}

                        else if ( (LA341_2==Union) && (synpred187_InternalN4JSXParser())) {s = 24;}

                        else if ( (LA341_2==Intersection) && (synpred187_InternalN4JSXParser())) {s = 25;}

                        else if ( (LA341_2==This) && (synpred187_InternalN4JSXParser())) {s = 26;}

                        else if ( (LA341_2==Promisify) && (synpred187_InternalN4JSXParser())) {s = 27;}

                        else if ( (LA341_2==Await) && (synpred187_InternalN4JSXParser())) {s = 28;}

                        else if ( (LA341_2==Async) && (synpred187_InternalN4JSXParser())) {s = 29;}

                        else if ( (LA341_2==Implements) && (synpred187_InternalN4JSXParser())) {s = 30;}

                        else if ( (LA341_2==Interface) && (synpred187_InternalN4JSXParser())) {s = 31;}

                        else if ( (LA341_2==Private) && (synpred187_InternalN4JSXParser())) {s = 32;}

                        else if ( (LA341_2==Protected) && (synpred187_InternalN4JSXParser())) {s = 33;}

                        else if ( (LA341_2==Public) && (synpred187_InternalN4JSXParser())) {s = 34;}

                        else if ( (LA341_2==Out) && (synpred187_InternalN4JSXParser())) {s = 35;}

                        else if ( (LA341_2==LessThanSign) && (synpred187_InternalN4JSXParser())) {s = 36;}

                        else if ( (LA341_2==RULE_DOUBLE) && (synpred187_InternalN4JSXParser())) {s = 37;}

                        else if ( (LA341_2==RULE_INT) && (synpred187_InternalN4JSXParser())) {s = 38;}

                        else if ( (LA341_2==RULE_BINARY_INT) && (synpred187_InternalN4JSXParser())) {s = 39;}

                        else if ( (LA341_2==RULE_OCTAL_INT) && (synpred187_InternalN4JSXParser())) {s = 40;}

                        else if ( (LA341_2==RULE_LEGACY_OCTAL_INT) && (synpred187_InternalN4JSXParser())) {s = 41;}

                        else if ( (LA341_2==RULE_HEX_INT) && (synpred187_InternalN4JSXParser())) {s = 42;}

                        else if ( (LA341_2==RULE_SCIENTIFIC_INT) && (synpred187_InternalN4JSXParser())) {s = 43;}

                        else if ( (LA341_2==True) && (synpred187_InternalN4JSXParser())) {s = 44;}

                        else if ( (LA341_2==False) && (synpred187_InternalN4JSXParser())) {s = 45;}

                        else if ( (LA341_2==RULE_STRING) && (synpred187_InternalN4JSXParser())) {s = 46;}

                        else if ( (LA341_2==Null) && (synpred187_InternalN4JSXParser())) {s = 47;}

                        else if ( (LA341_2==Solidus) && (synpred187_InternalN4JSXParser())) {s = 48;}

                        else if ( (LA341_2==SolidusEqualsSign) && (synpred187_InternalN4JSXParser())) {s = 49;}

                        else if ( (LA341_2==LeftSquareBracket) && (synpred187_InternalN4JSXParser())) {s = 50;}

                        else if ( (LA341_2==LeftCurlyBracket) && (synpred187_InternalN4JSXParser())) {s = 51;}

                        else if ( (LA341_2==LeftParenthesis) && (synpred187_InternalN4JSXParser())) {s = 52;}

                        else if ( (LA341_2==CommercialAt) && (synpred187_InternalN4JSXParser())) {s = 53;}

                        else if ( (LA341_2==Function) && (synpred187_InternalN4JSXParser())) {s = 54;}

                        else if ( (LA341_2==Class) && (synpred187_InternalN4JSXParser())) {s = 55;}

                        else if ( (LA341_2==RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) && (synpred187_InternalN4JSXParser())) {s = 56;}

                        else if ( (LA341_2==RULE_TEMPLATE_HEAD) && (synpred187_InternalN4JSXParser())) {s = 57;}

                        else if ( (LA341_2==Delete) && (synpred187_InternalN4JSXParser())) {s = 58;}

                        else if ( (LA341_2==Void) && (synpred187_InternalN4JSXParser())) {s = 59;}

                        else if ( (LA341_2==Typeof) && (synpred187_InternalN4JSXParser())) {s = 60;}

                        else if ( (LA341_2==PlusSignPlusSign) && (synpred187_InternalN4JSXParser())) {s = 61;}

                        else if ( (LA341_2==HyphenMinusHyphenMinus) && (synpred187_InternalN4JSXParser())) {s = 62;}

                        else if ( (LA341_2==PlusSign) && (synpred187_InternalN4JSXParser())) {s = 63;}

                        else if ( (LA341_2==HyphenMinus) && (synpred187_InternalN4JSXParser())) {s = 64;}

                        else if ( (LA341_2==Tilde) && (synpred187_InternalN4JSXParser())) {s = 65;}

                        else if ( (LA341_2==ExclamationMark) && (synpred187_InternalN4JSXParser())) {s = 66;}

                         
                        input.seek(index341_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 341, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_241s = "\1\u0099\1\uffff\1\u0095\101\uffff";
    static final String dfa_242s = "\1\1\1\uffff\1\0\101\uffff}>";
    static final String[] dfa_243s = {
            "\1\6\55\uffff\1\1\1\uffff\2\1\10\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\4\1\1\1\uffff\1\5\1\uffff\1\1\3\uffff\1\7\1\uffff\2\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\3\uffff\2\1\1\3\1\1\1\2\1\1\2\uffff\2\1\1\uffff\2\1\46\uffff\1\1\1\uffff\1\1",
            "",
            "\1\32\1\25\1\37\1\uffff\1\34\1\40\1\42\1\21\2\uffff\1\20\1\67\3\uffff\1\41\1\17\1\73\2\uffff\1\43\1\uffff\1\22\1\uffff\1\27\1\75\1\36\1\35\2\uffff\1\70\1\uffff\1\56\1\12\1\uffff\1\31\2\uffff\1\33\3\uffff\1\24\1\60\1\11\1\55\1\30\1\74\6\uffff\1\14\1\16\1\10\1\44\1\15\7\uffff\1\76\1\uffff\1\77\1\uffff\1\62\4\uffff\1\1\2\uffff\1\23\3\uffff\1\26\2\uffff\1\103\2\uffff\1\65\2\uffff\1\100\1\uffff\1\101\1\uffff\1\61\2\uffff\1\45\1\uffff\1\1\1\uffff\1\66\1\63\2\uffff\1\64\2\uffff\1\102\3\uffff\1\46\1\uffff\1\53\1\50\1\51\1\52\1\uffff\1\54\1\uffff\1\13\2\uffff\1\57\11\uffff\1\72\1\71\10\uffff\1\47",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_241 = DFA.unpackEncodedStringToUnsignedChars(dfa_241s);
    static final short[] dfa_242 = DFA.unpackEncodedString(dfa_242s);
    static final short[][] dfa_243 = unpackEncodedStringArray(dfa_243s);

    class DFA342 extends DFA {

        public DFA342(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 342;
            this.eot = dfa_222;
            this.eof = dfa_223;
            this.min = dfa_224;
            this.max = dfa_241;
            this.accept = dfa_226;
            this.special = dfa_242;
            this.transition = dfa_243;
        }
        public String getDescription() {
            return "()* loopback of 21780:1: ( ( ( () ( ( norm1_RelationalOperator ) ) ( New | This_1 | Super | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD ) ) )=> ( () ( (lv_op_2_0= norm1_RelationalOperator ) ) ( ( New | This_1 | Super | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_rhs_3_0= norm1_ShiftExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA342_2 = input.LA(1);

                         
                        int index342_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA342_2>=4 && LA342_2<=149 && (s=T2S.M_29[LA342_2-(4)])>=0) && (synpred189_InternalN4JSXParser())) { /* 60 cases */ }
                        else if ( (LA342_2==GreaterThanSignEqualsSign||LA342_2==GreaterThanSign) ) {s = 1;}

                         
                        input.seek(index342_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA342_0 = input.LA(1);

                         
                        int index342_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA342_0==EOF||LA342_0==ExclamationMarkEqualsSignEqualsSign||(LA342_0>=LessThanSignLessThanSignEqualsSign && LA342_0<=EqualsSignEqualsSignEqualsSign)||(LA342_0>=ExclamationMarkEqualsSign && LA342_0<=AsteriskEqualsSign)||LA342_0==PlusSignEqualsSign||(LA342_0>=HyphenMinusEqualsSign && LA342_0<=SolidusEqualsSign)||LA342_0==EqualsSignEqualsSign||LA342_0==CircumflexAccentEqualsSign||(LA342_0>=VerticalLineEqualsSign && LA342_0<=VerticalLineVerticalLine)||LA342_0==Ampersand||LA342_0==RightParenthesis||LA342_0==Comma||(LA342_0>=Colon && LA342_0<=Semicolon)||LA342_0==EqualsSign||LA342_0==QuestionMark||(LA342_0>=RightSquareBracket && LA342_0<=CircumflexAccent)||(LA342_0>=VerticalLine && LA342_0<=RightCurlyBracket)||LA342_0==RULE_ML_COMMENT||LA342_0==RULE_EOL) ) {s = 1;}

                        else if ( (LA342_0==GreaterThanSign) ) {s = 2;}

                        else if ( (LA342_0==LessThanSign) && (synpred189_InternalN4JSXParser())) {s = 3;}

                        else if ( (LA342_0==LessThanSignEqualsSign) && (synpred189_InternalN4JSXParser())) {s = 4;}

                        else if ( (LA342_0==GreaterThanSignEqualsSign) && (synpred189_InternalN4JSXParser())) {s = 5;}

                        else if ( (LA342_0==Instanceof) && (synpred189_InternalN4JSXParser())) {s = 6;}

                        else if ( (LA342_0==In) && (synpred189_InternalN4JSXParser())) {s = 7;}

                         
                        input.seek(index342_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 342, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_244s = "\1\4\35\0\43\uffff";
    static final String dfa_245s = "\1\u0095\35\0\43\uffff";
    static final String dfa_246s = "\36\uffff\1\4\37\uffff\1\1\1\3\1\2";
    static final String dfa_247s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\43\uffff}>";
    static final String[] dfa_248s = {
            "\1\25\1\20\1\30\1\uffff\1\27\1\31\1\33\1\14\2\uffff\1\13\1\36\3\uffff\1\32\1\12\1\36\2\uffff\1\34\1\uffff\1\15\1\uffff\1\22\1\36\1\4\1\1\2\uffff\1\36\1\uffff\2\36\1\uffff\1\24\1\uffff\1\6\1\26\3\uffff\1\17\3\36\1\23\1\36\6\uffff\1\7\1\11\1\36\1\35\1\10\7\uffff\1\36\1\uffff\1\36\1\uffff\1\36\7\uffff\1\16\3\uffff\1\21\2\uffff\1\36\2\uffff\1\3\2\uffff\1\36\1\uffff\1\36\1\uffff\1\36\2\uffff\1\36\3\uffff\1\2\1\36\2\uffff\1\36\2\uffff\1\36\3\uffff\1\36\1\uffff\4\36\1\uffff\1\36\1\uffff\1\5\2\uffff\1\36\11\uffff\2\36\10\uffff\1\36",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_244 = DFA.unpackEncodedStringToUnsignedChars(dfa_244s);
    static final char[] dfa_245 = DFA.unpackEncodedStringToUnsignedChars(dfa_245s);
    static final short[] dfa_246 = DFA.unpackEncodedString(dfa_246s);
    static final short[] dfa_247 = DFA.unpackEncodedString(dfa_247s);
    static final short[][] dfa_248 = unpackEncodedStringArray(dfa_248s);

    class DFA374 extends DFA {

        public DFA374(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 374;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_244;
            this.max = dfa_245;
            this.accept = dfa_246;
            this.special = dfa_247;
            this.transition = dfa_248;
        }
        public String getDescription() {
            return "24374:1: ( ( ( ( () Await ) )=>this_AwaitExpression_0= ruleAwaitExpression ) | ( ( ( () CommercialAt Promisify ) )=>this_PromisifyExpression_1= rulePromisifyExpression ) | ( ( ( ( ( LeftParenthesis ( ( ( ruleFormalParameter ) ) ( Comma ( ( ruleFormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ( ( ( ( Async ) ) ruleNoLineTerminator[null] LeftParenthesis ) )=> ( ( ( Async ) ) ruleNoLineTerminator[null] LeftParenthesis ) ) ( ( ( ruleFormalParameter ) ) ( Comma ( ( ruleFormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ruleBindingIdentifierAsFormalParameter ) ) ) EqualsSignGreaterThanSign ) )=>this_ArrowExpression_2= ruleArrowExpression ) | (this_ConditionalExpression_3= ruleConditionalExpression ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_5_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_6_0= ruleAssignmentExpression ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA374_1 = input.LA(1);

                         
                        int index374_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred219_InternalN4JSXParser()) ) {s = 62;}

                        else if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA374_2 = input.LA(1);

                         
                        int index374_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_InternalN4JSXParser()) ) {s = 64;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA374_3 = input.LA(1);

                         
                        int index374_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA374_4 = input.LA(1);

                         
                        int index374_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA374_5 = input.LA(1);

                         
                        int index374_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA374_6 = input.LA(1);

                         
                        int index374_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA374_7 = input.LA(1);

                         
                        int index374_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA374_8 = input.LA(1);

                         
                        int index374_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA374_9 = input.LA(1);

                         
                        int index374_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA374_10 = input.LA(1);

                         
                        int index374_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA374_11 = input.LA(1);

                         
                        int index374_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA374_12 = input.LA(1);

                         
                        int index374_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA374_13 = input.LA(1);

                         
                        int index374_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA374_14 = input.LA(1);

                         
                        int index374_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA374_15 = input.LA(1);

                         
                        int index374_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA374_16 = input.LA(1);

                         
                        int index374_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA374_17 = input.LA(1);

                         
                        int index374_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA374_18 = input.LA(1);

                         
                        int index374_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA374_19 = input.LA(1);

                         
                        int index374_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA374_20 = input.LA(1);

                         
                        int index374_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA374_21 = input.LA(1);

                         
                        int index374_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA374_22 = input.LA(1);

                         
                        int index374_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA374_23 = input.LA(1);

                         
                        int index374_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA374_24 = input.LA(1);

                         
                        int index374_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA374_25 = input.LA(1);

                         
                        int index374_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA374_26 = input.LA(1);

                         
                        int index374_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA374_27 = input.LA(1);

                         
                        int index374_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA374_28 = input.LA(1);

                         
                        int index374_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA374_29 = input.LA(1);

                         
                        int index374_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred222_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index374_29);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 374, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_249s = "\1\14\15\uffff";
    static final String dfa_250s = "\1\67\13\0\2\uffff";
    static final String dfa_251s = "\1\160\13\0\2\uffff";
    static final String dfa_252s = "\14\uffff\1\2\1\1";
    static final String dfa_253s = "\1\uffff\1\5\1\2\1\0\1\11\1\6\1\3\1\1\1\10\1\12\1\7\1\4\2\uffff}>";
    static final String[] dfa_254s = {
            "\1\7\12\uffff\1\4\1\uffff\1\11\1\2\1\uffff\1\5\1\uffff\1\6\1\3\6\uffff\1\12\3\uffff\2\14\1\13\10\uffff\1\14\4\uffff\1\14\1\uffff\1\1\1\10\7\uffff\1\14",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final short[] dfa_249 = DFA.unpackEncodedString(dfa_249s);
    static final char[] dfa_250 = DFA.unpackEncodedStringToUnsignedChars(dfa_250s);
    static final char[] dfa_251 = DFA.unpackEncodedStringToUnsignedChars(dfa_251s);
    static final short[] dfa_252 = DFA.unpackEncodedString(dfa_252s);
    static final short[] dfa_253 = DFA.unpackEncodedString(dfa_253s);
    static final short[][] dfa_254 = unpackEncodedStringArray(dfa_254s);

    class DFA373 extends DFA {

        public DFA373(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 373;
            this.eot = dfa_15;
            this.eof = dfa_249;
            this.min = dfa_250;
            this.max = dfa_251;
            this.accept = dfa_252;
            this.special = dfa_253;
            this.transition = dfa_254;
        }
        public String getDescription() {
            return "24485:1: ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_5_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_6_0= ruleAssignmentExpression ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA373_3 = input.LA(1);

                         
                        int index373_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred223_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index373_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA373_7 = input.LA(1);

                         
                        int index373_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred223_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index373_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA373_2 = input.LA(1);

                         
                        int index373_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred223_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index373_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA373_6 = input.LA(1);

                         
                        int index373_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred223_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index373_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA373_11 = input.LA(1);

                         
                        int index373_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred223_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index373_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA373_1 = input.LA(1);

                         
                        int index373_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred223_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index373_1);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA373_5 = input.LA(1);

                         
                        int index373_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred223_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index373_5);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA373_10 = input.LA(1);

                         
                        int index373_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred223_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index373_10);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA373_8 = input.LA(1);

                         
                        int index373_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred223_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index373_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA373_4 = input.LA(1);

                         
                        int index373_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred223_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index373_4);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA373_9 = input.LA(1);

                         
                        int index373_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred223_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index373_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 373, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA376 extends DFA {

        public DFA376(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 376;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_244;
            this.max = dfa_245;
            this.accept = dfa_246;
            this.special = dfa_247;
            this.transition = dfa_248;
        }
        public String getDescription() {
            return "24545:1: ( ( ( ( () Await ) )=>this_AwaitExpression_0= norm1_AwaitExpression ) | ( ( ( () CommercialAt Promisify ) )=>this_PromisifyExpression_1= norm1_PromisifyExpression ) | ( ( ( ( ( LeftParenthesis ( ( ( ruleFormalParameter ) ) ( Comma ( ( ruleFormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ( ( ( ( Async ) ) ruleNoLineTerminator[null] LeftParenthesis ) )=> ( ( ( Async ) ) ruleNoLineTerminator[null] LeftParenthesis ) ) ( ( ( ruleFormalParameter ) ) ( Comma ( ( ruleFormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ruleBindingIdentifierAsFormalParameter ) ) ) EqualsSignGreaterThanSign ) )=>this_ArrowExpression_2= norm1_ArrowExpression ) | (this_ConditionalExpression_3= norm1_ConditionalExpression ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_5_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_6_0= norm1_AssignmentExpression ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA376_1 = input.LA(1);

                         
                        int index376_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred224_InternalN4JSXParser()) ) {s = 62;}

                        else if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA376_2 = input.LA(1);

                         
                        int index376_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred225_InternalN4JSXParser()) ) {s = 64;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA376_3 = input.LA(1);

                         
                        int index376_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA376_4 = input.LA(1);

                         
                        int index376_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA376_5 = input.LA(1);

                         
                        int index376_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA376_6 = input.LA(1);

                         
                        int index376_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA376_7 = input.LA(1);

                         
                        int index376_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA376_8 = input.LA(1);

                         
                        int index376_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA376_9 = input.LA(1);

                         
                        int index376_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA376_10 = input.LA(1);

                         
                        int index376_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA376_11 = input.LA(1);

                         
                        int index376_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA376_12 = input.LA(1);

                         
                        int index376_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA376_13 = input.LA(1);

                         
                        int index376_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA376_14 = input.LA(1);

                         
                        int index376_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA376_15 = input.LA(1);

                         
                        int index376_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA376_16 = input.LA(1);

                         
                        int index376_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA376_17 = input.LA(1);

                         
                        int index376_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA376_18 = input.LA(1);

                         
                        int index376_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA376_19 = input.LA(1);

                         
                        int index376_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA376_20 = input.LA(1);

                         
                        int index376_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA376_21 = input.LA(1);

                         
                        int index376_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA376_22 = input.LA(1);

                         
                        int index376_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA376_23 = input.LA(1);

                         
                        int index376_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA376_24 = input.LA(1);

                         
                        int index376_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA376_25 = input.LA(1);

                         
                        int index376_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA376_26 = input.LA(1);

                         
                        int index376_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA376_27 = input.LA(1);

                         
                        int index376_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA376_28 = input.LA(1);

                         
                        int index376_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA376_29 = input.LA(1);

                         
                        int index376_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index376_29);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 376, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_255s = "\1\u0099\13\0\2\uffff";
    static final String dfa_256s = "\1\uffff\1\7\1\4\1\2\1\0\1\10\1\5\1\3\1\12\1\1\1\11\1\6\2\uffff}>";
    static final String[] dfa_257s = {
            "\1\7\12\uffff\1\4\1\uffff\1\11\1\2\1\uffff\1\5\1\uffff\1\6\1\3\6\uffff\1\12\5\uffff\1\13\5\uffff\1\14\2\uffff\1\14\3\uffff\2\14\1\uffff\1\1\1\10\3\uffff\1\14\3\uffff\1\14\46\uffff\1\14\1\uffff\1\14",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_255 = DFA.unpackEncodedStringToUnsignedChars(dfa_255s);
    static final short[] dfa_256 = DFA.unpackEncodedString(dfa_256s);
    static final short[][] dfa_257 = unpackEncodedStringArray(dfa_257s);

    class DFA375 extends DFA {

        public DFA375(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 375;
            this.eot = dfa_15;
            this.eof = dfa_249;
            this.min = dfa_250;
            this.max = dfa_255;
            this.accept = dfa_252;
            this.special = dfa_256;
            this.transition = dfa_257;
        }
        public String getDescription() {
            return "24656:1: ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_5_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_6_0= norm1_AssignmentExpression ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA375_4 = input.LA(1);

                         
                        int index375_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index375_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA375_9 = input.LA(1);

                         
                        int index375_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index375_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA375_3 = input.LA(1);

                         
                        int index375_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index375_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA375_7 = input.LA(1);

                         
                        int index375_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index375_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA375_2 = input.LA(1);

                         
                        int index375_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index375_2);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA375_6 = input.LA(1);

                         
                        int index375_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index375_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA375_11 = input.LA(1);

                         
                        int index375_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index375_11);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA375_1 = input.LA(1);

                         
                        int index375_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index375_1);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA375_5 = input.LA(1);

                         
                        int index375_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index375_5);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA375_10 = input.LA(1);

                         
                        int index375_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index375_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA375_8 = input.LA(1);

                         
                        int index375_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index375_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 375, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_258s = "\1\4\34\0\44\uffff";
    static final String dfa_259s = "\1\u0095\34\0\44\uffff";
    static final String dfa_260s = "\35\uffff\1\4\1\5\37\uffff\1\1\1\3\1\2";
    static final String dfa_261s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\44\uffff}>";
    static final String[] dfa_262s = {
            "\1\24\1\17\1\27\1\uffff\1\26\1\30\1\32\1\13\2\uffff\1\12\1\36\3\uffff\1\31\1\11\1\36\2\uffff\1\33\1\uffff\1\14\1\uffff\1\21\1\36\1\4\1\1\2\uffff\1\36\1\uffff\2\36\1\uffff\1\23\1\uffff\1\35\1\25\3\uffff\1\16\3\36\1\22\1\36\6\uffff\1\6\1\10\1\36\1\34\1\7\7\uffff\1\36\1\uffff\1\36\1\uffff\1\36\7\uffff\1\15\3\uffff\1\20\2\uffff\1\36\2\uffff\1\3\2\uffff\1\36\1\uffff\1\36\1\uffff\1\36\2\uffff\1\36\3\uffff\1\2\1\36\2\uffff\1\36\2\uffff\1\36\3\uffff\1\36\1\uffff\4\36\1\uffff\1\36\1\uffff\1\5\2\uffff\1\36\11\uffff\2\36\10\uffff\1\36",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_258 = DFA.unpackEncodedStringToUnsignedChars(dfa_258s);
    static final char[] dfa_259 = DFA.unpackEncodedStringToUnsignedChars(dfa_259s);
    static final short[] dfa_260 = DFA.unpackEncodedString(dfa_260s);
    static final short[] dfa_261 = DFA.unpackEncodedString(dfa_261s);
    static final short[][] dfa_262 = unpackEncodedStringArray(dfa_262s);

    class DFA378 extends DFA {

        public DFA378(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 378;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_258;
            this.max = dfa_259;
            this.accept = dfa_260;
            this.special = dfa_261;
            this.transition = dfa_262;
        }
        public String getDescription() {
            return "24716:1: ( ( ( ( () Await ) )=>this_AwaitExpression_0= norm2_AwaitExpression ) | ( ( ( () CommercialAt Promisify ) )=>this_PromisifyExpression_1= norm2_PromisifyExpression ) | ( ( ( ( ( LeftParenthesis ( ( ( norm1_FormalParameter ) ) ( Comma ( ( norm1_FormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ( ( ( ( Async ) ) ruleNoLineTerminator[null] LeftParenthesis ) )=> ( ( ( Async ) ) ruleNoLineTerminator[null] LeftParenthesis ) ) ( ( ( norm1_FormalParameter ) ) ( Comma ( ( norm1_FormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( norm1_BindingIdentifierAsFormalParameter ) ) ) EqualsSignGreaterThanSign ) )=>this_ArrowExpression_2= norm2_ArrowExpression ) | this_YieldExpression_3= ruleYieldExpression | (this_ConditionalExpression_4= norm2_ConditionalExpression ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_6_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_7_0= norm2_AssignmentExpression ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA378_1 = input.LA(1);

                         
                        int index378_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred229_InternalN4JSXParser()) ) {s = 62;}

                        else if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA378_2 = input.LA(1);

                         
                        int index378_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalN4JSXParser()) ) {s = 64;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA378_3 = input.LA(1);

                         
                        int index378_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA378_4 = input.LA(1);

                         
                        int index378_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA378_5 = input.LA(1);

                         
                        int index378_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA378_6 = input.LA(1);

                         
                        int index378_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA378_7 = input.LA(1);

                         
                        int index378_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA378_8 = input.LA(1);

                         
                        int index378_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA378_9 = input.LA(1);

                         
                        int index378_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA378_10 = input.LA(1);

                         
                        int index378_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA378_11 = input.LA(1);

                         
                        int index378_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA378_12 = input.LA(1);

                         
                        int index378_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA378_13 = input.LA(1);

                         
                        int index378_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA378_14 = input.LA(1);

                         
                        int index378_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA378_15 = input.LA(1);

                         
                        int index378_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA378_16 = input.LA(1);

                         
                        int index378_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA378_17 = input.LA(1);

                         
                        int index378_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA378_18 = input.LA(1);

                         
                        int index378_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA378_19 = input.LA(1);

                         
                        int index378_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA378_20 = input.LA(1);

                         
                        int index378_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA378_21 = input.LA(1);

                         
                        int index378_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA378_22 = input.LA(1);

                         
                        int index378_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA378_23 = input.LA(1);

                         
                        int index378_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA378_24 = input.LA(1);

                         
                        int index378_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA378_25 = input.LA(1);

                         
                        int index378_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA378_26 = input.LA(1);

                         
                        int index378_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA378_27 = input.LA(1);

                         
                        int index378_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA378_28 = input.LA(1);

                         
                        int index378_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index378_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 378, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_263s = "\1\150\13\0\2\uffff";
    static final String dfa_264s = "\1\uffff\1\1\1\6\1\2\1\7\1\3\1\10\1\4\1\0\1\11\1\5\1\12\2\uffff}>";
    static final String[] dfa_265s = {
            "\1\7\12\uffff\1\4\1\uffff\1\11\1\2\1\uffff\1\5\1\uffff\1\6\1\3\6\uffff\1\12\3\uffff\2\14\1\13\10\uffff\1\14\4\uffff\1\14\1\uffff\1\1\1\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_263 = DFA.unpackEncodedStringToUnsignedChars(dfa_263s);
    static final short[] dfa_264 = DFA.unpackEncodedString(dfa_264s);
    static final short[][] dfa_265 = unpackEncodedStringArray(dfa_265s);

    class DFA377 extends DFA {

        public DFA377(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 377;
            this.eot = dfa_15;
            this.eof = dfa_249;
            this.min = dfa_250;
            this.max = dfa_263;
            this.accept = dfa_252;
            this.special = dfa_264;
            this.transition = dfa_265;
        }
        public String getDescription() {
            return "24837:1: ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_6_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_7_0= norm2_AssignmentExpression ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA377_8 = input.LA(1);

                         
                        int index377_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred233_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index377_8);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA377_1 = input.LA(1);

                         
                        int index377_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred233_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index377_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA377_3 = input.LA(1);

                         
                        int index377_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred233_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index377_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA377_5 = input.LA(1);

                         
                        int index377_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred233_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index377_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA377_7 = input.LA(1);

                         
                        int index377_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred233_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index377_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA377_10 = input.LA(1);

                         
                        int index377_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred233_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index377_10);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA377_2 = input.LA(1);

                         
                        int index377_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred233_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index377_2);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA377_4 = input.LA(1);

                         
                        int index377_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred233_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index377_4);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA377_6 = input.LA(1);

                         
                        int index377_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred233_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index377_6);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA377_9 = input.LA(1);

                         
                        int index377_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred233_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index377_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA377_11 = input.LA(1);

                         
                        int index377_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred233_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index377_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 377, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA380 extends DFA {

        public DFA380(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 380;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_258;
            this.max = dfa_259;
            this.accept = dfa_260;
            this.special = dfa_261;
            this.transition = dfa_262;
        }
        public String getDescription() {
            return "24897:1: ( ( ( ( () Await ) )=>this_AwaitExpression_0= norm3_AwaitExpression ) | ( ( ( () CommercialAt Promisify ) )=>this_PromisifyExpression_1= norm3_PromisifyExpression ) | ( ( ( ( ( LeftParenthesis ( ( ( norm1_FormalParameter ) ) ( Comma ( ( norm1_FormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ( ( ( ( Async ) ) ruleNoLineTerminator[null] LeftParenthesis ) )=> ( ( ( Async ) ) ruleNoLineTerminator[null] LeftParenthesis ) ) ( ( ( norm1_FormalParameter ) ) ( Comma ( ( norm1_FormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( norm1_BindingIdentifierAsFormalParameter ) ) ) EqualsSignGreaterThanSign ) )=>this_ArrowExpression_2= norm3_ArrowExpression ) | this_YieldExpression_3= norm1_YieldExpression | (this_ConditionalExpression_4= norm3_ConditionalExpression ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_6_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_7_0= norm3_AssignmentExpression ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA380_1 = input.LA(1);

                         
                        int index380_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalN4JSXParser()) ) {s = 62;}

                        else if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA380_2 = input.LA(1);

                         
                        int index380_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred235_InternalN4JSXParser()) ) {s = 64;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA380_3 = input.LA(1);

                         
                        int index380_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA380_4 = input.LA(1);

                         
                        int index380_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA380_5 = input.LA(1);

                         
                        int index380_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA380_6 = input.LA(1);

                         
                        int index380_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA380_7 = input.LA(1);

                         
                        int index380_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA380_8 = input.LA(1);

                         
                        int index380_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA380_9 = input.LA(1);

                         
                        int index380_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA380_10 = input.LA(1);

                         
                        int index380_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA380_11 = input.LA(1);

                         
                        int index380_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA380_12 = input.LA(1);

                         
                        int index380_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA380_13 = input.LA(1);

                         
                        int index380_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA380_14 = input.LA(1);

                         
                        int index380_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA380_15 = input.LA(1);

                         
                        int index380_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA380_16 = input.LA(1);

                         
                        int index380_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA380_17 = input.LA(1);

                         
                        int index380_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA380_18 = input.LA(1);

                         
                        int index380_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA380_19 = input.LA(1);

                         
                        int index380_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA380_20 = input.LA(1);

                         
                        int index380_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA380_21 = input.LA(1);

                         
                        int index380_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA380_22 = input.LA(1);

                         
                        int index380_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA380_23 = input.LA(1);

                         
                        int index380_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA380_24 = input.LA(1);

                         
                        int index380_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA380_25 = input.LA(1);

                         
                        int index380_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA380_26 = input.LA(1);

                         
                        int index380_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA380_27 = input.LA(1);

                         
                        int index380_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA380_28 = input.LA(1);

                         
                        int index380_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred237_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index380_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 380, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_266s = "\1\uffff\1\0\1\6\1\1\1\7\1\2\1\10\1\3\1\4\1\11\1\5\1\12\2\uffff}>";
    static final short[] dfa_266 = DFA.unpackEncodedString(dfa_266s);

    class DFA379 extends DFA {

        public DFA379(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 379;
            this.eot = dfa_15;
            this.eof = dfa_249;
            this.min = dfa_250;
            this.max = dfa_255;
            this.accept = dfa_252;
            this.special = dfa_266;
            this.transition = dfa_257;
        }
        public String getDescription() {
            return "25018:1: ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_6_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_7_0= norm3_AssignmentExpression ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA379_1 = input.LA(1);

                         
                        int index379_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred238_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index379_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA379_3 = input.LA(1);

                         
                        int index379_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred238_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index379_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA379_5 = input.LA(1);

                         
                        int index379_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred238_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index379_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA379_7 = input.LA(1);

                         
                        int index379_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred238_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index379_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA379_8 = input.LA(1);

                         
                        int index379_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred238_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index379_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA379_10 = input.LA(1);

                         
                        int index379_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred238_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index379_10);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA379_2 = input.LA(1);

                         
                        int index379_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred238_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index379_2);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA379_4 = input.LA(1);

                         
                        int index379_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred238_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index379_4);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA379_6 = input.LA(1);

                         
                        int index379_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred238_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index379_6);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA379_9 = input.LA(1);

                         
                        int index379_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred238_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index379_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA379_11 = input.LA(1);

                         
                        int index379_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred238_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index379_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 379, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_267s = "\114\uffff";
    static final String dfa_268s = "\1\76\113\uffff";
    static final String dfa_269s = "\1\4\17\uffff\1\0\35\uffff\1\0\35\uffff";
    static final String dfa_270s = "\1\u0095\17\uffff\1\0\35\uffff\1\0\35\uffff";
    static final String dfa_271s = "\1\uffff\17\1\1\uffff\35\1\1\uffff\17\1\1\2\15\uffff";
    static final String dfa_272s = "\1\0\17\uffff\1\1\35\uffff\1\2\35\uffff}>";
    static final String[] dfa_273s = {
            "\1\24\1\17\1\27\1\uffff\1\26\1\30\1\32\1\13\2\uffff\1\12\1\61\3\uffff\1\31\1\11\1\65\2\uffff\1\33\1\uffff\1\14\1\uffff\1\21\1\67\1\4\1\1\2\uffff\1\62\1\uffff\1\52\1\40\1\uffff\1\23\1\uffff\1\35\1\25\3\uffff\1\16\1\54\1\37\1\51\1\22\1\66\3\uffff\1\76\2\uffff\1\6\1\10\1\36\1\34\1\7\3\uffff\1\76\1\uffff\2\76\1\70\1\76\1\71\1\76\1\56\6\uffff\1\76\1\15\2\uffff\1\76\1\20\1\76\1\uffff\1\75\2\uffff\1\3\2\uffff\1\72\1\76\1\73\1\uffff\1\55\1\uffff\1\76\1\41\2\76\1\uffff\1\2\1\57\2\uffff\1\60\2\uffff\1\74\3\uffff\1\42\1\uffff\1\47\1\44\1\45\1\46\1\uffff\1\50\1\uffff\1\5\2\uffff\1\53\11\uffff\1\64\1\63\10\uffff\1\43",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_267 = DFA.unpackEncodedString(dfa_267s);
    static final short[] dfa_268 = DFA.unpackEncodedString(dfa_268s);
    static final char[] dfa_269 = DFA.unpackEncodedStringToUnsignedChars(dfa_269s);
    static final char[] dfa_270 = DFA.unpackEncodedStringToUnsignedChars(dfa_270s);
    static final short[] dfa_271 = DFA.unpackEncodedString(dfa_271s);
    static final short[] dfa_272 = DFA.unpackEncodedString(dfa_272s);
    static final short[][] dfa_273 = unpackEncodedStringArray(dfa_273s);

    class DFA382 extends DFA {

        public DFA382(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 382;
            this.eot = dfa_267;
            this.eof = dfa_268;
            this.min = dfa_269;
            this.max = dfa_270;
            this.accept = dfa_271;
            this.special = dfa_272;
            this.transition = dfa_273;
        }
        public String getDescription() {
            return "25120:3: ( ( Await | CommercialAt | LeftParenthesis | Async | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_3_0= norm2_AssignmentExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA382_0 = input.LA(1);

                         
                        int index382_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA382_0>=5 && LA382_0<=126 && (s=T2S.M_30[LA382_0-(5)])>=0) && (synpred240_InternalN4JSXParser())) { /* 15 cases */ }
                        else if ( (LA382_0==Of) ) {s = 16;}

                        
                        else if ((LA382_0>=4 && LA382_0<=149 && (s=T2S.M_31[LA382_0-(4)])>=0) && (synpred240_InternalN4JSXParser())) { /* 30 cases */ }
                        else if ( (LA382_0==SolidusEqualsSign) ) {s = 46;}

                        
                        else if ((LA382_0>=15 && LA382_0<=140 && (s=T2S.M_32[LA382_0-(15)])>=0) && (synpred240_InternalN4JSXParser())) { /* 16 cases */ }
                        else if ( (LA382_0==EOF||LA382_0==LessThanSignLessThanSignEqualsSign||LA382_0==PercentSignEqualsSign||(LA382_0>=AmpersandEqualsSign && LA382_0<=AsteriskEqualsSign)||LA382_0==PlusSignEqualsSign||LA382_0==HyphenMinusEqualsSign||LA382_0==CircumflexAccentEqualsSign||LA382_0==In||LA382_0==VerticalLineEqualsSign||LA382_0==Comma||LA382_0==Semicolon||(LA382_0>=EqualsSign && LA382_0<=GreaterThanSign)) ) {s = 62;}

                         
                        input.seek(index382_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA382_16 = input.LA(1);

                         
                        int index382_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 61;}

                        else if ( (true) ) {s = 62;}

                         
                        input.seek(index382_16);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA382_46 = input.LA(1);

                         
                        int index382_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 61;}

                        else if ( (true) ) {s = 62;}

                         
                        input.seek(index382_46);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 382, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_274s = "\1\76\117\uffff";
    static final String dfa_275s = "\1\4\55\uffff\1\0\41\uffff";
    static final String dfa_276s = "\1\u0099\55\uffff\1\0\41\uffff";
    static final String dfa_277s = "\1\uffff\55\1\1\uffff\17\1\1\2\21\uffff";
    static final String dfa_278s = "\1\0\55\uffff\1\1\41\uffff}>";
    static final String[] dfa_279s = {
            "\1\24\1\17\1\27\1\uffff\1\26\1\30\1\32\1\13\2\uffff\1\12\1\61\3\uffff\1\31\1\11\1\65\2\uffff\1\33\1\uffff\1\14\1\uffff\1\21\1\67\1\4\1\1\2\uffff\1\62\1\uffff\1\52\1\40\1\uffff\1\23\1\uffff\1\35\1\25\3\uffff\1\16\1\54\1\37\1\51\1\22\1\66\3\uffff\1\76\2\uffff\1\6\1\10\1\36\1\34\1\7\3\uffff\1\76\1\uffff\2\76\1\70\1\76\1\71\1\76\1\56\6\uffff\1\76\1\15\3\uffff\1\20\1\76\1\uffff\1\75\2\uffff\1\3\1\76\1\uffff\1\72\1\76\1\73\1\uffff\1\55\2\76\1\41\2\76\1\uffff\1\2\1\57\1\76\1\uffff\1\60\1\uffff\1\76\1\74\3\uffff\1\42\1\uffff\1\47\1\44\1\45\1\46\1\uffff\1\50\1\uffff\1\5\2\uffff\1\53\11\uffff\1\64\1\63\10\uffff\1\43\1\uffff\1\76\1\uffff\1\76",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_274 = DFA.unpackEncodedString(dfa_274s);
    static final char[] dfa_275 = DFA.unpackEncodedStringToUnsignedChars(dfa_275s);
    static final char[] dfa_276 = DFA.unpackEncodedStringToUnsignedChars(dfa_276s);
    static final short[] dfa_277 = DFA.unpackEncodedString(dfa_277s);
    static final short[] dfa_278 = DFA.unpackEncodedString(dfa_278s);
    static final short[][] dfa_279 = unpackEncodedStringArray(dfa_279s);

    class DFA384 extends DFA {

        public DFA384(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 384;
            this.eot = dfa_99;
            this.eof = dfa_274;
            this.min = dfa_275;
            this.max = dfa_276;
            this.accept = dfa_277;
            this.special = dfa_278;
            this.transition = dfa_279;
        }
        public String getDescription() {
            return "25285:3: ( ( Await | CommercialAt | LeftParenthesis | Async | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_3_0= norm3_AssignmentExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA384_0 = input.LA(1);

                         
                        int index384_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA384_0>=4 && LA384_0<=149 && (s=T2S.M_33[LA384_0-(4)])>=0) && (synpred242_InternalN4JSXParser())) { /* 45 cases */ }
                        else if ( (LA384_0==SolidusEqualsSign) ) {s = 46;}

                        
                        else if ((LA384_0>=15 && LA384_0<=140 && (s=T2S.M_32[LA384_0-(15)])>=0) && (synpred242_InternalN4JSXParser())) { /* 16 cases */ }
                        else if ( (LA384_0==EOF||LA384_0==LessThanSignLessThanSignEqualsSign||LA384_0==PercentSignEqualsSign||(LA384_0>=AmpersandEqualsSign && LA384_0<=AsteriskEqualsSign)||LA384_0==PlusSignEqualsSign||LA384_0==HyphenMinusEqualsSign||LA384_0==CircumflexAccentEqualsSign||LA384_0==VerticalLineEqualsSign||LA384_0==RightParenthesis||LA384_0==Comma||(LA384_0>=Colon && LA384_0<=Semicolon)||(LA384_0>=EqualsSign && LA384_0<=GreaterThanSign)||LA384_0==RightSquareBracket||LA384_0==RightCurlyBracket||LA384_0==RULE_ML_COMMENT||LA384_0==RULE_EOL) ) {s = 62;}

                         
                        input.seek(index384_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA384_46 = input.LA(1);

                         
                        int index384_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred242_InternalN4JSXParser()) ) {s = 61;}

                        else if ( (true) ) {s = 62;}

                         
                        input.seek(index384_46);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 384, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_280s = "\136\uffff";
    static final String dfa_281s = "\1\2\135\uffff";
    static final String dfa_282s = "\1\4\1\0\134\uffff";
    static final String dfa_283s = "\1\u0095\1\0\134\uffff";
    static final String dfa_284s = "\2\uffff\1\2\132\uffff\1\1";
    static final String dfa_285s = "\1\uffff\1\0\134\uffff}>";
    static final String[] dfa_286s = {
            "\61\2\1\uffff\1\2\2\uffff\10\2\5\uffff\1\2\1\uffff\1\2\1\uffff\1\2\5\uffff\1\2\1\uffff\5\2\2\uffff\1\2\2\uffff\1\1\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\2\uffff\3\2\2\uffff\1\2\2\uffff\1\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_280 = DFA.unpackEncodedString(dfa_280s);
    static final short[] dfa_281 = DFA.unpackEncodedString(dfa_281s);
    static final char[] dfa_282 = DFA.unpackEncodedStringToUnsignedChars(dfa_282s);
    static final char[] dfa_283 = DFA.unpackEncodedStringToUnsignedChars(dfa_283s);
    static final short[] dfa_284 = DFA.unpackEncodedString(dfa_284s);
    static final short[] dfa_285 = DFA.unpackEncodedString(dfa_285s);
    static final short[][] dfa_286 = unpackEncodedStringArray(dfa_286s);

    class DFA416 extends DFA {

        public DFA416(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 416;
            this.eot = dfa_280;
            this.eof = dfa_281;
            this.min = dfa_282;
            this.max = dfa_283;
            this.accept = dfa_284;
            this.special = dfa_285;
            this.transition = dfa_286;
        }
        public String getDescription() {
            return "27740:2: ( ( ( LeftParenthesis )=>otherlv_1= LeftParenthesis ) ( ( (lv_args_2_0= ruleAnnotationArgument ) ) (otherlv_3= Comma ( (lv_args_4_0= ruleAnnotationArgument ) ) )* )? otherlv_5= RightParenthesis )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA416_1 = input.LA(1);

                         
                        int index416_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred251_InternalN4JSXParser()) ) {s = 93;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index416_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 416, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_287s = "\1\4\1\uffff\30\0\2\uffff\61\0\4\uffff";
    static final String dfa_288s = "\1\u0095\1\uffff\30\0\2\uffff\61\0\4\uffff";
    static final String dfa_289s = "\1\uffff\1\1\30\uffff\2\4\61\uffff\1\6\1\2\1\3\1\5";
    static final String dfa_290s = "\1\0\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\2\uffff\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\4\uffff}>";
    static final String[] dfa_291s = {
            "\1\26\1\23\1\103\1\57\1\15\1\104\1\4\1\7\1\41\1\42\1\6\1\53\1\43\1\50\1\51\1\2\1\3\1\44\1\47\1\55\1\5\1\61\1\10\1\63\1\16\1\66\1\34\1\14\1\35\1\37\1\40\1\11\1\75\1\62\1\64\1\25\1\70\1\72\1\13\1\36\1\46\1\76\1\101\1\73\1\21\1\74\1\22\1\12\1\71\4\uffff\1\52\1\30\1\77\1\60\1\105\1\31\1\65\1\67\21\uffff\1\100\1\45\1\54\1\56\1\102\5\uffff\1\115\1\uffff\1\33\7\uffff\1\32\2\uffff\1\27\1\1\1\114\2\uffff\1\24\2\uffff\1\20\3\uffff\1\107\1\uffff\1\112\1\uffff\1\111\2\uffff\1\113\1\uffff\1\17\2\uffff\1\106\23\uffff\1\110",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_287 = DFA.unpackEncodedStringToUnsignedChars(dfa_287s);
    static final char[] dfa_288 = DFA.unpackEncodedStringToUnsignedChars(dfa_288s);
    static final short[] dfa_289 = DFA.unpackEncodedString(dfa_289s);
    static final short[] dfa_290 = DFA.unpackEncodedString(dfa_290s);
    static final short[][] dfa_291 = unpackEncodedStringArray(dfa_291s);

    class DFA458 extends DFA {

        public DFA458(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 458;
            this.eot = dfa_177;
            this.eof = dfa_177;
            this.min = dfa_287;
            this.max = dfa_288;
            this.accept = dfa_289;
            this.special = dfa_290;
            this.transition = dfa_291;
        }
        public String getDescription() {
            return "29295:1: (this_AnnotatedN4MemberDeclaration_0= ruleAnnotatedN4MemberDeclaration | ( ( ( () ( ( ruleN4Modifier ) )* ruleGetterHeader[null] ) )=>this_N4GetterDeclaration_1= ruleN4GetterDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=>this_N4SetterDeclaration_2= ruleN4SetterDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* ( ruleTypeVariables[null] )? ( ruleBogusTypeRefFragment[null] )? ( ( ( ( Asterisk ) ) ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ruleAsyncNoTrailingLineBreak[null] ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=>this_N4MethodDeclaration_3= ruleN4MethodDeclaration ) | this_N4FieldDeclaration_4= ruleN4FieldDeclaration | this_N4CallableConstructorDeclaration_5= ruleN4CallableConstructorDeclaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA458_0 = input.LA(1);

                         
                        int index458_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA458_0>=4 && LA458_0<=126 && (s=T2S.M_35[LA458_0-(4)])>=0)) { /* 25 cases */ }
                        else if ( (LA458_0==LessThanSign) && (synpred261_InternalN4JSXParser())) {s = 26;}

                        else if ( (LA458_0==Asterisk) && (synpred261_InternalN4JSXParser())) {s = 27;}

                        
                        else if ((LA458_0>=6 && LA458_0<=149 && (s=T2S.M_36[LA458_0-(6)])>=0)) { /* 50 cases */ }
                        input.seek(index458_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA458_2 = input.LA(1);

                         
                        int index458_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred260_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA458_3 = input.LA(1);

                         
                        int index458_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred260_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA458_4 = input.LA(1);

                         
                        int index458_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred260_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA458_5 = input.LA(1);

                         
                        int index458_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred260_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA458_6 = input.LA(1);

                         
                        int index458_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred260_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA458_7 = input.LA(1);

                         
                        int index458_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred260_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA458_8 = input.LA(1);

                         
                        int index458_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred260_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA458_9 = input.LA(1);

                         
                        int index458_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred260_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA458_10 = input.LA(1);

                         
                        int index458_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA458_11 = input.LA(1);

                         
                        int index458_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA458_12 = input.LA(1);

                         
                        int index458_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA458_13 = input.LA(1);

                         
                        int index458_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA458_14 = input.LA(1);

                         
                        int index458_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA458_15 = input.LA(1);

                         
                        int index458_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA458_16 = input.LA(1);

                         
                        int index458_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA458_17 = input.LA(1);

                         
                        int index458_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA458_18 = input.LA(1);

                         
                        int index458_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA458_19 = input.LA(1);

                         
                        int index458_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA458_20 = input.LA(1);

                         
                        int index458_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA458_21 = input.LA(1);

                         
                        int index458_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA458_22 = input.LA(1);

                         
                        int index458_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA458_23 = input.LA(1);

                         
                        int index458_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA458_24 = input.LA(1);

                         
                        int index458_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA458_25 = input.LA(1);

                         
                        int index458_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred260_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA458_28 = input.LA(1);

                         
                        int index458_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_28);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA458_29 = input.LA(1);

                         
                        int index458_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_29);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA458_30 = input.LA(1);

                         
                        int index458_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_30);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA458_31 = input.LA(1);

                         
                        int index458_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_31);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA458_32 = input.LA(1);

                         
                        int index458_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_32);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA458_33 = input.LA(1);

                         
                        int index458_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_33);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA458_34 = input.LA(1);

                         
                        int index458_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_34);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA458_35 = input.LA(1);

                         
                        int index458_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_35);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA458_36 = input.LA(1);

                         
                        int index458_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_36);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA458_37 = input.LA(1);

                         
                        int index458_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_37);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA458_38 = input.LA(1);

                         
                        int index458_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_38);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA458_39 = input.LA(1);

                         
                        int index458_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_39);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA458_40 = input.LA(1);

                         
                        int index458_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_40);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA458_41 = input.LA(1);

                         
                        int index458_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_41);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA458_42 = input.LA(1);

                         
                        int index458_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_42);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA458_43 = input.LA(1);

                         
                        int index458_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_43);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA458_44 = input.LA(1);

                         
                        int index458_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_44);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA458_45 = input.LA(1);

                         
                        int index458_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_45);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA458_46 = input.LA(1);

                         
                        int index458_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_46);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA458_47 = input.LA(1);

                         
                        int index458_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_47);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA458_48 = input.LA(1);

                         
                        int index458_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_48);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA458_49 = input.LA(1);

                         
                        int index458_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_49);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA458_50 = input.LA(1);

                         
                        int index458_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_50);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA458_51 = input.LA(1);

                         
                        int index458_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_51);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA458_52 = input.LA(1);

                         
                        int index458_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_52);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA458_53 = input.LA(1);

                         
                        int index458_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_53);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA458_54 = input.LA(1);

                         
                        int index458_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_54);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA458_55 = input.LA(1);

                         
                        int index458_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_55);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA458_56 = input.LA(1);

                         
                        int index458_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_56);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA458_57 = input.LA(1);

                         
                        int index458_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_57);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA458_58 = input.LA(1);

                         
                        int index458_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_58);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA458_59 = input.LA(1);

                         
                        int index458_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_59);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA458_60 = input.LA(1);

                         
                        int index458_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_60);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA458_61 = input.LA(1);

                         
                        int index458_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_61);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA458_62 = input.LA(1);

                         
                        int index458_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_62);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA458_63 = input.LA(1);

                         
                        int index458_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_63);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA458_64 = input.LA(1);

                         
                        int index458_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_64);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA458_65 = input.LA(1);

                         
                        int index458_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_65);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA458_66 = input.LA(1);

                         
                        int index458_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_66);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA458_67 = input.LA(1);

                         
                        int index458_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_67);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA458_68 = input.LA(1);

                         
                        int index458_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_68);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA458_69 = input.LA(1);

                         
                        int index458_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_69);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA458_70 = input.LA(1);

                         
                        int index458_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_70);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA458_71 = input.LA(1);

                         
                        int index458_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_71);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA458_72 = input.LA(1);

                         
                        int index458_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_72);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA458_73 = input.LA(1);

                         
                        int index458_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_73);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA458_74 = input.LA(1);

                         
                        int index458_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_74);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA458_75 = input.LA(1);

                         
                        int index458_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_75);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA458_76 = input.LA(1);

                         
                        int index458_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index458_76);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 458, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA459 extends DFA {

        public DFA459(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 459;
            this.eot = dfa_177;
            this.eof = dfa_177;
            this.min = dfa_287;
            this.max = dfa_288;
            this.accept = dfa_289;
            this.special = dfa_290;
            this.transition = dfa_291;
        }
        public String getDescription() {
            return "29599:1: (this_AnnotatedN4MemberDeclaration_0= norm1_AnnotatedN4MemberDeclaration | ( ( ( () ( ( ruleN4Modifier ) )* norm1_GetterHeader[null] ) )=>this_N4GetterDeclaration_1= norm1_N4GetterDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=>this_N4SetterDeclaration_2= norm1_N4SetterDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* ( ruleTypeVariables[null] )? ( ruleBogusTypeRefFragment[null] )? ( ( ( ( Asterisk ) ) ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ruleAsyncNoTrailingLineBreak[null] ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=>this_N4MethodDeclaration_3= norm1_N4MethodDeclaration ) | this_N4FieldDeclaration_4= norm1_N4FieldDeclaration | this_N4CallableConstructorDeclaration_5= norm1_N4CallableConstructorDeclaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA459_0 = input.LA(1);

                         
                        int index459_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA459_0>=4 && LA459_0<=126 && (s=T2S.M_35[LA459_0-(4)])>=0)) { /* 25 cases */ }
                        else if ( (LA459_0==LessThanSign) && (synpred264_InternalN4JSXParser())) {s = 26;}

                        else if ( (LA459_0==Asterisk) && (synpred264_InternalN4JSXParser())) {s = 27;}

                        
                        else if ((LA459_0>=6 && LA459_0<=149 && (s=T2S.M_36[LA459_0-(6)])>=0)) { /* 50 cases */ }
                        input.seek(index459_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA459_2 = input.LA(1);

                         
                        int index459_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred263_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA459_3 = input.LA(1);

                         
                        int index459_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred263_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA459_4 = input.LA(1);

                         
                        int index459_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred263_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA459_5 = input.LA(1);

                         
                        int index459_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred263_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA459_6 = input.LA(1);

                         
                        int index459_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred263_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA459_7 = input.LA(1);

                         
                        int index459_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred263_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA459_8 = input.LA(1);

                         
                        int index459_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred263_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA459_9 = input.LA(1);

                         
                        int index459_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred263_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA459_10 = input.LA(1);

                         
                        int index459_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA459_11 = input.LA(1);

                         
                        int index459_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA459_12 = input.LA(1);

                         
                        int index459_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA459_13 = input.LA(1);

                         
                        int index459_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA459_14 = input.LA(1);

                         
                        int index459_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA459_15 = input.LA(1);

                         
                        int index459_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA459_16 = input.LA(1);

                         
                        int index459_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA459_17 = input.LA(1);

                         
                        int index459_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA459_18 = input.LA(1);

                         
                        int index459_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA459_19 = input.LA(1);

                         
                        int index459_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA459_20 = input.LA(1);

                         
                        int index459_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA459_21 = input.LA(1);

                         
                        int index459_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA459_22 = input.LA(1);

                         
                        int index459_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA459_23 = input.LA(1);

                         
                        int index459_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA459_24 = input.LA(1);

                         
                        int index459_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA459_25 = input.LA(1);

                         
                        int index459_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred263_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA459_28 = input.LA(1);

                         
                        int index459_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_28);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA459_29 = input.LA(1);

                         
                        int index459_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_29);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA459_30 = input.LA(1);

                         
                        int index459_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_30);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA459_31 = input.LA(1);

                         
                        int index459_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_31);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA459_32 = input.LA(1);

                         
                        int index459_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_32);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA459_33 = input.LA(1);

                         
                        int index459_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_33);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA459_34 = input.LA(1);

                         
                        int index459_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_34);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA459_35 = input.LA(1);

                         
                        int index459_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_35);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA459_36 = input.LA(1);

                         
                        int index459_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_36);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA459_37 = input.LA(1);

                         
                        int index459_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_37);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA459_38 = input.LA(1);

                         
                        int index459_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_38);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA459_39 = input.LA(1);

                         
                        int index459_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_39);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA459_40 = input.LA(1);

                         
                        int index459_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_40);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA459_41 = input.LA(1);

                         
                        int index459_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_41);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA459_42 = input.LA(1);

                         
                        int index459_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_42);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA459_43 = input.LA(1);

                         
                        int index459_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_43);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA459_44 = input.LA(1);

                         
                        int index459_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_44);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA459_45 = input.LA(1);

                         
                        int index459_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_45);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA459_46 = input.LA(1);

                         
                        int index459_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_46);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA459_47 = input.LA(1);

                         
                        int index459_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_47);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA459_48 = input.LA(1);

                         
                        int index459_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_48);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA459_49 = input.LA(1);

                         
                        int index459_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_49);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA459_50 = input.LA(1);

                         
                        int index459_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_50);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA459_51 = input.LA(1);

                         
                        int index459_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_51);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA459_52 = input.LA(1);

                         
                        int index459_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_52);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA459_53 = input.LA(1);

                         
                        int index459_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_53);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA459_54 = input.LA(1);

                         
                        int index459_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_54);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA459_55 = input.LA(1);

                         
                        int index459_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_55);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA459_56 = input.LA(1);

                         
                        int index459_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_56);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA459_57 = input.LA(1);

                         
                        int index459_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_57);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA459_58 = input.LA(1);

                         
                        int index459_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_58);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA459_59 = input.LA(1);

                         
                        int index459_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_59);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA459_60 = input.LA(1);

                         
                        int index459_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_60);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA459_61 = input.LA(1);

                         
                        int index459_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_61);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA459_62 = input.LA(1);

                         
                        int index459_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_62);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA459_63 = input.LA(1);

                         
                        int index459_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_63);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA459_64 = input.LA(1);

                         
                        int index459_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_64);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA459_65 = input.LA(1);

                         
                        int index459_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_65);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA459_66 = input.LA(1);

                         
                        int index459_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_66);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA459_67 = input.LA(1);

                         
                        int index459_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_67);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA459_68 = input.LA(1);

                         
                        int index459_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_68);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA459_69 = input.LA(1);

                         
                        int index459_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_69);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA459_70 = input.LA(1);

                         
                        int index459_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_70);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA459_71 = input.LA(1);

                         
                        int index459_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_71);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA459_72 = input.LA(1);

                         
                        int index459_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_72);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA459_73 = input.LA(1);

                         
                        int index459_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_73);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA459_74 = input.LA(1);

                         
                        int index459_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_74);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA459_75 = input.LA(1);

                         
                        int index459_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_75);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA459_76 = input.LA(1);

                         
                        int index459_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index459_76);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 459, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_292s = "\117\uffff";
    static final String dfa_293s = "\1\4\30\0\2\uffff\61\0\3\uffff";
    static final String dfa_294s = "\1\u0095\30\0\2\uffff\61\0\3\uffff";
    static final String dfa_295s = "\31\uffff\2\3\61\uffff\1\1\1\2\1\4";
    static final String dfa_296s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\2\uffff\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\3\uffff}>";
    static final String[] dfa_297s = {
            "\1\25\1\22\1\102\1\56\1\14\1\103\1\3\1\6\1\40\1\41\1\5\1\52\1\42\1\47\1\50\1\1\1\2\1\43\1\46\1\54\1\4\1\60\1\7\1\62\1\15\1\65\1\33\1\13\1\34\1\36\1\37\1\10\1\74\1\61\1\63\1\24\1\67\1\71\1\12\1\35\1\45\1\75\1\100\1\72\1\20\1\73\1\21\1\11\1\70\4\uffff\1\51\1\27\1\76\1\57\1\104\1\30\1\64\1\66\21\uffff\1\77\1\44\1\53\1\55\1\101\7\uffff\1\32\7\uffff\1\31\2\uffff\1\26\1\uffff\1\113\2\uffff\1\23\2\uffff\1\17\3\uffff\1\106\1\uffff\1\111\1\uffff\1\110\2\uffff\1\112\1\uffff\1\16\2\uffff\1\105\23\uffff\1\107",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_292 = DFA.unpackEncodedString(dfa_292s);
    static final char[] dfa_293 = DFA.unpackEncodedStringToUnsignedChars(dfa_293s);
    static final char[] dfa_294 = DFA.unpackEncodedStringToUnsignedChars(dfa_294s);
    static final short[] dfa_295 = DFA.unpackEncodedString(dfa_295s);
    static final short[] dfa_296 = DFA.unpackEncodedString(dfa_296s);
    static final short[][] dfa_297 = unpackEncodedStringArray(dfa_297s);

    class DFA471 extends DFA {

        public DFA471(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 471;
            this.eot = dfa_292;
            this.eof = dfa_292;
            this.min = dfa_293;
            this.max = dfa_294;
            this.accept = dfa_295;
            this.special = dfa_296;
            this.transition = dfa_297;
        }
        public String getDescription() {
            return "29920:1: ( ( ( ( ( () ( ( ruleN4Modifier ) )* ruleGetterHeader[null] ) )=> ( () ( (lv_declaredModifiers_2_0= ruleN4Modifier ) )* this_GetterHeader_3= ruleGetterHeader[$current] ) ) ( ( ( () LeftCurlyBracket ) )=> (lv_body_4_0= ruleBlock ) )? (otherlv_5= Semicolon )? ) | ( ( ( ( () ( ( ruleN4Modifier ) )* Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=> ( () ( (lv_declaredModifiers_7_0= ruleN4Modifier ) )* otherlv_8= Set ( ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT )=> (lv_declaredName_9_0= ruleLiteralOrComputedPropertyName ) ) ) ) otherlv_10= LeftParenthesis ( (lv_fpar_11_0= ruleFormalParameter ) ) otherlv_12= RightParenthesis ( ( ( () LeftCurlyBracket ) )=> (lv_body_13_0= ruleBlock ) )? (otherlv_14= Semicolon )? ) | ( ( ( ( () ( ( ruleN4Modifier ) )* ( ruleTypeVariables[null] )? ( ruleBogusTypeRefFragment[null] )? ( ( ( ( Asterisk ) ) ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ruleAsyncNoTrailingLineBreak[null] ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=> ( () ( (lv_declaredModifiers_16_0= ruleN4Modifier ) )* (this_TypeVariables_17= ruleTypeVariables[$current] )? (this_BogusTypeRefFragment_18= ruleBogusTypeRefFragment[$current] )? ( ( ( (lv_generator_19_0= Asterisk ) ) ( (lv_declaredName_20_0= ruleLiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsReturnAndBody_21= norm1_MethodParamsReturnAndBody[$current] ) ) | (this_AsyncNoTrailingLineBreak_22= ruleAsyncNoTrailingLineBreak[$current] ( (lv_declaredName_23_0= ruleLiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsReturnAndBody_24= ruleMethodParamsReturnAndBody[$current] ) ) ) ) ) (otherlv_25= Semicolon )? ) | ( () this_FieldDeclarationImpl_27= ruleFieldDeclarationImpl[$current] ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA471_0 = input.LA(1);

                         
                        int index471_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA471_0>=4 && LA471_0<=126 && (s=T2S.M_39[LA471_0-(4)])>=0)) { /* 24 cases */ }
                        else if ( (LA471_0==LessThanSign) && (synpred270_InternalN4JSXParser())) {s = 25;}

                        else if ( (LA471_0==Asterisk) && (synpred270_InternalN4JSXParser())) {s = 26;}

                        
                        else if ((LA471_0>=6 && LA471_0<=149 && (s=T2S.M_40[LA471_0-(6)])>=0)) { /* 49 cases */ }
                        input.seek(index471_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA471_1 = input.LA(1);

                         
                        int index471_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred267_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA471_2 = input.LA(1);

                         
                        int index471_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred267_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA471_3 = input.LA(1);

                         
                        int index471_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred267_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA471_4 = input.LA(1);

                         
                        int index471_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred267_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA471_5 = input.LA(1);

                         
                        int index471_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred267_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA471_6 = input.LA(1);

                         
                        int index471_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred267_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA471_7 = input.LA(1);

                         
                        int index471_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred267_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA471_8 = input.LA(1);

                         
                        int index471_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred267_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA471_9 = input.LA(1);

                         
                        int index471_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA471_10 = input.LA(1);

                         
                        int index471_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA471_11 = input.LA(1);

                         
                        int index471_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA471_12 = input.LA(1);

                         
                        int index471_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA471_13 = input.LA(1);

                         
                        int index471_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA471_14 = input.LA(1);

                         
                        int index471_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA471_15 = input.LA(1);

                         
                        int index471_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA471_16 = input.LA(1);

                         
                        int index471_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA471_17 = input.LA(1);

                         
                        int index471_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA471_18 = input.LA(1);

                         
                        int index471_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA471_19 = input.LA(1);

                         
                        int index471_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA471_20 = input.LA(1);

                         
                        int index471_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA471_21 = input.LA(1);

                         
                        int index471_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA471_22 = input.LA(1);

                         
                        int index471_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_22);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA471_23 = input.LA(1);

                         
                        int index471_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_23);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA471_24 = input.LA(1);

                         
                        int index471_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred267_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_24);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA471_27 = input.LA(1);

                         
                        int index471_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA471_28 = input.LA(1);

                         
                        int index471_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA471_29 = input.LA(1);

                         
                        int index471_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA471_30 = input.LA(1);

                         
                        int index471_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA471_31 = input.LA(1);

                         
                        int index471_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA471_32 = input.LA(1);

                         
                        int index471_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_32);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA471_33 = input.LA(1);

                         
                        int index471_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_33);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA471_34 = input.LA(1);

                         
                        int index471_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_34);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA471_35 = input.LA(1);

                         
                        int index471_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_35);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA471_36 = input.LA(1);

                         
                        int index471_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_36);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA471_37 = input.LA(1);

                         
                        int index471_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_37);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA471_38 = input.LA(1);

                         
                        int index471_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_38);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA471_39 = input.LA(1);

                         
                        int index471_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_39);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA471_40 = input.LA(1);

                         
                        int index471_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_40);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA471_41 = input.LA(1);

                         
                        int index471_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_41);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA471_42 = input.LA(1);

                         
                        int index471_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_42);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA471_43 = input.LA(1);

                         
                        int index471_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_43);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA471_44 = input.LA(1);

                         
                        int index471_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_44);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA471_45 = input.LA(1);

                         
                        int index471_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_45);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA471_46 = input.LA(1);

                         
                        int index471_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_46);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA471_47 = input.LA(1);

                         
                        int index471_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_47);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA471_48 = input.LA(1);

                         
                        int index471_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_48);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA471_49 = input.LA(1);

                         
                        int index471_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_49);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA471_50 = input.LA(1);

                         
                        int index471_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_50);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA471_51 = input.LA(1);

                         
                        int index471_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_51);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA471_52 = input.LA(1);

                         
                        int index471_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_52);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA471_53 = input.LA(1);

                         
                        int index471_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_53);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA471_54 = input.LA(1);

                         
                        int index471_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_54);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA471_55 = input.LA(1);

                         
                        int index471_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_55);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA471_56 = input.LA(1);

                         
                        int index471_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_56);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA471_57 = input.LA(1);

                         
                        int index471_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_57);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA471_58 = input.LA(1);

                         
                        int index471_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_58);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA471_59 = input.LA(1);

                         
                        int index471_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_59);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA471_60 = input.LA(1);

                         
                        int index471_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_60);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA471_61 = input.LA(1);

                         
                        int index471_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_61);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA471_62 = input.LA(1);

                         
                        int index471_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_62);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA471_63 = input.LA(1);

                         
                        int index471_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_63);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA471_64 = input.LA(1);

                         
                        int index471_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_64);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA471_65 = input.LA(1);

                         
                        int index471_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_65);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA471_66 = input.LA(1);

                         
                        int index471_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_66);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA471_67 = input.LA(1);

                         
                        int index471_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_67);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA471_68 = input.LA(1);

                         
                        int index471_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_68);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA471_69 = input.LA(1);

                         
                        int index471_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_69);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA471_70 = input.LA(1);

                         
                        int index471_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_70);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA471_71 = input.LA(1);

                         
                        int index471_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_71);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA471_72 = input.LA(1);

                         
                        int index471_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_72);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA471_73 = input.LA(1);

                         
                        int index471_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_73);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA471_74 = input.LA(1);

                         
                        int index471_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_74);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA471_75 = input.LA(1);

                         
                        int index471_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index471_75);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 471, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_298s = "\122\uffff";
    static final String dfa_299s = "\1\2\121\uffff";
    static final String dfa_300s = "\1\4\1\0\120\uffff";
    static final String dfa_301s = "\1\u0095\1\0\120\uffff";
    static final String dfa_302s = "\2\uffff\1\2\116\uffff\1\1";
    static final String dfa_303s = "\1\uffff\1\0\120\uffff}>";
    static final String[] dfa_304s = {
            "\61\2\4\uffff\10\2\21\uffff\5\2\5\uffff\1\2\1\uffff\1\2\6\uffff\2\2\2\uffff\3\2\2\uffff\1\1\1\uffff\2\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\2\uffff\1\2\23\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_298 = DFA.unpackEncodedString(dfa_298s);
    static final short[] dfa_299 = DFA.unpackEncodedString(dfa_299s);
    static final char[] dfa_300 = DFA.unpackEncodedStringToUnsignedChars(dfa_300s);
    static final char[] dfa_301 = DFA.unpackEncodedStringToUnsignedChars(dfa_301s);
    static final short[] dfa_302 = DFA.unpackEncodedString(dfa_302s);
    static final short[] dfa_303 = DFA.unpackEncodedString(dfa_303s);
    static final short[][] dfa_304 = unpackEncodedStringArray(dfa_304s);

    class DFA461 extends DFA {

        public DFA461(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 461;
            this.eot = dfa_298;
            this.eof = dfa_299;
            this.min = dfa_300;
            this.max = dfa_301;
            this.accept = dfa_302;
            this.special = dfa_303;
            this.transition = dfa_304;
        }
        public String getDescription() {
            return "29961:3: ( ( ( () LeftCurlyBracket ) )=> (lv_body_4_0= ruleBlock ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA461_1 = input.LA(1);

                         
                        int index461_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred266_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index461_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 461, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA464 extends DFA {

        public DFA464(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 464;
            this.eot = dfa_298;
            this.eof = dfa_299;
            this.min = dfa_300;
            this.max = dfa_301;
            this.accept = dfa_302;
            this.special = dfa_303;
            this.transition = dfa_304;
        }
        public String getDescription() {
            return "30391:1: ( ( ( () LeftCurlyBracket ) )=> (lv_body_13_0= ruleBlock ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA464_1 = input.LA(1);

                         
                        int index464_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred269_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index464_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 464, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_305s = "\1\4\1\uffff\10\4\1\uffff";
    static final String dfa_306s = "\1\u0095\1\uffff\10\u0095\1\uffff";
    static final String dfa_307s = "\1\uffff\1\2\10\uffff\1\1";
    static final String[] dfa_308s = {
            "\6\1\1\10\1\5\2\1\1\4\4\1\1\7\1\3\3\1\1\11\1\1\1\6\10\1\1\2\21\1\4\uffff\10\1\21\uffff\5\1\7\uffff\1\1\7\uffff\1\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\2\uffff\1\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\23\uffff\1\1",
            "",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            ""
    };
    static final char[] dfa_305 = DFA.unpackEncodedStringToUnsignedChars(dfa_305s);
    static final char[] dfa_306 = DFA.unpackEncodedStringToUnsignedChars(dfa_306s);
    static final short[] dfa_307 = DFA.unpackEncodedString(dfa_307s);
    static final short[][] dfa_308 = unpackEncodedStringArray(dfa_308s);

    class DFA466 extends DFA {

        public DFA466(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 466;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_305;
            this.max = dfa_306;
            this.accept = dfa_307;
            this.special = dfa_25;
            this.transition = dfa_308;
        }
        public String getDescription() {
            return "()* loopback of 30449:2: ( (lv_declaredModifiers_16_0= ruleN4Modifier ) )*";
        }
    }

    class DFA468 extends DFA {

        public DFA468(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 468;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "30479:3: (this_BogusTypeRefFragment_18= ruleBogusTypeRefFragment[$current] )?";
        }
    }

    class DFA483 extends DFA {

        public DFA483(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 483;
            this.eot = dfa_292;
            this.eof = dfa_292;
            this.min = dfa_293;
            this.max = dfa_294;
            this.accept = dfa_295;
            this.special = dfa_296;
            this.transition = dfa_297;
        }
        public String getDescription() {
            return "30630:1: ( ( ( ( ( () ( ( ruleN4Modifier ) )* norm1_GetterHeader[null] ) )=> ( () ( (lv_declaredModifiers_2_0= ruleN4Modifier ) )* this_GetterHeader_3= norm1_GetterHeader[$current] ) ) ( ( ( () LeftCurlyBracket ) )=> (lv_body_4_0= norm1_Block ) )? (otherlv_5= Semicolon )? ) | ( ( ( ( () ( ( ruleN4Modifier ) )* Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=> ( () ( (lv_declaredModifiers_7_0= ruleN4Modifier ) )* otherlv_8= Set ( ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT )=> (lv_declaredName_9_0= norm1_LiteralOrComputedPropertyName ) ) ) ) otherlv_10= LeftParenthesis ( (lv_fpar_11_0= norm1_FormalParameter ) ) otherlv_12= RightParenthesis ( ( ( () LeftCurlyBracket ) )=> (lv_body_13_0= norm1_Block ) )? (otherlv_14= Semicolon )? ) | ( ( ( ( () ( ( ruleN4Modifier ) )* ( ruleTypeVariables[null] )? ( ruleBogusTypeRefFragment[null] )? ( ( ( ( Asterisk ) ) ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ruleAsyncNoTrailingLineBreak[null] ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=> ( () ( (lv_declaredModifiers_16_0= ruleN4Modifier ) )* (this_TypeVariables_17= ruleTypeVariables[$current] )? (this_BogusTypeRefFragment_18= ruleBogusTypeRefFragment[$current] )? ( ( ( (lv_generator_19_0= Asterisk ) ) ( (lv_declaredName_20_0= norm1_LiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsReturnAndBody_21= norm1_MethodParamsReturnAndBody[$current] ) ) | (this_AsyncNoTrailingLineBreak_22= ruleAsyncNoTrailingLineBreak[$current] ( (lv_declaredName_23_0= norm1_LiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsReturnAndBody_24= ruleMethodParamsReturnAndBody[$current] ) ) ) ) ) (otherlv_25= Semicolon )? ) | ( () this_FieldDeclarationImpl_27= norm1_FieldDeclarationImpl[$current] ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA483_0 = input.LA(1);

                         
                        int index483_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA483_0>=4 && LA483_0<=126 && (s=T2S.M_39[LA483_0-(4)])>=0)) { /* 24 cases */ }
                        else if ( (LA483_0==LessThanSign) && (synpred278_InternalN4JSXParser())) {s = 25;}

                        else if ( (LA483_0==Asterisk) && (synpred278_InternalN4JSXParser())) {s = 26;}

                        
                        else if ((LA483_0>=6 && LA483_0<=149 && (s=T2S.M_40[LA483_0-(6)])>=0)) { /* 49 cases */ }
                        input.seek(index483_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA483_1 = input.LA(1);

                         
                        int index483_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred275_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA483_2 = input.LA(1);

                         
                        int index483_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred275_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA483_3 = input.LA(1);

                         
                        int index483_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred275_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA483_4 = input.LA(1);

                         
                        int index483_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred275_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA483_5 = input.LA(1);

                         
                        int index483_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred275_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA483_6 = input.LA(1);

                         
                        int index483_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred275_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA483_7 = input.LA(1);

                         
                        int index483_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred275_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA483_8 = input.LA(1);

                         
                        int index483_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred275_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA483_9 = input.LA(1);

                         
                        int index483_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA483_10 = input.LA(1);

                         
                        int index483_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA483_11 = input.LA(1);

                         
                        int index483_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA483_12 = input.LA(1);

                         
                        int index483_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA483_13 = input.LA(1);

                         
                        int index483_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA483_14 = input.LA(1);

                         
                        int index483_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA483_15 = input.LA(1);

                         
                        int index483_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA483_16 = input.LA(1);

                         
                        int index483_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA483_17 = input.LA(1);

                         
                        int index483_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA483_18 = input.LA(1);

                         
                        int index483_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA483_19 = input.LA(1);

                         
                        int index483_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA483_20 = input.LA(1);

                         
                        int index483_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA483_21 = input.LA(1);

                         
                        int index483_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA483_22 = input.LA(1);

                         
                        int index483_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_22);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA483_23 = input.LA(1);

                         
                        int index483_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_23);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA483_24 = input.LA(1);

                         
                        int index483_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred275_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_24);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA483_27 = input.LA(1);

                         
                        int index483_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA483_28 = input.LA(1);

                         
                        int index483_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA483_29 = input.LA(1);

                         
                        int index483_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA483_30 = input.LA(1);

                         
                        int index483_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA483_31 = input.LA(1);

                         
                        int index483_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA483_32 = input.LA(1);

                         
                        int index483_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_32);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA483_33 = input.LA(1);

                         
                        int index483_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_33);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA483_34 = input.LA(1);

                         
                        int index483_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_34);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA483_35 = input.LA(1);

                         
                        int index483_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_35);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA483_36 = input.LA(1);

                         
                        int index483_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_36);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA483_37 = input.LA(1);

                         
                        int index483_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_37);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA483_38 = input.LA(1);

                         
                        int index483_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_38);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA483_39 = input.LA(1);

                         
                        int index483_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_39);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA483_40 = input.LA(1);

                         
                        int index483_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_40);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA483_41 = input.LA(1);

                         
                        int index483_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_41);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA483_42 = input.LA(1);

                         
                        int index483_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_42);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA483_43 = input.LA(1);

                         
                        int index483_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_43);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA483_44 = input.LA(1);

                         
                        int index483_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_44);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA483_45 = input.LA(1);

                         
                        int index483_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_45);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA483_46 = input.LA(1);

                         
                        int index483_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_46);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA483_47 = input.LA(1);

                         
                        int index483_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_47);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA483_48 = input.LA(1);

                         
                        int index483_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_48);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA483_49 = input.LA(1);

                         
                        int index483_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_49);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA483_50 = input.LA(1);

                         
                        int index483_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_50);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA483_51 = input.LA(1);

                         
                        int index483_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_51);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA483_52 = input.LA(1);

                         
                        int index483_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_52);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA483_53 = input.LA(1);

                         
                        int index483_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_53);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA483_54 = input.LA(1);

                         
                        int index483_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_54);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA483_55 = input.LA(1);

                         
                        int index483_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_55);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA483_56 = input.LA(1);

                         
                        int index483_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_56);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA483_57 = input.LA(1);

                         
                        int index483_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_57);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA483_58 = input.LA(1);

                         
                        int index483_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_58);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA483_59 = input.LA(1);

                         
                        int index483_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_59);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA483_60 = input.LA(1);

                         
                        int index483_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_60);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA483_61 = input.LA(1);

                         
                        int index483_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_61);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA483_62 = input.LA(1);

                         
                        int index483_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_62);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA483_63 = input.LA(1);

                         
                        int index483_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_63);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA483_64 = input.LA(1);

                         
                        int index483_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_64);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA483_65 = input.LA(1);

                         
                        int index483_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_65);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA483_66 = input.LA(1);

                         
                        int index483_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_66);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA483_67 = input.LA(1);

                         
                        int index483_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_67);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA483_68 = input.LA(1);

                         
                        int index483_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_68);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA483_69 = input.LA(1);

                         
                        int index483_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_69);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA483_70 = input.LA(1);

                         
                        int index483_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_70);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA483_71 = input.LA(1);

                         
                        int index483_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_71);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA483_72 = input.LA(1);

                         
                        int index483_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_72);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA483_73 = input.LA(1);

                         
                        int index483_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_73);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA483_74 = input.LA(1);

                         
                        int index483_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_74);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA483_75 = input.LA(1);

                         
                        int index483_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index483_75);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 483, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_309s = "\1\4\1\0\117\uffff";
    static final String dfa_310s = "\1\u0095\1\0\117\uffff";
    static final String dfa_311s = "\2\uffff\1\2\115\uffff\1\1";
    static final String dfa_312s = "\1\uffff\1\0\117\uffff}>";
    static final String[] dfa_313s = {
            "\61\2\4\uffff\10\2\21\uffff\5\2\5\uffff\1\2\1\uffff\1\2\6\uffff\2\2\2\uffff\3\2\2\uffff\1\1\1\uffff\2\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\2\uffff\1\2\23\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_309 = DFA.unpackEncodedStringToUnsignedChars(dfa_309s);
    static final char[] dfa_310 = DFA.unpackEncodedStringToUnsignedChars(dfa_310s);
    static final short[] dfa_311 = DFA.unpackEncodedString(dfa_311s);
    static final short[] dfa_312 = DFA.unpackEncodedString(dfa_312s);
    static final short[][] dfa_313 = unpackEncodedStringArray(dfa_313s);

    class DFA473 extends DFA {

        public DFA473(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 473;
            this.eot = dfa_177;
            this.eof = dfa_177;
            this.min = dfa_309;
            this.max = dfa_310;
            this.accept = dfa_311;
            this.special = dfa_312;
            this.transition = dfa_313;
        }
        public String getDescription() {
            return "30671:3: ( ( ( () LeftCurlyBracket ) )=> (lv_body_4_0= norm1_Block ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA473_1 = input.LA(1);

                         
                        int index473_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index473_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 473, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA476 extends DFA {

        public DFA476(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 476;
            this.eot = dfa_177;
            this.eof = dfa_177;
            this.min = dfa_309;
            this.max = dfa_310;
            this.accept = dfa_311;
            this.special = dfa_312;
            this.transition = dfa_313;
        }
        public String getDescription() {
            return "31101:1: ( ( ( () LeftCurlyBracket ) )=> (lv_body_13_0= norm1_Block ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA476_1 = input.LA(1);

                         
                        int index476_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred277_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index476_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 476, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA478 extends DFA {

        public DFA478(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 478;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_305;
            this.max = dfa_306;
            this.accept = dfa_307;
            this.special = dfa_25;
            this.transition = dfa_308;
        }
        public String getDescription() {
            return "()* loopback of 31159:2: ( (lv_declaredModifiers_16_0= ruleN4Modifier ) )*";
        }
    }

    class DFA480 extends DFA {

        public DFA480(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 480;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "31189:3: (this_BogusTypeRefFragment_18= ruleBogusTypeRefFragment[$current] )?";
        }
    }
    static final String dfa_314s = "\2\uffff\10\1\1\uffff";
    static final String dfa_315s = "\1\u0095\1\uffff\10\u0099\1\uffff";
    static final String[] dfa_316s = {
            "\6\1\1\10\1\5\2\1\1\4\4\1\1\7\1\3\3\1\1\11\1\1\1\6\10\1\1\2\21\1\4\uffff\10\1\21\uffff\5\1\22\uffff\1\1\1\uffff\1\1\2\uffff\1\1\2\uffff\1\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\23\uffff\1\1",
            "",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            ""
    };
    static final short[] dfa_314 = DFA.unpackEncodedString(dfa_314s);
    static final char[] dfa_315 = DFA.unpackEncodedStringToUnsignedChars(dfa_315s);
    static final short[][] dfa_316 = unpackEncodedStringArray(dfa_316s);

    class DFA484 extends DFA {

        public DFA484(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 484;
            this.eot = dfa_21;
            this.eof = dfa_314;
            this.min = dfa_305;
            this.max = dfa_315;
            this.accept = dfa_307;
            this.special = dfa_25;
            this.transition = dfa_316;
        }
        public String getDescription() {
            return "()* loopback of 31331:2: ( (lv_declaredModifiers_0_0= ruleN4Modifier ) )*";
        }
    }
    static final String dfa_317s = "\1\uffff\6\15\1\uffff\5\15\1\uffff";
    static final String dfa_318s = "\1\u0095\6\u0099\1\uffff\5\u0099\1\uffff";
    static final String[] dfa_319s = {
            "\1\14\1\12\2\15\1\4\23\15\1\5\2\15\1\3\7\15\1\13\2\15\1\2\5\15\1\10\1\15\1\11\1\1\1\15\4\uffff\10\15\21\uffff\5\15\22\uffff\1\7\1\uffff\1\15\2\uffff\1\7\2\uffff\1\7\3\uffff\1\15\1\uffff\1\15\1\uffff\1\15\2\uffff\1\15\1\uffff\1\6\2\uffff\1\15\23\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\2\15\1\7\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\2\15\1\7\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\2\15\1\7\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\2\15\1\7\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\2\15\1\7\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\2\uffff\1\7\1\uffff\2\15\1\7\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\2\15\1\uffff\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "\2\15\1\uffff\1\15\6\uffff\1\7\1\uffff\1\15\46\uffff\1\15\1\uffff\1\15",
            "\2\15\1\uffff\1\15\6\uffff\1\7\1\uffff\1\15\46\uffff\1\15\1\uffff\1\15",
            "\2\15\1\uffff\1\15\6\uffff\1\7\1\uffff\1\15\46\uffff\1\15\1\uffff\1\15",
            "\2\15\1\uffff\1\15\6\uffff\1\7\1\uffff\1\15\46\uffff\1\15\1\uffff\1\15",
            ""
    };
    static final short[] dfa_317 = DFA.unpackEncodedString(dfa_317s);
    static final char[] dfa_318 = DFA.unpackEncodedStringToUnsignedChars(dfa_318s);
    static final short[][] dfa_319 = unpackEncodedStringArray(dfa_319s);

    class DFA485 extends DFA {

        public DFA485(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 485;
            this.eot = dfa_15;
            this.eof = dfa_317;
            this.min = dfa_188;
            this.max = dfa_318;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_319;
        }
        public String getDescription() {
            return "31349:3: (this_BogusTypeRefFragment_1= ruleBogusTypeRefFragment[$current] )?";
        }
    }

    class DFA488 extends DFA {

        public DFA488(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 488;
            this.eot = dfa_21;
            this.eof = dfa_314;
            this.min = dfa_305;
            this.max = dfa_315;
            this.accept = dfa_307;
            this.special = dfa_25;
            this.transition = dfa_316;
        }
        public String getDescription() {
            return "()* loopback of 31435:2: ( (lv_declaredModifiers_0_0= ruleN4Modifier ) )*";
        }
    }

    class DFA489 extends DFA {

        public DFA489(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 489;
            this.eot = dfa_15;
            this.eof = dfa_317;
            this.min = dfa_188;
            this.max = dfa_318;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_319;
        }
        public String getDescription() {
            return "31453:3: (this_BogusTypeRefFragment_1= ruleBogusTypeRefFragment[$current] )?";
        }
    }

    class DFA492 extends DFA {

        public DFA492(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 492;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_305;
            this.max = dfa_306;
            this.accept = dfa_307;
            this.special = dfa_25;
            this.transition = dfa_308;
        }
        public String getDescription() {
            return "()* loopback of 31648:2: ( (lv_declaredModifiers_1_0= ruleN4Modifier ) )*";
        }
    }

    class DFA494 extends DFA {

        public DFA494(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 494;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "31678:3: (this_BogusTypeRefFragment_3= ruleBogusTypeRefFragment[$current] )?";
        }
    }

    class DFA497 extends DFA {

        public DFA497(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 497;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_305;
            this.max = dfa_306;
            this.accept = dfa_307;
            this.special = dfa_25;
            this.transition = dfa_308;
        }
        public String getDescription() {
            return "()* loopback of 31832:2: ( (lv_declaredModifiers_1_0= ruleN4Modifier ) )*";
        }
    }

    class DFA499 extends DFA {

        public DFA499(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 499;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "31862:3: (this_BogusTypeRefFragment_3= ruleBogusTypeRefFragment[$current] )?";
        }
    }

    class DFA507 extends DFA {

        public DFA507(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 507;
            this.eot = dfa_298;
            this.eof = dfa_299;
            this.min = dfa_300;
            this.max = dfa_301;
            this.accept = dfa_302;
            this.special = dfa_303;
            this.transition = dfa_304;
        }
        public String getDescription() {
            return "32180:4: ( ( ( () LeftCurlyBracket ) )=> (lv_body_3_0= ruleBlock ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA507_1 = input.LA(1);

                         
                        int index507_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index507_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 507, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA509 extends DFA {

        public DFA509(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 509;
            this.eot = dfa_298;
            this.eof = dfa_299;
            this.min = dfa_300;
            this.max = dfa_301;
            this.accept = dfa_302;
            this.special = dfa_303;
            this.transition = dfa_304;
        }
        public String getDescription() {
            return "32249:4: ( ( ( () LeftCurlyBracket ) )=> (lv_body_3_0= norm1_Block ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA509_1 = input.LA(1);

                         
                        int index509_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred290_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index509_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 509, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA511 extends DFA {

        public DFA511(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 511;
            this.eot = dfa_298;
            this.eof = dfa_299;
            this.min = dfa_300;
            this.max = dfa_301;
            this.accept = dfa_302;
            this.special = dfa_303;
            this.transition = dfa_304;
        }
        public String getDescription() {
            return "32332:3: ( ( ( () LeftCurlyBracket ) )=> (lv_body_3_0= ruleBlock ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA511_1 = input.LA(1);

                         
                        int index511_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred292_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index511_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 511, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA514 extends DFA {

        public DFA514(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 514;
            this.eot = dfa_177;
            this.eof = dfa_177;
            this.min = dfa_309;
            this.max = dfa_310;
            this.accept = dfa_311;
            this.special = dfa_312;
            this.transition = dfa_313;
        }
        public String getDescription() {
            return "32412:3: ( ( ( () LeftCurlyBracket ) )=> (lv_body_3_0= norm1_Block ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA514_1 = input.LA(1);

                         
                        int index514_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index514_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 514, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA521 extends DFA {

        public DFA521(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 521;
            this.eot = dfa_298;
            this.eof = dfa_299;
            this.min = dfa_300;
            this.max = dfa_301;
            this.accept = dfa_302;
            this.special = dfa_303;
            this.transition = dfa_304;
        }
        public String getDescription() {
            return "33254:1: ( ( ( () LeftCurlyBracket ) )=> (lv_body_7_0= ruleBlock ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA521_1 = input.LA(1);

                         
                        int index521_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index521_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 521, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA524 extends DFA {

        public DFA524(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 524;
            this.eot = dfa_177;
            this.eof = dfa_177;
            this.min = dfa_309;
            this.max = dfa_310;
            this.accept = dfa_311;
            this.special = dfa_312;
            this.transition = dfa_313;
        }
        public String getDescription() {
            return "33696:1: ( ( ( () LeftCurlyBracket ) )=> (lv_body_7_0= norm1_Block ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA524_1 = input.LA(1);

                         
                        int index524_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index524_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 524, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_320s = "\1\154\1\176\1\uffff\1\176\1\uffff";
    static final String[] dfa_321s = {
            "\1\1\13\uffff\1\2",
            "\3\4\1\uffff\4\4\2\uffff\1\4\4\uffff\2\4\3\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\7\uffff\1\4\1\uffff\2\4\3\uffff\1\4\3\uffff\1\4\3\uffff\1\4\3\uffff\2\4\1\uffff\2\4\23\uffff\1\4\3\uffff\1\4\11\uffff\1\3\11\uffff\2\4\1\2\1\uffff\1\4\17\uffff\1\4",
            "",
            "\3\4\1\uffff\4\4\2\uffff\1\4\4\uffff\2\4\3\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\7\uffff\1\4\1\uffff\2\4\3\uffff\1\4\3\uffff\1\4\3\uffff\1\4\3\uffff\2\4\1\uffff\2\4\23\uffff\1\4\3\uffff\1\4\11\uffff\1\3\11\uffff\2\4\1\2\1\uffff\1\4\17\uffff\1\4",
            ""
    };
    static final char[] dfa_320 = DFA.unpackEncodedStringToUnsignedChars(dfa_320s);
    static final short[][] dfa_321 = unpackEncodedStringArray(dfa_321s);

    class DFA534 extends DFA {

        public DFA534(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 534;
            this.eot = dfa_171;
            this.eof = dfa_171;
            this.min = dfa_172;
            this.max = dfa_320;
            this.accept = dfa_174;
            this.special = dfa_175;
            this.transition = dfa_321;
        }
        public String getDescription() {
            return "()* loopback of 34010:2: (otherlv_4= Comma ( (lv_elements_5_0= ruleElision ) )* ( (lv_elements_6_0= ruleBindingRestElement ) ) )*";
        }
    }
    static final String[] dfa_322s = {
            "\1\1\13\uffff\1\2",
            "\3\4\1\uffff\4\4\2\uffff\1\4\4\uffff\2\4\3\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\7\uffff\1\4\2\uffff\1\4\3\uffff\1\4\3\uffff\1\4\3\uffff\1\4\3\uffff\2\4\1\uffff\2\4\23\uffff\1\4\3\uffff\1\4\11\uffff\1\3\11\uffff\2\4\1\2\1\uffff\1\4\17\uffff\1\4",
            "",
            "\3\4\1\uffff\4\4\2\uffff\1\4\4\uffff\2\4\3\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\7\uffff\1\4\2\uffff\1\4\3\uffff\1\4\3\uffff\1\4\3\uffff\1\4\3\uffff\2\4\1\uffff\2\4\23\uffff\1\4\3\uffff\1\4\11\uffff\1\3\11\uffff\2\4\1\2\1\uffff\1\4\17\uffff\1\4",
            ""
    };
    static final short[][] dfa_322 = unpackEncodedStringArray(dfa_322s);

    class DFA540 extends DFA {

        public DFA540(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 540;
            this.eot = dfa_171;
            this.eof = dfa_171;
            this.min = dfa_172;
            this.max = dfa_320;
            this.accept = dfa_174;
            this.special = dfa_175;
            this.transition = dfa_322;
        }
        public String getDescription() {
            return "()* loopback of 34139:2: (otherlv_4= Comma ( (lv_elements_5_0= ruleElision ) )* ( (lv_elements_6_0= norm1_BindingRestElement ) ) )*";
        }
    }
    static final String dfa_323s = "\111\uffff";
    static final String dfa_324s = "\1\uffff\1\107\40\uffff\1\107\4\uffff\31\107\11\uffff";
    static final String dfa_325s = "\1\4\1\140\40\uffff\1\140\4\uffff\31\140\11\uffff";
    static final String dfa_326s = "\1\u0095\1\160\40\uffff\1\160\4\uffff\31\160\11\uffff";
    static final String dfa_327s = "\2\uffff\40\1\1\uffff\4\1\31\uffff\7\1\1\2\1\1";
    static final String dfa_328s = "\1\24\1\7\40\uffff\1\30\4\uffff\1\0\1\4\1\10\1\13\1\16\1\21\1\25\1\31\1\1\1\5\1\11\1\14\1\17\1\22\1\26\1\32\1\2\1\6\1\12\1\15\1\20\1\23\1\27\1\33\1\3\11\uffff}>";
    static final String[] dfa_329s = {
            "\1\65\1\60\1\72\1\25\1\67\1\73\1\75\1\54\1\7\1\10\1\53\1\21\1\11\1\16\1\17\1\74\1\52\1\12\1\15\1\23\1\76\1\27\1\55\1\31\1\62\1\35\1\71\1\70\1\2\1\4\1\5\1\6\1\45\1\30\1\33\1\64\1\40\1\42\1\66\1\3\1\14\1\46\1\57\1\43\1\32\1\44\1\63\1\37\1\41\4\uffff\1\20\1\47\1\51\1\26\1\77\1\50\1\34\1\36\21\uffff\1\56\1\13\1\22\1\24\1\61\23\uffff\1\107\1\106\11\uffff\1\101\1\uffff\1\104\1\uffff\1\103\2\uffff\1\105\1\uffff\1\1\2\uffff\1\100\23\uffff\1\102",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "",
            "",
            "",
            "",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_323 = DFA.unpackEncodedString(dfa_323s);
    static final short[] dfa_324 = DFA.unpackEncodedString(dfa_324s);
    static final char[] dfa_325 = DFA.unpackEncodedStringToUnsignedChars(dfa_325s);
    static final char[] dfa_326 = DFA.unpackEncodedStringToUnsignedChars(dfa_326s);
    static final short[] dfa_327 = DFA.unpackEncodedString(dfa_327s);
    static final short[] dfa_328 = DFA.unpackEncodedString(dfa_328s);
    static final short[][] dfa_329 = unpackEncodedStringArray(dfa_329s);

    class DFA544 extends DFA {

        public DFA544(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 544;
            this.eot = dfa_323;
            this.eof = dfa_324;
            this.min = dfa_325;
            this.max = dfa_326;
            this.accept = dfa_327;
            this.special = dfa_328;
            this.transition = dfa_329;
        }
        public String getDescription() {
            return "34229:1: ( ( ( ( ( ( ( ruleLiteralOrComputedPropertyName ) ) Colon ) )=> ( ( (lv_declaredName_0_0= ruleLiteralOrComputedPropertyName ) ) otherlv_1= Colon ) ) ( (lv_value_2_0= ruleBindingElement ) ) ) | ( (lv_value_3_0= ruleSingleNameBinding ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA544_39 = input.LA(1);

                         
                        int index544_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_39==EOF||LA544_39==Comma||LA544_39==EqualsSign||LA544_39==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_39==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_39);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA544_47 = input.LA(1);

                         
                        int index544_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_47==EOF||LA544_47==Comma||LA544_47==EqualsSign||LA544_47==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_47==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_47);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA544_55 = input.LA(1);

                         
                        int index544_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_55==EOF||LA544_55==Comma||LA544_55==EqualsSign||LA544_55==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_55==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_55);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA544_63 = input.LA(1);

                         
                        int index544_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_63==EOF||LA544_63==Comma||LA544_63==EqualsSign||LA544_63==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_63==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_63);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA544_40 = input.LA(1);

                         
                        int index544_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_40==EOF||LA544_40==Comma||LA544_40==EqualsSign||LA544_40==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_40==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_40);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA544_48 = input.LA(1);

                         
                        int index544_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_48==EOF||LA544_48==Comma||LA544_48==EqualsSign||LA544_48==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_48==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_48);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA544_56 = input.LA(1);

                         
                        int index544_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_56==EOF||LA544_56==Comma||LA544_56==EqualsSign||LA544_56==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_56==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_56);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA544_1 = input.LA(1);

                         
                        int index544_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_1==EOF||LA544_1==Comma||LA544_1==EqualsSign||LA544_1==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_1==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_1);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA544_41 = input.LA(1);

                         
                        int index544_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_41==EOF||LA544_41==Comma||LA544_41==EqualsSign||LA544_41==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_41==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_41);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA544_49 = input.LA(1);

                         
                        int index544_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_49==EOF||LA544_49==Comma||LA544_49==EqualsSign||LA544_49==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_49==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_49);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA544_57 = input.LA(1);

                         
                        int index544_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_57==EOF||LA544_57==Comma||LA544_57==EqualsSign||LA544_57==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_57==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_57);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA544_42 = input.LA(1);

                         
                        int index544_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_42==EOF||LA544_42==Comma||LA544_42==EqualsSign||LA544_42==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_42==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_42);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA544_50 = input.LA(1);

                         
                        int index544_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_50==EOF||LA544_50==Comma||LA544_50==EqualsSign||LA544_50==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_50==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_50);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA544_58 = input.LA(1);

                         
                        int index544_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_58==EOF||LA544_58==Comma||LA544_58==EqualsSign||LA544_58==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_58==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_58);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA544_43 = input.LA(1);

                         
                        int index544_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_43==EOF||LA544_43==Comma||LA544_43==EqualsSign||LA544_43==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_43==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_43);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA544_51 = input.LA(1);

                         
                        int index544_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_51==EOF||LA544_51==Comma||LA544_51==EqualsSign||LA544_51==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_51==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_51);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA544_59 = input.LA(1);

                         
                        int index544_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_59==EOF||LA544_59==Comma||LA544_59==EqualsSign||LA544_59==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_59==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_59);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA544_44 = input.LA(1);

                         
                        int index544_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_44==EOF||LA544_44==Comma||LA544_44==EqualsSign||LA544_44==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_44==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_44);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA544_52 = input.LA(1);

                         
                        int index544_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_52==EOF||LA544_52==Comma||LA544_52==EqualsSign||LA544_52==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_52==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_52);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA544_60 = input.LA(1);

                         
                        int index544_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_60==EOF||LA544_60==Comma||LA544_60==EqualsSign||LA544_60==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_60==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_60);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA544_0 = input.LA(1);

                         
                        int index544_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_0==RULE_IDENTIFIER) ) {s = 1;}

                        
                        else if ((LA544_0>=7 && LA544_0<=126 && (s=T2S.M_43[LA544_0-(7)])>=0) && (synpred303_InternalN4JSXParser())) { /* 33 cases */ }
                        else if ( (LA544_0==Yield) ) {s = 34;}

                        else if ( (LA544_0==Null) && (synpred303_InternalN4JSXParser())) {s = 35;}

                        else if ( (LA544_0==True) && (synpred303_InternalN4JSXParser())) {s = 36;}

                        else if ( (LA544_0==False) && (synpred303_InternalN4JSXParser())) {s = 37;}

                        else if ( (LA544_0==Enum) && (synpred303_InternalN4JSXParser())) {s = 38;}

                        
                        else if ((LA544_0>=4 && LA544_0<=86 && (s=T2S.M_44[LA544_0-(4)])>=0)) { /* 25 cases */ }
                        else if ( (LA544_0==RULE_STRING) && (synpred303_InternalN4JSXParser())) {s = 64;}

                        else if ( (LA544_0==RULE_DOUBLE) && (synpred303_InternalN4JSXParser())) {s = 65;}

                        else if ( (LA544_0==RULE_INT) && (synpred303_InternalN4JSXParser())) {s = 66;}

                        else if ( (LA544_0==RULE_OCTAL_INT) && (synpred303_InternalN4JSXParser())) {s = 67;}

                        else if ( (LA544_0==RULE_HEX_INT) && (synpred303_InternalN4JSXParser())) {s = 68;}

                        else if ( (LA544_0==RULE_SCIENTIFIC_INT) && (synpred303_InternalN4JSXParser())) {s = 69;}

                        else if ( (LA544_0==LeftSquareBracket) && (synpred303_InternalN4JSXParser())) {s = 70;}

                        else if ( (LA544_0==CommercialAt) ) {s = 71;}

                         
                        input.seek(index544_0);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA544_45 = input.LA(1);

                         
                        int index544_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_45==EOF||LA544_45==Comma||LA544_45==EqualsSign||LA544_45==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_45==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_45);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA544_53 = input.LA(1);

                         
                        int index544_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_53==EOF||LA544_53==Comma||LA544_53==EqualsSign||LA544_53==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_53==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_53);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA544_61 = input.LA(1);

                         
                        int index544_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_61==EOF||LA544_61==Comma||LA544_61==EqualsSign||LA544_61==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_61==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_61);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA544_34 = input.LA(1);

                         
                        int index544_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_34==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA544_34==EOF||LA544_34==Comma||LA544_34==EqualsSign||LA544_34==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index544_34);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA544_46 = input.LA(1);

                         
                        int index544_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_46==EOF||LA544_46==Comma||LA544_46==EqualsSign||LA544_46==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_46==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_46);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA544_54 = input.LA(1);

                         
                        int index544_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_54==EOF||LA544_54==Comma||LA544_54==EqualsSign||LA544_54==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_54==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_54);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA544_62 = input.LA(1);

                         
                        int index544_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA544_62==EOF||LA544_62==Comma||LA544_62==EqualsSign||LA544_62==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA544_62==Colon) && (synpred303_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index544_62);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 544, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_330s = "\1\4\1\140\45\uffff\31\140\11\uffff";
    static final String dfa_331s = "\1\u0095\1\160\45\uffff\31\160\11\uffff";
    static final String dfa_332s = "\2\uffff\45\1\31\uffff\7\1\1\2\1\1";
    static final String dfa_333s = "\1\4\1\16\45\uffff\1\0\1\5\1\10\1\13\1\17\1\22\1\25\1\30\1\1\1\6\1\11\1\14\1\20\1\23\1\26\1\31\1\2\1\7\1\12\1\15\1\21\1\24\1\27\1\32\1\3\11\uffff}>";
    static final String[] dfa_334s = {
            "\1\65\1\60\1\72\1\25\1\67\1\73\1\75\1\54\1\7\1\10\1\53\1\21\1\11\1\16\1\17\1\74\1\52\1\12\1\15\1\23\1\76\1\27\1\55\1\31\1\62\1\35\1\71\1\70\1\2\1\4\1\5\1\6\1\45\1\30\1\33\1\64\1\40\1\42\1\66\1\3\1\14\1\46\1\57\1\43\1\32\1\44\1\63\1\37\1\41\4\uffff\1\20\1\47\1\51\1\26\1\77\1\50\1\34\1\36\21\uffff\1\56\1\13\1\22\1\24\1\61\23\uffff\1\107\1\106\11\uffff\1\101\1\uffff\1\104\1\uffff\1\103\2\uffff\1\105\1\uffff\1\1\2\uffff\1\100\23\uffff\1\102",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_330 = DFA.unpackEncodedStringToUnsignedChars(dfa_330s);
    static final char[] dfa_331 = DFA.unpackEncodedStringToUnsignedChars(dfa_331s);
    static final short[] dfa_332 = DFA.unpackEncodedString(dfa_332s);
    static final short[] dfa_333 = DFA.unpackEncodedString(dfa_333s);
    static final short[][] dfa_334 = unpackEncodedStringArray(dfa_334s);

    class DFA545 extends DFA {

        public DFA545(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 545;
            this.eot = dfa_323;
            this.eof = dfa_323;
            this.min = dfa_330;
            this.max = dfa_331;
            this.accept = dfa_332;
            this.special = dfa_333;
            this.transition = dfa_334;
        }
        public String getDescription() {
            return "34308:1: ( ( ( ( ( ( ( norm1_LiteralOrComputedPropertyName ) ) Colon ) )=> ( ( (lv_declaredName_0_0= norm1_LiteralOrComputedPropertyName ) ) otherlv_1= Colon ) ) ( (lv_value_2_0= norm1_BindingElement ) ) ) | ( (lv_value_3_0= norm1_SingleNameBinding ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA545_39 = input.LA(1);

                         
                        int index545_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_39==Comma||LA545_39==EqualsSign||LA545_39==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA545_39==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index545_39);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA545_47 = input.LA(1);

                         
                        int index545_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_47==Comma||LA545_47==EqualsSign||LA545_47==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA545_47==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index545_47);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA545_55 = input.LA(1);

                         
                        int index545_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_55==Comma||LA545_55==EqualsSign||LA545_55==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA545_55==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index545_55);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA545_63 = input.LA(1);

                         
                        int index545_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_63==Comma||LA545_63==EqualsSign||LA545_63==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA545_63==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index545_63);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA545_0 = input.LA(1);

                         
                        int index545_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_0==RULE_IDENTIFIER) ) {s = 1;}

                        
                        else if ((LA545_0>=7 && LA545_0<=126 && (s=T2S.M_45[LA545_0-(7)])>=0) && (synpred304_InternalN4JSXParser())) { /* 38 cases */ }
                        
                        else if ((LA545_0>=4 && LA545_0<=86 && (s=T2S.M_44[LA545_0-(4)])>=0)) { /* 25 cases */ }
                        else if ( (LA545_0==RULE_STRING) && (synpred304_InternalN4JSXParser())) {s = 64;}

                        else if ( (LA545_0==RULE_DOUBLE) && (synpred304_InternalN4JSXParser())) {s = 65;}

                        else if ( (LA545_0==RULE_INT) && (synpred304_InternalN4JSXParser())) {s = 66;}

                        else if ( (LA545_0==RULE_OCTAL_INT) && (synpred304_InternalN4JSXParser())) {s = 67;}

                        else if ( (LA545_0==RULE_HEX_INT) && (synpred304_InternalN4JSXParser())) {s = 68;}

                        else if ( (LA545_0==RULE_SCIENTIFIC_INT) && (synpred304_InternalN4JSXParser())) {s = 69;}

                        else if ( (LA545_0==LeftSquareBracket) && (synpred304_InternalN4JSXParser())) {s = 70;}

                        else if ( (LA545_0==CommercialAt) ) {s = 71;}

                         
                        input.seek(index545_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA545_40 = input.LA(1);

                         
                        int index545_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_40==Comma||LA545_40==EqualsSign||LA545_40==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA545_40==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index545_40);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA545_48 = input.LA(1);

                         
                        int index545_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_48==Comma||LA545_48==EqualsSign||LA545_48==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA545_48==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index545_48);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA545_56 = input.LA(1);

                         
                        int index545_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_56==Comma||LA545_56==EqualsSign||LA545_56==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA545_56==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index545_56);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA545_41 = input.LA(1);

                         
                        int index545_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_41==Comma||LA545_41==EqualsSign||LA545_41==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA545_41==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index545_41);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA545_49 = input.LA(1);

                         
                        int index545_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_49==Comma||LA545_49==EqualsSign||LA545_49==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA545_49==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index545_49);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA545_57 = input.LA(1);

                         
                        int index545_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_57==Comma||LA545_57==EqualsSign||LA545_57==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA545_57==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index545_57);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA545_42 = input.LA(1);

                         
                        int index545_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_42==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA545_42==Comma||LA545_42==EqualsSign||LA545_42==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index545_42);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA545_50 = input.LA(1);

                         
                        int index545_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_50==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA545_50==Comma||LA545_50==EqualsSign||LA545_50==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index545_50);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA545_58 = input.LA(1);

                         
                        int index545_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_58==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA545_58==Comma||LA545_58==EqualsSign||LA545_58==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index545_58);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA545_1 = input.LA(1);

                         
                        int index545_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_1==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA545_1==Comma||LA545_1==EqualsSign||LA545_1==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index545_1);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA545_43 = input.LA(1);

                         
                        int index545_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_43==Comma||LA545_43==EqualsSign||LA545_43==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA545_43==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index545_43);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA545_51 = input.LA(1);

                         
                        int index545_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_51==Comma||LA545_51==EqualsSign||LA545_51==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA545_51==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index545_51);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA545_59 = input.LA(1);

                         
                        int index545_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_59==Comma||LA545_59==EqualsSign||LA545_59==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA545_59==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index545_59);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA545_44 = input.LA(1);

                         
                        int index545_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_44==Comma||LA545_44==EqualsSign||LA545_44==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA545_44==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index545_44);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA545_52 = input.LA(1);

                         
                        int index545_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_52==Comma||LA545_52==EqualsSign||LA545_52==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA545_52==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index545_52);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA545_60 = input.LA(1);

                         
                        int index545_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_60==Comma||LA545_60==EqualsSign||LA545_60==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA545_60==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index545_60);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA545_45 = input.LA(1);

                         
                        int index545_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_45==Comma||LA545_45==EqualsSign||LA545_45==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA545_45==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index545_45);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA545_53 = input.LA(1);

                         
                        int index545_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_53==Comma||LA545_53==EqualsSign||LA545_53==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA545_53==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index545_53);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA545_61 = input.LA(1);

                         
                        int index545_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_61==Comma||LA545_61==EqualsSign||LA545_61==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA545_61==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index545_61);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA545_46 = input.LA(1);

                         
                        int index545_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_46==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA545_46==Comma||LA545_46==EqualsSign||LA545_46==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index545_46);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA545_54 = input.LA(1);

                         
                        int index545_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_54==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA545_54==Comma||LA545_54==EqualsSign||LA545_54==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index545_54);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA545_62 = input.LA(1);

                         
                        int index545_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA545_62==Colon) && (synpred304_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA545_62==Comma||LA545_62==EqualsSign||LA545_62==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index545_62);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 545, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_335s = "\23\uffff";
    static final String dfa_336s = "\1\4\1\0\21\uffff";
    static final String dfa_337s = "\1\176\1\0\21\uffff";
    static final String dfa_338s = "\2\uffff\1\2\1\3\15\uffff\1\1\1\4";
    static final String dfa_339s = "\1\uffff\1\0\21\uffff}>";
    static final String[] dfa_340s = {
            "\2\3\2\uffff\1\3\23\uffff\1\3\2\uffff\1\3\7\uffff\1\3\2\uffff\1\3\5\uffff\1\3\1\uffff\2\3\50\uffff\1\1\14\uffff\1\3\1\uffff\1\2\2\uffff\1\3\2\uffff\1\3\14\uffff\1\3",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_335 = DFA.unpackEncodedString(dfa_335s);
    static final char[] dfa_336 = DFA.unpackEncodedStringToUnsignedChars(dfa_336s);
    static final char[] dfa_337 = DFA.unpackEncodedStringToUnsignedChars(dfa_337s);
    static final short[] dfa_338 = DFA.unpackEncodedString(dfa_338s);
    static final short[] dfa_339 = DFA.unpackEncodedString(dfa_339s);
    static final short[][] dfa_340 = unpackEncodedStringArray(dfa_340s);

    class DFA562 extends DFA {

        public DFA562(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 562;
            this.eot = dfa_335;
            this.eof = dfa_335;
            this.min = dfa_336;
            this.max = dfa_337;
            this.accept = dfa_338;
            this.special = dfa_339;
            this.transition = dfa_340;
        }
        public String getDescription() {
            return "35271:1: ( ( ( ( ( () LeftParenthesis ruleTAnonymousFormalParameterList[null] RightParenthesis EqualsSignGreaterThanSign ) )=> ( () otherlv_1= LeftParenthesis this_TAnonymousFormalParameterList_2= ruleTAnonymousFormalParameterList[$current] otherlv_3= RightParenthesis otherlv_4= EqualsSignGreaterThanSign ) ) ( (lv_returnTypeRef_5_0= rulePrimaryTypeExpression ) ) ) | this_ArrayTypeRef_6= ruleArrayTypeRef | this_TypeRefWithModifiers_7= ruleTypeRefWithModifiers | (otherlv_8= LeftParenthesis this_TypeRef_9= ruleTypeRef otherlv_10= RightParenthesis ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA562_1 = input.LA(1);

                         
                        int index562_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred309_InternalN4JSXParser()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index562_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 562, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_341s = "\173\uffff";
    static final String dfa_342s = "\1\2\172\uffff";
    static final String dfa_343s = "\1\4\1\0\171\uffff";
    static final String dfa_344s = "\1\u0099\1\0\171\uffff";
    static final String dfa_345s = "\2\uffff\1\2\167\uffff\1\1";
    static final String dfa_346s = "\1\uffff\1\0\171\uffff}>";
    static final String[] dfa_347s = {
            "\114\2\1\uffff\16\2\1\1\2\2\1\uffff\17\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2\1\uffff\1\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_341 = DFA.unpackEncodedString(dfa_341s);
    static final short[] dfa_342 = DFA.unpackEncodedString(dfa_342s);
    static final char[] dfa_343 = DFA.unpackEncodedStringToUnsignedChars(dfa_343s);
    static final char[] dfa_344 = DFA.unpackEncodedStringToUnsignedChars(dfa_344s);
    static final short[] dfa_345 = DFA.unpackEncodedString(dfa_345s);
    static final short[] dfa_346 = DFA.unpackEncodedString(dfa_346s);
    static final short[][] dfa_347 = unpackEncodedStringArray(dfa_347s);

    class DFA566 extends DFA {

        public DFA566(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 566;
            this.eot = dfa_341;
            this.eof = dfa_342;
            this.min = dfa_343;
            this.max = dfa_344;
            this.accept = dfa_345;
            this.special = dfa_346;
            this.transition = dfa_347;
        }
        public String getDescription() {
            return "35516:2: ( ( ( PlusSign ) )=> (lv_dynamic_2_0= PlusSign ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA566_1 = input.LA(1);

                         
                        int index566_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred311_InternalN4JSXParser()) ) {s = 122;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index566_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 566, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_348s = "\1\4\1\uffff\1\10\7\uffff\2\10";
    static final String dfa_349s = "\1\176\1\uffff\1\u0093\7\uffff\2\176";
    static final String dfa_350s = "\1\uffff\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\2\uffff";
    static final String[] dfa_351s = {
            "\1\11\1\5\2\uffff\1\1\23\uffff\1\1\2\uffff\1\1\7\uffff\1\10\2\uffff\1\1\5\uffff\1\4\1\uffff\1\5\1\1\50\uffff\1\7\16\uffff\1\3\2\uffff\1\6\2\uffff\1\2\14\uffff\1\1",
            "",
            "\1\1\23\uffff\1\1\2\uffff\1\1\12\uffff\1\1\5\uffff\1\4\2\uffff\1\1\75\uffff\1\12\14\uffff\1\1\24\uffff\1\13",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\1\23\uffff\1\1\2\uffff\1\1\12\uffff\1\1\5\uffff\1\4\2\uffff\1\1\112\uffff\1\1",
            "\1\1\23\uffff\1\1\2\uffff\1\1\12\uffff\1\1\5\uffff\1\4\2\uffff\1\1\112\uffff\1\1"
    };
    static final char[] dfa_348 = DFA.unpackEncodedStringToUnsignedChars(dfa_348s);
    static final char[] dfa_349 = DFA.unpackEncodedStringToUnsignedChars(dfa_349s);
    static final short[] dfa_350 = DFA.unpackEncodedString(dfa_350s);
    static final short[][] dfa_351 = unpackEncodedStringArray(dfa_351s);

    class DFA569 extends DFA {

        public DFA569(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 569;
            this.eot = dfa_47;
            this.eof = dfa_47;
            this.min = dfa_348;
            this.max = dfa_349;
            this.accept = dfa_350;
            this.special = dfa_52;
            this.transition = dfa_351;
        }
        public String getDescription() {
            return "35670:1: (this_ParameterizedTypeRef_0= ruleParameterizedTypeRef | this_ArrayTypeRef_1= ruleArrayTypeRef | this_ThisTypeRef_2= ruleThisTypeRef | this_TypeTypeRef_3= ruleTypeTypeRef | this_FunctionTypeExpressionOLD_4= ruleFunctionTypeExpressionOLD | this_ArrowFunctionTypeExpression_5= ruleArrowFunctionTypeExpression | this_UnionTypeExpressionOLD_6= ruleUnionTypeExpressionOLD | this_IntersectionTypeExpressionOLD_7= ruleIntersectionTypeExpressionOLD )";
        }
    }
    static final String dfa_352s = "\1\uffff\1\34\14\uffff\1\34\3\uffff\3\34\11\uffff";
    static final String dfa_353s = "\1\4\1\133\12\uffff\1\144\1\uffff\1\133\3\144\3\133\11\uffff";
    static final String dfa_354s = "\1\176\1\157\12\uffff\1\156\1\uffff\1\157\3\156\3\157\11\uffff";
    static final String dfa_355s = "\2\uffff\12\1\1\uffff\1\1\7\uffff\7\1\1\2\1\1";
    static final String dfa_356s = "\1\1\1\2\12\uffff\1\11\1\uffff\1\3\1\4\1\10\1\5\1\0\1\6\1\7\11\uffff}>";
    static final String[] dfa_357s = {
            "\1\21\1\14\1\26\1\uffff\1\23\1\27\1\31\1\10\2\uffff\1\7\4\uffff\1\30\1\6\3\uffff\1\32\1\uffff\1\11\1\uffff\1\16\1\uffff\1\25\1\24\7\uffff\1\20\1\uffff\1\2\1\22\3\uffff\1\13\1\uffff\1\34\1\uffff\1\17\1\34\6\uffff\1\3\1\5\1\uffff\1\33\1\4\23\uffff\1\12\3\uffff\1\15\5\uffff\1\34\14\uffff\1\34\1\uffff\1\34\2\uffff\1\34\2\uffff\1\34\14\uffff\1\1",
            "\1\34\1\uffff\1\34\1\uffff\2\34\1\uffff\1\34\1\uffff\1\35\1\uffff\1\34\2\uffff\1\34\5\uffff\1\34",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\35\11\uffff\1\34",
            "",
            "\1\34\1\uffff\1\34\1\uffff\2\34\3\uffff\1\35\1\uffff\1\34\2\uffff\1\34\5\uffff\1\34",
            "\1\35\11\uffff\1\34",
            "\1\35\11\uffff\1\34",
            "\1\35\11\uffff\1\34",
            "\1\34\1\uffff\1\34\1\uffff\2\34\3\uffff\1\35\1\uffff\1\34\2\uffff\1\34\5\uffff\1\34",
            "\1\34\1\uffff\1\34\1\uffff\2\34\3\uffff\1\35\1\uffff\1\34\2\uffff\1\34\5\uffff\1\34",
            "\1\34\1\uffff\1\34\1\uffff\2\34\3\uffff\1\35\1\uffff\1\34\2\uffff\1\34\5\uffff\1\34",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_352 = DFA.unpackEncodedString(dfa_352s);
    static final char[] dfa_353 = DFA.unpackEncodedStringToUnsignedChars(dfa_353s);
    static final char[] dfa_354 = DFA.unpackEncodedStringToUnsignedChars(dfa_354s);
    static final short[] dfa_355 = DFA.unpackEncodedString(dfa_355s);
    static final short[] dfa_356 = DFA.unpackEncodedString(dfa_356s);
    static final short[][] dfa_357 = unpackEncodedStringArray(dfa_357s);

    class DFA580 extends DFA {

        public DFA580(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 580;
            this.eot = dfa_54;
            this.eof = dfa_352;
            this.min = dfa_353;
            this.max = dfa_354;
            this.accept = dfa_355;
            this.special = dfa_356;
            this.transition = dfa_357;
        }
        public String getDescription() {
            return "36274:3: ( ( ( ( ruleBindingIdentifier ) )=> (lv_name_1_0= ruleBindingIdentifier ) ) otherlv_2= Colon )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA580_18 = input.LA(1);

                         
                        int index580_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA580_18==Colon) && (synpred313_InternalN4JSXParser())) {s = 29;}

                        else if ( (LA580_18==EOF||LA580_18==Ampersand||LA580_18==RightParenthesis||(LA580_18>=PlusSign && LA580_18<=Comma)||LA580_18==LessThanSign||LA580_18==QuestionMark||LA580_18==VerticalLine) ) {s = 28;}

                         
                        input.seek(index580_18);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA580_0 = input.LA(1);

                         
                        int index580_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA580_0==RULE_IDENTIFIER) ) {s = 1;}

                        
                        else if ((LA580_0>=11 && LA580_0<=126 && (s=T2S.M_47[LA580_0-(11)])>=0) && (synpred313_InternalN4JSXParser())) { /* 11 cases */ }
                        else if ( (LA580_0==Constructor) ) {s = 12;}

                        else if ( (LA580_0==Of) && (synpred313_InternalN4JSXParser())) {s = 13;}

                        else if ( (LA580_0==Target) ) {s = 14;}

                        else if ( (LA580_0==Type) ) {s = 15;}

                        else if ( (LA580_0==Union) ) {s = 16;}

                        else if ( (LA580_0==Intersection) ) {s = 17;}

                        else if ( (LA580_0==This) ) {s = 18;}

                        else if ( (LA580_0==Promisify) ) {s = 19;}

                        else if ( (LA580_0==Await) ) {s = 20;}

                        else if ( (LA580_0==Async) && (synpred313_InternalN4JSXParser())) {s = 21;}

                        else if ( (LA580_0==Implements) && (synpred313_InternalN4JSXParser())) {s = 22;}

                        else if ( (LA580_0==Interface) && (synpred313_InternalN4JSXParser())) {s = 23;}

                        else if ( (LA580_0==Private) && (synpred313_InternalN4JSXParser())) {s = 24;}

                        else if ( (LA580_0==Protected) && (synpred313_InternalN4JSXParser())) {s = 25;}

                        else if ( (LA580_0==Public) && (synpred313_InternalN4JSXParser())) {s = 26;}

                        else if ( (LA580_0==Out) && (synpred313_InternalN4JSXParser())) {s = 27;}

                        else if ( (LA580_0==This_1||LA580_0==Void||LA580_0==LeftParenthesis||LA580_0==QuestionMark||LA580_0==LeftSquareBracket||LA580_0==LeftCurlyBracket||LA580_0==Tilde) ) {s = 28;}

                         
                        input.seek(index580_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA580_1 = input.LA(1);

                         
                        int index580_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA580_1==Colon) && (synpred313_InternalN4JSXParser())) {s = 29;}

                        else if ( (LA580_1==EOF||LA580_1==Ampersand||LA580_1==RightParenthesis||(LA580_1>=PlusSign && LA580_1<=Comma)||LA580_1==FullStop||LA580_1==LessThanSign||LA580_1==QuestionMark||LA580_1==VerticalLine) ) {s = 28;}

                         
                        input.seek(index580_1);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA580_14 = input.LA(1);

                         
                        int index580_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA580_14==Colon) && (synpred313_InternalN4JSXParser())) {s = 29;}

                        else if ( (LA580_14==EOF||LA580_14==Ampersand||LA580_14==RightParenthesis||(LA580_14>=PlusSign && LA580_14<=Comma)||LA580_14==LessThanSign||LA580_14==QuestionMark||LA580_14==VerticalLine) ) {s = 28;}

                         
                        input.seek(index580_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA580_15 = input.LA(1);

                         
                        int index580_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA580_15==Colon) && (synpred313_InternalN4JSXParser())) {s = 29;}

                        else if ( (LA580_15==LeftCurlyBracket) ) {s = 28;}

                         
                        input.seek(index580_15);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA580_17 = input.LA(1);

                         
                        int index580_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA580_17==Colon) && (synpred313_InternalN4JSXParser())) {s = 29;}

                        else if ( (LA580_17==LeftCurlyBracket) ) {s = 28;}

                         
                        input.seek(index580_17);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA580_19 = input.LA(1);

                         
                        int index580_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA580_19==EOF||LA580_19==Ampersand||LA580_19==RightParenthesis||(LA580_19>=PlusSign && LA580_19<=Comma)||LA580_19==LessThanSign||LA580_19==QuestionMark||LA580_19==VerticalLine) ) {s = 28;}

                        else if ( (LA580_19==Colon) && (synpred313_InternalN4JSXParser())) {s = 29;}

                         
                        input.seek(index580_19);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA580_20 = input.LA(1);

                         
                        int index580_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA580_20==Colon) && (synpred313_InternalN4JSXParser())) {s = 29;}

                        else if ( (LA580_20==EOF||LA580_20==Ampersand||LA580_20==RightParenthesis||(LA580_20>=PlusSign && LA580_20<=Comma)||LA580_20==LessThanSign||LA580_20==QuestionMark||LA580_20==VerticalLine) ) {s = 28;}

                         
                        input.seek(index580_20);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA580_16 = input.LA(1);

                         
                        int index580_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA580_16==Colon) && (synpred313_InternalN4JSXParser())) {s = 29;}

                        else if ( (LA580_16==LeftCurlyBracket) ) {s = 28;}

                         
                        input.seek(index580_16);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA580_12 = input.LA(1);

                         
                        int index580_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA580_12==Colon) && (synpred313_InternalN4JSXParser())) {s = 29;}

                        else if ( (LA580_12==LeftCurlyBracket) ) {s = 28;}

                         
                        input.seek(index580_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 580, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_358s = {
            "\114\2\1\uffff\21\2\1\uffff\3\2\1\1\13\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2\1\uffff\1\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_358 = unpackEncodedStringArray(dfa_358s);

    class DFA585 extends DFA {

        public DFA585(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 585;
            this.eot = dfa_341;
            this.eof = dfa_342;
            this.min = dfa_343;
            this.max = dfa_344;
            this.accept = dfa_345;
            this.special = dfa_346;
            this.transition = dfa_358;
        }
        public String getDescription() {
            return "36564:2: ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_typeArgs_2_0= ruleTypeArgument ) ) (otherlv_3= Comma ( (lv_typeArgs_4_0= ruleTypeArgument ) ) )* otherlv_5= GreaterThanSign )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA585_1 = input.LA(1);

                         
                        int index585_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalN4JSXParser()) ) {s = 122;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index585_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 585, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA587 extends DFA {

        public DFA587(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 587;
            this.eot = dfa_341;
            this.eof = dfa_342;
            this.min = dfa_343;
            this.max = dfa_344;
            this.accept = dfa_345;
            this.special = dfa_346;
            this.transition = dfa_358;
        }
        public String getDescription() {
            return "36732:2: ( ( ( LessThanSign )=>otherlv_2= LessThanSign ) ( (lv_typeArgs_3_0= ruleTypeArgument ) ) (otherlv_4= Comma ( (lv_typeArgs_5_0= ruleTypeArgument ) ) )* otherlv_6= GreaterThanSign )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA587_1 = input.LA(1);

                         
                        int index587_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred315_InternalN4JSXParser()) ) {s = 122;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index587_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 587, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_359s = "\1\4\2\0\1\uffff\75\0\3\uffff";
    static final String dfa_360s = "\1\176\2\0\1\uffff\75\0\3\uffff";
    static final String dfa_361s = "\3\uffff\1\3\75\uffff\1\1\1\4\1\2";
    static final String dfa_362s = "\1\0\1\1\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\3\uffff}>";
    static final String[] dfa_363s = {
            "\1\66\1\61\1\73\1\30\1\70\1\74\1\76\1\55\1\12\1\13\1\54\1\24\1\14\1\21\1\22\1\75\1\53\1\15\1\20\1\26\1\77\1\32\1\56\1\34\1\63\1\40\1\72\1\71\1\5\1\7\1\10\1\11\1\50\1\33\1\36\1\65\1\43\1\45\1\67\1\6\1\17\1\51\1\60\1\46\1\35\1\47\1\64\1\42\1\44\4\uffff\1\23\1\1\1\52\1\31\1\100\1\2\1\37\1\41\21\uffff\1\57\1\16\1\25\1\27\1\62\17\uffff\1\3\27\uffff\1\4",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_359 = DFA.unpackEncodedStringToUnsignedChars(dfa_359s);
    static final char[] dfa_360 = DFA.unpackEncodedStringToUnsignedChars(dfa_360s);
    static final short[] dfa_361 = DFA.unpackEncodedString(dfa_361s);
    static final short[] dfa_362 = DFA.unpackEncodedString(dfa_362s);
    static final short[][] dfa_363 = unpackEncodedStringArray(dfa_363s);

    class DFA591 extends DFA {

        public DFA591(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 591;
            this.eot = dfa_222;
            this.eof = dfa_222;
            this.min = dfa_359;
            this.max = dfa_360;
            this.accept = dfa_361;
            this.special = dfa_362;
            this.transition = dfa_363;
        }
        public String getDescription() {
            return "36875:1: ( ( ( ( () Get ( ( ruleIdentifierName ) ) ) )=>this_TStructGetter_0= ruleTStructGetter ) | ( ( ( () Set ( ( ruleIdentifierName ) ) ) )=>this_TStructSetter_1= ruleTStructSetter ) | ( ( ( () ( LessThanSign ( ( ruleTypeVariable ) ) ( Comma ( ( ruleTypeVariable ) ) )* GreaterThanSign )? ( ( ruleIdentifierName ) ) LeftParenthesis ) )=>this_TStructMethod_2= ruleTStructMethod ) | this_TStructField_3= ruleTStructField )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA591_0 = input.LA(1);

                         
                        int index591_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA591_0==Get) ) {s = 1;}

                        else if ( (LA591_0==Set) ) {s = 2;}

                        else if ( (LA591_0==LessThanSign) && (synpred318_InternalN4JSXParser())) {s = 3;}

                        
                        else if ((LA591_0>=4 && LA591_0<=126 && (s=T2S.M_48[LA591_0-(4)])>=0)) { /* 62 cases */ }
                        input.seek(index591_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA591_1 = input.LA(1);

                         
                        int index591_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalN4JSXParser()) ) {s = 65;}

                        else if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA591_2 = input.LA(1);

                         
                        int index591_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred317_InternalN4JSXParser()) ) {s = 67;}

                        else if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA591_4 = input.LA(1);

                         
                        int index591_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA591_5 = input.LA(1);

                         
                        int index591_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA591_6 = input.LA(1);

                         
                        int index591_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA591_7 = input.LA(1);

                         
                        int index591_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA591_8 = input.LA(1);

                         
                        int index591_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA591_9 = input.LA(1);

                         
                        int index591_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA591_10 = input.LA(1);

                         
                        int index591_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA591_11 = input.LA(1);

                         
                        int index591_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA591_12 = input.LA(1);

                         
                        int index591_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA591_13 = input.LA(1);

                         
                        int index591_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA591_14 = input.LA(1);

                         
                        int index591_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA591_15 = input.LA(1);

                         
                        int index591_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA591_16 = input.LA(1);

                         
                        int index591_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA591_17 = input.LA(1);

                         
                        int index591_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA591_18 = input.LA(1);

                         
                        int index591_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA591_19 = input.LA(1);

                         
                        int index591_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA591_20 = input.LA(1);

                         
                        int index591_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA591_21 = input.LA(1);

                         
                        int index591_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA591_22 = input.LA(1);

                         
                        int index591_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA591_23 = input.LA(1);

                         
                        int index591_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA591_24 = input.LA(1);

                         
                        int index591_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA591_25 = input.LA(1);

                         
                        int index591_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA591_26 = input.LA(1);

                         
                        int index591_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA591_27 = input.LA(1);

                         
                        int index591_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA591_28 = input.LA(1);

                         
                        int index591_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA591_29 = input.LA(1);

                         
                        int index591_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA591_30 = input.LA(1);

                         
                        int index591_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA591_31 = input.LA(1);

                         
                        int index591_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA591_32 = input.LA(1);

                         
                        int index591_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA591_33 = input.LA(1);

                         
                        int index591_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA591_34 = input.LA(1);

                         
                        int index591_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA591_35 = input.LA(1);

                         
                        int index591_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_35);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA591_36 = input.LA(1);

                         
                        int index591_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_36);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA591_37 = input.LA(1);

                         
                        int index591_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_37);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA591_38 = input.LA(1);

                         
                        int index591_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_38);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA591_39 = input.LA(1);

                         
                        int index591_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_39);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA591_40 = input.LA(1);

                         
                        int index591_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_40);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA591_41 = input.LA(1);

                         
                        int index591_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_41);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA591_42 = input.LA(1);

                         
                        int index591_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_42);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA591_43 = input.LA(1);

                         
                        int index591_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_43);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA591_44 = input.LA(1);

                         
                        int index591_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_44);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA591_45 = input.LA(1);

                         
                        int index591_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_45);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA591_46 = input.LA(1);

                         
                        int index591_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_46);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA591_47 = input.LA(1);

                         
                        int index591_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_47);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA591_48 = input.LA(1);

                         
                        int index591_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_48);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA591_49 = input.LA(1);

                         
                        int index591_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_49);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA591_50 = input.LA(1);

                         
                        int index591_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_50);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA591_51 = input.LA(1);

                         
                        int index591_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_51);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA591_52 = input.LA(1);

                         
                        int index591_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_52);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA591_53 = input.LA(1);

                         
                        int index591_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_53);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA591_54 = input.LA(1);

                         
                        int index591_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_54);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA591_55 = input.LA(1);

                         
                        int index591_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_55);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA591_56 = input.LA(1);

                         
                        int index591_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_56);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA591_57 = input.LA(1);

                         
                        int index591_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_57);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA591_58 = input.LA(1);

                         
                        int index591_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_58);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA591_59 = input.LA(1);

                         
                        int index591_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_59);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA591_60 = input.LA(1);

                         
                        int index591_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_60);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA591_61 = input.LA(1);

                         
                        int index591_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_61);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA591_62 = input.LA(1);

                         
                        int index591_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_62);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA591_63 = input.LA(1);

                         
                        int index591_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_63);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA591_64 = input.LA(1);

                         
                        int index591_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index591_64);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 591, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA672 extends DFA {

        public DFA672(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 672;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_188;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_191;
        }
        public String getDescription() {
            return "14769:2: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA674 extends DFA {

        public DFA674(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 674;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "15009:28: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA676 extends DFA {

        public DFA676(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 676;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_188;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_191;
        }
        public String getDescription() {
            return "15076:2: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA678 extends DFA {

        public DFA678(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 678;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "15316:28: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA680 extends DFA {

        public DFA680(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 680;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_188;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_191;
        }
        public String getDescription() {
            return "15390:2: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA682 extends DFA {

        public DFA682(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 682;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "15911:28: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA684 extends DFA {

        public DFA684(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 684;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_188;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_191;
        }
        public String getDescription() {
            return "16146:2: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA686 extends DFA {

        public DFA686(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 686;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "16667:28: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA734 extends DFA {

        public DFA734(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 734;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_305;
            this.max = dfa_306;
            this.accept = dfa_307;
            this.special = dfa_25;
            this.transition = dfa_308;
        }
        public String getDescription() {
            return "()* loopback of 29533:2: ( ( ruleN4Modifier ) )*";
        }
    }

    class DFA736 extends DFA {

        public DFA736(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 736;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "29537:29: ( ruleBogusTypeRefFragment[null] )?";
        }
    }

    class DFA740 extends DFA {

        public DFA740(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 740;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_305;
            this.max = dfa_306;
            this.accept = dfa_307;
            this.special = dfa_25;
            this.transition = dfa_308;
        }
        public String getDescription() {
            return "()* loopback of 29837:2: ( ( ruleN4Modifier ) )*";
        }
    }

    class DFA742 extends DFA {

        public DFA742(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 742;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "29841:29: ( ruleBogusTypeRefFragment[null] )?";
        }
    }

    class DFA746 extends DFA {

        public DFA746(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 746;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_305;
            this.max = dfa_306;
            this.accept = dfa_307;
            this.special = dfa_25;
            this.transition = dfa_308;
        }
        public String getDescription() {
            return "()* loopback of 30419:2: ( ( ruleN4Modifier ) )*";
        }
    }

    class DFA748 extends DFA {

        public DFA748(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 748;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "30423:29: ( ruleBogusTypeRefFragment[null] )?";
        }
    }

    class DFA752 extends DFA {

        public DFA752(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 752;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_305;
            this.max = dfa_306;
            this.accept = dfa_307;
            this.special = dfa_25;
            this.transition = dfa_308;
        }
        public String getDescription() {
            return "()* loopback of 31129:2: ( ( ruleN4Modifier ) )*";
        }
    }

    class DFA754 extends DFA {

        public DFA754(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 754;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_192;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_19;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "31133:29: ( ruleBogusTypeRefFragment[null] )?";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0xFE1FE7FDFFF8FF72L,0x57A24C6A925D0541L,0x0000000000201802L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0xFE1FE7FDFFF8FF72L,0x57A24C6A925C0541L,0x0000000000201802L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000000000440000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x40004108007C0001L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0000010800000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x7C07C6B4D518CF70L,0x57A04C4810440400L,0x0000000000201802L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000002L,0x0000000400000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF2L,0x40004000007C0001L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x7C0FC6B4F538CF70L,0x57A24C4A92440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000200C45D8CE00L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x000000084518CC00L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000C05184C00L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x6C044680D5184F70L,0x4002000000440000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000020040L,0x0000404000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000805184E00L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000200805184C00L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000040010000100L,0x4000000000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0001000100000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x2000040010000100L,0x4000000000200000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0000010100000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0800200C4519CE00L,0x0000440040000001L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x0001002000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000400000000000L,0x0001002000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x7C0FE6BCF538CF70L,0x57A24C4A92440541L,0x0000000000201802L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x6C044680D5184F70L,0x4001000000440000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x40004000007C0001L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0800200C4518CE00L,0x0000000000000001L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0800000805184C00L,0x0000000000000001L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x6C044680D5184F70L,0x40004C0000440000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0001002100000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000400040440000L,0x0000000000000002L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000400040440000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x40014000007C0001L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000002L,0x0001002000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000040008000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000004050440000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000004010440000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x000D048090000130L,0x40024A0010000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000008000L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x6C4D4680D5184F70L,0x40024E0020440000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000120000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x6C4D4680D5184F70L,0x40024E0000440000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x0000001000004000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0xFE1FE7FDFFF8FF70L,0x57A34C6A925C0541L,0x0000000000201802L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000440008000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x6C044680D51A4F70L,0x4000404000440000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x6C044680D51A4F70L,0x4000400000440000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x6C4D4680D5184F70L,0x4002460000440000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x6C444680D5184F70L,0x4000000000440000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000002L,0x0000009000000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000040000440000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleExpressionStatement = FOLLOW_32;
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0xFE1FE7FDFFF8FF70L,0x57A24C6A925C0541L,0x0000000000201802L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000100000000002L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x7C0FC6BCF538CF70L,0x57A24C6A92440541L,0x0000000000201802L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x7C0FC6B4F538CF70L,0x57A24C4AB2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000002100600000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000002100000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x7C0FC6B4F538CF70L,0x57A24C6A92440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000002000600000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x6C044680D5184F70L,0x4001002000440000L,0x0000000002800000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x7C0FC6B4F538CF70L,0x57A34C6A92440540L,0x0000000002A01802L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000080000010000L,0x0001000000000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000080000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000200040000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000200040002L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x6C0D4680D5184F70L,0x40024A0000440000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x7C4FC6B4F538CF70L,0x57A25C4B92440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000000L,0x0000100100000000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x7C4FC6B4F538CF70L,0x57A24C4B92440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A34E40507C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A24E40507C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A24A40507C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A24A00007C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A24A00407C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000002L,0x0000002000000000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000002L,0x0000080410000000L,0x0000000000001800L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x7C4FC6B4F538CF70L,0x57A24C4AB2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x7C4FC6B4F538CF70L,0x57A24C4A92440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000002L,0x0000004010000000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000002L,0x0000080400000000L,0x0000000000001800L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x40004040007C0001L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000140L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x000D048090000130L,0x4002480010000000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000002L,0x0000000844000000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000002L,0x0000000280000000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000800L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000082L,0x0000014000009000L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000082L,0x0000014000209000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0120000000000002L,0x0000000000002002L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000000002L,0x0000800000000000L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0080000000000002L,0x00000180008206B4L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x7C0FC6B4F538CF72L,0x57A24C4AD2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x7C0FC6B4F538CF72L,0x57A24C4A92440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000000L,0x0000010000008000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x7C0FC6B4F538CF70L,0x57A34C4A92440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000000000000C000L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000040010000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x000F849090000130L,0x57A24A0830000400L,0x0000000000200002L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x000F849090000130L,0x57A24A0810000400L,0x0000000000200002L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x6C044680D51A4F70L,0x4002404000440000L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x7C0FC6B4D518CF70L,0x57A04C4810440400L,0x0000000000201802L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000000000020042L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0008040090000100L,0x4000000000000000L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000020042L,0x0000000100000000L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000400000440000L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000040010000100L,0x4001000000000000L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A24A40407C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x040D048895184D30L,0x4002420000000000L});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000000000000002L,0x0000402000000000L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x4000000805184C00L});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000000000000000L,0x000100B000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0000000000000000L,0x000100A000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x0000000000000002L,0x0000400000000000L});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0000000000000002L,0x0000401000000000L});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A34E00007C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A24E00007C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x6C444680D5184F70L,0x40005C0100440000L});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x6C444680D5184F70L,0x40004C0100440000L});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x6C4D4680D5184F70L,0x40024A0030440000L});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x000D048090000132L,0x4002420000000000L});
    public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0010000000000002L});
    public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0000000000008000L,0x0000040000000000L});
    public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x000D048090000130L,0x4002480000000000L});
    public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000000000000000L,0x0000004010000000L});
    public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x0000000000000000L,0x0001001000000000L});
    public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x6C4D4680D5184F70L,0x40024A0010440000L});
    public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x6C0D4680D5184F70L,0x40024A0010440000L});
    public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x000D048090000130L,0x4002400000000000L});
    public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x0000000000000002L,0x0000004000000000L});
    public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x200D048090000130L,0x40024A0010200000L});
    public static final BitSet FOLLOW_178 = new BitSet(new long[]{0x0010000000000002L,0x0000004000000000L});
    public static final BitSet FOLLOW_179 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x40014040007C0001L});
    public static final BitSet FOLLOW_180 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x40014061007C0001L});
    public static final BitSet FOLLOW_181 = new BitSet(new long[]{0x0000000000000002L,0x0002000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_182 = new BitSet(new long[]{0x0009040090000100L,0x4000020000000000L});
    public static final BitSet FOLLOW_183 = new BitSet(new long[]{0x0000002000020002L});
    public static final BitSet FOLLOW_184 = new BitSet(new long[]{0x6C044680D5184F72L,0x4002000000440000L});
    public static final BitSet FOLLOW_185 = new BitSet(new long[]{0x6C044680D5184F72L,0x4000000000440000L});
    public static final BitSet FOLLOW_186 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A00800007C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_187 = new BitSet(new long[]{0x7C0FC4B4F538CF70L,0x57A24C4A92440540L,0x0000000000201802L});

}

final class T2S{
	final static int[] M_0 = { 11, 4, 7, -1, -1, 6, -1, -1, -1, -1, 2, 3, -1, -1, -1, 5, -1, 8, -1, -1, -1, -1, -1, -1, -1, 10, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_1 = { 17, 20, -1, -1, 19, 13, -1, -1, -1, 15, 16, -1, -1, -1, 18, -1, 21, -1, -1, -1, 22, -1, -1, -1, 10, 9};
	final static int[] M_2 = { 6, -1, -1, -1, -1, 38, 33, 42, -1, 40, 17, 10, 13, 78, 85, 12, 23, 88, -1, -1, 8, 9, 65, 20, 19, 11, 80, 14, 82, 35, 67, 22, 41, 79, -1, 16, 15, 57, 47, 83, 37, 76, 28, 39, 89, 87, 18, 32, 59, 46, 56, 36, 66, 81, -1, -1, -1, -1, 77, 29, 25, 45, 43, 30, 84, 24, -1, -1, -1, -1, -1, 68, -1, 69, -1, 61, -1, -1, -1, -1, -1, -1, -1, 31, 75, 74, -1, 34, -1, -1, 73, -1, -1, 44, -1, -1, 70, -1, 71, -1, 60, -1, 26, 48, -1, -1, -1, 7, 62, -1, -1, 21, -1, 86, 72, -1, -1, -1, 49, -1, 54, 51, 52, 53, -1, 55, -1, 27, -1, -1, 58, -1, -1, -1, -1, -1, -1, -1, -1, -1, 64, 63, -1, -1, -1, -1, -1, -1, -1, -1, 50};
	final static int[] M_3 = { 4, 7, -1, -1, 6, 11, -1, -1, -1, 2, 3, -1, -1, -1, 5, -1, 8, -1, -1, -1, 10, -1, -1, -1, -1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_4 = { 26, 21, 30, -1, 28, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, -1, -1, 29, -1, -1, -1, -1, -1, -1, -1, 25, -1, 16, 27, -1, -1, -1, 20, -1, -1, -1, 24, -1, -1, -1, -1, -1, -1, -1, 17, 13, -1, 32, 18, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 19, -1, -1, -1, 22, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15};
	final static int[] M_6 = { 25, 20, 29, -1, 27, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, -1, -1, 28, -1, -1, -1, -1, -1, -1, -1, 24, -1, -1, 26, -1, -1, -1, 19, -1, -1, -1, 23, -1, -1, -1, -1, -1, -1, -1, 16, 13, -1, 31, 17, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 18, -1, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15};
	final static int[] M_7 = { 17, 12, 22, -1, 19, 23, 25, 8, -1, -1, 7, -1, -1, -1, -1, 24, 6, -1, -1, -1, 26, -1, 9, -1, 14, -1, 21, 20, -1, -1, -1, -1, -1, -1, -1, 16, -1, 2, 18, -1, -1, -1, 11, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, 3, 5, -1, 27, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_9 = { 16, 11, 21, -1, 18, 22, 24, 7, -1, -1, 6, -1, -1, -1, -1, 23, 5, -1, -1, -1, 25, -1, 8, -1, 13, -1, 20, 19, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, 17, -1, -1, -1, 10, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, 2, 4, -1, 26, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, -1, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_16 = { 21, 16, 24, -1, 23, 25, 27, 12, -1, -1, 11, 49, -1, -1, -1, 26, 10, 53, -1, -1, 28, -1, 13, -1, 18, 55, 4, 1, -1, -1, 50, -1, 42, 32, -1, 20, -1, 6, 22, -1, -1, -1, 15, 44, 31, 41, 19, 54, -1, -1, -1, -1, -1, -1, 7, 9, 30, 29, 8, -1, -1, -1, -1, -1, -1, -1, 56, -1, 57, -1, 46, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, 17, -1, -1, 61, -1, -1, 3, -1, -1, 58, -1, 59, -1, 45, -1, -1, 33, -1, -1, -1, 2, 47, -1, -1, 48, -1, -1, 60, -1, -1, -1, 34, -1, 39, 36, 37, 38, -1, 40, -1, 5, -1, -1, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, 52, 51, -1, -1, -1, -1, -1, -1, -1, -1, 35};
	final static int[] M_17 = { 20, 15, 23, -1, 22, 24, 26, 11, -1, -1, 10, 49, -1, -1, -1, 25, 9, 53, -1, -1, 27, -1, 12, -1, 17, 55, 4, 1, -1, -1, 50, -1, 42, 32, -1, 19, -1, 29, 21, -1, -1, -1, 14, 44, 31, 41, 18, 54, -1, -1, -1, -1, -1, -1, 6, 8, 30, 28, 7, -1, -1, -1, -1, -1, -1, -1, 56, -1, 57, -1, 46, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, 16, -1, -1, 61, -1, -1, 3, -1, -1, 58, -1, 59, -1, 45, -1, -1, 33, -1, -1, -1, 2, 47, -1, -1, 48, -1, -1, 60, -1, -1, -1, 34, -1, 39, 36, 37, 38, -1, 40, -1, 5, -1, -1, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, 52, 51, -1, -1, -1, -1, -1, -1, -1, -1, 35};
	final static int[] M_18 = { 19, 14, 24, -1, 21, 25, 27, 10, -1, -1, 9, -1, -1, -1, -1, 26, 8, -1, -1, -1, 28, -1, 11, -1, 16, -1, 23, 22, -1, -1, -1, -1, -1, -1, -1, 18, -1, 4, 20, -1, -1, -1, 13, -1, -1, -1, 17, -1, -1, -1, -1, -1, -1, -1, 5, 7, -1, 29, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3};
	final static int[] M_19 = { 18, 13, 23, -1, 20, 24, 26, 9, -1, -1, 8, -1, -1, -1, -1, 25, 7, -1, -1, -1, 27, -1, 10, -1, 15, -1, 22, 21, -1, -1, -1, -1, -1, -1, -1, 17, -1, -1, 19, -1, -1, -1, 12, -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, 4, 6, -1, 28, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3};
	final static int[] M_20 = { 14, 11, 62, 35, 5, 63, 65, 56, 21, 22, 55, 31, 23, 28, 29, 64, 54, 24, 27, 33, 66, 37, 57, 39, 6, 42, 61, 4, 16, 18, 19, 20, 49, 38, 40, 13, 44, 46, 3, 17, 26, 50, 59, 47, 9, 48, 10, 2, 45, -1, -1, -1, -1, 30, 51, 53, 36, 67, 52, 41, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 58, 25, 32, 34, 60, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, 1, 74, -1, -1, 12, -1, -1, 8, -1, -1, -1, 69, -1, 72, -1, 71, -1, -1, 73, -1, 7, -1, -1, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 70};
	final static int[] M_22 = { 13, 10, 61, 34, 4, 62, 64, 55, 20, 21, 54, 30, 22, 27, 28, 63, 53, 23, 26, 32, 65, 36, 56, 38, 5, 41, 60, 3, 15, 17, 18, 19, 48, 37, 39, 12, 43, 45, 2, 16, 25, 49, 58, 46, 8, 47, 9, 1, 44, -1, -1, -1, -1, 29, 50, 52, 35, 66, 51, 40, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 57, 24, 31, 33, 59, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, 73, -1, -1, 11, -1, -1, 7, -1, -1, -1, 68, -1, 71, -1, 70, -1, -1, 72, -1, 6, -1, -1, 67, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 69};
	final static int[] M_24 = { 23, 18, 28, -1, 25, 29, 31, 14, -1, -1, 13, 52, -1, -1, -1, 30, 12, -1, -1, -1, 32, -1, 15, -1, 20, -1, 27, 26, -1, -1, 53, -1, 43, 6, -1, 22, -1, 8, 24, -1, -1, -1, 17, 45, 5, 42, 21, -1, -1, -1, -1, -1, -1, -1, 9, 11, 4, 33, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 47, -1, -1, -1, -1, -1, -1, -1, 16, -1, -1, -1, 19, -1, -1, -1, -1, -1, 50, -1, -1, -1, -1, -1, 3, 46, -1, -1, 34, -1, -1, -1, 51, 48, -1, -1, 49, -1, -1, -1, -1, -1, -1, 35, -1, 40, 37, 38, 39, -1, 41, -1, 7, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, 55, 54, -1, -1, -1, -1, -1, -1, -1, -1, 36};
	final static int[] M_25 = { 22, 17, 27, -1, 24, 28, 30, 13, -1, -1, 12, 51, -1, -1, -1, 29, 11, -1, -1, -1, 31, -1, 14, -1, 19, -1, 26, 25, -1, -1, 52, -1, 42, 6, -1, 21, -1, -1, 23, -1, -1, -1, 16, 44, 5, 41, 20, -1, -1, -1, -1, -1, -1, -1, 8, 10, 4, 32, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, 18, -1, -1, -1, -1, -1, 49, -1, -1, -1, -1, -1, 3, 45, -1, -1, 33, -1, -1, -1, 50, 47, -1, -1, 48, -1, -1, -1, -1, -1, -1, 34, -1, 39, 36, 37, 38, -1, 40, -1, 7, -1, -1, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, 54, 53, -1, -1, -1, -1, -1, -1, -1, -1, 35};
	final static int[] M_26 = { 25, 20, 30, -1, 27, 31, 33, 16, -1, -1, 15, 54, -1, -1, -1, 32, 14, 58, -1, -1, 34, -1, 17, -1, 22, 60, 29, 28, -1, -1, 55, -1, 45, 8, -1, 24, -1, 10, 26, -1, -1, -1, 19, 47, 7, 44, 23, 59, -1, -1, -1, -1, -1, -1, 11, 13, 6, 35, 12, -1, -1, -1, -1, -1, -1, -1, 61, -1, 62, -1, 49, -1, -1, -1, -1, 1, -1, -1, 18, -1, -1, -1, 21, -1, -1, 66, -1, -1, 52, -1, -1, 63, -1, 64, -1, 48, -1, -1, 36, -1, 5, -1, 53, 50, -1, -1, 51, -1, -1, 65, -1, -1, -1, 37, -1, 42, 39, 40, 41, -1, 43, -1, 9, -1, -1, 46, -1, -1, -1, -1, -1, -1, -1, -1, -1, 57, 56, -1, -1, -1, -1, -1, -1, -1, -1, 38};
	final static int[] M_27 = { 24, 19, 29, -1, 26, 30, 32, 15, -1, -1, 14, 53, -1, -1, -1, 31, 13, 57, -1, -1, 33, -1, 16, -1, 21, 59, 28, 27, -1, -1, 54, -1, 44, 8, -1, 23, -1, -1, 25, -1, -1, -1, 18, 46, 7, 43, 22, 58, -1, -1, -1, -1, -1, -1, 10, 12, 6, 34, 11, -1, -1, -1, -1, -1, -1, -1, 60, -1, 61, -1, 48, -1, -1, -1, -1, -1, -1, -1, 17, -1, -1, -1, 20, -1, -1, 65, -1, -1, 51, -1, -1, 62, -1, 63, -1, 47, -1, -1, 35, -1, 5, -1, 52, 49, -1, -1, 50, -1, -1, 64, -1, -1, -1, 36, -1, 41, 38, 39, 40, -1, 42, -1, 9, -1, -1, 45, -1, -1, -1, -1, -1, -1, -1, -1, -1, 56, 55, -1, -1, -1, -1, -1, -1, -1, -1, 37};
	final static int[] M_28 = { 27, 22, 32, -1, 29, 33, 35, 18, -1, -1, 17, 56, -1, -1, -1, 34, 16, 60, -1, -1, 36, -1, 19, -1, 24, 62, 31, 30, -1, -1, 57, -1, 47, 10, -1, 26, -1, 12, 28, -1, -1, -1, 21, 49, 9, 46, 25, 61, -1, -1, -1, -1, -1, -1, 13, 15, 8, 37, 14, -1, -1, -1, -1, -1, -1, -1, 63, -1, 64, -1, 51, -1, -1, -1, -1, -1, -1, -1, 20, -1, -1, -1, 23, -1, -1, 68, -1, -1, 54, -1, -1, 65, -1, 66, -1, 50, -1, -1, 38, -1, -1, -1, 55, 52, -1, -1, 53, -1, -1, 67, -1, -1, -1, 39, -1, 44, 41, 42, 43, -1, 45, -1, 11, -1, -1, 48, -1, -1, -1, -1, -1, -1, -1, -1, -1, 59, 58, -1, -1, -1, -1, -1, -1, -1, -1, 40};
	final static int[] M_29 = { 26, 21, 31, -1, 28, 32, 34, 17, -1, -1, 16, 55, -1, -1, -1, 33, 15, 59, -1, -1, 35, -1, 18, -1, 23, 61, 30, 29, -1, -1, 56, -1, 46, 10, -1, 25, -1, -1, 27, -1, -1, -1, 20, 48, 9, 45, 24, 60, -1, -1, -1, -1, -1, -1, 12, 14, 8, 36, 13, -1, -1, -1, -1, -1, -1, -1, 62, -1, 63, -1, 50, -1, -1, -1, -1, -1, -1, -1, 19, -1, -1, -1, 22, -1, -1, 67, -1, -1, 53, -1, -1, 64, -1, 65, -1, 49, -1, -1, 37, -1, -1, -1, 54, 51, -1, -1, 52, -1, -1, 66, -1, -1, -1, 38, -1, 43, 40, 41, 42, -1, 44, -1, 11, -1, -1, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, 58, 57, -1, -1, -1, -1, -1, -1, -1, -1, 39};
	final static int[] M_30 = { 15, -1, -1, -1, -1, -1, 11, -1, -1, 10, -1, -1, -1, -1, -1, 9, -1, -1, -1, -1, -1, 12, -1, -1, -1, 4, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6, 8, -1, -1, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5};
	final static int[] M_31 = { 20, -1, 23, -1, 22, 24, 26, -1, -1, -1, -1, -1, -1, -1, -1, 25, -1, -1, -1, -1, 27, -1, -1, -1, 17, -1, -1, -1, -1, -1, -1, -1, 42, 32, -1, 19, -1, 29, 21, -1, -1, -1, -1, 44, 31, 41, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, -1, 39, 36, 37, 38, -1, 40, -1, -1, -1, -1, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35};
	final static int[] M_32 = { 49, -1, -1, -1, -1, -1, 53, -1, -1, -1, -1, -1, -1, -1, 55, -1, -1, -1, -1, 50, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 56, -1, 57, -1, 46, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 61, -1, -1, -1, -1, -1, 58, -1, 59, -1, -1, -1, -1, -1, -1, -1, -1, -1, 47, -1, -1, 48, -1, -1, 60, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 52, 51};
	final static int[] M_33 = { 20, 15, 23, -1, 22, 24, 26, 11, -1, -1, 10, -1, -1, -1, -1, 25, 9, -1, -1, -1, 27, -1, 12, -1, 17, -1, 4, 1, -1, -1, -1, -1, 42, 32, -1, 19, -1, 29, 21, -1, -1, -1, 14, 44, 31, 41, 18, -1, -1, -1, -1, -1, -1, -1, 6, 8, 30, 28, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, 16, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, 45, -1, -1, 33, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, -1, 39, 36, 37, 38, -1, 40, -1, 5, -1, -1, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35};
	final static int[] M_35 = { 22, 19, -1, -1, 13, -1, 4, 7, -1, -1, 6, -1, -1, -1, -1, 2, 3, -1, -1, -1, 5, -1, 8, -1, 14, -1, -1, 12, -1, -1, -1, 9, -1, -1, -1, 21, -1, -1, 11, -1, -1, -1, -1, -1, 17, -1, 18, 10, -1, -1, -1, -1, -1, -1, 24, -1, -1, -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, 1, -1, -1, -1, 20, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15};
	final static int[] M_36 = { 67, 47, -1, 68, -1, -1, 33, 34, -1, 43, 35, 40, 41, -1, -1, 36, 39, 45, -1, 49, -1, 51, -1, 54, 28, -1, 29, 31, 32, -1, 61, 50, 52, -1, 56, 58, -1, 30, 38, 62, 65, 59, -1, 60, -1, -1, 57, -1, -1, -1, -1, 42, -1, 63, 48, 69, -1, 53, 55, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 64, 37, 44, 46, 66, -1, -1, -1, -1, -1, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71, -1, 74, -1, 73, -1, -1, 75, -1, -1, -1, -1, 70, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 72};
	final static int[] M_39 = { 21, 18, -1, -1, 12, -1, 3, 6, -1, -1, 5, -1, -1, -1, -1, 1, 2, -1, -1, -1, 4, -1, 7, -1, 13, -1, -1, 11, -1, -1, -1, 8, -1, -1, -1, 20, -1, -1, 10, -1, -1, -1, -1, -1, 16, -1, 17, 9, -1, -1, -1, -1, -1, -1, 23, -1, -1, -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, -1, -1, -1, -1, 19, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14};
	final static int[] M_40 = { 66, 46, -1, 67, -1, -1, 32, 33, -1, 42, 34, 39, 40, -1, -1, 35, 38, 44, -1, 48, -1, 50, -1, 53, 27, -1, 28, 30, 31, -1, 60, 49, 51, -1, 55, 57, -1, 29, 37, 61, 64, 58, -1, 59, -1, -1, 56, -1, -1, -1, -1, 41, -1, 62, 47, 68, -1, 52, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 36, 43, 45, 65, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 75, -1, -1, -1, -1, -1, -1, -1, -1, -1, 70, -1, 73, -1, 72, -1, -1, 74, -1, -1, -1, -1, 69, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71};
	final static int[] M_43 = { 21, -1, -1, -1, -1, 7, 8, -1, 17, 9, 14, 15, -1, -1, 10, 13, 19, -1, 23, -1, 25, -1, 29, -1, -1, 2, 4, 5, 6, -1, 24, 27, -1, 32, -1, -1, 3, 12, -1, -1, -1, 26, -1, -1, 31, 33, -1, -1, -1, -1, 16, -1, -1, 22, -1, -1, 28, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 18, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_44 = { 53, 48, 58, -1, 55, 59, 61, 44, -1, -1, 43, -1, -1, -1, -1, 60, 42, -1, -1, -1, 62, -1, 45, -1, 50, -1, 57, 56, -1, -1, -1, -1, -1, -1, -1, 52, -1, -1, 54, -1, -1, -1, 47, -1, -1, -1, 51, -1, -1, -1, -1, -1, -1, -1, 39, 41, -1, 63, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, -1, -1, -1, 49};
	final static int[] M_45 = { 21, -1, -1, -1, -1, 7, 8, -1, 17, 9, 14, 15, -1, -1, 10, 13, 19, -1, 23, -1, 25, -1, 29, -1, -1, 2, 4, 5, 6, 37, 24, 27, -1, 32, 34, -1, 3, 12, 38, -1, 35, 26, 36, -1, 31, 33, -1, -1, -1, -1, 16, -1, -1, 22, -1, -1, 28, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 18, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_47 = { 8, -1, -1, 7, -1, -1, -1, -1, -1, 6, -1, -1, -1, -1, -1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 5, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_48 = { 54, 49, 59, 24, 56, 60, 62, 45, 10, 11, 44, 20, 12, 17, 18, 61, 43, 13, 16, 22, 63, 26, 46, 28, 51, 32, 58, 57, 5, 7, 8, 9, 40, 27, 30, 53, 35, 37, 55, 6, 15, 41, 48, 38, 29, 39, 52, 34, 36, -1, -1, -1, -1, 19, -1, 42, 25, 64, -1, 31, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 47, 14, 21, 23, 50, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4};
}