/* XPECT_SETUP eu.numberfour.n4js.spec.tests.N4JSSpecTest END_SETUP */


class E {
  // XPECT FIXME type of 'method' --> {function():{function():E}}}
  method() {
  	return () => {// ie returns a {function():{function():E}}}
      return () => new E; // ie returns a {function():E}
    }
  }
}

//---------------------------------------------------------------------------------

// adapted from http://wiki.ecmascript.org/doku.php?id=harmony:arrow_function_syntax

function assert(actual : boolean) {
	if (actual != true) {
		throw new Error("Asssertion failure")
	}
}

// ''=>'' has only lexical ''this'', no dynamic ''this''
const obj = {
  // TODO type of method should be (well, the most precise type would be)
  //      {function(): {function(): <obj>}}} where <obj> stands for ~Object with { <the-just-mentioned-type> method; }
  //      ie a self-referencing type, a form of value-dependent type.
  // TODO currently 'method' is typed as {function():any} which is way too imprecise (fix involves typing '() => this')
  method: function () {
    return () => this;
  }
};

// XPECT FIXME noerrors --> 'typing an invocation pre-supposes correct typing of method return type'
assert(obj.method()() === obj);
 
var fake = {steal: obj.method()};
// XPECT FIXME noerrors --> 'typing an invocation pre-supposes correct typing of method return type'
assert(fake.steal() === obj);
 
// But ''function'' still has dynamic ''this'' of course
var real = {borrow: obj.method};
// XPECT FIXME noerrors --> 'typing an invocation pre-supposes correct typing of method return type'
assert(real.borrow()() === real);

