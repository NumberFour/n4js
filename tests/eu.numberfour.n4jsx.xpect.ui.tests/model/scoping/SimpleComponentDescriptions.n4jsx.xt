/* XPECT_SETUP eu.numberfour.n4jsx.xpect.ui.tests.N4JSXXpectPluginTest
    
	Workspace {
		JavaProject "N4JSXPECTTests" {
			Folder "model" {
				Folder "scoping" {
					ThisFile {}
				}
				Folder "jsxbackend" {
					File "react.n4jsd" { from = "../../reactFiles/react.n4jsd" }
				}
			}
			File "manifest.n4mf" { from="../../manifest.n4mf" }
		}
	}
	
   END_SETUP 
 */


export public let simpleSelfClosing = <div/>;


/* XPECT scope at '<di|v'  ---
Array, Boolean, Date, Error, EvalError, Function, Generator, Infinity,
Iterable, Iterable2, Iterable3, Iterable4, Iterable5, Iterable6, Iterable7, Iterable8,
Iterable9, Iterator, IteratorEntry, JSON, Math, N4Accessor, N4Annotation,
N4ApiNotImplementedError, N4Class, N4Classifier, N4DataField, N4Element, N4Enum, N4EnumType, N4Field,
N4Interface, N4Member, N4Method, N4NamedElement, N4Object, N4Provider, N4Role,
N4StringBasedEnum, N4StringBasedEnumType, N4Type, NaN, Number, Object, Promise, RangeError,
ReferenceError, RegExp, String, Symbol, SyntaxError, TEMP_ReturnTypeOfMatchExec, TypeError,
URIError, __proto__, any, boolean, console, constructor, decodeURI, decodeURIComponent,
encodeURI, encodeURIComponent, eval, hasOwnProperty, i18nKey, int, isFinite, isNaN,
isPrototypeOf, jsxbackend.react.Component, jsxbackend.react.ComponentProps,
jsxbackend.react.Element, jsxbackend.react.PropConstraint, jsxbackend.react.PropType,
jsxbackend.react.PropTypes, jsxbackend.react.PureComponent, jsxbackend.react.cloneElement,
jsxbackend.react.createElement, jsxbackend.react.isValidElement, jsxbackend.react.renderToStaticMarkup,
jsxbackend.react.renderToString, null, number, parseFloat, parseInt, pathSelector, propertyIsEnumerable, propsA,
propsB, scoping.SimpleComponentDescriptions.simpleNested,
scoping.SimpleComponentDescriptions.simpleOpenClose, scoping.SimpleComponentDescriptions.simpleSelfClosing,
scoping.SimpleComponentDescriptions.simpleSpread, simpleNested, simpleOpenClose, simpleSelfClosing, simpleSpread, string, symbol,
toLocaleString, toString, typeName, undefined, valueOf, void, x
--- */
export public let simpleOpenClose = <div></div>

let x = 42;
export public let simpleNested =
/* XPECT scope at 'pr|op1'  ---

--- */
		<div prop1 prop2='hello' prop3={x}>
			{x}<a>
				{x}
			  </a>{x}
			  <p/>
		</div>

let propsA = { prop1: 'hi', prop2: 42 };
let propsB = { prop4: 'hi', prop5: 42 };
export public let simpleSpread =  <div prop0='0' {...propsA} prop3 {...propsB} prop6 />
