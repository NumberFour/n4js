/* XPECT_SETUP eu.numberfour.n4js.transpiler.es5.xpect.tests.CompileAndExecuteTest END_SETUP */


/* XPECT output ---
<==
stdout:
========================================
========================================
stderr:
==>
--- */


// case #1: field is overridden by a getter and/or setter

// overriding a field with only either a getter XOR setter is a validation error
// overriding a field with a getter/setter pair does not require any special handling (delegation)
// --> this entire case #1 need not be handled in the transpiler


// case #2: getter and/or setter is overridden by a field

// special handling in old transpiler (field will be added in $makeClass call as property)
// HOWEVER:
// in new transpiler we add *ALL* fields in $makeClass as properties
// --> no special handling is required anymore for case #2!


// to double check that case #2 is supported properly, here is a test:

class A {
	get acc() { console.log('THIS SHOULD NOT SHOW UP!'); return null; }
	set acc(p) { console.log('THIS SHOULD NOT SHOW UP!'); }
}
class B extends A {}
class C extends B {
	@Override
	acc; // note: overriding the accessor pair with a field
}


var c : C = new C();


console.log('========================================');
c.acc;
c.acc = null;
console.log('========================================');

