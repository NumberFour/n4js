/* XPECT_SETUP eu.numberfour.n4js.spec.tests.N4JSSpecTest END_SETUP */


// 4 access modifier
class C {
	private set xPrivate(p : any) { }
	set xProject(p : any) { }
	protected set xProtect(p : any) { }
	public set xPublic(p : any) { }
}

class D extends C {
	// XPECT errors --> "The setter D.xPrivate cannot override private setter C.xPrivate." at "xPrivate"
	@Override private set xPrivate(p : any) { } // private is not overridden!
	// ok, acc is greater
	@Override public set xProject(p : any) { }
	// ok acc is equal
	@Override protected set xProtect(p : any) { }
	// XPECT errors --> "The setter D.xPublic cannot reduce the visibility of setter C.xPublic." at "xPublic"
	@Override private set xPublic(p : any) { }
}

class E {
	private get xPrivate() : any { return null }
	get xProject() : any { return null }
	protected get  xProtect() : any { return null }
	public get xPublic() : any { return null }
}

class F extends E{
	// XPECT errors --> "The getter F.xPrivate cannot override private getter E.xPrivate." at "xPrivate"
	@Override private get xPrivate() : any { return null }
	// ok, acc is greater
	@Override get xProject() : any { return null }
	// ok acc is equal
	@Override protected get  xProtect() : any { return null }
	// XPECT errors --> "The getter F.xPublic cannot reduce the visibility of getter E.xPublic." at "xPublic"
	@Override protected get xPublic() : any { return null }
}

