/* XPECT_SETUP eu.numberfour.n4js.bugreports.tests.N4JSBugreportTest END_SETUP  */

/* XPECT output --- 
<==
stdout:
e.message === some message: true
e instanceof Error: true
e instanceof CustomError_006: true
e instanceof SubCustomError_006: true
e has stack trace: true
e.stack starts with 'Error: some message': true
stderr:
==>
--- */

class CustomError_006 extends Error {
	constructor(someMsg : string) {
		super(someMsg);
	}
}

class SubCustomError_006 extends CustomError_006 {
	constructor(someMsg : string) {
		super(someMsg);
	}
}

var e = new SubCustomError_006('some message');
console.log('e.message === some message:', e.message === 'some message');
console.log('e instanceof Error:', e instanceof Error);
console.log('e instanceof CustomError_006:', e instanceof CustomError_006);
console.log('e instanceof SubCustomError_006:', e instanceof SubCustomError_006);
// XPECT warnings --> "Unnecessary cast from SubCustomError_006 to Object" at "e as Object"
var stack = (e as Object)['stack'];
console.log('e has stack trace:', undefined !== stack);
console.log('e.stack starts with \'Error: some message\':', 0 === (stack as String).indexOf('Error: some message'));
