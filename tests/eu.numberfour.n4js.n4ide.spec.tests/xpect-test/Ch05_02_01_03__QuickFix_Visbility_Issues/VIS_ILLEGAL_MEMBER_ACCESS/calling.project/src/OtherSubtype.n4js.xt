/* XPECT_SETUP eu.numberfour.n4js.n4ide.spec.tests.N4JSXpectPluginUITest
   
	Workspace {
		Project "calling.project" {
			File "manifest.n4mf" { from="../../calling.project/manifest.n4mf" }
			Folder "src" {
				ThisFile { from="../../calling.project/src/OtherSubtype.n4js.xt" }
			}
		}
		Project "other.project.other.vendor" {
			File "manifest.n4mf" { from="../../other.project.other.vendor/manifest.n4mf" }
			Folder "src" {
				File "DeclarationOtherProjectOtherVendor.n4js" { from="../../other.project.other.vendor/src/DeclarationOtherProjectOtherVendor.n4js" }
			}
		}
	}
   
   END_SETUP
*/
import { DeclarationOtherProjectOtherVendor } from "DeclarationOtherProjectOtherVendor"

class B extends DeclarationOtherProjectOtherVendor {
	constructor() {
		super();
		
		// Private member from other vendor subtype
		/* XPECT quickFix at 'var copy = this.private<|>Field' apply 'Declare member as protected' resource='../../other.project.other.vendor/src/DeclarationOtherProjectOtherVendor.n4js' ---
		  export public class DeclarationOtherProjectOtherVendor {
		- 	private 
		| [|protected] privateField = 2;
		  	project projectMethod() {}
		  	@Internal
		  	protected protectedInternalMethod() {}
		(...)
		 ---
		 */ 
		var copy = this.privateField;
		
		// Project member from other vendor subtype
		/* XPECT quickFix at 'this.project<|>Method()' apply 'Declare member as protected'  resource='../../other.project.other.vendor/src/DeclarationOtherProjectOtherVendor.n4js' ---
		   export public class DeclarationOtherProjectOtherVendor {
		   	private privateField = 2;
		 - 	project 
		 | [|protected] projectMethod() {}
		   	@Internal
		   	protected protectedInternalMethod() {}
		   	protected protectedAccessorField() : number { return 2 } 
		 (...)
		 ---
		 */ 
		this.projectMethod();
		
		// Protected @Internal member from other vendor subtype
		/* XPECT quickFix at 'this.protectedInternal<|>Method()' apply 'Declare member as protected'  resource='../../other.project.other.vendor/src/DeclarationOtherProjectOtherVendor.n4js' ---
		   export public class DeclarationOtherProjectOtherVendor {
		   	private privateField = 2;
		   	project projectMethod() {}
		 - 	@Internal
		   	protected protectedInternalMethod() {}
		   	protected protectedAccessorField() : number { return 2 } 
		   	@Internal
		 (...)
		 ---
		 */ 
		this.protectedInternalMethod();
		
		// fixme due to a bug. See IDEBUG-476
		// Public @Internal member from other vendor subtype
		/* XPECT FIXME quickFix at 'this.publicInternal<|>Method()' apply 'Declare member as protected'  resource='../../other.project.other.vendor/src/DeclarationOtherProjectOtherVendor.n4js' ---
		 (...)
		 ---
		 */ 
		this.publicInternalMethod();
		
		
	}
}
