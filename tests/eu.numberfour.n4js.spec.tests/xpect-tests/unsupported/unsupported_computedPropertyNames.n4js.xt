/* XPECT_SETUP eu.numberfour.n4js.spec.tests.N4JSSpecTest END_SETUP  */


function foo(): string {
	return "someName";
}



class C {
	
	// XPECT errors --> "Unsupported feature: computed property/member name using an expression other than string literal, built-in symbol, or a @StringBased enum literal without a value." at "foo()"
	get [foo()]() {return null;}
	
	// XPECT errors --> "Unsupported feature: computed property/member name using an expression other than string literal, built-in symbol, or a @StringBased enum literal without a value." at "foo()"
	set [foo()](value) {}
	
	// XPECT errors --> "Unsupported feature: computed property/member name using an expression other than string literal, built-in symbol, or a @StringBased enum literal without a value." at "foo()"
	[foo()]() {}
	
	// XPECT errors --> "Unsupported feature: computed property/member name using an expression other than string literal, built-in symbol, or a @StringBased enum literal without a value." at "Symbol()"
	[Symbol()]() {}
}


// XPECT type of 'ol' --> ~Object
var ol = {

	// NOTE: as of IDE-2500, arbitrary computed property names are allowed in object literals

	// XPECT warnings --> "Computed property name using an expression other than string literal, built-in symbol, or a @StringBased enum literal without custom value; this property won't be type-checked at compile time." at "foo()"
	[foo()]: "one",
	
	// XPECT warnings --> "Computed property name using an expression other than string literal, built-in symbol, or a @StringBased enum literal without custom value; this property won't be type-checked at compile time." at "foo()"
	get [foo()]() {return null;},
	
	// XPECT warnings --> "Computed property name using an expression other than string literal, built-in symbol, or a @StringBased enum literal without custom value; this property won't be type-checked at compile time." at "foo()"
	set [foo()](value) {},
	
	// XPECT warnings --> "Computed property name using an expression other than string literal, built-in symbol, or a @StringBased enum literal without custom value; this property won't be type-checked at compile time." at "foo()"
	[foo()]() {},
	
	// XPECT warnings --> "Computed property name using an expression other than string literal, built-in symbol, or a @StringBased enum literal without custom value; this property won't be type-checked at compile time." at "Symbol()"
	[Symbol()]() {}
}

