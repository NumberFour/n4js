/* XPECT_SETUP eu.numberfour.n4js.spec.tests.N4JSSpecTest END_SETUP */

// IDEBUG-134

/* XPECT output ---
<==
stdout:
greet= Hello , n= 0
greet= Hello , n= 0
greet= Hello , n= 42
greet= Hello , n= 42
stderr:
==>
--- */
class A {
	public greet : string = 'hi';
	private n : number = 0;
	constructor(@Spec spec : ~i~this) {}
	log() : void {
		console.log("greet=", this.greet, ", n=", this.n)
	}
}
class B {
	public greet : string = 'hi';
	private n : number = 0;
	constructor(@Spec spec : ~i~this with { n : number; }) {}
	log() : void {
		console.log("greet=", this.greet, ", n=", this.n)
	}
}
class C {
	public greet : string = 'hi';
	private n : number = 0;
	constructor(@Spec spec : ~i~this with { n : number; s : string; }) {}
	log() : void {
		console.log("greet=", this.greet, ", n=", this.n)
	}
}

new A({greet:'Hello'}).log();
// XPECT warnings --> "n is not used in constructor." at "n"
new A({greet:'Hello', n: 42}).log();
// XPECT nowarnings --> "n is given via the with keyword and assigned to the non-public field"
new B({greet:'Hello', n: 42}).log();
// XPECT nowarnings --> "both n and s are given via the with keyword and assigned to the non-public fields"
new C({greet:'Hello', n: 42, s: "ignoreme"}).log();
